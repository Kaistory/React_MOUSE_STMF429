
STM32F429I_DISCO_REV_D01.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000225ec  080001b0  080001b0  000011b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00001b0c  0802279c  0802279c  0002379c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 000001a6  080242a8  080242a8  000252a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000018  08024450  08024450  00025450  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 0000000e  08024468  08024468  00025468  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .ARM.extab    00000002  08024476  08024476  00025476  2**0
                  ALLOC
  7 .ARM          00000008  08024478  08024478  00025478  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .preinit_array 00000000  08024480  08024480  00026480  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .init_array   00000014  08024480  08024480  00025480  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .fini_array   00000008  08024494  08024494  00025494  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .data         00000274  20000000  0802449c  00026000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 TouchGFX_ScratchbufferA 00000100  20000280  08024710  00026280  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 13 TouchGFX_ScratchbufferB 00000100  20000380  08024810  00026380  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 14 .bss          00013950  20000480  08024910  00026480  2**2
                  ALLOC
 15 ._user_heap_stack 00001400  20013dd0  08024910  00026dd0  2**0
                  ALLOC
 16 .ARM.attributes 00000030  00000000  00000000  00026480  2**0
                  CONTENTS, READONLY
 17 TouchGFX_Framebuffer 00070800  d0000000  d0000000  00027000  2**2
                  ALLOC
 18 .debug_line   0004d954  00000000  00000000  000264b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 00000076  00000000  00000000  00073e04  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   00094add  00000000  00000000  00073e7a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 00012d87  00000000  00000000  00108957  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 00003060  00000000  00000000  0011b6e0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    0011274f  00000000  00000000  0011e740  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 00003044  00000000  00000000  00230e8f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 0001b364  00000000  00000000  00233ed3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  00032912  00000000  00000000  0024f237  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .comment      000000c2  00000000  00000000  00281b49  2**0
                  CONTENTS, READONLY
 28 .debug_frame  00008ad4  00000000  00000000  00281c0c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	@ (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	@ (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	@ (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000480 	.word	0x20000480
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08022784 	.word	0x08022784

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	@ (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	@ (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	@ (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000484 	.word	0x20000484
 80001ec:	08022784 	.word	0x08022784

080001f0 <strlen>:
 80001f0:	4603      	mov	r3, r0
 80001f2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001f6:	2a00      	cmp	r2, #0
 80001f8:	d1fb      	bne.n	80001f2 <strlen+0x2>
 80001fa:	1a18      	subs	r0, r3, r0
 80001fc:	3801      	subs	r0, #1
 80001fe:	4770      	bx	lr

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_ldivmod>:
 80002a0:	b97b      	cbnz	r3, 80002c2 <__aeabi_ldivmod+0x22>
 80002a2:	b972      	cbnz	r2, 80002c2 <__aeabi_ldivmod+0x22>
 80002a4:	2900      	cmp	r1, #0
 80002a6:	bfbe      	ittt	lt
 80002a8:	2000      	movlt	r0, #0
 80002aa:	f04f 4100 	movlt.w	r1, #2147483648	@ 0x80000000
 80002ae:	e006      	blt.n	80002be <__aeabi_ldivmod+0x1e>
 80002b0:	bf08      	it	eq
 80002b2:	2800      	cmpeq	r0, #0
 80002b4:	bf1c      	itt	ne
 80002b6:	f06f 4100 	mvnne.w	r1, #2147483648	@ 0x80000000
 80002ba:	f04f 30ff 	movne.w	r0, #4294967295
 80002be:	f000 b9d3 	b.w	8000668 <__aeabi_idiv0>
 80002c2:	f1ad 0c08 	sub.w	ip, sp, #8
 80002c6:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002ca:	2900      	cmp	r1, #0
 80002cc:	db09      	blt.n	80002e2 <__aeabi_ldivmod+0x42>
 80002ce:	2b00      	cmp	r3, #0
 80002d0:	db1a      	blt.n	8000308 <__aeabi_ldivmod+0x68>
 80002d2:	f000 f84d 	bl	8000370 <__udivmoddi4>
 80002d6:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002da:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002de:	b004      	add	sp, #16
 80002e0:	4770      	bx	lr
 80002e2:	4240      	negs	r0, r0
 80002e4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002e8:	2b00      	cmp	r3, #0
 80002ea:	db1b      	blt.n	8000324 <__aeabi_ldivmod+0x84>
 80002ec:	f000 f840 	bl	8000370 <__udivmoddi4>
 80002f0:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002f4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002f8:	b004      	add	sp, #16
 80002fa:	4240      	negs	r0, r0
 80002fc:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000300:	4252      	negs	r2, r2
 8000302:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000306:	4770      	bx	lr
 8000308:	4252      	negs	r2, r2
 800030a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800030e:	f000 f82f 	bl	8000370 <__udivmoddi4>
 8000312:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000316:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800031a:	b004      	add	sp, #16
 800031c:	4240      	negs	r0, r0
 800031e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000322:	4770      	bx	lr
 8000324:	4252      	negs	r2, r2
 8000326:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800032a:	f000 f821 	bl	8000370 <__udivmoddi4>
 800032e:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000332:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000336:	b004      	add	sp, #16
 8000338:	4252      	negs	r2, r2
 800033a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800033e:	4770      	bx	lr

08000340 <__aeabi_uldivmod>:
 8000340:	b953      	cbnz	r3, 8000358 <__aeabi_uldivmod+0x18>
 8000342:	b94a      	cbnz	r2, 8000358 <__aeabi_uldivmod+0x18>
 8000344:	2900      	cmp	r1, #0
 8000346:	bf08      	it	eq
 8000348:	2800      	cmpeq	r0, #0
 800034a:	bf1c      	itt	ne
 800034c:	f04f 31ff 	movne.w	r1, #4294967295
 8000350:	f04f 30ff 	movne.w	r0, #4294967295
 8000354:	f000 b988 	b.w	8000668 <__aeabi_idiv0>
 8000358:	f1ad 0c08 	sub.w	ip, sp, #8
 800035c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000360:	f000 f806 	bl	8000370 <__udivmoddi4>
 8000364:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000368:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800036c:	b004      	add	sp, #16
 800036e:	4770      	bx	lr

08000370 <__udivmoddi4>:
 8000370:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000374:	9d08      	ldr	r5, [sp, #32]
 8000376:	468e      	mov	lr, r1
 8000378:	4604      	mov	r4, r0
 800037a:	4688      	mov	r8, r1
 800037c:	2b00      	cmp	r3, #0
 800037e:	d14a      	bne.n	8000416 <__udivmoddi4+0xa6>
 8000380:	428a      	cmp	r2, r1
 8000382:	4617      	mov	r7, r2
 8000384:	d962      	bls.n	800044c <__udivmoddi4+0xdc>
 8000386:	fab2 f682 	clz	r6, r2
 800038a:	b14e      	cbz	r6, 80003a0 <__udivmoddi4+0x30>
 800038c:	f1c6 0320 	rsb	r3, r6, #32
 8000390:	fa01 f806 	lsl.w	r8, r1, r6
 8000394:	fa20 f303 	lsr.w	r3, r0, r3
 8000398:	40b7      	lsls	r7, r6
 800039a:	ea43 0808 	orr.w	r8, r3, r8
 800039e:	40b4      	lsls	r4, r6
 80003a0:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80003a4:	fa1f fc87 	uxth.w	ip, r7
 80003a8:	fbb8 f1fe 	udiv	r1, r8, lr
 80003ac:	0c23      	lsrs	r3, r4, #16
 80003ae:	fb0e 8811 	mls	r8, lr, r1, r8
 80003b2:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 80003b6:	fb01 f20c 	mul.w	r2, r1, ip
 80003ba:	429a      	cmp	r2, r3
 80003bc:	d909      	bls.n	80003d2 <__udivmoddi4+0x62>
 80003be:	18fb      	adds	r3, r7, r3
 80003c0:	f101 30ff 	add.w	r0, r1, #4294967295
 80003c4:	f080 80ea 	bcs.w	800059c <__udivmoddi4+0x22c>
 80003c8:	429a      	cmp	r2, r3
 80003ca:	f240 80e7 	bls.w	800059c <__udivmoddi4+0x22c>
 80003ce:	3902      	subs	r1, #2
 80003d0:	443b      	add	r3, r7
 80003d2:	1a9a      	subs	r2, r3, r2
 80003d4:	b2a3      	uxth	r3, r4
 80003d6:	fbb2 f0fe 	udiv	r0, r2, lr
 80003da:	fb0e 2210 	mls	r2, lr, r0, r2
 80003de:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80003e2:	fb00 fc0c 	mul.w	ip, r0, ip
 80003e6:	459c      	cmp	ip, r3
 80003e8:	d909      	bls.n	80003fe <__udivmoddi4+0x8e>
 80003ea:	18fb      	adds	r3, r7, r3
 80003ec:	f100 32ff 	add.w	r2, r0, #4294967295
 80003f0:	f080 80d6 	bcs.w	80005a0 <__udivmoddi4+0x230>
 80003f4:	459c      	cmp	ip, r3
 80003f6:	f240 80d3 	bls.w	80005a0 <__udivmoddi4+0x230>
 80003fa:	443b      	add	r3, r7
 80003fc:	3802      	subs	r0, #2
 80003fe:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000402:	eba3 030c 	sub.w	r3, r3, ip
 8000406:	2100      	movs	r1, #0
 8000408:	b11d      	cbz	r5, 8000412 <__udivmoddi4+0xa2>
 800040a:	40f3      	lsrs	r3, r6
 800040c:	2200      	movs	r2, #0
 800040e:	e9c5 3200 	strd	r3, r2, [r5]
 8000412:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000416:	428b      	cmp	r3, r1
 8000418:	d905      	bls.n	8000426 <__udivmoddi4+0xb6>
 800041a:	b10d      	cbz	r5, 8000420 <__udivmoddi4+0xb0>
 800041c:	e9c5 0100 	strd	r0, r1, [r5]
 8000420:	2100      	movs	r1, #0
 8000422:	4608      	mov	r0, r1
 8000424:	e7f5      	b.n	8000412 <__udivmoddi4+0xa2>
 8000426:	fab3 f183 	clz	r1, r3
 800042a:	2900      	cmp	r1, #0
 800042c:	d146      	bne.n	80004bc <__udivmoddi4+0x14c>
 800042e:	4573      	cmp	r3, lr
 8000430:	d302      	bcc.n	8000438 <__udivmoddi4+0xc8>
 8000432:	4282      	cmp	r2, r0
 8000434:	f200 8105 	bhi.w	8000642 <__udivmoddi4+0x2d2>
 8000438:	1a84      	subs	r4, r0, r2
 800043a:	eb6e 0203 	sbc.w	r2, lr, r3
 800043e:	2001      	movs	r0, #1
 8000440:	4690      	mov	r8, r2
 8000442:	2d00      	cmp	r5, #0
 8000444:	d0e5      	beq.n	8000412 <__udivmoddi4+0xa2>
 8000446:	e9c5 4800 	strd	r4, r8, [r5]
 800044a:	e7e2      	b.n	8000412 <__udivmoddi4+0xa2>
 800044c:	2a00      	cmp	r2, #0
 800044e:	f000 8090 	beq.w	8000572 <__udivmoddi4+0x202>
 8000452:	fab2 f682 	clz	r6, r2
 8000456:	2e00      	cmp	r6, #0
 8000458:	f040 80a4 	bne.w	80005a4 <__udivmoddi4+0x234>
 800045c:	1a8a      	subs	r2, r1, r2
 800045e:	0c03      	lsrs	r3, r0, #16
 8000460:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000464:	b280      	uxth	r0, r0
 8000466:	b2bc      	uxth	r4, r7
 8000468:	2101      	movs	r1, #1
 800046a:	fbb2 fcfe 	udiv	ip, r2, lr
 800046e:	fb0e 221c 	mls	r2, lr, ip, r2
 8000472:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000476:	fb04 f20c 	mul.w	r2, r4, ip
 800047a:	429a      	cmp	r2, r3
 800047c:	d907      	bls.n	800048e <__udivmoddi4+0x11e>
 800047e:	18fb      	adds	r3, r7, r3
 8000480:	f10c 38ff 	add.w	r8, ip, #4294967295
 8000484:	d202      	bcs.n	800048c <__udivmoddi4+0x11c>
 8000486:	429a      	cmp	r2, r3
 8000488:	f200 80e0 	bhi.w	800064c <__udivmoddi4+0x2dc>
 800048c:	46c4      	mov	ip, r8
 800048e:	1a9b      	subs	r3, r3, r2
 8000490:	fbb3 f2fe 	udiv	r2, r3, lr
 8000494:	fb0e 3312 	mls	r3, lr, r2, r3
 8000498:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 800049c:	fb02 f404 	mul.w	r4, r2, r4
 80004a0:	429c      	cmp	r4, r3
 80004a2:	d907      	bls.n	80004b4 <__udivmoddi4+0x144>
 80004a4:	18fb      	adds	r3, r7, r3
 80004a6:	f102 30ff 	add.w	r0, r2, #4294967295
 80004aa:	d202      	bcs.n	80004b2 <__udivmoddi4+0x142>
 80004ac:	429c      	cmp	r4, r3
 80004ae:	f200 80ca 	bhi.w	8000646 <__udivmoddi4+0x2d6>
 80004b2:	4602      	mov	r2, r0
 80004b4:	1b1b      	subs	r3, r3, r4
 80004b6:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 80004ba:	e7a5      	b.n	8000408 <__udivmoddi4+0x98>
 80004bc:	f1c1 0620 	rsb	r6, r1, #32
 80004c0:	408b      	lsls	r3, r1
 80004c2:	fa22 f706 	lsr.w	r7, r2, r6
 80004c6:	431f      	orrs	r7, r3
 80004c8:	fa0e f401 	lsl.w	r4, lr, r1
 80004cc:	fa20 f306 	lsr.w	r3, r0, r6
 80004d0:	fa2e fe06 	lsr.w	lr, lr, r6
 80004d4:	ea4f 4917 	mov.w	r9, r7, lsr #16
 80004d8:	4323      	orrs	r3, r4
 80004da:	fa00 f801 	lsl.w	r8, r0, r1
 80004de:	fa1f fc87 	uxth.w	ip, r7
 80004e2:	fbbe f0f9 	udiv	r0, lr, r9
 80004e6:	0c1c      	lsrs	r4, r3, #16
 80004e8:	fb09 ee10 	mls	lr, r9, r0, lr
 80004ec:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 80004f0:	fb00 fe0c 	mul.w	lr, r0, ip
 80004f4:	45a6      	cmp	lr, r4
 80004f6:	fa02 f201 	lsl.w	r2, r2, r1
 80004fa:	d909      	bls.n	8000510 <__udivmoddi4+0x1a0>
 80004fc:	193c      	adds	r4, r7, r4
 80004fe:	f100 3aff 	add.w	sl, r0, #4294967295
 8000502:	f080 809c 	bcs.w	800063e <__udivmoddi4+0x2ce>
 8000506:	45a6      	cmp	lr, r4
 8000508:	f240 8099 	bls.w	800063e <__udivmoddi4+0x2ce>
 800050c:	3802      	subs	r0, #2
 800050e:	443c      	add	r4, r7
 8000510:	eba4 040e 	sub.w	r4, r4, lr
 8000514:	fa1f fe83 	uxth.w	lr, r3
 8000518:	fbb4 f3f9 	udiv	r3, r4, r9
 800051c:	fb09 4413 	mls	r4, r9, r3, r4
 8000520:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8000524:	fb03 fc0c 	mul.w	ip, r3, ip
 8000528:	45a4      	cmp	ip, r4
 800052a:	d908      	bls.n	800053e <__udivmoddi4+0x1ce>
 800052c:	193c      	adds	r4, r7, r4
 800052e:	f103 3eff 	add.w	lr, r3, #4294967295
 8000532:	f080 8082 	bcs.w	800063a <__udivmoddi4+0x2ca>
 8000536:	45a4      	cmp	ip, r4
 8000538:	d97f      	bls.n	800063a <__udivmoddi4+0x2ca>
 800053a:	3b02      	subs	r3, #2
 800053c:	443c      	add	r4, r7
 800053e:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8000542:	eba4 040c 	sub.w	r4, r4, ip
 8000546:	fba0 ec02 	umull	lr, ip, r0, r2
 800054a:	4564      	cmp	r4, ip
 800054c:	4673      	mov	r3, lr
 800054e:	46e1      	mov	r9, ip
 8000550:	d362      	bcc.n	8000618 <__udivmoddi4+0x2a8>
 8000552:	d05f      	beq.n	8000614 <__udivmoddi4+0x2a4>
 8000554:	b15d      	cbz	r5, 800056e <__udivmoddi4+0x1fe>
 8000556:	ebb8 0203 	subs.w	r2, r8, r3
 800055a:	eb64 0409 	sbc.w	r4, r4, r9
 800055e:	fa04 f606 	lsl.w	r6, r4, r6
 8000562:	fa22 f301 	lsr.w	r3, r2, r1
 8000566:	431e      	orrs	r6, r3
 8000568:	40cc      	lsrs	r4, r1
 800056a:	e9c5 6400 	strd	r6, r4, [r5]
 800056e:	2100      	movs	r1, #0
 8000570:	e74f      	b.n	8000412 <__udivmoddi4+0xa2>
 8000572:	fbb1 fcf2 	udiv	ip, r1, r2
 8000576:	0c01      	lsrs	r1, r0, #16
 8000578:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 800057c:	b280      	uxth	r0, r0
 800057e:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 8000582:	463b      	mov	r3, r7
 8000584:	4638      	mov	r0, r7
 8000586:	463c      	mov	r4, r7
 8000588:	46b8      	mov	r8, r7
 800058a:	46be      	mov	lr, r7
 800058c:	2620      	movs	r6, #32
 800058e:	fbb1 f1f7 	udiv	r1, r1, r7
 8000592:	eba2 0208 	sub.w	r2, r2, r8
 8000596:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 800059a:	e766      	b.n	800046a <__udivmoddi4+0xfa>
 800059c:	4601      	mov	r1, r0
 800059e:	e718      	b.n	80003d2 <__udivmoddi4+0x62>
 80005a0:	4610      	mov	r0, r2
 80005a2:	e72c      	b.n	80003fe <__udivmoddi4+0x8e>
 80005a4:	f1c6 0220 	rsb	r2, r6, #32
 80005a8:	fa2e f302 	lsr.w	r3, lr, r2
 80005ac:	40b7      	lsls	r7, r6
 80005ae:	40b1      	lsls	r1, r6
 80005b0:	fa20 f202 	lsr.w	r2, r0, r2
 80005b4:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 80005b8:	430a      	orrs	r2, r1
 80005ba:	fbb3 f8fe 	udiv	r8, r3, lr
 80005be:	b2bc      	uxth	r4, r7
 80005c0:	fb0e 3318 	mls	r3, lr, r8, r3
 80005c4:	0c11      	lsrs	r1, r2, #16
 80005c6:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80005ca:	fb08 f904 	mul.w	r9, r8, r4
 80005ce:	40b0      	lsls	r0, r6
 80005d0:	4589      	cmp	r9, r1
 80005d2:	ea4f 4310 	mov.w	r3, r0, lsr #16
 80005d6:	b280      	uxth	r0, r0
 80005d8:	d93e      	bls.n	8000658 <__udivmoddi4+0x2e8>
 80005da:	1879      	adds	r1, r7, r1
 80005dc:	f108 3cff 	add.w	ip, r8, #4294967295
 80005e0:	d201      	bcs.n	80005e6 <__udivmoddi4+0x276>
 80005e2:	4589      	cmp	r9, r1
 80005e4:	d81f      	bhi.n	8000626 <__udivmoddi4+0x2b6>
 80005e6:	eba1 0109 	sub.w	r1, r1, r9
 80005ea:	fbb1 f9fe 	udiv	r9, r1, lr
 80005ee:	fb09 f804 	mul.w	r8, r9, r4
 80005f2:	fb0e 1119 	mls	r1, lr, r9, r1
 80005f6:	b292      	uxth	r2, r2
 80005f8:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80005fc:	4542      	cmp	r2, r8
 80005fe:	d229      	bcs.n	8000654 <__udivmoddi4+0x2e4>
 8000600:	18ba      	adds	r2, r7, r2
 8000602:	f109 31ff 	add.w	r1, r9, #4294967295
 8000606:	d2c4      	bcs.n	8000592 <__udivmoddi4+0x222>
 8000608:	4542      	cmp	r2, r8
 800060a:	d2c2      	bcs.n	8000592 <__udivmoddi4+0x222>
 800060c:	f1a9 0102 	sub.w	r1, r9, #2
 8000610:	443a      	add	r2, r7
 8000612:	e7be      	b.n	8000592 <__udivmoddi4+0x222>
 8000614:	45f0      	cmp	r8, lr
 8000616:	d29d      	bcs.n	8000554 <__udivmoddi4+0x1e4>
 8000618:	ebbe 0302 	subs.w	r3, lr, r2
 800061c:	eb6c 0c07 	sbc.w	ip, ip, r7
 8000620:	3801      	subs	r0, #1
 8000622:	46e1      	mov	r9, ip
 8000624:	e796      	b.n	8000554 <__udivmoddi4+0x1e4>
 8000626:	eba7 0909 	sub.w	r9, r7, r9
 800062a:	4449      	add	r1, r9
 800062c:	f1a8 0c02 	sub.w	ip, r8, #2
 8000630:	fbb1 f9fe 	udiv	r9, r1, lr
 8000634:	fb09 f804 	mul.w	r8, r9, r4
 8000638:	e7db      	b.n	80005f2 <__udivmoddi4+0x282>
 800063a:	4673      	mov	r3, lr
 800063c:	e77f      	b.n	800053e <__udivmoddi4+0x1ce>
 800063e:	4650      	mov	r0, sl
 8000640:	e766      	b.n	8000510 <__udivmoddi4+0x1a0>
 8000642:	4608      	mov	r0, r1
 8000644:	e6fd      	b.n	8000442 <__udivmoddi4+0xd2>
 8000646:	443b      	add	r3, r7
 8000648:	3a02      	subs	r2, #2
 800064a:	e733      	b.n	80004b4 <__udivmoddi4+0x144>
 800064c:	f1ac 0c02 	sub.w	ip, ip, #2
 8000650:	443b      	add	r3, r7
 8000652:	e71c      	b.n	800048e <__udivmoddi4+0x11e>
 8000654:	4649      	mov	r1, r9
 8000656:	e79c      	b.n	8000592 <__udivmoddi4+0x222>
 8000658:	eba1 0109 	sub.w	r1, r1, r9
 800065c:	46c4      	mov	ip, r8
 800065e:	fbb1 f9fe 	udiv	r9, r1, lr
 8000662:	fb09 f804 	mul.w	r8, r9, r4
 8000666:	e7c4      	b.n	80005f2 <__udivmoddi4+0x282>

08000668 <__aeabi_idiv0>:
 8000668:	4770      	bx	lr
 800066a:	bf00      	nop

0800066c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 800066c:	f8df d034 	ldr.w	sp, [pc, #52]	@ 80006a4 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000670:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000672:	e003      	b.n	800067c <LoopCopyDataInit>

08000674 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000674:	4b0c      	ldr	r3, [pc, #48]	@ (80006a8 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000676:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000678:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800067a:	3104      	adds	r1, #4

0800067c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800067c:	480b      	ldr	r0, [pc, #44]	@ (80006ac <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800067e:	4b0c      	ldr	r3, [pc, #48]	@ (80006b0 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000680:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000682:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000684:	d3f6      	bcc.n	8000674 <CopyDataInit>
  ldr  r2, =_sbss
 8000686:	4a0b      	ldr	r2, [pc, #44]	@ (80006b4 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000688:	e002      	b.n	8000690 <LoopFillZerobss>

0800068a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800068a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 800068c:	f842 3b04 	str.w	r3, [r2], #4

08000690 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000690:	4b09      	ldr	r3, [pc, #36]	@ (80006b8 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000692:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000694:	d3f9      	bcc.n	800068a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000696:	f002 feb1 	bl	80033fc <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800069a:	f021 fb05 	bl	8021ca8 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800069e:	f001 fa35 	bl	8001b0c <main>
  bx  lr    
 80006a2:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80006a4:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80006a8:	0802449c 	.word	0x0802449c
  ldr  r0, =_sdata
 80006ac:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80006b0:	20000274 	.word	0x20000274
  ldr  r2, =_sbss
 80006b4:	20000480 	.word	0x20000480
  ldr  r3, = _ebss
 80006b8:	20013dd0 	.word	0x20013dd0

080006bc <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80006bc:	e7fe      	b.n	80006bc <ADC_IRQHandler>

080006be <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 80006be:	4770      	bx	lr

080006c0 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 80006c0:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
 80006c2:	f000 fdb7 	bl	8001234 <touchgfx_components_init>
    touchgfx_init();
}
 80006c6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
 80006ca:	f000 bd3b 	b.w	8001144 <touchgfx_init>

080006ce <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
 80006ce:	f000 bdb3 	b.w	8001238 <touchgfx_taskEntry>

080006d2 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80006d2:	4770      	bx	lr

080006d4 <_ZN20STM32TouchControllerD0Ev>:
 80006d4:	b510      	push	{r4, lr}
 80006d6:	2104      	movs	r1, #4
 80006d8:	4604      	mov	r4, r0
 80006da:	f020 f8f8 	bl	80208ce <_ZdlPvj>
 80006de:	4620      	mov	r0, r4
 80006e0:	bd10      	pop	{r4, pc}
	...

080006e4 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 80006e4:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 80006e6:	4b0c      	ldr	r3, [pc, #48]	@ (8000718 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006e8:	4c0c      	ldr	r4, [pc, #48]	@ (800071c <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 80006ea:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 80006ec:	4b0c      	ldr	r3, [pc, #48]	@ (8000720 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006ee:	2082      	movs	r0, #130	@ 0x82
    TsYBoundary = YSize;
 80006f0:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006f2:	6863      	ldr	r3, [r4, #4]
 80006f4:	4798      	blx	r3
 80006f6:	f640 0311 	movw	r3, #2065	@ 0x811
 80006fa:	4298      	cmp	r0, r3
 80006fc:	d10a      	bne.n	8000714 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 80006fe:	4d09      	ldr	r5, [pc, #36]	@ (8000724 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8000700:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8000702:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000704:	2082      	movs	r0, #130	@ 0x82
 8000706:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8000708:	682b      	ldr	r3, [r5, #0]
 800070a:	2082      	movs	r0, #130	@ 0x82
 800070c:	68db      	ldr	r3, [r3, #12]
 800070e:	4798      	blx	r3
 8000710:	2000      	movs	r0, #0
    }

    return ret;
}
 8000712:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000714:	2001      	movs	r0, #1
 8000716:	e7fc      	b.n	8000712 <_Z11BSP_TS_Inittt+0x2e>
 8000718:	200004a6 	.word	0x200004a6
 800071c:	2000009c 	.word	0x2000009c
 8000720:	200004a4 	.word	0x200004a4
 8000724:	200004a8 	.word	0x200004a8

08000728 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000728:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 800072c:	20f0      	movs	r0, #240	@ 0xf0
 800072e:	f7ff bfd9 	b.w	80006e4 <_Z11BSP_TS_Inittt>
	...

08000734 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000734:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000736:	4d39      	ldr	r5, [pc, #228]	@ (800081c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe8>)
 8000738:	682b      	ldr	r3, [r5, #0]
{
 800073a:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800073c:	691b      	ldr	r3, [r3, #16]
 800073e:	2082      	movs	r0, #130	@ 0x82
 8000740:	4798      	blx	r3
 8000742:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8000744:	2800      	cmp	r0, #0
 8000746:	d04e      	beq.n	80007e6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb2>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000748:	682b      	ldr	r3, [r5, #0]
 800074a:	f10d 0206 	add.w	r2, sp, #6
 800074e:	695b      	ldr	r3, [r3, #20]
 8000750:	a901      	add	r1, sp, #4
 8000752:	2082      	movs	r0, #130	@ 0x82
 8000754:	4798      	blx	r3

        if (isRevD)
 8000756:	4b32      	ldr	r3, [pc, #200]	@ (8000820 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xec>)
 8000758:	781b      	ldrb	r3, [r3, #0]
 800075a:	2b00      	cmp	r3, #0
 800075c:	d04b      	beq.n	80007f6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc2>
        {
            //Ensures the coordinates are within the screen
            if (y > 3700)
 800075e:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8000762:	f640 6374 	movw	r3, #3700	@ 0xe74
 8000766:	429a      	cmp	r2, r3
 8000768:	d93f      	bls.n	80007ea <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb6>
            {
                y = 3700;
 800076a:	f8ad 3006 	strh.w	r3, [sp, #6]

            /* Y value first correction */
            y -= 180;

            /* Y value second correction */
            y = 3520 - y;
 800076e:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8000772:	1a9b      	subs	r3, r3, r2
        }
        else
        {
            /* Y value first correction */
            y -= 360;
 8000774:	b29b      	uxth	r3, r3

        /* Y value second correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8000776:	2b0a      	cmp	r3, #10
 8000778:	d942      	bls.n	8000800 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xcc>
        yr = y / 11;
 800077a:	220b      	movs	r2, #11
 800077c:	fbb3 f3f2 	udiv	r3, r3, r2
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8000780:	4a28      	ldr	r2, [pc, #160]	@ (8000824 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xf0>)
 8000782:	8812      	ldrh	r2, [r2, #0]
 8000784:	4293      	cmp	r3, r2
 8000786:	d901      	bls.n	800078c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
        {
            yr = TsYBoundary - 1;
 8000788:	3a01      	subs	r2, #1
 800078a:	b293      	uxth	r3, r2
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 800078c:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8000790:	4825      	ldr	r0, [pc, #148]	@ (8000828 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xf4>)
 8000792:	f640 31b8 	movw	r1, #3000	@ 0xbb8
 8000796:	428a      	cmp	r2, r1
 8000798:	d834      	bhi.n	8000804 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>
        {
            x = 3870 - x;
 800079a:	f5c2 6271 	rsb	r2, r2, #3856	@ 0xf10
 800079e:	320e      	adds	r2, #14
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80007a0:	6801      	ldr	r1, [r0, #0]
            x = 3870 - x;
 80007a2:	b292      	uxth	r2, r2
        xr = x / 15;
 80007a4:	250f      	movs	r5, #15
 80007a6:	fbb2 f2f5 	udiv	r2, r2, r5
        else if (xr > TsXBoundary)
 80007aa:	4d20      	ldr	r5, [pc, #128]	@ (800082c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xf8>)
 80007ac:	882d      	ldrh	r5, [r5, #0]
 80007ae:	42aa      	cmp	r2, r5
            xr = TsXBoundary - 1;
 80007b0:	bf84      	itt	hi
 80007b2:	f105 35ff 	addhi.w	r5, r5, #4294967295
 80007b6:	b2aa      	uxthhi	r2, r5
        xDiff = x > _x ? (x - _x) : (_x - x);
 80007b8:	428a      	cmp	r2, r1
 80007ba:	4615      	mov	r5, r2
 80007bc:	b28e      	uxth	r6, r1
 80007be:	d92a      	bls.n	8000816 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe2>
 80007c0:	1b92      	subs	r2, r2, r6
 80007c2:	b291      	uxth	r1, r2
        yDiff = y > _y ? (y - _y) : (_y - y);
 80007c4:	4e1a      	ldr	r6, [pc, #104]	@ (8000830 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xfc>)
 80007c6:	6837      	ldr	r7, [r6, #0]
 80007c8:	42bb      	cmp	r3, r7
 80007ca:	b2ba      	uxth	r2, r7
 80007cc:	bf8c      	ite	hi
 80007ce:	1a9a      	subhi	r2, r3, r2
 80007d0:	1ad2      	subls	r2, r2, r3
 80007d2:	b292      	uxth	r2, r2

        if (xDiff + yDiff > 5)
 80007d4:	4411      	add	r1, r2
 80007d6:	2905      	cmp	r1, #5
        {
            _x = x;
 80007d8:	bfc4      	itt	gt
 80007da:	6005      	strgt	r5, [r0, #0]
            _y = y;
 80007dc:	6033      	strgt	r3, [r6, #0]
        }

        /* Update the X position */
        TsState->X = _x;
 80007de:	6803      	ldr	r3, [r0, #0]
 80007e0:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80007e2:	6833      	ldr	r3, [r6, #0]
 80007e4:	80a3      	strh	r3, [r4, #4]
    }
}
 80007e6:	b003      	add	sp, #12
 80007e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
            else if (y < 180)
 80007ea:	2ab3      	cmp	r2, #179	@ 0xb3
                y = 180;
 80007ec:	bf9c      	itt	ls
 80007ee:	22b4      	movls	r2, #180	@ 0xb4
 80007f0:	f8ad 2006 	strhls.w	r2, [sp, #6]
 80007f4:	e7bb      	b.n	800076e <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x3a>
            y -= 360;
 80007f6:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80007fa:	f5a3 73b4 	sub.w	r3, r3, #360	@ 0x168
 80007fe:	e7b9      	b.n	8000774 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x40>
            yr = 0;
 8000800:	2300      	movs	r3, #0
 8000802:	e7c3      	b.n	800078c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
            x = 3800 - x;
 8000804:	f5c2 626d 	rsb	r2, r2, #3792	@ 0xed0
 8000808:	3208      	adds	r2, #8
 800080a:	b292      	uxth	r2, r2
        if (xr <= 0)
 800080c:	2a0e      	cmp	r2, #14
        xDiff = x > _x ? (x - _x) : (_x - x);
 800080e:	6801      	ldr	r1, [r0, #0]
        if (xr <= 0)
 8000810:	d8c8      	bhi.n	80007a4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x70>
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000812:	2500      	movs	r5, #0
            xr = 0;
 8000814:	462a      	mov	r2, r5
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000816:	1a89      	subs	r1, r1, r2
 8000818:	b289      	uxth	r1, r1
 800081a:	e7d3      	b.n	80007c4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x90>
 800081c:	200004a8 	.word	0x200004a8
 8000820:	2000204c 	.word	0x2000204c
 8000824:	200004a4 	.word	0x200004a4
 8000828:	200004a0 	.word	0x200004a0
 800082c:	200004a6 	.word	0x200004a6
 8000830:	2000049c 	.word	0x2000049c

08000834 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8000834:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8000836:	4668      	mov	r0, sp
{
 8000838:	460d      	mov	r5, r1
 800083a:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 800083c:	f7ff ff7a 	bl	8000734 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000840:	f8bd 0000 	ldrh.w	r0, [sp]
 8000844:	b130      	cbz	r0, 8000854 <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 8000846:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800084a:	602b      	str	r3, [r5, #0]
        y = state.Y;
 800084c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000850:	6023      	str	r3, [r4, #0]
        return true;
 8000852:	2001      	movs	r0, #1
}
 8000854:	b003      	add	sp, #12
 8000856:	bd30      	pop	{r4, r5, pc}

08000858 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8000858:	2803      	cmp	r0, #3
 800085a:	d821      	bhi.n	80008a0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x48>
 800085c:	e8df f000 	tbb	[pc, r0]
 8000860:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8000864:	4b0f      	ldr	r3, [pc, #60]	@ (80008a4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000866:	681a      	ldr	r2, [r3, #0]
 8000868:	fab2 f282 	clz	r2, r2
 800086c:	0952      	lsrs	r2, r2, #5
 800086e:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000870:	480d      	ldr	r0, [pc, #52]	@ (80008a8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 8000872:	f003 b857 	b.w	8003924 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 8000876:	4b0b      	ldr	r3, [pc, #44]	@ (80008a4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000878:	685a      	ldr	r2, [r3, #4]
 800087a:	fab2 f282 	clz	r2, r2
 800087e:	0952      	lsrs	r2, r2, #5
 8000880:	2108      	movs	r1, #8
 8000882:	e7f5      	b.n	8000870 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8000884:	4b07      	ldr	r3, [pc, #28]	@ (80008a4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000886:	689a      	ldr	r2, [r3, #8]
 8000888:	fab2 f282 	clz	r2, r2
 800088c:	0952      	lsrs	r2, r2, #5
 800088e:	2110      	movs	r1, #16
 8000890:	e7ee      	b.n	8000870 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000892:	4b04      	ldr	r3, [pc, #16]	@ (80008a4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000894:	68da      	ldr	r2, [r3, #12]
 8000896:	fab2 f282 	clz	r2, r2
 800089a:	0952      	lsrs	r2, r2, #5
 800089c:	2120      	movs	r1, #32
 800089e:	e7e7      	b.n	8000870 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 80008a0:	4770      	bx	lr
 80008a2:	bf00      	nop
 80008a4:	200004ac 	.word	0x200004ac
 80008a8:	40021000 	.word	0x40021000

080008ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 80008ac:	2803      	cmp	r0, #3
 80008ae:	d821      	bhi.n	80008f4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x48>
 80008b0:	e8df f000 	tbb	[pc, r0]
 80008b4:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 80008b8:	4b0f      	ldr	r3, [pc, #60]	@ (80008f8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80008ba:	681a      	ldr	r2, [r3, #0]
 80008bc:	3a00      	subs	r2, #0
 80008be:	bf18      	it	ne
 80008c0:	2201      	movne	r2, #1
 80008c2:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80008c4:	480d      	ldr	r0, [pc, #52]	@ (80008fc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 80008c6:	f003 b82d 	b.w	8003924 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 80008ca:	4b0b      	ldr	r3, [pc, #44]	@ (80008f8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80008cc:	685a      	ldr	r2, [r3, #4]
 80008ce:	3a00      	subs	r2, #0
 80008d0:	bf18      	it	ne
 80008d2:	2201      	movne	r2, #1
 80008d4:	2108      	movs	r1, #8
 80008d6:	e7f5      	b.n	80008c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 80008d8:	4b07      	ldr	r3, [pc, #28]	@ (80008f8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80008da:	689a      	ldr	r2, [r3, #8]
 80008dc:	3a00      	subs	r2, #0
 80008de:	bf18      	it	ne
 80008e0:	2201      	movne	r2, #1
 80008e2:	2110      	movs	r1, #16
 80008e4:	e7ee      	b.n	80008c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80008e6:	4b04      	ldr	r3, [pc, #16]	@ (80008f8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80008e8:	68da      	ldr	r2, [r3, #12]
 80008ea:	3a00      	subs	r2, #0
 80008ec:	bf18      	it	ne
 80008ee:	2201      	movne	r2, #1
 80008f0:	2120      	movs	r1, #32
 80008f2:	e7e7      	b.n	80008c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 80008f4:	4770      	bx	lr
 80008f6:	bf00      	nop
 80008f8:	200004ac 	.word	0x200004ac
 80008fc:	40021000 	.word	0x40021000

08000900 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8000900:	2803      	cmp	r0, #3
 8000902:	d80d      	bhi.n	8000920 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x20>
 8000904:	e8df f000 	tbb	[pc, r0]
 8000908:	0a080602 	.word	0x0a080602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 800090c:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800090e:	4805      	ldr	r0, [pc, #20]	@ (8000924 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>)
 8000910:	f003 b80d 	b.w	800392e <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000914:	2108      	movs	r1, #8
 8000916:	e7fa      	b.n	800090e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000918:	2110      	movs	r1, #16
 800091a:	e7f8      	b.n	800090e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800091c:	2120      	movs	r1, #32
 800091e:	e7f6      	b.n	800090e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
#endif
        break;
    }
}
 8000920:	4770      	bx	lr
 8000922:	bf00      	nop
 8000924:	40021000 	.word	0x40021000

08000928 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8000928:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 800092a:	2803      	cmp	r0, #3
 800092c:	d811      	bhi.n	8000952 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x2a>
 800092e:	e8df f000 	tbb	[pc, r0]
 8000932:	0a02      	.short	0x0a02
 8000934:	0e0c      	.short	0x0e0c
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000936:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000938:	4807      	ldr	r0, [pc, #28]	@ (8000958 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x30>)
 800093a:	f002 ffed 	bl	8003918 <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 800093e:	1e43      	subs	r3, r0, #1
 8000940:	4258      	negs	r0, r3
 8000942:	4158      	adcs	r0, r3
 8000944:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000946:	2108      	movs	r1, #8
 8000948:	e7f6      	b.n	8000938 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 800094a:	2110      	movs	r1, #16
 800094c:	e7f4      	b.n	8000938 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800094e:	2120      	movs	r1, #32
 8000950:	e7f2      	b.n	8000938 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
    switch (id)
 8000952:	2000      	movs	r0, #0
 8000954:	e7f3      	b.n	800093e <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 8000956:	bf00      	nop
 8000958:	40021000 	.word	0x40021000

0800095c <_ZN8touchgfx4GPIO4initEv>:
{
 800095c:	b570      	push	{r4, r5, r6, lr}
 800095e:	4d08      	ldr	r5, [pc, #32]	@ (8000980 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8000960:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8000962:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8000964:	b2e0      	uxtb	r0, r4
 8000966:	f7ff ffdf 	bl	8000928 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 800096a:	b118      	cbz	r0, 8000974 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 800096c:	682b      	ldr	r3, [r5, #0]
 800096e:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8000970:	bf18      	it	ne
 8000972:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8000974:	3401      	adds	r4, #1
 8000976:	2c05      	cmp	r4, #5
 8000978:	f105 0504 	add.w	r5, r5, #4
 800097c:	d1f2      	bne.n	8000964 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 800097e:	bd70      	pop	{r4, r5, r6, pc}
 8000980:	200004ac 	.word	0x200004ac

08000984 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000984:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000986:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
 800098a:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
 800098e:	4770      	bx	lr

08000990 <_ZN8touchgfx3HAL11submitGPU2DEv>:
     *
     * Only implemented on systems with the GPU2D IP.
     */
    virtual void submitGPU2D()
    {
    }
 8000990:	4770      	bx	lr

08000992 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8000992:	2000      	movs	r0, #0
 8000994:	4770      	bx	lr
	...

08000998 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000998:	4b03      	ldr	r3, [pc, #12]	@ (80009a8 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800099a:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800099c:	3900      	subs	r1, #0
 800099e:	bf18      	it	ne
 80009a0:	2101      	movne	r1, #1
 80009a2:	7019      	strb	r1, [r3, #0]
    }
 80009a4:	4770      	bx	lr
 80009a6:	bf00      	nop
 80009a8:	2001308d 	.word	0x2001308d

080009ac <_ZN8touchgfx3HAL16waitForLTDCLinesEt>:
     *
     * @param numberOfLines Number of lines to wait.
     */
    virtual void waitForLTDCLines(uint16_t numberOfLines)
    {
    }
 80009ac:	4770      	bx	lr

080009ae <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 80009ae:	2000      	movs	r0, #0
 80009b0:	4770      	bx	lr

080009b2 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 80009b2:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 80009b4:	b10b      	cbz	r3, 80009ba <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 80009b6:	4608      	mov	r0, r1
 80009b8:	4718      	bx	r3
        }
    }
 80009ba:	4770      	bx	lr

080009bc <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 80009bc:	f64f 70ff 	movw	r0, #65535	@ 0xffff
 80009c0:	4770      	bx	lr

080009c2 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 80009c2:	6840      	ldr	r0, [r0, #4]
 80009c4:	6803      	ldr	r3, [r0, #0]
 80009c6:	699b      	ldr	r3, [r3, #24]
 80009c8:	4718      	bx	r3

080009ca <_ZN8touchgfx3HAL25partialLTDCDeadlineMissedEv>:
     * This empty function can be overridden to e.g. output this error condition
     * on a pin.
     */
    virtual void partialLTDCDeadlineMissed()
    {
    }
 80009ca:	4770      	bx	lr

080009cc <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 80009cc:	4770      	bx	lr

080009ce <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 80009ce:	4770      	bx	lr

080009d0 <_ZN8touchgfx3HAL22InvalidateTextureCacheEv>:
     * Called on every tick before drawing into the framebuffer to enable
     * invalidation of any caches that may be incoherent with main memory.
     */
    virtual void InvalidateTextureCache()
    {
    }
 80009d0:	4770      	bx	lr

080009d2 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 80009d2:	4770      	bx	lr

080009d4 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA_NOLOAD("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE_NOLOAD("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 80009d4:	b510      	push	{r4, lr}
 80009d6:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 80009d8:	f000 fd44 	bl	8001464 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 80009dc:	6823      	ldr	r3, [r4, #0]
 80009de:	4903      	ldr	r1, [pc, #12]	@ (80009ec <_ZN11TouchGFXHAL10initializeEv+0x18>)
 80009e0:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80009e4:	4620      	mov	r0, r4
}
 80009e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 80009ea:	4718      	bx	r3
 80009ec:	d0000000 	.word	0xd0000000

080009f0 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 80009f0:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 80009f2:	6803      	ldr	r3, [r0, #0]
{
 80009f4:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 80009f6:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80009fa:	4798      	blx	r3
    enableInterrupts();
 80009fc:	6823      	ldr	r3, [r4, #0]
 80009fe:	4620      	mov	r0, r4
 8000a00:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8000a02:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8000a04:	f000 f8ec 	bl	8000be0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8000a08:	6823      	ldr	r3, [r4, #0]
 8000a0a:	4620      	mov	r0, r4
 8000a0c:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8000a0e:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8000a10:	2029      	movs	r0, #41	@ 0x29
 8000a12:	f001 faeb 	bl	8001fec <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8000a16:	f000 f8e3 	bl	8000be0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8000a1a:	6823      	ldr	r3, [r4, #0]
 8000a1c:	4620      	mov	r0, r4
 8000a1e:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8000a20:	4798      	blx	r3
    for (;;)
 8000a22:	e7f8      	b.n	8000a16 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08000a24 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8000a24:	b510      	push	{r4, lr}
 8000a26:	4604      	mov	r4, r0
        swapFrameBuffers();
 8000a28:	f00a f80e 	bl	800aa48 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8000a2c:	6823      	ldr	r3, [r4, #0]
 8000a2e:	4620      	mov	r0, r4
 8000a30:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
    }
 8000a34:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8000a38:	4718      	bx	r3

08000a3a <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8000a3a:	f000 bcf7 	b.w	800142c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08000a3e <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8000a3e:	f000 bcfb 	b.w	8001438 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08000a42 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8000a42:	f000 bd2d 	b.w	80014a0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08000a46 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8000a46:	f000 bccd 	b.w	80013e4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08000a4a <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8000a4a:	f000 bd3d 	b.w	80014c8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08000a4e <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8000a4e:	f000 bd45 	b.w	80014dc <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08000a52 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000a52:	f000 bcd1 	b.w	80013f8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08000a56 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8000a56:	f009 ba17 	b.w	8009e88 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08000a5a <_ZN11TouchGFXHALD0Ev>:
 8000a5a:	b510      	push	{r4, lr}
 8000a5c:	2184      	movs	r1, #132	@ 0x84
 8000a5e:	4604      	mov	r4, r0
 8000a60:	f01f ff35 	bl	80208ce <_ZdlPvj>
 8000a64:	4620      	mov	r0, r4
 8000a66:	bd10      	pop	{r4, pc}

08000a68 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8000a68:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8000a6a:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
 8000a6e:	f890 4078 	ldrb.w	r4, [r0, #120]	@ 0x78
            if (DISPLAY_ROTATION == rotate0)
 8000a72:	4b0c      	ldr	r3, [pc, #48]	@ (8000aa4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8000a74:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8000a76:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8000a78:	d009      	beq.n	8000a8e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8000a7a:	b93a      	cbnz	r2, 8000a8c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a7c:	4a0a      	ldr	r2, [pc, #40]	@ (8000aa8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000a7e:	490b      	ldr	r1, [pc, #44]	@ (8000aac <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a80:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000a82:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8000a84:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a86:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8000a88:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8000a8a:	701a      	strb	r2, [r3, #0]
    }
 8000a8c:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000a8e:	2a00      	cmp	r2, #0
 8000a90:	d0fc      	beq.n	8000a8c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a92:	4a05      	ldr	r2, [pc, #20]	@ (8000aa8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000a94:	4905      	ldr	r1, [pc, #20]	@ (8000aac <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a96:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000a98:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8000a9a:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a9c:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000a9e:	2200      	movs	r2, #0
 8000aa0:	e7f3      	b.n	8000a8a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8000aa2:	bf00      	nop
 8000aa4:	20013086 	.word	0x20013086
 8000aa8:	20013082 	.word	0x20013082
 8000aac:	20013084 	.word	0x20013084

08000ab0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000ab0:	b570      	push	{r4, r5, r6, lr}
 8000ab2:	460d      	mov	r5, r1
 8000ab4:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8000ab6:	b935      	cbnz	r5, 8000ac6 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8000ab8:	4b09      	ldr	r3, [pc, #36]	@ (8000ae0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8000aba:	4a0a      	ldr	r2, [pc, #40]	@ (8000ae4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000abc:	480a      	ldr	r0, [pc, #40]	@ (8000ae8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000abe:	f240 21ff 	movw	r1, #767	@ 0x2ff
 8000ac2:	f020 fe41 	bl	8021748 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8000ac6:	e9c0 520f 	strd	r5, r2, [r0, #60]	@ 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000aca:	4b08      	ldr	r3, [pc, #32]	@ (8000aec <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8000acc:	3a00      	subs	r2, #0
 8000ace:	bf18      	it	ne
 8000ad0:	2201      	movne	r2, #1
 8000ad2:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8000ad4:	6803      	ldr	r3, [r0, #0]
    }
 8000ad6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8000ada:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8000ade:	4718      	bx	r3
 8000ae0:	080227f4 	.word	0x080227f4
 8000ae4:	0802282c 	.word	0x0802282c
 8000ae8:	0802287a 	.word	0x0802287a
 8000aec:	2001308c 	.word	0x2001308c

08000af0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8000af0:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8000af2:	4b09      	ldr	r3, [pc, #36]	@ (8000b18 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8000af4:	881b      	ldrh	r3, [r3, #0]
 8000af6:	428b      	cmp	r3, r1
 8000af8:	d803      	bhi.n	8000b02 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8000afa:	4b08      	ldr	r3, [pc, #32]	@ (8000b1c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8000afc:	881b      	ldrh	r3, [r3, #0]
 8000afe:	4293      	cmp	r3, r2
 8000b00:	d905      	bls.n	8000b0e <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8000b02:	4b07      	ldr	r3, [pc, #28]	@ (8000b20 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8000b04:	4a07      	ldr	r2, [pc, #28]	@ (8000b24 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8000b06:	4808      	ldr	r0, [pc, #32]	@ (8000b28 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8000b08:	21a3      	movs	r1, #163	@ 0xa3
 8000b0a:	f020 fe1d 	bl	8021748 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8000b0e:	4b07      	ldr	r3, [pc, #28]	@ (8000b2c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8000b10:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8000b12:	4b07      	ldr	r3, [pc, #28]	@ (8000b30 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8000b14:	801a      	strh	r2, [r3, #0]
    }
 8000b16:	bd08      	pop	{r3, pc}
 8000b18:	20013082 	.word	0x20013082
 8000b1c:	20013084 	.word	0x20013084
 8000b20:	080228bf 	.word	0x080228bf
 8000b24:	08022922 	.word	0x08022922
 8000b28:	0802287a 	.word	0x0802287a
 8000b2c:	20013088 	.word	0x20013088
 8000b30:	2001308a 	.word	0x2001308a

08000b34 <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
 8000b34:	4603      	mov	r3, r0
        if (useDMAAcceleration)
 8000b36:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
 8000b3a:	b118      	cbz	r0, 8000b44 <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
 8000b3c:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
 8000b3e:	6803      	ldr	r3, [r0, #0]
 8000b40:	681b      	ldr	r3, [r3, #0]
 8000b42:	4718      	bx	r3
    }
 8000b44:	4770      	bx	lr
	...

08000b48 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000b48:	2101      	movs	r1, #1
{
 8000b4a:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000b4c:	2200      	movs	r2, #0
 8000b4e:	4608      	mov	r0, r1
 8000b50:	f006 f96a 	bl	8006e28 <osSemaphoreNew>
 8000b54:	4b0a      	ldr	r3, [pc, #40]	@ (8000b80 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000b56:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000b58:	b928      	cbnz	r0, 8000b66 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000b5a:	4b0a      	ldr	r3, [pc, #40]	@ (8000b84 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000b5c:	4a0a      	ldr	r2, [pc, #40]	@ (8000b88 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000b5e:	2128      	movs	r1, #40	@ 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000b60:	480a      	ldr	r0, [pc, #40]	@ (8000b8c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000b62:	f020 fdf1 	bl	8021748 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000b66:	2200      	movs	r2, #0
 8000b68:	2104      	movs	r1, #4
 8000b6a:	2001      	movs	r0, #1
 8000b6c:	f006 f9fb 	bl	8006f66 <osMessageQueueNew>
 8000b70:	4b07      	ldr	r3, [pc, #28]	@ (8000b90 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000b72:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000b74:	b918      	cbnz	r0, 8000b7e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000b76:	4b07      	ldr	r3, [pc, #28]	@ (8000b94 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000b78:	4a03      	ldr	r2, [pc, #12]	@ (8000b88 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000b7a:	212c      	movs	r1, #44	@ 0x2c
 8000b7c:	e7f0      	b.n	8000b60 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000b7e:	bd08      	pop	{r3, pc}
 8000b80:	200004c0 	.word	0x200004c0
 8000b84:	08022965 	.word	0x08022965
 8000b88:	080229ae 	.word	0x080229ae
 8000b8c:	080229dd 	.word	0x080229dd
 8000b90:	200004bc 	.word	0x200004bc
 8000b94:	08022a3a 	.word	0x08022a3a

08000b98 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000b98:	4b02      	ldr	r3, [pc, #8]	@ (8000ba4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000b9a:	f04f 31ff 	mov.w	r1, #4294967295
 8000b9e:	6818      	ldr	r0, [r3, #0]
 8000ba0:	f006 b98c 	b.w	8006ebc <osSemaphoreAcquire>
 8000ba4:	200004c0 	.word	0x200004c0

08000ba8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000ba8:	4b01      	ldr	r3, [pc, #4]	@ (8000bb0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000baa:	6818      	ldr	r0, [r3, #0]
 8000bac:	f006 b9b2 	b.w	8006f14 <osSemaphoreRelease>
 8000bb0:	200004c0 	.word	0x200004c0

08000bb4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000bb4:	4b02      	ldr	r3, [pc, #8]	@ (8000bc0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000bb6:	2100      	movs	r1, #0
 8000bb8:	6818      	ldr	r0, [r3, #0]
 8000bba:	f006 b97f 	b.w	8006ebc <osSemaphoreAcquire>
 8000bbe:	bf00      	nop
 8000bc0:	200004c0 	.word	0x200004c0

08000bc4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
 8000bc4:	f7ff bff0 	b.w	8000ba8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000bc8 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000bc8:	4803      	ldr	r0, [pc, #12]	@ (8000bd8 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000bca:	4904      	ldr	r1, [pc, #16]	@ (8000bdc <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000bcc:	6800      	ldr	r0, [r0, #0]
 8000bce:	2300      	movs	r3, #0
 8000bd0:	461a      	mov	r2, r3
 8000bd2:	f006 ba03 	b.w	8006fdc <osMessageQueuePut>
 8000bd6:	bf00      	nop
 8000bd8:	200004bc 	.word	0x200004bc
 8000bdc:	20000004 	.word	0x20000004

08000be0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000be0:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000be2:	4c08      	ldr	r4, [pc, #32]	@ (8000c04 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000be4:	2300      	movs	r3, #0
 8000be6:	461a      	mov	r2, r3
 8000be8:	a901      	add	r1, sp, #4
 8000bea:	6820      	ldr	r0, [r4, #0]
 8000bec:	f006 fa27 	bl	800703e <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000bf0:	6820      	ldr	r0, [r4, #0]
 8000bf2:	f04f 33ff 	mov.w	r3, #4294967295
 8000bf6:	2200      	movs	r2, #0
 8000bf8:	a901      	add	r1, sp, #4
 8000bfa:	f006 fa20 	bl	800703e <osMessageQueueGet>
}
 8000bfe:	b002      	add	sp, #8
 8000c00:	bd10      	pop	{r4, pc}
 8000c02:	bf00      	nop
 8000c04:	200004bc 	.word	0x200004bc

08000c08 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000c08:	6803      	ldr	r3, [r0, #0]
 8000c0a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000c0c:	4718      	bx	r3

08000c0e <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8000c0e:	2001      	movs	r0, #1
 8000c10:	4770      	bx	lr

08000c12 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000c12:	6803      	ldr	r3, [r0, #0]
 8000c14:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8000c16:	4718      	bx	r3

08000c18 <DMA2D_XferErrorCallback>:
    }

    static void DMA2D_XferErrorCallback(DMA2D_HandleTypeDef* handle)
    {
        (void)handle; // Unused argument
        while (1)
 8000c18:	e7fe      	b.n	8000c18 <DMA2D_XferErrorCallback>

08000c1a <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000c1a:	f240 30ef 	movw	r0, #1007	@ 0x3ef
 8000c1e:	4770      	bx	lr

08000c20 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000c20:	4b05      	ldr	r3, [pc, #20]	@ (8000c38 <_ZN8STM32DMAD1Ev+0x18>)
 8000c22:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000c24:	4b05      	ldr	r3, [pc, #20]	@ (8000c3c <_ZN8STM32DMAD1Ev+0x1c>)
 8000c26:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8000c2a:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000c2e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000c32:	f3bf 8f6f 	isb	sy
}
 8000c36:	4770      	bx	lr
 8000c38:	08023370 	.word	0x08023370
 8000c3c:	e000e100 	.word	0xe000e100

08000c40 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000c40:	b510      	push	{r4, lr}
 8000c42:	4604      	mov	r4, r0
}
 8000c44:	f44f 615a 	mov.w	r1, #3488	@ 0xda0
 8000c48:	f7ff ffea 	bl	8000c20 <_ZN8STM32DMAD1Ev>
 8000c4c:	4620      	mov	r0, r4
 8000c4e:	f01f fe3e 	bl	80208ce <_ZdlPvj>
 8000c52:	4620      	mov	r0, r4
 8000c54:	bd10      	pop	{r4, pc}
	...

08000c58 <_ZN8STM32DMA10initializeEv>:
{
 8000c58:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000c5a:	2300      	movs	r3, #0
 8000c5c:	9301      	str	r3, [sp, #4]
 8000c5e:	4b0e      	ldr	r3, [pc, #56]	@ (8000c98 <_ZN8STM32DMA10initializeEv+0x40>)
 8000c60:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000c62:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8000c66:	631a      	str	r2, [r3, #48]	@ 0x30
 8000c68:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000c6a:	f402 0200 	and.w	r2, r2, #8388608	@ 0x800000
 8000c6e:	9201      	str	r2, [sp, #4]
 8000c70:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8000c72:	691a      	ldr	r2, [r3, #16]
 8000c74:	f442 0200 	orr.w	r2, r2, #8388608	@ 0x800000
 8000c78:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8000c7a:	691a      	ldr	r2, [r3, #16]
 8000c7c:	f422 0200 	bic.w	r2, r2, #8388608	@ 0x800000
 8000c80:	611a      	str	r2, [r3, #16]
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8000c82:	4b06      	ldr	r3, [pc, #24]	@ (8000c9c <_ZN8STM32DMA10initializeEv+0x44>)
 8000c84:	4a06      	ldr	r2, [pc, #24]	@ (8000ca0 <_ZN8STM32DMA10initializeEv+0x48>)
 8000c86:	611a      	str	r2, [r3, #16]
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
 8000c88:	4a06      	ldr	r2, [pc, #24]	@ (8000ca4 <_ZN8STM32DMA10initializeEv+0x4c>)
 8000c8a:	615a      	str	r2, [r3, #20]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000c8c:	4b06      	ldr	r3, [pc, #24]	@ (8000ca8 <_ZN8STM32DMA10initializeEv+0x50>)
 8000c8e:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8000c92:	609a      	str	r2, [r3, #8]
}
 8000c94:	b002      	add	sp, #8
 8000c96:	4770      	bx	lr
 8000c98:	40023800 	.word	0x40023800
 8000c9c:	200021e0 	.word	0x200021e0
 8000ca0:	08000ef9 	.word	0x08000ef9
 8000ca4:	08000c19 	.word	0x08000c19
 8000ca8:	e000e100 	.word	0xe000e100

08000cac <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
 8000cac:	b508      	push	{r3, lr}
    switch (format)
 8000cae:	280a      	cmp	r0, #10
 8000cb0:	d809      	bhi.n	8000cc6 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1a>
 8000cb2:	e8df f000 	tbb	[pc, r0]
 8000cb6:	1006      	.short	0x1006
 8000cb8:	0808080e 	.word	0x0808080e
 8000cbc:	10101008 	.word	0x10101008
 8000cc0:	10          	.byte	0x10
 8000cc1:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000cc2:	2002      	movs	r0, #2
}
 8000cc4:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000cc6:	4b05      	ldr	r3, [pc, #20]	@ (8000cdc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x30>)
 8000cc8:	4a05      	ldr	r2, [pc, #20]	@ (8000ce0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000cca:	4806      	ldr	r0, [pc, #24]	@ (8000ce4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000ccc:	2190      	movs	r1, #144	@ 0x90
 8000cce:	f020 fd3b 	bl	8021748 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000cd2:	2000      	movs	r0, #0
 8000cd4:	e7f6      	b.n	8000cc4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 8000cd6:	2001      	movs	r0, #1
    return dma2dColorMode;
 8000cd8:	e7f4      	b.n	8000cc4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000cda:	bf00      	nop
 8000cdc:	08022a7c 	.word	0x08022a7c
 8000ce0:	08022a97 	.word	0x08022a97
 8000ce4:	08022ae2 	.word	0x08022ae2

08000ce8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000ce8:	b538      	push	{r3, r4, r5, lr}
 8000cea:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000cec:	7f88      	ldrb	r0, [r1, #30]
 8000cee:	f7ff ffdd 	bl	8000cac <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000cf2:	8aa5      	ldrh	r5, [r4, #20]
 8000cf4:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000cf6:	4b16      	ldr	r3, [pc, #88]	@ (8000d50 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000cf8:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000cfa:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000cfc:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 8000d00:	645a      	str	r2, [r3, #68]	@ 0x44

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d02:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000d04:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d06:	1b52      	subs	r2, r2, r5
 8000d08:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000d0a:	6825      	ldr	r5, [r4, #0]
 8000d0c:	2d08      	cmp	r5, #8
 8000d0e:	d10e      	bne.n	8000d2e <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d10:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000d12:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000d14:	6258      	str	r0, [r3, #36]	@ 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d16:	7f20      	ldrb	r0, [r4, #28]
 8000d18:	4a0e      	ldr	r2, [pc, #56]	@ (8000d54 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000d1a:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000d1e:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000d20:	68e2      	ldr	r2, [r4, #12]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000d22:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
 8000d24:	4a0c      	ldr	r2, [pc, #48]	@ (8000d58 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000d26:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000d28:	60d9      	str	r1, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
 8000d2a:	601a      	str	r2, [r3, #0]
    }
}
 8000d2c:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000d2e:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000d30:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000d32:	611a      	str	r2, [r3, #16]
 8000d34:	68e1      	ldr	r1, [r4, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8000d36:	0a0a      	lsrs	r2, r1, #8
 8000d38:	0948      	lsrs	r0, r1, #5
 8000d3a:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8000d3e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8000d42:	4302      	orrs	r2, r0
 8000d44:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8000d48:	430a      	orrs	r2, r1
 8000d4a:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
 8000d4c:	4a03      	ldr	r2, [pc, #12]	@ (8000d5c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8000d4e:	e7ec      	b.n	8000d2a <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8000d50:	4002b000 	.word	0x4002b000
 8000d54:	00010009 	.word	0x00010009
 8000d58:	00022301 	.word	0x00022301
 8000d5c:	00032301 	.word	0x00032301

08000d60 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
 8000d60:	b508      	push	{r3, lr}
    switch (format)
 8000d62:	280b      	cmp	r0, #11
 8000d64:	d80b      	bhi.n	8000d7e <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1e>
 8000d66:	e8df f000 	tbb	[pc, r0]
 8000d6a:	1206      	.short	0x1206
 8000d6c:	0a0a0a10 	.word	0x0a0a0a10
 8000d70:	0808080a 	.word	0x0808080a
 8000d74:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000d76:	2002      	movs	r0, #2
}
 8000d78:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000d7a:	2005      	movs	r0, #5
        break;
 8000d7c:	e7fc      	b.n	8000d78 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        assert(0 && "Unsupported Format!");
 8000d7e:	4b05      	ldr	r3, [pc, #20]	@ (8000d94 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000d80:	4a05      	ldr	r2, [pc, #20]	@ (8000d98 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000d82:	4806      	ldr	r0, [pc, #24]	@ (8000d9c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x3c>)
 8000d84:	216f      	movs	r1, #111	@ 0x6f
 8000d86:	f020 fcdf 	bl	8021748 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000d8a:	2000      	movs	r0, #0
 8000d8c:	e7f4      	b.n	8000d78 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
    switch (format)
 8000d8e:	2001      	movs	r0, #1
    return dma2dColorMode;
 8000d90:	e7f2      	b.n	8000d78 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000d92:	bf00      	nop
 8000d94:	08022a7c 	.word	0x08022a7c
 8000d98:	08022b3d 	.word	0x08022b3d
 8000d9c:	08022ae2 	.word	0x08022ae2

08000da0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
 8000da0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000da4:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 8000da8:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000daa:	4640      	mov	r0, r8
 8000dac:	f7ff ffd8 	bl	8000d60 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000db0:	7fa7      	ldrb	r7, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000db2:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000db4:	4638      	mov	r0, r7
 8000db6:	f7ff ffd3 	bl	8000d60 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
 8000dba:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000dbc:	4638      	mov	r0, r7
 8000dbe:	f7ff ff75 	bl	8000cac <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000dc2:	8aa1      	ldrh	r1, [r4, #20]
 8000dc4:	8b62      	ldrh	r2, [r4, #26]
 8000dc6:	4b44      	ldr	r3, [pc, #272]	@ (8000ed8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000dc8:	1a52      	subs	r2, r2, r1
 8000dca:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000dcc:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000dce:	8b22      	ldrh	r2, [r4, #24]
 8000dd0:	1a52      	subs	r2, r2, r1
 8000dd2:	611a      	str	r2, [r3, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000dd4:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000dd6:	6358      	str	r0, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000dd8:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000ddc:	645a      	str	r2, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000dde:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000de0:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000de2:	63d9      	str	r1, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000de4:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
 8000de6:	6820      	ldr	r0, [r4, #0]
 8000de8:	2880      	cmp	r0, #128	@ 0x80
 8000dea:	d028      	beq.n	8000e3e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9e>
 8000dec:	7f22      	ldrb	r2, [r4, #28]
 8000dee:	d80f      	bhi.n	8000e10 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x70>
 8000df0:	2820      	cmp	r0, #32
 8000df2:	d067      	beq.n	8000ec4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 8000df4:	2840      	cmp	r0, #64	@ 0x40
 8000df6:	d065      	beq.n	8000ec4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 8000df8:	2804      	cmp	r0, #4
 8000dfa:	d01a      	beq.n	8000e32 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x92>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000dfc:	4b36      	ldr	r3, [pc, #216]	@ (8000ed8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000dfe:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8000e02:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000e06:	45b8      	cmp	r8, r7
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e08:	61dd      	str	r5, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000e0a:	d061      	beq.n	8000ed0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8000e0c:	4a33      	ldr	r2, [pc, #204]	@ (8000edc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000e0e:	e044      	b.n	8000e9a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
    switch (blitOp.operation)
 8000e10:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 8000e14:	d004      	beq.n	8000e20 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x80>
 8000e16:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
 8000e1a:	d1ef      	bne.n	8000dfc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e1c:	4830      	ldr	r0, [pc, #192]	@ (8000ee0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8000e1e:	e000      	b.n	8000e22 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x82>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e20:	4830      	ldr	r0, [pc, #192]	@ (8000ee4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e22:	ea40 6202 	orr.w	r2, r0, r2, lsl #24
 8000e26:	61da      	str	r2, [r3, #28]
 8000e28:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000e2a:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000e2c:	625e      	str	r6, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000e2e:	6159      	str	r1, [r3, #20]
 8000e30:	e032      	b.n	8000e98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf8>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e32:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8000e36:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e3a:	61da      	str	r2, [r3, #28]
 8000e3c:	e7f6      	b.n	8000e2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8c>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000e3e:	68a0      	ldr	r0, [r4, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000e40:	1d02      	adds	r2, r0, #4
 8000e42:	62da      	str	r2, [r3, #44]	@ 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e44:	7f22      	ldrb	r2, [r4, #28]
 8000e46:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8000e4a:	f445 3500 	orr.w	r5, r5, #131072	@ 0x20000
 8000e4e:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000e50:	625e      	str	r6, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000e52:	6159      	str	r1, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000e54:	7801      	ldrb	r1, [r0, #0]
 8000e56:	b141      	cbz	r1, 8000e6a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xca>
 8000e58:	2901      	cmp	r1, #1
 8000e5a:	d021      	beq.n	8000ea0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
                assert(0 && "Unsupported format");
 8000e5c:	4b22      	ldr	r3, [pc, #136]	@ (8000ee8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8000e5e:	4a23      	ldr	r2, [pc, #140]	@ (8000eec <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
 8000e60:	4823      	ldr	r0, [pc, #140]	@ (8000ef0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>)
 8000e62:	f44f 718d 	mov.w	r1, #282	@ 0x11a
 8000e66:	f020 fc6f 	bl	8021748 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000e6a:	69da      	ldr	r2, [r3, #28]
 8000e6c:	8841      	ldrh	r1, [r0, #2]
 8000e6e:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 8000e72:	3901      	subs	r1, #1
 8000e74:	f022 0210 	bic.w	r2, r2, #16
 8000e78:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000e7c:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000e7e:	2101      	movs	r1, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000e80:	4b15      	ldr	r3, [pc, #84]	@ (8000ed8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000e82:	69da      	ldr	r2, [r3, #28]
 8000e84:	f042 0220 	orr.w	r2, r2, #32
 8000e88:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000e8a:	69da      	ldr	r2, [r3, #28]
 8000e8c:	0692      	lsls	r2, r2, #26
 8000e8e:	d4fc      	bmi.n	8000e8a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xea>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000e90:	2210      	movs	r2, #16
 8000e92:	609a      	str	r2, [r3, #8]
            if (blend)
 8000e94:	2900      	cmp	r1, #0
 8000e96:	d0b9      	beq.n	8000e0c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8000e98:	4a16      	ldr	r2, [pc, #88]	@ (8000ef4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8000e9a:	601a      	str	r2, [r3, #0]
}
 8000e9c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                if (blitOp.alpha == 255)
 8000ea0:	f1b2 01ff 	subs.w	r1, r2, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000ea4:	69da      	ldr	r2, [r3, #28]
 8000ea6:	8840      	ldrh	r0, [r0, #2]
 8000ea8:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
 8000eac:	f100 30ff 	add.w	r0, r0, #4294967295
 8000eb0:	f022 0210 	bic.w	r2, r2, #16
 8000eb4:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8000eb8:	f042 0210 	orr.w	r2, r2, #16
                if (blitOp.alpha == 255)
 8000ebc:	bf18      	it	ne
 8000ebe:	2101      	movne	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000ec0:	61da      	str	r2, [r3, #28]
                break;
 8000ec2:	e7dd      	b.n	8000e80 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe0>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ec4:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8000ec8:	4b03      	ldr	r3, [pc, #12]	@ (8000ed8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000eca:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 8000ece:	e7b4      	b.n	8000e3a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9a>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8000ed0:	f242 3201 	movw	r2, #8961	@ 0x2301
 8000ed4:	e7e1      	b.n	8000e9a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
 8000ed6:	bf00      	nop
 8000ed8:	4002b000 	.word	0x4002b000
 8000edc:	00012301 	.word	0x00012301
 8000ee0:	00020009 	.word	0x00020009
 8000ee4:	0002000a 	.word	0x0002000a
 8000ee8:	08022b87 	.word	0x08022b87
 8000eec:	08022ba1 	.word	0x08022ba1
 8000ef0:	08022ae2 	.word	0x08022ae2
 8000ef4:	00022301 	.word	0x00022301

08000ef8 <DMA2D_XferCpltCallback>:
        return instance;
 8000ef8:	4b02      	ldr	r3, [pc, #8]	@ (8000f04 <DMA2D_XferCpltCallback+0xc>)
 8000efa:	681b      	ldr	r3, [r3, #0]
 8000efc:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000efe:	6803      	ldr	r3, [r0, #0]
 8000f00:	695b      	ldr	r3, [r3, #20]
 8000f02:	4718      	bx	r3
 8000f04:	20013090 	.word	0x20013090

08000f08 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000f08:	b570      	push	{r4, r5, r6, lr}
 8000f0a:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000f0c:	4625      	mov	r5, r4
 8000f0e:	4b0a      	ldr	r3, [pc, #40]	@ (8000f38 <_ZN8STM32DMAC1Ev+0x30>)
 8000f10:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000f12:	2600      	movs	r6, #0
 8000f14:	6060      	str	r0, [r4, #4]
 8000f16:	7226      	strb	r6, [r4, #8]
 8000f18:	7266      	strb	r6, [r4, #9]
 8000f1a:	f845 3b20 	str.w	r3, [r5], #32
 8000f1e:	2260      	movs	r2, #96	@ 0x60
 8000f20:	4629      	mov	r1, r5
 8000f22:	f009 fee7 	bl	800acf4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000f26:	f504 635a 	add.w	r3, r4, #3488	@ 0xda0
        : color(0)
 8000f2a:	60ee      	str	r6, [r5, #12]
 8000f2c:	3524      	adds	r5, #36	@ 0x24
 8000f2e:	429d      	cmp	r5, r3
 8000f30:	d1fb      	bne.n	8000f2a <_ZN8STM32DMAC1Ev+0x22>
}
 8000f32:	4620      	mov	r0, r4
 8000f34:	bd70      	pop	{r4, r5, r6, pc}
 8000f36:	bf00      	nop
 8000f38:	08023370 	.word	0x08023370

08000f3c <_ZN8touchgfx5paint8tearDownEv>:
 * @brief Waits until previous DMA drawing operation has finished
 */
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000f3c:	4b03      	ldr	r3, [pc, #12]	@ (8000f4c <_ZN8touchgfx5paint8tearDownEv+0x10>)
 8000f3e:	681a      	ldr	r2, [r3, #0]
 8000f40:	07d2      	lsls	r2, r2, #31
 8000f42:	d4fc      	bmi.n	8000f3e <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000f44:	2223      	movs	r2, #35	@ 0x23
 8000f46:	609a      	str	r2, [r3, #8]
}
 8000f48:	4770      	bx	lr
 8000f4a:	bf00      	nop
 8000f4c:	4002b000 	.word	0x4002b000

08000f50 <_ZN8touchgfx5paint9flushLineEPmi>:
 *
 * @brief Flushes decoded RGB pixels when rendering compressed images
 */
void flushLine(uint32_t* addr, int sizebytes)
{
}
 8000f50:	4770      	bx	lr
	...

08000f54 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
 *
 * @brief Renders Canvas Widget chunks using DMA.
 * This functions will not generate an interrupt, and will not affect the DMA queue.
 */
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 8000f54:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000f56:	4c0f      	ldr	r4, [pc, #60]	@ (8000f94 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>)
 8000f58:	6825      	ldr	r5, [r4, #0]
 8000f5a:	07ed      	lsls	r5, r5, #31
 8000f5c:	d4fc      	bmi.n	8000f58 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000f5e:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000f60:	0409      	lsls	r1, r1, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000f62:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000f64:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000f68:	2502      	movs	r5, #2

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
 8000f6a:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000f6c:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000f6e:	6461      	str	r1, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8000f70:	63e0      	str	r0, [r4, #60]	@ 0x3c
    if (alpha < 0xFF)
 8000f72:	d00a      	beq.n	8000f8a <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x36>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000f74:	4908      	ldr	r1, [pc, #32]	@ (8000f98 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000f76:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000f78:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8000f7c:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000f7e:	4b07      	ldr	r3, [pc, #28]	@ (8000f9c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
        WRITE_REG(DMA2D->FGCOLR, color);
 8000f80:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 8000f82:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 8000f84:	60e0      	str	r0, [r4, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000f86:	6023      	str	r3, [r4, #0]
    }
}
 8000f88:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000f8a:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
 8000f8c:	9b03      	ldr	r3, [sp, #12]
 8000f8e:	63a3      	str	r3, [r4, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000f90:	4b03      	ldr	r3, [pc, #12]	@ (8000fa0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
 8000f92:	e7f8      	b.n	8000f86 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x32>
 8000f94:	4002b000 	.word	0x4002b000
 8000f98:	00010009 	.word	0x00010009
 8000f9c:	00020001 	.word	0x00020001
 8000fa0:	00030001 	.word	0x00030001

08000fa4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
 8000fa4:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000fa6:	4c0e      	ldr	r4, [pc, #56]	@ (8000fe0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x3c>)
 8000fa8:	6825      	ldr	r5, [r4, #0]
 8000faa:	07ed      	lsls	r5, r5, #31
 8000fac:	d4fc      	bmi.n	8000fa8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000fae:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000fb0:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000fb2:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000fb4:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000fb8:	2502      	movs	r5, #2
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    if (alpha < 0xFF)
 8000fba:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000fbc:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000fbe:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8000fc0:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 8000fc2:	60e1      	str	r1, [r4, #12]
    if (alpha < 0xFF)
 8000fc4:	d008      	beq.n	8000fd8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x34>
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000fc6:	061b      	lsls	r3, r3, #24
 8000fc8:	f043 1302 	orr.w	r3, r3, #131074	@ 0x20002
 8000fcc:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 8000fce:	4b05      	ldr	r3, [pc, #20]	@ (8000fe4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x40>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000fd0:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 8000fd2:	6160      	str	r0, [r4, #20]
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));

        /* Start DMA2D : M2M Mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
 8000fd4:	6023      	str	r3, [r4, #0]
    }
}
 8000fd6:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000fd8:	4b03      	ldr	r3, [pc, #12]	@ (8000fe8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x44>)
 8000fda:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
 8000fdc:	2301      	movs	r3, #1
 8000fde:	e7f9      	b.n	8000fd4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x30>
 8000fe0:	4002b000 	.word	0x4002b000
 8000fe4:	00020001 	.word	0x00020001
 8000fe8:	ff020002 	.word	0xff020002

08000fec <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
 8000fec:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000fee:	4c0b      	ldr	r4, [pc, #44]	@ (800101c <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x30>)
 8000ff0:	6825      	ldr	r5, [r4, #0]
 8000ff2:	07ed      	lsls	r5, r5, #31
 8000ff4:	d4fc      	bmi.n	8000ff0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000ff6:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000ff8:	0412      	lsls	r2, r2, #16

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    /* Set DMA2D color mode and alpha mode */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000ffa:	061b      	lsls	r3, r3, #24
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8000ffc:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8000ffe:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001002:	2502      	movs	r5, #2
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001004:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001008:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 800100a:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 800100c:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 800100e:	60e1      	str	r1, [r4, #12]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8001010:	61e3      	str	r3, [r4, #28]

    /* Configure DMA2D Stream source2 address */
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

    /* Set DMA2D mode */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 8001012:	4b03      	ldr	r3, [pc, #12]	@ (8001020 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x34>)
    WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001014:	6265      	str	r5, [r4, #36]	@ 0x24
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 8001016:	6160      	str	r0, [r4, #20]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 8001018:	6023      	str	r3, [r4, #0]
}
 800101a:	bd30      	pop	{r4, r5, pc}
 800101c:	4002b000 	.word	0x4002b000
 8001020:	00020001 	.word	0x00020001

08001024 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8001024:	2001      	movs	r0, #1
 8001026:	4770      	bx	lr

08001028 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8001028:	200c      	movs	r0, #12
 800102a:	4770      	bx	lr

0800102c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 800102c:	230c      	movs	r3, #12
 800102e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001032:	3008      	adds	r0, #8
 8001034:	4770      	bx	lr

08001036 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8001036:	230c      	movs	r3, #12
 8001038:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800103c:	3008      	adds	r0, #8
 800103e:	4770      	bx	lr

08001040 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001040:	2001      	movs	r0, #1
 8001042:	4770      	bx	lr

08001044 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001044:	206c      	movs	r0, #108	@ 0x6c
 8001046:	4770      	bx	lr

08001048 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001048:	236c      	movs	r3, #108	@ 0x6c
 800104a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800104e:	3008      	adds	r0, #8
 8001050:	4770      	bx	lr

08001052 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001052:	236c      	movs	r3, #108	@ 0x6c
 8001054:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001058:	3008      	adds	r0, #8
 800105a:	4770      	bx	lr

0800105c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 800105c:	2001      	movs	r0, #1
 800105e:	4770      	bx	lr

08001060 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001060:	2010      	movs	r0, #16
 8001062:	4770      	bx	lr

08001064 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001064:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001068:	3008      	adds	r0, #8
 800106a:	4770      	bx	lr

0800106c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800106c:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001070:	3008      	adds	r0, #8
 8001072:	4770      	bx	lr

08001074 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 8001074:	4608      	mov	r0, r1
 8001076:	f001 bc9f 	b.w	80029b8 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
	...

0800107c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 800107c:	b510      	push	{r4, lr}
 800107e:	4b03      	ldr	r3, [pc, #12]	@ (800108c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001080:	6003      	str	r3, [r0, #0]
 8001082:	4604      	mov	r4, r0
 8001084:	f008 fc55 	bl	8009932 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001088:	4620      	mov	r0, r4
 800108a:	bd10      	pop	{r4, pc}
 800108c:	08023428 	.word	0x08023428

08001090 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001090:	b510      	push	{r4, lr}
 8001092:	4604      	mov	r4, r0
 8001094:	f7ff fff2 	bl	800107c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001098:	4620      	mov	r0, r4
 800109a:	2114      	movs	r1, #20
 800109c:	f01f fc17 	bl	80208ce <_ZdlPvj>
 80010a0:	4620      	mov	r0, r4
 80010a2:	bd10      	pop	{r4, pc}

080010a4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80010a4:	b510      	push	{r4, lr}
 80010a6:	4b03      	ldr	r3, [pc, #12]	@ (80010b4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80010a8:	6003      	str	r3, [r0, #0]
 80010aa:	4604      	mov	r4, r0
 80010ac:	f008 fc41 	bl	8009932 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80010b0:	4620      	mov	r0, r4
 80010b2:	bd10      	pop	{r4, pc}
 80010b4:	080233f4 	.word	0x080233f4

080010b8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80010b8:	b510      	push	{r4, lr}
 80010ba:	4604      	mov	r4, r0
 80010bc:	f7ff fff2 	bl	80010a4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80010c0:	4620      	mov	r0, r4
 80010c2:	2174      	movs	r1, #116	@ 0x74
 80010c4:	f01f fc03 	bl	80208ce <_ZdlPvj>
 80010c8:	4620      	mov	r0, r4
 80010ca:	bd10      	pop	{r4, pc}

080010cc <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80010cc:	b510      	push	{r4, lr}
 80010ce:	4b03      	ldr	r3, [pc, #12]	@ (80010dc <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80010d0:	6003      	str	r3, [r0, #0]
 80010d2:	4604      	mov	r4, r0
 80010d4:	f008 fc2d 	bl	8009932 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80010d8:	4620      	mov	r0, r4
 80010da:	bd10      	pop	{r4, pc}
 80010dc:	080233c0 	.word	0x080233c0

080010e0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80010e0:	b510      	push	{r4, lr}
 80010e2:	4604      	mov	r4, r0
 80010e4:	f7ff fff2 	bl	80010cc <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80010e8:	4620      	mov	r0, r4
 80010ea:	2118      	movs	r1, #24
 80010ec:	f01f fbef 	bl	80208ce <_ZdlPvj>
 80010f0:	4620      	mov	r0, r4
 80010f2:	bd10      	pop	{r4, pc}

080010f4 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 80010f4:	b510      	push	{r4, lr}
 80010f6:	4b08      	ldr	r3, [pc, #32]	@ (8001118 <_ZN12FrontendHeapD1Ev+0x24>)
 80010f8:	4604      	mov	r4, r0
 80010fa:	f840 3ba0 	str.w	r3, [r0], #160
 80010fe:	f7ff ffbd 	bl	800107c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001102:	f104 002c 	add.w	r0, r4, #44	@ 0x2c
 8001106:	f7ff ffcd 	bl	80010a4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800110a:	f104 0014 	add.w	r0, r4, #20
 800110e:	f7ff ffdd 	bl	80010cc <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001112:	4620      	mov	r0, r4
 8001114:	bd10      	pop	{r4, pc}
 8001116:	bf00      	nop
 8001118:	0802345c 	.word	0x0802345c

0800111c <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 800111c:	b508      	push	{r3, lr}
 800111e:	4802      	ldr	r0, [pc, #8]	@ (8001128 <__tcf_0+0xc>)
 8001120:	f7ff ffe8 	bl	80010f4 <_ZN12FrontendHeapD1Ev>
 8001124:	bd08      	pop	{r3, pc}
 8001126:	bf00      	nop
 8001128:	2000139c 	.word	0x2000139c

0800112c <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 800112c:	b510      	push	{r4, lr}
 800112e:	4604      	mov	r4, r0
 8001130:	f7ff ffe0 	bl	80010f4 <_ZN12FrontendHeapD1Ev>
 8001134:	4620      	mov	r0, r4
 8001136:	f44f 7105 	mov.w	r1, #532	@ 0x214
 800113a:	f01f fbc8 	bl	80208ce <_ZdlPvj>
 800113e:	4620      	mov	r0, r4
 8001140:	bd10      	pop	{r4, pc}
	...

08001144 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8001144:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8001148:	f001 faba 	bl	80026c0 <_ZN14BitmapDatabase11getInstanceEv>
 800114c:	4605      	mov	r5, r0
 800114e:	f001 fabb 	bl	80026c8 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8001152:	2400      	movs	r4, #0
 8001154:	4601      	mov	r1, r0
 8001156:	4623      	mov	r3, r4
 8001158:	4628      	mov	r0, r5
 800115a:	4622      	mov	r2, r4
 800115c:	9400      	str	r4, [sp, #0]
 800115e:	f010 fb23 	bl	80117a8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8001162:	4b27      	ldr	r3, [pc, #156]	@ (8001200 <touchgfx_init+0xbc>)
 8001164:	4a27      	ldr	r2, [pc, #156]	@ (8001204 <touchgfx_init+0xc0>)
 8001166:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8001168:	4620      	mov	r0, r4
 800116a:	f001 fdf3 	bl	8002d54 <_ZN8touchgfx5Texts11setLanguageEt>
        static FrontendHeap instance;
 800116e:	4d26      	ldr	r5, [pc, #152]	@ (8001208 <touchgfx_init+0xc4>)
     *
     * @param renderer  The renderer to be used by LCD when dealing with vector fonts.
     */
    void setVectorFontRenderer(VectorFontRenderer* renderer)
    {
        vectorFontRenderer = renderer;
 8001170:	4b26      	ldr	r3, [pc, #152]	@ (800120c <touchgfx_init+0xc8>)
 8001172:	4a27      	ldr	r2, [pc, #156]	@ (8001210 <touchgfx_init+0xcc>)

    display.setVectorFontRenderer(&vectorFontRenderer);

    FontManager::setFontProvider(&fontProvider);
 8001174:	4827      	ldr	r0, [pc, #156]	@ (8001214 <touchgfx_init+0xd0>)
 8001176:	609a      	str	r2, [r3, #8]
 8001178:	f010 fa7e 	bl	8011678 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 800117c:	682b      	ldr	r3, [r5, #0]
 800117e:	f3bf 8f5b 	dmb	ish
 8001182:	07db      	lsls	r3, r3, #31
 8001184:	d435      	bmi.n	80011f2 <touchgfx_init+0xae>
 8001186:	4628      	mov	r0, r5
 8001188:	f01f fba3 	bl	80208d2 <__cxa_guard_acquire>
 800118c:	b388      	cbz	r0, 80011f2 <touchgfx_init+0xae>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 800118e:	4c22      	ldr	r4, [pc, #136]	@ (8001218 <touchgfx_init+0xd4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8001190:	4b22      	ldr	r3, [pc, #136]	@ (800121c <touchgfx_init+0xd8>)
 8001192:	6023      	str	r3, [r4, #0]
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8001194:	f104 06b8 	add.w	r6, r4, #184	@ 0xb8
        : presenterStorage(pres),
 8001198:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 800119c:	f104 082c 	add.w	r8, r4, #44	@ 0x2c
          transitionStorage(tra),
 80011a0:	f104 07a0 	add.w	r7, r4, #160	@ 0xa0
        : presenterStorage(pres),
 80011a4:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 80011a6:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 80011aa:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 80011ac:	6126      	str	r6, [r4, #16]
 80011ae:	f008 fbc1 	bl	8009934 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80011b2:	4b1b      	ldr	r3, [pc, #108]	@ (8001220 <touchgfx_init+0xdc>)
 80011b4:	6163      	str	r3, [r4, #20]
 80011b6:	4640      	mov	r0, r8
 80011b8:	f008 fbbc 	bl	8009934 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80011bc:	4b19      	ldr	r3, [pc, #100]	@ (8001224 <touchgfx_init+0xe0>)
 80011be:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80011c0:	4638      	mov	r0, r7
 80011c2:	f008 fbb7 	bl	8009934 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80011c6:	4b18      	ldr	r3, [pc, #96]	@ (8001228 <touchgfx_init+0xe4>)
 80011c8:	f8c4 30a0 	str.w	r3, [r4, #160]	@ 0xa0
 80011cc:	f104 00b4 	add.w	r0, r4, #180	@ 0xb4
 80011d0:	f001 fe36 	bl	8002e40 <_ZN5ModelC1Ev>
 80011d4:	4622      	mov	r2, r4
 80011d6:	f104 01b4 	add.w	r1, r4, #180	@ 0xb4
 80011da:	4630      	mov	r0, r6
 80011dc:	f001 fe26 	bl	8002e2c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 80011e0:	4630      	mov	r0, r6
 80011e2:	f001 fbe9 	bl	80029b8 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 80011e6:	4811      	ldr	r0, [pc, #68]	@ (800122c <touchgfx_init+0xe8>)
 80011e8:	f020 facc 	bl	8021784 <atexit>
 80011ec:	4628      	mov	r0, r5
 80011ee:	f01f fb7c 	bl	80208ea <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 80011f2:	480f      	ldr	r0, [pc, #60]	@ (8001230 <touchgfx_init+0xec>)
}
 80011f4:	b002      	add	sp, #8
 80011f6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 80011fa:	f7ff bbeb 	b.w	80009d4 <_ZN11TouchGFXHAL10initializeEv>
 80011fe:	bf00      	nop
 8001200:	200130f4 	.word	0x200130f4
 8001204:	20000548 	.word	0x20000548
 8001208:	20001398 	.word	0x20001398
 800120c:	20000568 	.word	0x20000568
 8001210:	2000054c 	.word	0x2000054c
 8001214:	20000008 	.word	0x20000008
 8001218:	2000139c 	.word	0x2000139c
 800121c:	0802345c 	.word	0x0802345c
 8001220:	080233c0 	.word	0x080233c0
 8001224:	080233f4 	.word	0x080233f4
 8001228:	08023428 	.word	0x08023428
 800122c:	0800111d 	.word	0x0800111d
 8001230:	200004c4 	.word	0x200004c4

08001234 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8001234:	4770      	bx	lr
	...

08001238 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8001238:	4801      	ldr	r0, [pc, #4]	@ (8001240 <touchgfx_taskEntry+0x8>)
 800123a:	f7ff bbd9 	b.w	80009f0 <_ZN11TouchGFXHAL9taskEntryEv>
 800123e:	bf00      	nop
 8001240:	200004c4 	.word	0x200004c4

08001244 <_GLOBAL__sub_I_touchgfx_init>:
}
 8001244:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8001246:	4e26      	ldr	r6, [pc, #152]	@ (80012e0 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
{
public:

    STM32TouchController() {}
 8001248:	4c26      	ldr	r4, [pc, #152]	@ (80012e4 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
static LCD16bpp display;
 800124a:	4d27      	ldr	r5, [pc, #156]	@ (80012e8 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
 800124c:	4b27      	ldr	r3, [pc, #156]	@ (80012ec <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 800124e:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8001250:	4630      	mov	r0, r6
 8001252:	f7ff fe59 	bl	8000f08 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8001256:	4628      	mov	r0, r5
 8001258:	f015 fbac 	bl	80169b4 <_ZN8touchgfx8LCD16bppC1Ev>
static VectorFontRendererImpl vectorFontRenderer;
 800125c:	4824      	ldr	r0, [pc, #144]	@ (80012f0 <_GLOBAL__sub_I_touchgfx_init+0xac>)
 800125e:	f00e fb95 	bl	800f98c <_ZN8touchgfx22VectorFontRendererImplC1Ev>
        : dma(dmaInterface),
 8001262:	4b24      	ldr	r3, [pc, #144]	@ (80012f4 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          isFrontPorchEntered(false),
 8001264:	4824      	ldr	r0, [pc, #144]	@ (80012f8 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          touchController(touchCtrl),
 8001266:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 8001268:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 800126a:	f44f 7180 	mov.w	r1, #256	@ 0x100
          auxiliaryLCD(0),
 800126e:	e9c3 1212 	strd	r1, r2, [r3, #72]	@ 0x48
          touchSampleRate(1),
 8001272:	4922      	ldr	r1, [pc, #136]	@ (80012fc <_GLOBAL__sub_I_touchgfx_init+0xb8>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8001274:	861a      	strh	r2, [r3, #48]	@ 0x30
          vSyncCompensationEnabled(false),
 8001276:	e9c3 121a 	strd	r1, r2, [r3, #104]	@ 0x68
          isFrontPorchEntered(false),
 800127a:	4921      	ldr	r1, [pc, #132]	@ (8001300 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
          useAuxiliaryLCD(false),
 800127c:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          isFrontPorchEntered(false),
 8001280:	e9c3 011e 	strd	r0, r1, [r3, #120]	@ 0x78
          minDrawingHeight(maxDrawingHeight / 3),    // Best guess based on testing (but not ideal in all cases)
 8001284:	491f      	ldr	r1, [pc, #124]	@ (8001304 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8001286:	f8c3 1080 	str.w	r1, [r3, #128]	@ 0x80
        instance = this;
 800128a:	491f      	ldr	r1, [pc, #124]	@ (8001308 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800128c:	481f      	ldr	r0, [pc, #124]	@ (800130c <_GLOBAL__sub_I_touchgfx_init+0xc8>)
        instance = this;
 800128e:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001290:	21f0      	movs	r1, #240	@ 0xf0
          buttonController(0),
 8001292:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8001296:	e9c3 2206 	strd	r2, r2, [r3, #24]
 800129a:	e9c3 2208 	strd	r2, r2, [r3, #32]
 800129e:	e9c3 220a 	strd	r2, r2, [r3, #40]	@ 0x28
          frameBuffer0(0),
 80012a2:	e9c3 220e 	strd	r2, r2, [r3, #56]	@ 0x38
          frameBuffer2(0),
 80012a6:	e9c3 2210 	strd	r2, r2, [r3, #64]	@ 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 80012aa:	e9c3 2214 	strd	r2, r2, [r3, #80]	@ 0x50
          lastX(0),
 80012ae:	e9c3 2217 	strd	r2, r2, [r3, #92]	@ 0x5c
          lastY(0),
 80012b2:	665a      	str	r2, [r3, #100]	@ 0x64
          updateMCULoad(0),
 80012b4:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          cc_begin(0),
 80012b8:	675a      	str	r2, [r3, #116]	@ 0x74
          lcdRef(display),
 80012ba:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80012be:	8001      	strh	r1, [r0, #0]
 80012c0:	4813      	ldr	r0, [pc, #76]	@ (8001310 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
 80012c2:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80012c4:	4813      	ldr	r0, [pc, #76]	@ (8001314 <_GLOBAL__sub_I_touchgfx_init+0xd0>)
 80012c6:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 80012ca:	8001      	strh	r1, [r0, #0]
 80012cc:	4812      	ldr	r0, [pc, #72]	@ (8001318 <_GLOBAL__sub_I_touchgfx_init+0xd4>)
 80012ce:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 80012d0:	4912      	ldr	r1, [pc, #72]	@ (800131c <_GLOBAL__sub_I_touchgfx_init+0xd8>)
 80012d2:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 80012d4:	2201      	movs	r2, #1
 80012d6:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 80012da:	4a11      	ldr	r2, [pc, #68]	@ (8001320 <_GLOBAL__sub_I_touchgfx_init+0xdc>)
 80012dc:	601a      	str	r2, [r3, #0]
}
 80012de:	bd70      	pop	{r4, r5, r6, pc}
 80012e0:	200005f4 	.word	0x200005f4
 80012e4:	20001394 	.word	0x20001394
 80012e8:	20000568 	.word	0x20000568
 80012ec:	080227e4 	.word	0x080227e4
 80012f0:	2000054c 	.word	0x2000054c
 80012f4:	200004c4 	.word	0x200004c4
 80012f8:	01010000 	.word	0x01010000
 80012fc:	01000001 	.word	0x01000001
 8001300:	00500400 	.word	0x00500400
 8001304:	0014001a 	.word	0x0014001a
 8001308:	20013090 	.word	0x20013090
 800130c:	20013082 	.word	0x20013082
 8001310:	20013088 	.word	0x20013088
 8001314:	20013084 	.word	0x20013084
 8001318:	2001308a 	.word	0x2001308a
 800131c:	20013086 	.word	0x20013086
 8001320:	08023284 	.word	0x08023284

08001324 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001324:	4801      	ldr	r0, [pc, #4]	@ (800132c <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001326:	f7ff bc7b 	b.w	8000c20 <_ZN8STM32DMAD1Ev>
 800132a:	bf00      	nop
 800132c:	200005f4 	.word	0x200005f4

08001330 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8001330:	2000      	movs	r0, #0
 8001332:	4770      	bx	lr

08001334 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8001334:	8081      	strh	r1, [r0, #4]
    }
 8001336:	4770      	bx	lr

08001338 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8001338:	80c1      	strh	r1, [r0, #6]
    }
 800133a:	4770      	bx	lr

0800133c <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 800133c:	8101      	strh	r1, [r0, #8]
    }
 800133e:	4770      	bx	lr

08001340 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8001340:	8141      	strh	r1, [r0, #10]
    }
 8001342:	4770      	bx	lr

08001344 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8001344:	4770      	bx	lr

08001346 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8001346:	4770      	bx	lr

08001348 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8001348:	4770      	bx	lr

0800134a <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 800134a:	4770      	bx	lr

0800134c <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 800134c:	4770      	bx	lr

0800134e <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800134e:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8001350:	88c4      	ldrh	r4, [r0, #6]
 8001352:	6803      	ldr	r3, [r0, #0]
 8001354:	1b12      	subs	r2, r2, r4
 8001356:	8884      	ldrh	r4, [r0, #4]
 8001358:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800135a:	1b09      	subs	r1, r1, r4
 800135c:	b212      	sxth	r2, r2
    }
 800135e:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8001362:	b209      	sxth	r1, r1
 8001364:	4718      	bx	r3

08001366 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8001366:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800136a:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 800136c:	f04f 33ff 	mov.w	r3, #4294967295
 8001370:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8001372:	6813      	ldr	r3, [r2, #0]
 8001374:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8001376:	6010      	str	r0, [r2, #0]
    }
 8001378:	4770      	bx	lr

0800137a <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 800137a:	2000      	movs	r0, #0
 800137c:	4770      	bx	lr

0800137e <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 800137e:	888b      	ldrh	r3, [r1, #4]
 8001380:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8001382:	2001      	movs	r0, #1
 8001384:	4770      	bx	lr

08001386 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 8001386:	4770      	bx	lr

08001388 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8001388:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
    }
 800138c:	4770      	bx	lr

0800138e <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 800138e:	f890 0026 	ldrb.w	r0, [r0, #38]	@ 0x26
 8001392:	4770      	bx	lr

08001394 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8001394:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8001396:	2200      	movs	r2, #0
        return rect.width;
 8001398:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 800139c:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80013a0:	8002      	strh	r2, [r0, #0]
 80013a2:	8042      	strh	r2, [r0, #2]
 80013a4:	8084      	strh	r4, [r0, #4]
 80013a6:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 80013a8:	bd10      	pop	{r4, pc}

080013aa <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 80013aa:	2200      	movs	r2, #0
 80013ac:	8002      	strh	r2, [r0, #0]
 80013ae:	8042      	strh	r2, [r0, #2]
 80013b0:	8082      	strh	r2, [r0, #4]
 80013b2:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80013b4:	4770      	bx	lr

080013b6 <_ZN8touchgfx17CWRVectorRenderer7setModeENS_14VectorRenderer8DrawModeE>:
     *
     * @param mode The filling mode.
     */
    virtual void setMode(DrawMode mode)
    {
        drawMode = mode;
 80013b6:	7701      	strb	r1, [r0, #28]
    }
 80013b8:	4770      	bx	lr

080013ba <_ZN8touchgfx17CWRVectorRenderer19setStrokeMiterLimitEf>:

    virtual void setStrokeMiterLimit(float miterLimit)
    {
        strokeMiterLimit = miterLimit;
 80013ba:	ed80 0a08 	vstr	s0, [r0, #32]
    }
 80013be:	4770      	bx	lr

080013c0 <_ZN8touchgfx17CWRVectorRenderer17setStrokeLineJoinENS_16VGStrokeLineJoinE>:

    virtual void setStrokeLineJoin(VGStrokeLineJoin lineJoin)
    {
        strokeLineJoin = lineJoin;
 80013c0:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
    }
 80013c4:	4770      	bx	lr

080013c6 <_ZN8touchgfx17CWRVectorRenderer16setStrokeLineCapENS_15VGStrokeLineCapE>:

    virtual void setStrokeLineCap(VGStrokeLineCap lineCap)
    {
        strokeLineCap = lineCap;
 80013c6:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
    }
 80013ca:	4770      	bx	lr

080013cc <_ZNK8touchgfx17CWRVectorRenderer17CanvasWidgetProxy16drawCanvasWidgetERKNS_4RectE>:
    class CanvasWidgetProxy : public CanvasWidget
    {
        virtual bool drawCanvasWidget(const Rect& invalidatedArea) const
        {
            return true;
        }
 80013cc:	2001      	movs	r0, #1
 80013ce:	4770      	bx	lr

080013d0 <_ZN8touchgfx23CWRVectorRendererRGB56516getLinearPainterEv>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
{
    virtual AbstractPainterLinearGradient& getLinearPainter()
    {
        return linearPainter;
    }
 80013d0:	3098      	adds	r0, #152	@ 0x98
 80013d2:	4770      	bx	lr

080013d4 <_ZN8touchgfx23CWRVectorRendererRGB56520getColorPainterColorEv>:

    virtual AbstractPainterColor& getColorPainterColor()
    {
        return colorPainter;
    }
 80013d4:	308c      	adds	r0, #140	@ 0x8c
 80013d6:	4770      	bx	lr

080013d8 <_ZN8touchgfx23CWRVectorRendererRGB56515getColorPainterEv>:

    virtual AbstractPainter& getColorPainter()
    {
        return colorPainter;
    }
 80013d8:	3084      	adds	r0, #132	@ 0x84
 80013da:	4770      	bx	lr

080013dc <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD1Ev>:
    class CanvasWidgetProxy : public CanvasWidget
 80013dc:	4770      	bx	lr

080013de <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 80013de:	4770      	bx	lr

080013e0 <__tcf_1>:

namespace touchgfx
{
VectorRenderer* VectorRenderer::getInstance()
{
    static CWRVectorRendererRGB565 renderer;
 80013e0:	4770      	bx	lr
	...

080013e4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80013e4:	4b03      	ldr	r3, [pc, #12]	@ (80013f4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 80013e6:	2290      	movs	r2, #144	@ 0x90
 80013e8:	f883 235a 	strb.w	r2, [r3, #858]	@ 0x35a
 80013ec:	f883 2358 	strb.w	r2, [r3, #856]	@ 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 80013f0:	4770      	bx	lr
 80013f2:	bf00      	nop
 80013f4:	e000e100 	.word	0xe000e100

080013f8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & LTDC_BPCR_AVBP_Msk) - 1;
 80013f8:	4a09      	ldr	r2, [pc, #36]	@ (8001420 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 80013fa:	490a      	ldr	r1, [pc, #40]	@ (8001424 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 80013fc:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & LTDC_AWCR_AAH_Msk) - 1;
 80013fe:	480a      	ldr	r0, [pc, #40]	@ (8001428 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & LTDC_BPCR_AVBP_Msk) - 1;
 8001400:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8001404:	3b01      	subs	r3, #1
 8001406:	b29b      	uxth	r3, r3
 8001408:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & LTDC_AWCR_AAH_Msk) - 1;
 800140a:	6911      	ldr	r1, [r2, #16]
 800140c:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8001410:	3901      	subs	r1, #1
 8001412:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8001414:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8001416:	6b53      	ldr	r3, [r2, #52]	@ 0x34
 8001418:	f043 0301 	orr.w	r3, r3, #1
 800141c:	6353      	str	r3, [r2, #52]	@ 0x34
}
 800141e:	4770      	bx	lr
 8001420:	40016800 	.word	0x40016800
 8001424:	200015b2 	.word	0x200015b2
 8001428:	200015b0 	.word	0x200015b0

0800142c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 800142c:	4b01      	ldr	r3, [pc, #4]	@ (8001434 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 800142e:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
 8001432:	4770      	bx	lr
 8001434:	40016800 	.word	0x40016800

08001438 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001438:	4b02      	ldr	r3, [pc, #8]	@ (8001444 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800143a:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 800143c:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001440:	625a      	str	r2, [r3, #36]	@ 0x24
}
 8001442:	4770      	bx	lr
 8001444:	40016800 	.word	0x40016800

08001448 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD0Ev>:
    class CanvasWidgetProxy : public CanvasWidget
 8001448:	b510      	push	{r4, lr}
 800144a:	212c      	movs	r1, #44	@ 0x2c
 800144c:	4604      	mov	r4, r0
 800144e:	f01f fa3e 	bl	80208ce <_ZdlPvj>
 8001452:	4620      	mov	r0, r4
 8001454:	bd10      	pop	{r4, pc}

08001456 <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 8001456:	b510      	push	{r4, lr}
 8001458:	21bc      	movs	r1, #188	@ 0xbc
 800145a:	4604      	mov	r4, r0
 800145c:	f01f fa37 	bl	80208ce <_ZdlPvj>
 8001460:	4620      	mov	r0, r4
 8001462:	bd10      	pop	{r4, pc}

08001464 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001464:	b570      	push	{r4, r5, r6, lr}
 8001466:	4604      	mov	r4, r0
    HAL::initialize();
 8001468:	f008 fd63 	bl	8009f32 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800146c:	6823      	ldr	r3, [r4, #0]
 800146e:	6e9d      	ldr	r5, [r3, #104]	@ 0x68
 8001470:	f00d f824 	bl	800e4bc <_ZN8touchgfx11Application11getInstanceEv>
 8001474:	4601      	mov	r1, r0
 8001476:	4620      	mov	r0, r4
 8001478:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800147a:	6823      	ldr	r3, [r4, #0]
 800147c:	4a05      	ldr	r2, [pc, #20]	@ (8001494 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800147e:	f8d3 508c 	ldr.w	r5, [r3, #140]	@ 0x8c
 8001482:	4620      	mov	r0, r4
 8001484:	46ac      	mov	ip, r5
 8001486:	2300      	movs	r3, #0
}
 8001488:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800148c:	f5a2 3116 	sub.w	r1, r2, #153600	@ 0x25800
 8001490:	4760      	bx	ip
 8001492:	bf00      	nop
 8001494:	d004b000 	.word	0xd004b000

08001498 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8001498:	f008 bd32 	b.w	8009f00 <_ZN8touchgfx3HAL10beginFrameEv>

0800149c <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 800149c:	f008 bd3c 	b.w	8009f18 <_ZN8touchgfx3HAL8endFrameEv>

080014a0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80014a0:	f008 bcf8 	b.w	8009e94 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080014a4 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80014a4:	f008 be67 	b.w	800a176 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080014a8 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 80014a8:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 80014ac:	b112      	cbz	r2, 80014b4 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 80014ae:	6803      	ldr	r3, [r0, #0]
 80014b0:	695b      	ldr	r3, [r3, #20]
 80014b2:	4718      	bx	r3
    }
 80014b4:	4770      	bx	lr

080014b6 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 80014b6:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 80014ba:	b11a      	cbz	r2, 80014c4 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 80014bc:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
 80014c0:	b102      	cbz	r2, 80014c4 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 80014c2:	6018      	str	r0, [r3, #0]
        }
    }
 80014c4:	4770      	bx	lr
	...

080014c8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80014c8:	4b03      	ldr	r3, [pc, #12]	@ (80014d8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 80014ca:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 80014ce:	609a      	str	r2, [r3, #8]
 80014d0:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80014d4:	609a      	str	r2, [r3, #8]
}
 80014d6:	4770      	bx	lr
 80014d8:	e000e100 	.word	0xe000e100

080014dc <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80014dc:	4b08      	ldr	r3, [pc, #32]	@ (8001500 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 80014de:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 80014e2:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80014e6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80014ea:	f3bf 8f6f 	isb	sy
 80014ee:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80014f2:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80014f6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80014fa:	f3bf 8f6f 	isb	sy
}
 80014fe:	4770      	bx	lr
 8001500:	e000e100 	.word	0xe000e100

08001504 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8001504:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 8001506:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8001508:	4e12      	ldr	r6, [pc, #72]	@ (8001554 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 800150a:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 800150c:	4b12      	ldr	r3, [pc, #72]	@ (8001558 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 800150e:	6003      	str	r3, [r0, #0]
 8001510:	6833      	ldr	r3, [r6, #0]
 8001512:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
    AbstractPainterRGB565()
 8001516:	4605      	mov	r5, r0
 8001518:	b10a      	cbz	r2, 800151e <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 800151a:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800151c:	b900      	cbnz	r0, 8001520 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 800151e:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8001520:	6803      	ldr	r3, [r0, #0]
 8001522:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001524:	4798      	blx	r3
        return auxiliaryLCD;
 8001526:	6833      	ldr	r3, [r6, #0]
 8001528:	fab0 f480 	clz	r4, r0
 800152c:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800152e:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8001530:	b130      	cbz	r0, 8001540 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8001532:	6803      	ldr	r3, [r0, #0]
 8001534:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001536:	4798      	blx	r3
 8001538:	2800      	cmp	r0, #0
 800153a:	bf08      	it	eq
 800153c:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8001540:	b92c      	cbnz	r4, 800154e <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8001542:	4b06      	ldr	r3, [pc, #24]	@ (800155c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8001544:	4a06      	ldr	r2, [pc, #24]	@ (8001560 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8001546:	4807      	ldr	r0, [pc, #28]	@ (8001564 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8001548:	212c      	movs	r1, #44	@ 0x2c
 800154a:	f020 f8fd 	bl	8021748 <__assert_func>
    }
 800154e:	4628      	mov	r0, r5
 8001550:	bd70      	pop	{r4, r5, r6, pc}
 8001552:	bf00      	nop
 8001554:	20013090 	.word	0x20013090
 8001558:	08023470 	.word	0x08023470
 800155c:	08022bdf 	.word	0x08022bdf
 8001560:	08022c3d 	.word	0x08022c3d
 8001564:	08022c76 	.word	0x08022c76

08001568 <_ZN8touchgfx14VectorRenderer11getInstanceEv>:
{
 8001568:	b570      	push	{r4, r5, r6, lr}
    static CWRVectorRendererRGB565 renderer;
 800156a:	4e25      	ldr	r6, [pc, #148]	@ (8001600 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x98>)
 800156c:	6835      	ldr	r5, [r6, #0]
 800156e:	f3bf 8f5b 	dmb	ish
 8001572:	f015 0501 	ands.w	r5, r5, #1
 8001576:	d140      	bne.n	80015fa <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x92>
 8001578:	4630      	mov	r0, r6
 800157a:	f01f f9aa 	bl	80208d2 <__cxa_guard_acquire>
 800157e:	2800      	cmp	r0, #0
 8001580:	d03b      	beq.n	80015fa <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x92>
class CWRVectorRenderer : public VectorRenderer
 8001582:	4c20      	ldr	r4, [pc, #128]	@ (8001604 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9c>)
 8001584:	4b20      	ldr	r3, [pc, #128]	@ (8001608 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa0>)
 8001586:	6125      	str	r5, [r4, #16]
 8001588:	f104 0034 	add.w	r0, r4, #52	@ 0x34
 800158c:	e9c4 3500 	strd	r3, r5, [r4]
 8001590:	e9c4 5502 	strd	r5, r5, [r4, #8]
 8001594:	84e5      	strh	r5, [r4, #38]	@ 0x26
 8001596:	62a5      	str	r5, [r4, #40]	@ 0x28
 8001598:	85a5      	strh	r5, [r4, #44]	@ 0x2c
 800159a:	f00e fcdc 	bl	800ff56 <_ZN8touchgfx9Matrix3x3C1Ev>
    class CanvasWidgetProxy : public CanvasWidget
 800159e:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80015a2:	f00b f85d 	bl	800c660 <_ZN8touchgfx12CanvasWidgetC1Ev>
 80015a6:	4b19      	ldr	r3, [pc, #100]	@ (800160c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa4>)
 80015a8:	65a3      	str	r3, [r4, #88]	@ 0x58
class CWRVectorRendererRGB565 : public CWRVectorRenderer
 80015aa:	4620      	mov	r0, r4
 80015ac:	4b18      	ldr	r3, [pc, #96]	@ (8001610 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xa8>)
 80015ae:	f840 3b84 	str.w	r3, [r0], #132
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80015b2:	f7ff ffa7 	bl	8001504 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80015b6:	4b17      	ldr	r3, [pc, #92]	@ (8001614 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xac>)
 80015b8:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
 80015bc:	3324      	adds	r3, #36	@ 0x24
 80015be:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
class AbstractPainterLinearGradient : public AbstractPainter
{
public:
    /** Constructor. */
    AbstractPainterLinearGradient()
        : AbstractPainter(),
 80015c2:	f44f 03c8 	mov.w	r3, #6553600	@ 0x640000
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
 80015c6:	e9c4 3528 	strd	r3, r5, [r4, #160]	@ 0xa0
 80015ca:	2300      	movs	r3, #0
 80015cc:	f8c4 30ac 	str.w	r3, [r4, #172]	@ 0xac
 80015d0:	f8c4 30b0 	str.w	r3, [r4, #176]	@ 0xb0
 80015d4:	f8c4 30b4 	str.w	r3, [r4, #180]	@ 0xb4
 80015d8:	f8c4 30b8 	str.w	r3, [r4, #184]	@ 0xb8
 80015dc:	480e      	ldr	r0, [pc, #56]	@ (8001618 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xb0>)
 * An abstract class for creating painter classes for drawing canvas widgets. All canvas widgets
 * need a painter to fill the shape drawn with a CanvasWidgetRenderer. The painter must provide
 * the color of a pixel on a given coordinate, which will the be blended into the framebuffer
 * depending on the position of the canvas widget and the transparency of the given pixel.
 */
class PainterRGB565LinearGradient : public AbstractPainterLinearGradient
 80015de:	4b0f      	ldr	r3, [pc, #60]	@ (800161c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xb4>)
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 80015e0:	f8c4 5090 	str.w	r5, [r4, #144]	@ 0x90
        : AbstractPainter(),
 80015e4:	f8c4 509c 	str.w	r5, [r4, #156]	@ 0x9c
 80015e8:	f8c4 50a8 	str.w	r5, [r4, #168]	@ 0xa8
 80015ec:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
 80015f0:	f020 f8c8 	bl	8021784 <atexit>
 80015f4:	4630      	mov	r0, r6
 80015f6:	f01f f978 	bl	80208ea <__cxa_guard_release>
}
 80015fa:	4802      	ldr	r0, [pc, #8]	@ (8001604 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9c>)
 80015fc:	bd70      	pop	{r4, r5, r6, pc}
 80015fe:	bf00      	nop
 8001600:	200015b4 	.word	0x200015b4
 8001604:	200015b8 	.word	0x200015b8
 8001608:	08023920 	.word	0x08023920
 800160c:	08023490 	.word	0x08023490
 8001610:	08023508 	.word	0x08023508
 8001614:	080238d4 	.word	0x080238d4
 8001618:	080013e1 	.word	0x080013e1
 800161c:	080238b4 	.word	0x080238b4

08001620 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001620:	b538      	push	{r3, r4, r5, lr}
        return instance;
 8001622:	4c18      	ldr	r4, [pc, #96]	@ (8001684 <HAL_LTDC_LineEventCallback+0x64>)
        if (!HAL::getInstance())
 8001624:	6823      	ldr	r3, [r4, #0]
 8001626:	b35b      	cbz	r3, 8001680 <HAL_LTDC_LineEventCallback+0x60>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8001628:	4b17      	ldr	r3, [pc, #92]	@ (8001688 <HAL_LTDC_LineEventCallback+0x68>)
 800162a:	4a18      	ldr	r2, [pc, #96]	@ (800168c <HAL_LTDC_LineEventCallback+0x6c>)
 800162c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800162e:	8811      	ldrh	r1, [r2, #0]
 8001630:	428b      	cmp	r3, r1
 8001632:	d116      	bne.n	8001662 <HAL_LTDC_LineEventCallback+0x42>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001634:	4b16      	ldr	r3, [pc, #88]	@ (8001690 <HAL_LTDC_LineEventCallback+0x70>)
 8001636:	8819      	ldrh	r1, [r3, #0]
 8001638:	f002 ff7c 	bl	8004534 <HAL_LTDC_ProgramLineEvent>
 800163c:	6823      	ldr	r3, [r4, #0]
        vSyncCnt++;
 800163e:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
        isFrontPorchEntered = false;
 8001642:	2500      	movs	r5, #0
        vSyncCnt++;
 8001644:	3201      	adds	r2, #1
 8001646:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
        isFrontPorchEntered = false;
 800164a:	f883 507c 	strb.w	r5, [r3, #124]	@ 0x7c
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 800164e:	f7ff fabb 	bl	8000bc8 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001652:	6820      	ldr	r0, [r4, #0]
 8001654:	f009 f9f8 	bl	800aa48 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 8001658:	4628      	mov	r0, r5

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 800165a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 800165e:	f7ff b8fb 	b.w	8000858 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8001662:	f002 ff67 	bl	8004534 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001666:	6824      	ldr	r4, [r4, #0]
        allowDMATransfers();
 8001668:	6823      	ldr	r3, [r4, #0]
 800166a:	4620      	mov	r0, r4
 800166c:	6a1b      	ldr	r3, [r3, #32]
 800166e:	4798      	blx	r3
        isFrontPorchEntered = true;
 8001670:	2301      	movs	r3, #1
 8001672:	f884 307c 	strb.w	r3, [r4, #124]	@ 0x7c
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001676:	2000      	movs	r0, #0
    }
 8001678:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 800167c:	f7ff b916 	b.w	80008ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8001680:	bd38      	pop	{r3, r4, r5, pc}
 8001682:	bf00      	nop
 8001684:	20013090 	.word	0x20013090
 8001688:	40016800 	.word	0x40016800
 800168c:	200015b2 	.word	0x200015b2
 8001690:	200015b0 	.word	0x200015b0

08001694 <MX_USB_DEVICE_Init>:
/**
  * Init USB device Library, add supported class and start the library
  * @retval None
  */
void MX_USB_DEVICE_Init(void)
{
 8001694:	b508      	push	{r3, lr}
  /* USER CODE BEGIN USB_DEVICE_Init_PreTreatment */

  /* USER CODE END USB_DEVICE_Init_PreTreatment */

  /* Init Device Library, add supported class and start the library. */
  if (USBD_Init(&hUsbDeviceHS, &HS_Desc, DEVICE_HS) != USBD_OK)
 8001696:	490c      	ldr	r1, [pc, #48]	@ (80016c8 <MX_USB_DEVICE_Init+0x34>)
 8001698:	480c      	ldr	r0, [pc, #48]	@ (80016cc <MX_USB_DEVICE_Init+0x38>)
 800169a:	2201      	movs	r2, #1
 800169c:	f007 fc00 	bl	8008ea0 <USBD_Init>
 80016a0:	b108      	cbz	r0, 80016a6 <MX_USB_DEVICE_Init+0x12>
  {
    Error_Handler();
 80016a2:	f000 fcfd 	bl	80020a0 <Error_Handler>
  }
  if (USBD_RegisterClass(&hUsbDeviceHS, &USBD_HID) != USBD_OK)
 80016a6:	490a      	ldr	r1, [pc, #40]	@ (80016d0 <MX_USB_DEVICE_Init+0x3c>)
 80016a8:	4808      	ldr	r0, [pc, #32]	@ (80016cc <MX_USB_DEVICE_Init+0x38>)
 80016aa:	f007 fc0c 	bl	8008ec6 <USBD_RegisterClass>
 80016ae:	b108      	cbz	r0, 80016b4 <MX_USB_DEVICE_Init+0x20>
  {
    Error_Handler();
 80016b0:	f000 fcf6 	bl	80020a0 <Error_Handler>
  }
  if (USBD_Start(&hUsbDeviceHS) != USBD_OK)
 80016b4:	4805      	ldr	r0, [pc, #20]	@ (80016cc <MX_USB_DEVICE_Init+0x38>)
 80016b6:	f007 fc1f 	bl	8008ef8 <USBD_Start>
 80016ba:	b118      	cbz	r0, 80016c4 <MX_USB_DEVICE_Init+0x30>
  }

  /* USER CODE BEGIN USB_DEVICE_Init_PostTreatment */

  /* USER CODE END USB_DEVICE_Init_PostTreatment */
}
 80016bc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    Error_Handler();
 80016c0:	f000 bcee 	b.w	80020a0 <Error_Handler>
}
 80016c4:	bd08      	pop	{r3, pc}
 80016c6:	bf00      	nop
 80016c8:	20000040 	.word	0x20000040
 80016cc:	20001674 	.word	0x20001674
 80016d0:	2000015c 	.word	0x2000015c

080016d4 <USBD_HS_DeviceDescriptor>:
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_HS_DeviceDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
  UNUSED(speed);
  *length = sizeof(USBD_HS_DeviceDesc);
 80016d4:	2312      	movs	r3, #18
  return USBD_HS_DeviceDesc;
}
 80016d6:	4801      	ldr	r0, [pc, #4]	@ (80016dc <USBD_HS_DeviceDescriptor+0x8>)
  *length = sizeof(USBD_HS_DeviceDesc);
 80016d8:	800b      	strh	r3, [r1, #0]
}
 80016da:	4770      	bx	lr
 80016dc:	2000002c 	.word	0x2000002c

080016e0 <USBD_HS_LangIDStrDescriptor>:
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_HS_LangIDStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
  UNUSED(speed);
  *length = sizeof(USBD_LangIDDesc);
 80016e0:	2304      	movs	r3, #4
  return USBD_LangIDDesc;
}
 80016e2:	4801      	ldr	r0, [pc, #4]	@ (80016e8 <USBD_HS_LangIDStrDescriptor+0x8>)
  *length = sizeof(USBD_LangIDDesc);
 80016e4:	800b      	strh	r3, [r1, #0]
}
 80016e6:	4770      	bx	lr
 80016e8:	20000028 	.word	0x20000028

080016ec <IntToUnicode>:
  * @param  pbuf: pointer to the buffer
  * @param  len: buffer length
  * @retval None
  */
static void IntToUnicode(uint32_t value, uint8_t * pbuf, uint8_t len)
{
 80016ec:	2300      	movs	r3, #0
 80016ee:	b570      	push	{r4, r5, r6, lr}
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
    }

    value = value << 4;

    pbuf[2 * idx + 1] = 0;
 80016f0:	1c4d      	adds	r5, r1, #1
 80016f2:	461e      	mov	r6, r3
      pbuf[2 * idx] = (value >> 28) + '0';
 80016f4:	0f04      	lsrs	r4, r0, #28
    if (((value >> 28)) < 0xA)
 80016f6:	f1b0 4f20 	cmp.w	r0, #2684354560	@ 0xa0000000
      pbuf[2 * idx] = (value >> 28) + '0';
 80016fa:	bf34      	ite	cc
 80016fc:	3430      	addcc	r4, #48	@ 0x30
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
 80016fe:	3437      	addcs	r4, #55	@ 0x37
      pbuf[2 * idx] = (value >> 28) + '0';
 8001700:	f801 4013 	strb.w	r4, [r1, r3, lsl #1]
    pbuf[2 * idx + 1] = 0;
 8001704:	f805 6013 	strb.w	r6, [r5, r3, lsl #1]
  for (idx = 0; idx < len; idx++)
 8001708:	3301      	adds	r3, #1
 800170a:	b2dc      	uxtb	r4, r3
 800170c:	42a2      	cmp	r2, r4
    value = value << 4;
 800170e:	ea4f 1000 	mov.w	r0, r0, lsl #4
  for (idx = 0; idx < len; idx++)
 8001712:	d8ef      	bhi.n	80016f4 <IntToUnicode+0x8>
  }
}
 8001714:	bd70      	pop	{r4, r5, r6, pc}
	...

08001718 <USBD_HS_SerialStrDescriptor>:
  *length = USB_SIZ_STRING_SERIAL;
 8001718:	231a      	movs	r3, #26
{
 800171a:	b510      	push	{r4, lr}
  *length = USB_SIZ_STRING_SERIAL;
 800171c:	800b      	strh	r3, [r1, #0]
  deviceserial0 = *(uint32_t *) DEVICE_ID1;
 800171e:	4b0a      	ldr	r3, [pc, #40]	@ (8001748 <USBD_HS_SerialStrDescriptor+0x30>)
 8001720:	f8d3 0a10 	ldr.w	r0, [r3, #2576]	@ 0xa10
  deviceserial0 += deviceserial2;
 8001724:	f8d3 2a18 	ldr.w	r2, [r3, #2584]	@ 0xa18
  if (deviceserial0 != 0)
 8001728:	1880      	adds	r0, r0, r2
 800172a:	d00a      	beq.n	8001742 <USBD_HS_SerialStrDescriptor+0x2a>
  deviceserial1 = *(uint32_t *) DEVICE_ID2;
 800172c:	f8d3 4a14 	ldr.w	r4, [r3, #2580]	@ 0xa14
    IntToUnicode(deviceserial0, &USBD_StringSerial[2], 8);
 8001730:	4906      	ldr	r1, [pc, #24]	@ (800174c <USBD_HS_SerialStrDescriptor+0x34>)
 8001732:	2208      	movs	r2, #8
 8001734:	f7ff ffda 	bl	80016ec <IntToUnicode>
    IntToUnicode(deviceserial1, &USBD_StringSerial[18], 4);
 8001738:	2204      	movs	r2, #4
 800173a:	3110      	adds	r1, #16
 800173c:	4620      	mov	r0, r4
 800173e:	f7ff ffd5 	bl	80016ec <IntToUnicode>
}
 8001742:	4803      	ldr	r0, [pc, #12]	@ (8001750 <USBD_HS_SerialStrDescriptor+0x38>)
 8001744:	bd10      	pop	{r4, pc}
 8001746:	bf00      	nop
 8001748:	1fff7000 	.word	0x1fff7000
 800174c:	2000000e 	.word	0x2000000e
 8001750:	2000000c 	.word	0x2000000c

08001754 <USBD_HS_ManufacturerStrDescriptor>:
{
 8001754:	b510      	push	{r4, lr}
  USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 8001756:	4c04      	ldr	r4, [pc, #16]	@ (8001768 <USBD_HS_ManufacturerStrDescriptor+0x14>)
 8001758:	4804      	ldr	r0, [pc, #16]	@ (800176c <USBD_HS_ManufacturerStrDescriptor+0x18>)
{
 800175a:	460a      	mov	r2, r1
  USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 800175c:	4621      	mov	r1, r4
 800175e:	f007 ff91 	bl	8009684 <USBD_GetString>
}
 8001762:	4620      	mov	r0, r4
 8001764:	bd10      	pop	{r4, pc}
 8001766:	bf00      	nop
 8001768:	20001950 	.word	0x20001950
 800176c:	08022cd8 	.word	0x08022cd8

08001770 <USBD_HS_ProductStrDescriptor>:
{
 8001770:	b510      	push	{r4, lr}
    USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_HS, USBD_StrDesc, length);
 8001772:	4c04      	ldr	r4, [pc, #16]	@ (8001784 <USBD_HS_ProductStrDescriptor+0x14>)
 8001774:	4804      	ldr	r0, [pc, #16]	@ (8001788 <USBD_HS_ProductStrDescriptor+0x18>)
{
 8001776:	460a      	mov	r2, r1
    USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_HS, USBD_StrDesc, length);
 8001778:	4621      	mov	r1, r4
 800177a:	f007 ff83 	bl	8009684 <USBD_GetString>
}
 800177e:	4620      	mov	r0, r4
 8001780:	bd10      	pop	{r4, pc}
 8001782:	bf00      	nop
 8001784:	20001950 	.word	0x20001950
 8001788:	08022ceb 	.word	0x08022ceb

0800178c <USBD_HS_ConfigStrDescriptor>:
{
 800178c:	b510      	push	{r4, lr}
    USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_HS, USBD_StrDesc, length);
 800178e:	4c04      	ldr	r4, [pc, #16]	@ (80017a0 <USBD_HS_ConfigStrDescriptor+0x14>)
 8001790:	4804      	ldr	r0, [pc, #16]	@ (80017a4 <USBD_HS_ConfigStrDescriptor+0x18>)
{
 8001792:	460a      	mov	r2, r1
    USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_HS, USBD_StrDesc, length);
 8001794:	4621      	mov	r1, r4
 8001796:	f007 ff75 	bl	8009684 <USBD_GetString>
}
 800179a:	4620      	mov	r0, r4
 800179c:	bd10      	pop	{r4, pc}
 800179e:	bf00      	nop
 80017a0:	20001950 	.word	0x20001950
 80017a4:	08022d01 	.word	0x08022d01

080017a8 <USBD_HS_InterfaceStrDescriptor>:
{
 80017a8:	b510      	push	{r4, lr}
    USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_HS, USBD_StrDesc, length);
 80017aa:	4c04      	ldr	r4, [pc, #16]	@ (80017bc <USBD_HS_InterfaceStrDescriptor+0x14>)
 80017ac:	4804      	ldr	r0, [pc, #16]	@ (80017c0 <USBD_HS_InterfaceStrDescriptor+0x18>)
{
 80017ae:	460a      	mov	r2, r1
    USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_HS, USBD_StrDesc, length);
 80017b0:	4621      	mov	r1, r4
 80017b2:	f007 ff67 	bl	8009684 <USBD_GetString>
}
 80017b6:	4620      	mov	r0, r4
 80017b8:	bd10      	pop	{r4, pc}
 80017ba:	bf00      	nop
 80017bc:	20001950 	.word	0x20001950
 80017c0:	08022d0c 	.word	0x08022d0c

080017c4 <HAL_PCD_MspInit>:
                       LL Driver Callbacks (PCD -> USB Device Library)
*******************************************************************************/
/* MSP Init */

void HAL_PCD_MspInit(PCD_HandleTypeDef* pcdHandle)
{
 80017c4:	b530      	push	{r4, r5, lr}
 80017c6:	4604      	mov	r4, r0
 80017c8:	b089      	sub	sp, #36	@ 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80017ca:	2214      	movs	r2, #20
 80017cc:	2100      	movs	r1, #0
 80017ce:	a803      	add	r0, sp, #12
 80017d0:	f020 f9c1 	bl	8021b56 <memset>
  if(pcdHandle->Instance==USB_OTG_HS)
 80017d4:	6822      	ldr	r2, [r4, #0]
 80017d6:	4b1c      	ldr	r3, [pc, #112]	@ (8001848 <HAL_PCD_MspInit+0x84>)
 80017d8:	429a      	cmp	r2, r3
 80017da:	d133      	bne.n	8001844 <HAL_PCD_MspInit+0x80>
  {
  /* USER CODE BEGIN USB_OTG_HS_MspInit 0 */

  /* USER CODE END USB_OTG_HS_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 80017dc:	4c1b      	ldr	r4, [pc, #108]	@ (800184c <HAL_PCD_MspInit+0x88>)
    PB15     ------> USB_OTG_HS_DP
    */
    GPIO_InitStruct.Pin = GPIO_PIN_13;
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017de:	481c      	ldr	r0, [pc, #112]	@ (8001850 <HAL_PCD_MspInit+0x8c>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80017e0:	2500      	movs	r5, #0
 80017e2:	9501      	str	r5, [sp, #4]
 80017e4:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80017e6:	f043 0302 	orr.w	r3, r3, #2
 80017ea:	6323      	str	r3, [r4, #48]	@ 0x30
 80017ec:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80017ee:	f003 0302 	and.w	r3, r3, #2
 80017f2:	9301      	str	r3, [sp, #4]
 80017f4:	9b01      	ldr	r3, [sp, #4]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017f6:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Pin = GPIO_PIN_13;
 80017f8:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80017fc:	9303      	str	r3, [sp, #12]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017fe:	f001 ffa7 	bl	8003750 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_15;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001802:	f44f 4240 	mov.w	r2, #49152	@ 0xc000
 8001806:	2302      	movs	r3, #2
 8001808:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF12_OTG_HS_FS;
 800180c:	2103      	movs	r1, #3
 800180e:	230c      	movs	r3, #12
 8001810:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001814:	480e      	ldr	r0, [pc, #56]	@ (8001850 <HAL_PCD_MspInit+0x8c>)
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001816:	9505      	str	r5, [sp, #20]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001818:	eb0d 0103 	add.w	r1, sp, r3
 800181c:	f001 ff98 	bl	8003750 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_USB_OTG_HS_CLK_ENABLE();
 8001820:	9502      	str	r5, [sp, #8]
 8001822:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8001824:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8001828:	6323      	str	r3, [r4, #48]	@ 0x30
 800182a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800182c:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8001830:	9302      	str	r3, [sp, #8]

    /* Peripheral interrupt init */
    HAL_NVIC_SetPriority(OTG_HS_IRQn, 5, 0);
 8001832:	204d      	movs	r0, #77	@ 0x4d
 8001834:	462a      	mov	r2, r5
 8001836:	2105      	movs	r1, #5
    __HAL_RCC_USB_OTG_HS_CLK_ENABLE();
 8001838:	9b02      	ldr	r3, [sp, #8]
    HAL_NVIC_SetPriority(OTG_HS_IRQn, 5, 0);
 800183a:	f001 fe3f 	bl	80034bc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(OTG_HS_IRQn);
 800183e:	204d      	movs	r0, #77	@ 0x4d
 8001840:	f001 fe6e 	bl	8003520 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USB_OTG_HS_MspInit 1 */

  /* USER CODE END USB_OTG_HS_MspInit 1 */
  }
}
 8001844:	b009      	add	sp, #36	@ 0x24
 8001846:	bd30      	pop	{r4, r5, pc}
 8001848:	40040000 	.word	0x40040000
 800184c:	40023800 	.word	0x40023800
 8001850:	40020400 	.word	0x40020400

08001854 <HAL_PCD_SetupStageCallback>:
static void PCD_SetupStageCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SetupStageCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_SetupStage((USBD_HandleTypeDef*)hpcd->pData, (uint8_t *)hpcd->Setup);
 8001854:	f200 419c 	addw	r1, r0, #1180	@ 0x49c
 8001858:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 800185c:	f007 bb5e 	b.w	8008f1c <USBD_LL_SetupStage>

08001860 <HAL_PCD_DataOutStageCallback>:
static void PCD_DataOutStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_DataOutStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_DataOutStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->OUT_ep[epnum].xfer_buff);
 8001860:	2324      	movs	r3, #36	@ 0x24
 8001862:	fb03 0301 	mla	r3, r3, r1, r0
 8001866:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 800186a:	f8d3 2260 	ldr.w	r2, [r3, #608]	@ 0x260
 800186e:	f007 bb85 	b.w	8008f7c <USBD_LL_DataOutStage>

08001872 <HAL_PCD_DataInStageCallback>:
static void PCD_DataInStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_DataInStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_DataInStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->IN_ep[epnum].xfer_buff);
 8001872:	2324      	movs	r3, #36	@ 0x24
 8001874:	fb03 0301 	mla	r3, r3, r1, r0
 8001878:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 800187c:	6a1a      	ldr	r2, [r3, #32]
 800187e:	f007 bbb2 	b.w	8008fe6 <USBD_LL_DataInStage>

08001882 <HAL_PCD_SOFCallback>:
static void PCD_SOFCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SOFCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_SOF((USBD_HandleTypeDef*)hpcd->pData);
 8001882:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 8001886:	f007 bc4c 	b.w	8009122 <USBD_LL_SOF>

0800188a <HAL_PCD_ResetCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 800188a:	b510      	push	{r4, lr}
  USBD_SpeedTypeDef speed = USBD_SPEED_FULL;

  if ( hpcd->Init.speed == PCD_SPEED_HIGH)
 800188c:	79c1      	ldrb	r1, [r0, #7]
{
 800188e:	4604      	mov	r4, r0
  if ( hpcd->Init.speed == PCD_SPEED_HIGH)
 8001890:	b121      	cbz	r1, 800189c <HAL_PCD_ResetCallback+0x12>
  {
    speed = USBD_SPEED_HIGH;
  }
  else if ( hpcd->Init.speed == PCD_SPEED_FULL)
 8001892:	2902      	cmp	r1, #2
 8001894:	d001      	beq.n	800189a <HAL_PCD_ResetCallback+0x10>
  {
    speed = USBD_SPEED_FULL;
  }
  else
  {
    Error_Handler();
 8001896:	f000 fc03 	bl	80020a0 <Error_Handler>
    speed = USBD_SPEED_FULL;
 800189a:	2101      	movs	r1, #1
  }
    /* Set Speed. */
  USBD_LL_SetSpeed((USBD_HandleTypeDef*)hpcd->pData, speed);
 800189c:	f8d4 04e0 	ldr.w	r0, [r4, #1248]	@ 0x4e0
 80018a0:	f007 fc23 	bl	80090ea <USBD_LL_SetSpeed>

  /* Reset Device. */
  USBD_LL_Reset((USBD_HandleTypeDef*)hpcd->pData);
 80018a4:	f8d4 04e0 	ldr.w	r0, [r4, #1248]	@ 0x4e0
}
 80018a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  USBD_LL_Reset((USBD_HandleTypeDef*)hpcd->pData);
 80018ac:	f007 bbee 	b.w	800908c <USBD_LL_Reset>

080018b0 <HAL_PCD_SuspendCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 80018b0:	b510      	push	{r4, lr}
 80018b2:	4604      	mov	r4, r0
  /* Inform USB library that core enters in suspend Mode. */
  USBD_LL_Suspend((USBD_HandleTypeDef*)hpcd->pData);
 80018b4:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 80018b8:	f007 fc1a 	bl	80090f0 <USBD_LL_Suspend>
  __HAL_PCD_GATE_PHYCLOCK(hpcd);
 80018bc:	6822      	ldr	r2, [r4, #0]
 80018be:	f8d2 3e00 	ldr.w	r3, [r2, #3584]	@ 0xe00
 80018c2:	f043 0301 	orr.w	r3, r3, #1
 80018c6:	f8c2 3e00 	str.w	r3, [r2, #3584]	@ 0xe00
  /* Enter in STOP mode. */
  /* USER CODE BEGIN 2 */
  if (hpcd->Init.low_power_enable)
 80018ca:	7ae3      	ldrb	r3, [r4, #11]
 80018cc:	b123      	cbz	r3, 80018d8 <HAL_PCD_SuspendCallback+0x28>
  {
    /* Set SLEEPDEEP bit and SleepOnExit of Cortex System Control Register. */
    SCB->SCR |= (uint32_t)((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 80018ce:	4a03      	ldr	r2, [pc, #12]	@ (80018dc <HAL_PCD_SuspendCallback+0x2c>)
 80018d0:	6913      	ldr	r3, [r2, #16]
 80018d2:	f043 0306 	orr.w	r3, r3, #6
 80018d6:	6113      	str	r3, [r2, #16]
  }
  /* USER CODE END 2 */
}
 80018d8:	bd10      	pop	{r4, pc}
 80018da:	bf00      	nop
 80018dc:	e000ed00 	.word	0xe000ed00

080018e0 <HAL_PCD_ResumeCallback>:
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  /* USER CODE BEGIN 3 */

  /* USER CODE END 3 */
  USBD_LL_Resume((USBD_HandleTypeDef*)hpcd->pData);
 80018e0:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 80018e4:	f007 bc12 	b.w	800910c <USBD_LL_Resume>

080018e8 <HAL_PCD_ISOOUTIncompleteCallback>:
static void PCD_ISOOUTIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_ISOOUTIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_IsoOUTIncomplete((USBD_HandleTypeDef*)hpcd->pData, epnum);
 80018e8:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 80018ec:	f007 bc39 	b.w	8009162 <USBD_LL_IsoOUTIncomplete>

080018f0 <HAL_PCD_ISOINIncompleteCallback>:
static void PCD_ISOINIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_ISOINIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_IsoINIncomplete((USBD_HandleTypeDef*)hpcd->pData, epnum);
 80018f0:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 80018f4:	f007 bc22 	b.w	800913c <USBD_LL_IsoINIncomplete>

080018f8 <HAL_PCD_ConnectCallback>:
static void PCD_ConnectCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_ConnectCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_DevConnected((USBD_HandleTypeDef*)hpcd->pData);
 80018f8:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 80018fc:	f007 bc44 	b.w	8009188 <USBD_LL_DevConnected>

08001900 <HAL_PCD_DisconnectCallback>:
static void PCD_DisconnectCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_DisconnectCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_DevDisconnected((USBD_HandleTypeDef*)hpcd->pData);
 8001900:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
 8001904:	f007 bc42 	b.w	800918c <USBD_LL_DevDisconnected>

08001908 <USBD_LL_Init>:
  * @brief  Initializes the low level portion of the device driver.
  * @param  pdev: Device handle
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_Init(USBD_HandleTypeDef *pdev)
{
 8001908:	b508      	push	{r3, lr}
  /* Init USB Ip. */
  if (pdev->id == DEVICE_HS) {
 800190a:	7802      	ldrb	r2, [r0, #0]
 800190c:	2a01      	cmp	r2, #1
{
 800190e:	4603      	mov	r3, r0
  if (pdev->id == DEVICE_HS) {
 8001910:	d127      	bne.n	8001962 <USBD_LL_Init+0x5a>
  /* Link the driver to the stack. */
  hpcd_USB_OTG_HS.pData = pdev;
 8001912:	4815      	ldr	r0, [pc, #84]	@ (8001968 <USBD_LL_Init+0x60>)
 8001914:	f8c0 34e0 	str.w	r3, [r0, #1248]	@ 0x4e0
  pdev->pData = &hpcd_USB_OTG_HS;
 8001918:	f8c3 02c8 	str.w	r0, [r3, #712]	@ 0x2c8

  hpcd_USB_OTG_HS.Instance = USB_OTG_HS;
 800191c:	4b13      	ldr	r3, [pc, #76]	@ (800196c <USBD_LL_Init+0x64>)
 800191e:	6003      	str	r3, [r0, #0]
  hpcd_USB_OTG_HS.Init.dev_endpoints = 6;
 8001920:	2306      	movs	r3, #6
 8001922:	7103      	strb	r3, [r0, #4]
  hpcd_USB_OTG_HS.Init.speed = PCD_SPEED_FULL;
  hpcd_USB_OTG_HS.Init.dma_enable = DISABLE;
 8001924:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8001928:	80c3      	strh	r3, [r0, #6]
  hpcd_USB_OTG_HS.Init.phy_itface = USB_OTG_EMBEDDED_PHY;
 800192a:	2302      	movs	r3, #2
 800192c:	7243      	strb	r3, [r0, #9]
  hpcd_USB_OTG_HS.Init.Sof_enable = DISABLE;
 800192e:	2300      	movs	r3, #0
 8001930:	8143      	strh	r3, [r0, #10]
  hpcd_USB_OTG_HS.Init.low_power_enable = DISABLE;
  hpcd_USB_OTG_HS.Init.lpm_enable = DISABLE;
 8001932:	7303      	strb	r3, [r0, #12]
  hpcd_USB_OTG_HS.Init.vbus_sensing_enable = ENABLE;
 8001934:	81c2      	strh	r2, [r0, #14]
  hpcd_USB_OTG_HS.Init.use_dedicated_ep1 = DISABLE;
  hpcd_USB_OTG_HS.Init.use_external_vbus = DISABLE;
 8001936:	7403      	strb	r3, [r0, #16]
  if (HAL_PCD_Init(&hpcd_USB_OTG_HS) != HAL_OK)
 8001938:	f002 fe1a 	bl	8004570 <HAL_PCD_Init>
 800193c:	b108      	cbz	r0, 8001942 <USBD_LL_Init+0x3a>
  {
    Error_Handler( );
 800193e:	f000 fbaf 	bl	80020a0 <Error_Handler>
  HAL_PCD_RegisterDataOutStageCallback(&hpcd_USB_OTG_HS, PCD_DataOutStageCallback);
  HAL_PCD_RegisterDataInStageCallback(&hpcd_USB_OTG_HS, PCD_DataInStageCallback);
  HAL_PCD_RegisterIsoOutIncpltCallback(&hpcd_USB_OTG_HS, PCD_ISOOUTIncompleteCallback);
  HAL_PCD_RegisterIsoInIncpltCallback(&hpcd_USB_OTG_HS, PCD_ISOINIncompleteCallback);
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
  HAL_PCDEx_SetRxFiFo(&hpcd_USB_OTG_HS, 0x200);
 8001942:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8001946:	4808      	ldr	r0, [pc, #32]	@ (8001968 <USBD_LL_Init+0x60>)
 8001948:	f003 fb37 	bl	8004fba <HAL_PCDEx_SetRxFiFo>
  HAL_PCDEx_SetTxFiFo(&hpcd_USB_OTG_HS, 0, 0x80);
 800194c:	2280      	movs	r2, #128	@ 0x80
 800194e:	2100      	movs	r1, #0
 8001950:	4805      	ldr	r0, [pc, #20]	@ (8001968 <USBD_LL_Init+0x60>)
 8001952:	f003 fb13 	bl	8004f7c <HAL_PCDEx_SetTxFiFo>
  HAL_PCDEx_SetTxFiFo(&hpcd_USB_OTG_HS, 1, 0x174);
 8001956:	4804      	ldr	r0, [pc, #16]	@ (8001968 <USBD_LL_Init+0x60>)
 8001958:	f44f 72ba 	mov.w	r2, #372	@ 0x174
 800195c:	2101      	movs	r1, #1
 800195e:	f003 fb0d 	bl	8004f7c <HAL_PCDEx_SetTxFiFo>
  }
  return USBD_OK;
}
 8001962:	2000      	movs	r0, #0
 8001964:	bd08      	pop	{r3, pc}
 8001966:	bf00      	nop
 8001968:	20001b64 	.word	0x20001b64
 800196c:	40040000 	.word	0x40040000

08001970 <USBD_LL_IsStallEP>:
  */
uint8_t USBD_LL_IsStallEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
{
  PCD_HandleTypeDef *hpcd = (PCD_HandleTypeDef*) pdev->pData;

  if((ep_addr & 0x80) == 0x80)
 8001970:	f011 0f80 	tst.w	r1, #128	@ 0x80
  PCD_HandleTypeDef *hpcd = (PCD_HandleTypeDef*) pdev->pData;
 8001974:	f8d0 32c8 	ldr.w	r3, [r0, #712]	@ 0x2c8
  if((ep_addr & 0x80) == 0x80)
 8001978:	f04f 0224 	mov.w	r2, #36	@ 0x24
  {
    return hpcd->IN_ep[ep_addr & 0x7F].is_stall;
 800197c:	bf1b      	ittet	ne
 800197e:	f001 017f 	andne.w	r1, r1, #127	@ 0x7f
 8001982:	fb02 3301 	mlane	r3, r2, r1, r3
  }
  else
  {
    return hpcd->OUT_ep[ep_addr & 0x7F].is_stall;
 8001986:	fb02 3301 	mlaeq	r3, r2, r1, r3
    return hpcd->IN_ep[ep_addr & 0x7F].is_stall;
 800198a:	7d98      	ldrbne	r0, [r3, #22]
    return hpcd->OUT_ep[ep_addr & 0x7F].is_stall;
 800198c:	bf08      	it	eq
 800198e:	f893 0256 	ldrbeq.w	r0, [r3, #598]	@ 0x256
  }
}
 8001992:	4770      	bx	lr

08001994 <USBD_static_malloc>:
  */
void *USBD_static_malloc(uint32_t size)
{
  static uint32_t mem[(sizeof(USBD_HID_HandleTypeDef)/4)+1];/* On 32-bit boundary */
  return mem;
}
 8001994:	4800      	ldr	r0, [pc, #0]	@ (8001998 <USBD_static_malloc+0x4>)
 8001996:	4770      	bx	lr
 8001998:	20001b50 	.word	0x20001b50

0800199c <USBD_static_free>:
  * @retval None
  */
void USBD_static_free(void *p)
{

}
 800199c:	4770      	bx	lr

0800199e <USBD_Get_USB_Status>:
  */
USBD_StatusTypeDef USBD_Get_USB_Status(HAL_StatusTypeDef hal_status)
{
  USBD_StatusTypeDef usb_status = USBD_OK;

  switch (hal_status)
 800199e:	b118      	cbz	r0, 80019a8 <USBD_Get_USB_Status+0xa>
 80019a0:	2802      	cmp	r0, #2
 80019a2:	bf0c      	ite	eq
 80019a4:	2001      	moveq	r0, #1
 80019a6:	2003      	movne	r0, #3
    default :
      usb_status = USBD_FAIL;
    break;
  }
  return usb_status;
}
 80019a8:	4770      	bx	lr

080019aa <USBD_LL_Start>:
{
 80019aa:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_Start(pdev->pData);
 80019ac:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 80019b0:	f002 fe4d 	bl	800464e <HAL_PCD_Start>
}
 80019b4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 80019b8:	f7ff bff1 	b.w	800199e <USBD_Get_USB_Status>

080019bc <USBD_LL_OpenEP>:
{
 80019bc:	b510      	push	{r4, lr}
 80019be:	4614      	mov	r4, r2
  hal_status = HAL_PCD_EP_Open(pdev->pData, ep_addr, ep_mps, ep_type);
 80019c0:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
{
 80019c4:	461a      	mov	r2, r3
  hal_status = HAL_PCD_EP_Open(pdev->pData, ep_addr, ep_mps, ep_type);
 80019c6:	4623      	mov	r3, r4
 80019c8:	f002 fe73 	bl	80046b2 <HAL_PCD_EP_Open>
}
 80019cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 80019d0:	f7ff bfe5 	b.w	800199e <USBD_Get_USB_Status>

080019d4 <USBD_LL_CloseEP>:
{
 80019d4:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Close(pdev->pData, ep_addr);
 80019d6:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 80019da:	f002 fea3 	bl	8004724 <HAL_PCD_EP_Close>
}
 80019de:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 80019e2:	f7ff bfdc 	b.w	800199e <USBD_Get_USB_Status>

080019e6 <USBD_LL_StallEP>:
{
 80019e6:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_SetStall(pdev->pData, ep_addr);
 80019e8:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 80019ec:	f002 ff01 	bl	80047f2 <HAL_PCD_EP_SetStall>
}
 80019f0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 80019f4:	f7ff bfd3 	b.w	800199e <USBD_Get_USB_Status>

080019f8 <USBD_LL_ClearStallEP>:
{
 80019f8:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_ClrStall(pdev->pData, ep_addr);
 80019fa:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 80019fe:	f002 ff2f 	bl	8004860 <HAL_PCD_EP_ClrStall>
}
 8001a02:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 8001a06:	f7ff bfca 	b.w	800199e <USBD_Get_USB_Status>

08001a0a <USBD_LL_SetUSBAddress>:
{
 8001a0a:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_SetAddress(pdev->pData, dev_addr);
 8001a0c:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 8001a10:	f002 fe3c 	bl	800468c <HAL_PCD_SetAddress>
}
 8001a14:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 8001a18:	f7ff bfc1 	b.w	800199e <USBD_Get_USB_Status>

08001a1c <USBD_LL_Transmit>:
{
 8001a1c:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Transmit(pdev->pData, ep_addr, pbuf, size);
 8001a1e:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 8001a22:	f002 fecb 	bl	80047bc <HAL_PCD_EP_Transmit>
}
 8001a26:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 8001a2a:	f7ff bfb8 	b.w	800199e <USBD_Get_USB_Status>

08001a2e <USBD_LL_PrepareReceive>:
{
 8001a2e:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Receive(pdev->pData, ep_addr, pbuf, size);
 8001a30:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
 8001a34:	f002 fea4 	bl	8004780 <HAL_PCD_EP_Receive>
}
 8001a38:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  usb_status =  USBD_Get_USB_Status(hal_status);
 8001a3c:	f7ff bfaf 	b.w	800199e <USBD_Get_USB_Status>

08001a40 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 8001a40:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;

  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a42:	4b06      	ldr	r3, [pc, #24]	@ (8001a5c <SPI5_Write+0x1c>)
{
 8001a44:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a48:	681b      	ldr	r3, [r3, #0]
 8001a4a:	4805      	ldr	r0, [pc, #20]	@ (8001a60 <SPI5_Write+0x20>)
 8001a4c:	2201      	movs	r2, #1
 8001a4e:	f10d 0106 	add.w	r1, sp, #6
 8001a52:	f004 f805 	bl	8005a60 <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 8001a56:	b003      	add	sp, #12
 8001a58:	f85d fb04 	ldr.w	pc, [sp], #4
 8001a5c:	2000005c 	.word	0x2000005c
 8001a60:	2000208c 	.word	0x2000208c

08001a64 <StartDefaultTask>:
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
//extern USBD_HandleTypeDef hUsbDeviceHS;
void StartDefaultTask(void *argument)
{
 8001a64:	b508      	push	{r3, lr}
  /* init code for USB_DEVICE */
  MX_USB_DEVICE_Init();
 8001a66:	f7ff fe15 	bl	8001694 <MX_USB_DEVICE_Init>
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 8001a6a:	2064      	movs	r0, #100	@ 0x64
 8001a6c:	f005 f9d0 	bl	8006e10 <osDelay>
  for(;;)
 8001a70:	e7fb      	b.n	8001a6a <StartDefaultTask+0x6>
	...

08001a74 <SystemClock_Config>:
{
 8001a74:	b530      	push	{r4, r5, lr}
 8001a76:	b095      	sub	sp, #84	@ 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001a78:	2210      	movs	r2, #16
 8001a7a:	2100      	movs	r1, #0
 8001a7c:	a80a      	add	r0, sp, #40	@ 0x28
 8001a7e:	f020 f86a 	bl	8021b56 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001a82:	2214      	movs	r2, #20
 8001a84:	2100      	movs	r1, #0
 8001a86:	a803      	add	r0, sp, #12
 8001a88:	f020 f865 	bl	8021b56 <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8001a8c:	2400      	movs	r4, #0
 8001a8e:	4b1d      	ldr	r3, [pc, #116]	@ (8001b04 <SystemClock_Config+0x90>)
 8001a90:	9401      	str	r4, [sp, #4]
 8001a92:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001a94:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8001a98:	641a      	str	r2, [r3, #64]	@ 0x40
 8001a9a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001a9c:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001aa0:	9301      	str	r3, [sp, #4]
 8001aa2:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001aa4:	4b18      	ldr	r3, [pc, #96]	@ (8001b08 <SystemClock_Config+0x94>)
 8001aa6:	9402      	str	r4, [sp, #8]
 8001aa8:	681a      	ldr	r2, [r3, #0]
 8001aaa:	f442 4240 	orr.w	r2, r2, #49152	@ 0xc000
 8001aae:	601a      	str	r2, [r3, #0]
 8001ab0:	681b      	ldr	r3, [r3, #0]
 8001ab2:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8001ab6:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001ab8:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001aba:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001abc:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8001ac0:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001ac4:	2502      	movs	r5, #2
 8001ac6:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 8001aca:	e9cd 530e 	strd	r5, r3, [sp, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLN = 168;
 8001ace:	2104      	movs	r1, #4
 8001ad0:	23a8      	movs	r3, #168	@ 0xa8
 8001ad2:	e9cd 1310 	strd	r1, r3, [sp, #64]	@ 0x40
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001ad6:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLQ = 7;
 8001ad8:	2307      	movs	r3, #7
 8001ada:	9313      	str	r3, [sp, #76]	@ 0x4c
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001adc:	9512      	str	r5, [sp, #72]	@ 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001ade:	f003 fa71 	bl	8004fc4 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001ae2:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001ae4:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001ae8:	f44f 50a0 	mov.w	r0, #5120	@ 0x1400
 8001aec:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001af0:	e9cd 0306 	strd	r0, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001af4:	2105      	movs	r1, #5
 8001af6:	a803      	add	r0, sp, #12
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001af8:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001afa:	f003 fc3f 	bl	800537c <HAL_RCC_ClockConfig>
}
 8001afe:	b015      	add	sp, #84	@ 0x54
 8001b00:	bd30      	pop	{r4, r5, pc}
 8001b02:	bf00      	nop
 8001b04:	40023800 	.word	0x40023800
 8001b08:	40007000 	.word	0x40007000

08001b0c <main>:
{
 8001b0c:	b580      	push	{r7, lr}
 8001b0e:	b09a      	sub	sp, #104	@ 0x68
  HAL_Init();
 8001b10:	f001 fc82 	bl	8003418 <HAL_Init>
  SystemClock_Config();
 8001b14:	f7ff ffae 	bl	8001a74 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b18:	2214      	movs	r2, #20
 8001b1a:	2100      	movs	r1, #0
 8001b1c:	a80d      	add	r0, sp, #52	@ 0x34
 8001b1e:	f020 f81a 	bl	8021b56 <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001b22:	2400      	movs	r4, #0
 8001b24:	4bc7      	ldr	r3, [pc, #796]	@ (8001e44 <main+0x338>)
 8001b26:	9400      	str	r4, [sp, #0]
 8001b28:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001b2a:	48c7      	ldr	r0, [pc, #796]	@ (8001e48 <main+0x33c>)
  hi2c3.Instance = I2C3;
 8001b2c:	4dc7      	ldr	r5, [pc, #796]	@ (8001e4c <main+0x340>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001b2e:	f8df 8358 	ldr.w	r8, [pc, #856]	@ 8001e88 <main+0x37c>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001b32:	f042 0210 	orr.w	r2, r2, #16
 8001b36:	631a      	str	r2, [r3, #48]	@ 0x30
 8001b38:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b3a:	f002 0210 	and.w	r2, r2, #16
 8001b3e:	9200      	str	r2, [sp, #0]
 8001b40:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001b42:	9401      	str	r4, [sp, #4]
 8001b44:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b46:	f042 0220 	orr.w	r2, r2, #32
 8001b4a:	631a      	str	r2, [r3, #48]	@ 0x30
 8001b4c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b4e:	f002 0220 	and.w	r2, r2, #32
 8001b52:	9201      	str	r2, [sp, #4]
 8001b54:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001b56:	9402      	str	r4, [sp, #8]
 8001b58:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b5a:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8001b5e:	631a      	str	r2, [r3, #48]	@ 0x30
 8001b60:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b62:	f002 0280 	and.w	r2, r2, #128	@ 0x80
 8001b66:	9202      	str	r2, [sp, #8]
 8001b68:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001b6a:	9403      	str	r4, [sp, #12]
 8001b6c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b6e:	f042 0204 	orr.w	r2, r2, #4
 8001b72:	631a      	str	r2, [r3, #48]	@ 0x30
 8001b74:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b76:	f002 0204 	and.w	r2, r2, #4
 8001b7a:	9203      	str	r2, [sp, #12]
 8001b7c:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001b7e:	9404      	str	r4, [sp, #16]
 8001b80:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b82:	f042 0201 	orr.w	r2, r2, #1
 8001b86:	631a      	str	r2, [r3, #48]	@ 0x30
 8001b88:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b8a:	f002 0201 	and.w	r2, r2, #1
 8001b8e:	9204      	str	r2, [sp, #16]
 8001b90:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001b92:	9405      	str	r4, [sp, #20]
 8001b94:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b96:	f042 0202 	orr.w	r2, r2, #2
 8001b9a:	631a      	str	r2, [r3, #48]	@ 0x30
 8001b9c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001b9e:	f002 0202 	and.w	r2, r2, #2
 8001ba2:	9205      	str	r2, [sp, #20]
 8001ba4:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001ba6:	9406      	str	r4, [sp, #24]
 8001ba8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001baa:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8001bae:	631a      	str	r2, [r3, #48]	@ 0x30
 8001bb0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001bb2:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 8001bb6:	9206      	str	r2, [sp, #24]
 8001bb8:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001bba:	9407      	str	r4, [sp, #28]
 8001bbc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001bbe:	f042 0208 	orr.w	r2, r2, #8
 8001bc2:	631a      	str	r2, [r3, #48]	@ 0x30
 8001bc4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001bc6:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001bca:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001bcc:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001bce:	213c      	movs	r1, #60	@ 0x3c
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001bd0:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001bd2:	f001 fea7 	bl	8003924 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_SET);
 8001bd6:	489e      	ldr	r0, [pc, #632]	@ (8001e50 <main+0x344>)
 8001bd8:	2201      	movs	r2, #1
 8001bda:	2102      	movs	r1, #2
 8001bdc:	f001 fea2 	bl	8003924 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001be0:	4622      	mov	r2, r4
 8001be2:	489b      	ldr	r0, [pc, #620]	@ (8001e50 <main+0x344>)
 8001be4:	2104      	movs	r1, #4
 8001be6:	f001 fe9d 	bl	8003924 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001bea:	4622      	mov	r2, r4
 8001bec:	4899      	ldr	r0, [pc, #612]	@ (8001e54 <main+0x348>)
 8001bee:	f44f 5140 	mov.w	r1, #12288	@ 0x3000
 8001bf2:	f001 fe97 	bl	8003924 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001bf6:	2601      	movs	r6, #1
 8001bf8:	233c      	movs	r3, #60	@ 0x3c
 8001bfa:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001bfe:	4892      	ldr	r0, [pc, #584]	@ (8001e48 <main+0x33c>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001c00:	940f      	str	r4, [sp, #60]	@ 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c02:	2303      	movs	r3, #3
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001c04:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Pin = SPI5_NCS_Pin;
 8001c06:	2702      	movs	r7, #2
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c08:	9310      	str	r3, [sp, #64]	@ 0x40
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001c0a:	f001 fda1 	bl	8003750 <HAL_GPIO_Init>
  HAL_GPIO_Init(SPI5_NCS_GPIO_Port, &GPIO_InitStruct);
 8001c0e:	4890      	ldr	r0, [pc, #576]	@ (8001e50 <main+0x344>)
 8001c10:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001c12:	e9cd 760d 	strd	r7, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001c16:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(SPI5_NCS_GPIO_Port, &GPIO_InitStruct);
 8001c1a:	f001 fd99 	bl	8003750 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001c1e:	2304      	movs	r3, #4
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c20:	488b      	ldr	r0, [pc, #556]	@ (8001e50 <main+0x344>)
 8001c22:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001c24:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001c28:	e9cd 470f 	strd	r4, r7, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c2c:	f001 fd90 	bl	8003750 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001c30:	a90d      	add	r1, sp, #52	@ 0x34
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8001c32:	f44f 5340 	mov.w	r3, #12288	@ 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001c36:	4887      	ldr	r0, [pc, #540]	@ (8001e54 <main+0x348>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001c38:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001c3c:	e9cd 470f 	strd	r4, r7, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001c40:	f001 fd86 	bl	8003750 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8001c44:	4884      	ldr	r0, [pc, #528]	@ (8001e58 <main+0x34c>)
 8001c46:	4b85      	ldr	r3, [pc, #532]	@ (8001e5c <main+0x350>)
 8001c48:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001c4a:	f001 fc77 	bl	800353c <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8001c4e:	f8df e23c 	ldr.w	lr, [pc, #572]	@ 8001e8c <main+0x380>
 8001c52:	4b83      	ldr	r3, [pc, #524]	@ (8001e60 <main+0x354>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001c54:	622c      	str	r4, [r5, #32]
  hi2c3.Init.ClockSpeed = 100000;
 8001c56:	e9c5 e300 	strd	lr, r3, [r5]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001c5a:	4628      	mov	r0, r5
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001c5c:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001c60:	e9c5 3404 	strd	r3, r4, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8001c64:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001c68:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001c6c:	f002 f868 	bl	8003d40 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8001c70:	2110      	movs	r1, #16
 8001c72:	4628      	mov	r0, r5
 8001c74:	f002 faac 	bl	80041d0 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001c78:	4621      	mov	r1, r4
 8001c7a:	4628      	mov	r0, r5
  hspi5.Instance = SPI5;
 8001c7c:	4d79      	ldr	r5, [pc, #484]	@ (8001e64 <main+0x358>)
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001c7e:	f002 fac6 	bl	800420e <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001c82:	f44f 7382 	mov.w	r3, #260	@ 0x104
 8001c86:	e9c5 8300 	strd	r8, r3, [r5]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001c8a:	f44f 7900 	mov.w	r9, #512	@ 0x200
 8001c8e:	2318      	movs	r3, #24
 8001c90:	e9c5 9306 	strd	r9, r3, [r5, #24]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001c94:	4628      	mov	r0, r5
  hspi5.Init.CRCPolynomial = 10;
 8001c96:	230a      	movs	r3, #10
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8001c98:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001c9c:	e9c5 4404 	strd	r4, r4, [r5, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001ca0:	e9c5 4408 	strd	r4, r4, [r5, #32]
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001ca4:	62ac      	str	r4, [r5, #40]	@ 0x28
  hspi5.Init.CRCPolynomial = 10;
 8001ca6:	62eb      	str	r3, [r5, #44]	@ 0x2c
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001ca8:	f003 fe7e 	bl	80059a8 <HAL_SPI_Init>
  const uint8_t READ_ID_CMD = 0x8F; // 0b10001111 = set read bit and register address of WHO_AM_I
 8001cac:	238f      	movs	r3, #143	@ 0x8f
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_RESET);
 8001cae:	4622      	mov	r2, r4
 8001cb0:	4639      	mov	r1, r7
 8001cb2:	4867      	ldr	r0, [pc, #412]	@ (8001e50 <main+0x344>)
  const uint8_t READ_ID_CMD = 0x8F; // 0b10001111 = set read bit and register address of WHO_AM_I
 8001cb4:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
  uint8_t pdata = 0;
 8001cb8:	f88d 4034 	strb.w	r4, [sp, #52]	@ 0x34
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_RESET);
 8001cbc:	f001 fe32 	bl	8003924 <HAL_GPIO_WritePin>
  HAL_SPI_Transmit(&hspi5, &READ_ID_CMD, 1, 1000);
 8001cc0:	4632      	mov	r2, r6
 8001cc2:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001cc6:	a909      	add	r1, sp, #36	@ 0x24
 8001cc8:	4628      	mov	r0, r5
 8001cca:	f003 fec9 	bl	8005a60 <HAL_SPI_Transmit>
  HAL_SPI_Receive(&hspi5, &pdata, 1, 1000);
 8001cce:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001cd2:	4632      	mov	r2, r6
 8001cd4:	a90d      	add	r1, sp, #52	@ 0x34
 8001cd6:	4628      	mov	r0, r5
 8001cd8:	f004 f86e 	bl	8005db8 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_SET);
 8001cdc:	4632      	mov	r2, r6
 8001cde:	4639      	mov	r1, r7
 8001ce0:	485b      	ldr	r0, [pc, #364]	@ (8001e50 <main+0x344>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001ce2:	4d61      	ldr	r5, [pc, #388]	@ (8001e68 <main+0x35c>)
  HAL_GPIO_WritePin(SPI5_NCS_GPIO_Port, SPI5_NCS_Pin, GPIO_PIN_SET);
 8001ce4:	f001 fe1e 	bl	8003924 <HAL_GPIO_WritePin>
  if (pdata == 0xD3) // 0b11010011
 8001ce8:	f89d 3034 	ldrb.w	r3, [sp, #52]	@ 0x34
 8001cec:	2bd3      	cmp	r3, #211	@ 0xd3
    isRevD = 1;
 8001cee:	bf04      	itt	eq
 8001cf0:	4b5e      	ldreq	r3, [pc, #376]	@ (8001e6c <main+0x360>)
 8001cf2:	701e      	strbeq	r6, [r3, #0]
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 8001cf4:	4b5e      	ldr	r3, [pc, #376]	@ (8001e70 <main+0x364>)
 8001cf6:	2601      	movs	r6, #1
 8001cf8:	e9c5 3600 	strd	r3, r6, [r5]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001cfc:	2210      	movs	r2, #16
 8001cfe:	2340      	movs	r3, #64	@ 0x40
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001d00:	2400      	movs	r4, #0
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001d02:	e9c5 2304 	strd	r2, r3, [r5, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8001d06:	f44f 73c0 	mov.w	r3, #384	@ 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001d0a:	e9c5 3406 	strd	r3, r4, [r5, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8001d0e:	f44f 6300 	mov.w	r3, #2048	@ 0x800
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8001d12:	e9c5 3408 	strd	r3, r4, [r5, #32]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001d16:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001d1a:	2702      	movs	r7, #2
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001d1c:	f04f 0904 	mov.w	r9, #4
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001d20:	62ab      	str	r3, [r5, #40]	@ 0x28
  SdramTiming.WriteRecoveryTime = 3;
 8001d22:	f04f 0a03 	mov.w	sl, #3
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001d26:	2307      	movs	r3, #7
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001d28:	a90d      	add	r1, sp, #52	@ 0x34
 8001d2a:	4628      	mov	r0, r5
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001d2c:	e9cd 730d 	strd	r7, r3, [sp, #52]	@ 0x34
  SdramTiming.RowCycleDelay = 7;
 8001d30:	e9cd 930f 	strd	r9, r3, [sp, #60]	@ 0x3c
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001d34:	f04f 0808 	mov.w	r8, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001d38:	e9c5 4902 	strd	r4, r9, [r5, #8]
  SdramTiming.RPDelay = 2;
 8001d3c:	e9cd a711 	strd	sl, r7, [sp, #68]	@ 0x44
  SdramTiming.RCDDelay = 2;
 8001d40:	9713      	str	r7, [sp, #76]	@ 0x4c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001d42:	f003 fd15 	bl	8005770 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001d46:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001d4a:	a909      	add	r1, sp, #36	@ 0x24
 8001d4c:	4628      	mov	r0, r5
  Command->AutoRefreshNumber       = 1;
 8001d4e:	e9cd 860a 	strd	r8, r6, [sp, #40]	@ 0x28
 __IO uint32_t tmpmrd =0;
 8001d52:	9408      	str	r4, [sp, #32]
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 8001d54:	9609      	str	r6, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 8001d56:	940c      	str	r4, [sp, #48]	@ 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001d58:	f003 fd2a 	bl	80057b0 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8001d5c:	4630      	mov	r0, r6
 8001d5e:	f001 fb87 	bl	8003470 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001d62:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001d66:	a909      	add	r1, sp, #36	@ 0x24
 8001d68:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001d6a:	e9cd 7809 	strd	r7, r8, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 8001d6e:	e9cd 640b 	strd	r6, r4, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001d72:	f003 fd1d 	bl	80057b0 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001d76:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001d7a:	a909      	add	r1, sp, #36	@ 0x24
 8001d7c:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001d7e:	e9cd a809 	strd	sl, r8, [sp, #36]	@ 0x24
  Command->ModeRegisterDefinition  = 0;
 8001d82:	e9cd 940b 	strd	r9, r4, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001d86:	f003 fd13 	bl	80057b0 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8001d8a:	f44f 730c 	mov.w	r3, #560	@ 0x230
 8001d8e:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8001d90:	9b08      	ldr	r3, [sp, #32]
 8001d92:	930c      	str	r3, [sp, #48]	@ 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001d94:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001d98:	a909      	add	r1, sp, #36	@ 0x24
 8001d9a:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001d9c:	e9cd 9809 	strd	r9, r8, [sp, #36]	@ 0x24
  Command->AutoRefreshNumber       = 1;
 8001da0:	960b      	str	r6, [sp, #44]	@ 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001da2:	f003 fd05 	bl	80057b0 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8001da6:	f240 516a 	movw	r1, #1386	@ 0x56a
 8001daa:	4628      	mov	r0, r5
 8001dac:	f003 fd1e 	bl	80057ec <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001db0:	2234      	movs	r2, #52	@ 0x34
 8001db2:	eb0d 0002 	add.w	r0, sp, r2
 8001db6:	4621      	mov	r1, r4
 8001db8:	f01f fecd 	bl	8021b56 <memset>
  hltdc.Instance = LTDC;
 8001dbc:	4d2d      	ldr	r5, [pc, #180]	@ (8001e74 <main+0x368>)
 8001dbe:	4b2e      	ldr	r3, [pc, #184]	@ (8001e78 <main+0x36c>)
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8001dc0:	612c      	str	r4, [r5, #16]
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8001dc2:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.HorizontalSync = 9;
 8001dc6:	2309      	movs	r3, #9
  hltdc.Init.VerticalSync = 1;
 8001dc8:	e9c5 3605 	strd	r3, r6, [r5, #20]
  hltdc.Init.AccumulatedHBP = 29;
 8001dcc:	231d      	movs	r3, #29
  hltdc.Init.AccumulatedVBP = 3;
 8001dce:	e9c5 3a07 	strd	r3, sl, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8001dd2:	f240 110d 	movw	r1, #269	@ 0x10d
 8001dd6:	f240 1343 	movw	r3, #323	@ 0x143
 8001dda:	e9c5 1309 	strd	r1, r3, [r5, #36]	@ 0x24
  hltdc.Init.TotalHeigh = 327;
 8001dde:	f240 1017 	movw	r0, #279	@ 0x117
 8001de2:	f240 1347 	movw	r3, #327	@ 0x147
 8001de6:	e9c5 030b 	strd	r0, r3, [r5, #44]	@ 0x2c
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001dea:	4628      	mov	r0, r5
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8001dec:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.Backcolor.Blue = 0;
 8001df0:	86ac      	strh	r4, [r5, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
 8001df2:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001df6:	f002 faa5 	bl	8004344 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8001dfa:	21ff      	movs	r1, #255	@ 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001dfc:	f44f 6c80 	mov.w	ip, #1024	@ 0x400
  pLayerCfg.WindowX1 = 240;
 8001e00:	22f0      	movs	r2, #240	@ 0xf0
  pLayerCfg.Alpha0 = 0;
 8001e02:	e9cd 1412 	strd	r1, r4, [sp, #72]	@ 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001e06:	2105      	movs	r1, #5
 8001e08:	e9cd c114 	strd	ip, r1, [sp, #80]	@ 0x50
  pLayerCfg.WindowY1 = 320;
 8001e0c:	f44f 73a0 	mov.w	r3, #320	@ 0x140
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001e10:	a90d      	add	r1, sp, #52	@ 0x34
  pLayerCfg.WindowY0 = 0;
 8001e12:	e9cd 240e 	strd	r2, r4, [sp, #56]	@ 0x38
  pLayerCfg.ImageWidth = 240;
 8001e16:	e9cd 4216 	strd	r4, r2, [sp, #88]	@ 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001e1a:	4628      	mov	r0, r5
 8001e1c:	4622      	mov	r2, r4
  LcdDrv = &ili9341_drv;
 8001e1e:	4d17      	ldr	r5, [pc, #92]	@ (8001e7c <main+0x370>)
  pLayerCfg.ImageHeight = 320;
 8001e20:	9318      	str	r3, [sp, #96]	@ 0x60
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001e22:	e9cd 3710 	strd	r3, r7, [sp, #64]	@ 0x40
  pLayerCfg.WindowX0 = 0;
 8001e26:	940d      	str	r4, [sp, #52]	@ 0x34
  pLayerCfg.Backcolor.Blue = 0;
 8001e28:	f8ad 4064 	strh.w	r4, [sp, #100]	@ 0x64
  pLayerCfg.Backcolor.Red = 0;
 8001e2c:	f88d 4066 	strb.w	r4, [sp, #102]	@ 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001e30:	f002 fb53 	bl	80044da <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8001e34:	4b12      	ldr	r3, [pc, #72]	@ (8001e80 <main+0x374>)
 8001e36:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 8001e38:	681b      	ldr	r3, [r3, #0]
 8001e3a:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001e3c:	682b      	ldr	r3, [r5, #0]
  hdma2d.Instance = DMA2D;
 8001e3e:	4d11      	ldr	r5, [pc, #68]	@ (8001e84 <main+0x378>)
  LcdDrv->DisplayOff();
 8001e40:	68db      	ldr	r3, [r3, #12]
 8001e42:	e025      	b.n	8001e90 <main+0x384>
 8001e44:	40023800 	.word	0x40023800
 8001e48:	40021000 	.word	0x40021000
 8001e4c:	2000218c 	.word	0x2000218c
 8001e50:	40020800 	.word	0x40020800
 8001e54:	40020c00 	.word	0x40020c00
 8001e58:	20002220 	.word	0x20002220
 8001e5c:	40023000 	.word	0x40023000
 8001e60:	000186a0 	.word	0x000186a0
 8001e64:	2000208c 	.word	0x2000208c
 8001e68:	20002058 	.word	0x20002058
 8001e6c:	2000204c 	.word	0x2000204c
 8001e70:	a0000140 	.word	0xa0000140
 8001e74:	200020e4 	.word	0x200020e4
 8001e78:	40016800 	.word	0x40016800
 8001e7c:	20002048 	.word	0x20002048
 8001e80:	20000064 	.word	0x20000064
 8001e84:	200021e0 	.word	0x200021e0
 8001e88:	40015000 	.word	0x40015000
 8001e8c:	40005c00 	.word	0x40005c00
 8001e90:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 8001e92:	4b13      	ldr	r3, [pc, #76]	@ (8001ee0 <main+0x3d4>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001e94:	4628      	mov	r0, r5
  hdma2d.Init.Mode = DMA2D_M2M;
 8001e96:	e9c5 3400 	strd	r3, r4, [r5]
  hdma2d.Init.OutputOffset = 0;
 8001e9a:	e9c5 7402 	strd	r7, r4, [r5, #8]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 8001e9e:	e9c5 470a 	strd	r4, r7, [r5, #40]	@ 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001ea2:	e9c5 440c 	strd	r4, r4, [r5, #48]	@ 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001ea6:	f001 fb59 	bl	800355c <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001eaa:	4631      	mov	r1, r6
 8001eac:	4628      	mov	r0, r5
 8001eae:	f001 fc0b 	bl	80036c8 <HAL_DMA2D_ConfigLayer>
  MX_TouchGFX_Init();
 8001eb2:	f7fe fc05 	bl	80006c0 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 8001eb6:	f7fe fc02 	bl	80006be <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
 8001eba:	f004 ff39 	bl	8006d30 <osKernelInitialize>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001ebe:	4a09      	ldr	r2, [pc, #36]	@ (8001ee4 <main+0x3d8>)
 8001ec0:	4809      	ldr	r0, [pc, #36]	@ (8001ee8 <main+0x3dc>)
 8001ec2:	4621      	mov	r1, r4
 8001ec4:	f004 ff60 	bl	8006d88 <osThreadNew>
 8001ec8:	4b08      	ldr	r3, [pc, #32]	@ (8001eec <main+0x3e0>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001eca:	4a09      	ldr	r2, [pc, #36]	@ (8001ef0 <main+0x3e4>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001ecc:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001ece:	4621      	mov	r1, r4
 8001ed0:	4808      	ldr	r0, [pc, #32]	@ (8001ef4 <main+0x3e8>)
 8001ed2:	f004 ff59 	bl	8006d88 <osThreadNew>
 8001ed6:	4b08      	ldr	r3, [pc, #32]	@ (8001ef8 <main+0x3ec>)
 8001ed8:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001eda:	f004 ff3b 	bl	8006d54 <osKernelStart>
  while (1)
 8001ede:	e7fe      	b.n	8001ede <main+0x3d2>
 8001ee0:	4002b000 	.word	0x4002b000
 8001ee4:	08023570 	.word	0x08023570
 8001ee8:	08001a65 	.word	0x08001a65
 8001eec:	20002054 	.word	0x20002054
 8001ef0:	0802354c 	.word	0x0802354c
 8001ef4:	080006cf 	.word	0x080006cf
 8001ef8:	20002050 	.word	0x20002050

08001efc <IOE_Init>:
void IOE_Init(void)
 8001efc:	4770      	bx	lr

08001efe <IOE_ITConfig>:
void IOE_ITConfig(void)
 8001efe:	4770      	bx	lr

08001f00 <IOE_Write>:
{
 8001f00:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001f02:	4b09      	ldr	r3, [pc, #36]	@ (8001f28 <IOE_Write+0x28>)
 8001f04:	f88d 2017 	strb.w	r2, [sp, #23]
 8001f08:	681b      	ldr	r3, [r3, #0]
 8001f0a:	9302      	str	r3, [sp, #8]
 8001f0c:	f10d 0217 	add.w	r2, sp, #23
 8001f10:	2301      	movs	r3, #1
 8001f12:	9200      	str	r2, [sp, #0]
 8001f14:	9301      	str	r3, [sp, #4]
 8001f16:	460a      	mov	r2, r1
 8001f18:	4601      	mov	r1, r0
 8001f1a:	4804      	ldr	r0, [pc, #16]	@ (8001f2c <IOE_Write+0x2c>)
 8001f1c:	f001 ffb8 	bl	8003e90 <HAL_I2C_Mem_Write>
}
 8001f20:	b007      	add	sp, #28
 8001f22:	f85d fb04 	ldr.w	pc, [sp], #4
 8001f26:	bf00      	nop
 8001f28:	20000060 	.word	0x20000060
 8001f2c:	2000218c 	.word	0x2000218c

08001f30 <IOE_Read>:
{
 8001f30:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 8001f32:	2300      	movs	r3, #0
 8001f34:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001f38:	4b08      	ldr	r3, [pc, #32]	@ (8001f5c <IOE_Read+0x2c>)
 8001f3a:	681b      	ldr	r3, [r3, #0]
 8001f3c:	9302      	str	r3, [sp, #8]
{
 8001f3e:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001f40:	2301      	movs	r3, #1
 8001f42:	f10d 0117 	add.w	r1, sp, #23
 8001f46:	9100      	str	r1, [sp, #0]
 8001f48:	9301      	str	r3, [sp, #4]
 8001f4a:	4601      	mov	r1, r0
 8001f4c:	4804      	ldr	r0, [pc, #16]	@ (8001f60 <IOE_Read+0x30>)
 8001f4e:	f002 f82f 	bl	8003fb0 <HAL_I2C_Mem_Read>
}
 8001f52:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8001f56:	b007      	add	sp, #28
 8001f58:	f85d fb04 	ldr.w	pc, [sp], #4
 8001f5c:	20000060 	.word	0x20000060
 8001f60:	2000218c 	.word	0x2000218c

08001f64 <IOE_ReadMultiple>:
{
 8001f64:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001f66:	4c08      	ldr	r4, [pc, #32]	@ (8001f88 <IOE_ReadMultiple+0x24>)
 8001f68:	6824      	ldr	r4, [r4, #0]
 8001f6a:	9200      	str	r2, [sp, #0]
 8001f6c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8001f70:	460a      	mov	r2, r1
 8001f72:	2301      	movs	r3, #1
 8001f74:	4601      	mov	r1, r0
 8001f76:	4805      	ldr	r0, [pc, #20]	@ (8001f8c <IOE_ReadMultiple+0x28>)
 8001f78:	f002 f81a 	bl	8003fb0 <HAL_I2C_Mem_Read>
}
 8001f7c:	3800      	subs	r0, #0
 8001f7e:	bf18      	it	ne
 8001f80:	2001      	movne	r0, #1
 8001f82:	b004      	add	sp, #16
 8001f84:	bd10      	pop	{r4, pc}
 8001f86:	bf00      	nop
 8001f88:	20000060 	.word	0x20000060
 8001f8c:	2000218c 	.word	0x2000218c

08001f90 <IOE_Delay>:
void IOE_Delay(uint32_t Delay)
 8001f90:	f001 ba6e 	b.w	8003470 <HAL_Delay>

08001f94 <LCD_IO_Init>:
{
 8001f94:	b510      	push	{r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001f96:	4c06      	ldr	r4, [pc, #24]	@ (8001fb0 <LCD_IO_Init+0x1c>)
 8001f98:	2200      	movs	r2, #0
 8001f9a:	4620      	mov	r0, r4
 8001f9c:	2104      	movs	r1, #4
 8001f9e:	f001 fcc1 	bl	8003924 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001fa2:	4620      	mov	r0, r4
 8001fa4:	2201      	movs	r2, #1
}
 8001fa6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001faa:	2104      	movs	r1, #4
 8001fac:	f001 bcba 	b.w	8003924 <HAL_GPIO_WritePin>
 8001fb0:	40020800 	.word	0x40020800

08001fb4 <LCD_IO_WriteData>:
{
 8001fb4:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001fb6:	4d0b      	ldr	r5, [pc, #44]	@ (8001fe4 <LCD_IO_WriteData+0x30>)
{
 8001fb8:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001fba:	2201      	movs	r2, #1
 8001fbc:	480a      	ldr	r0, [pc, #40]	@ (8001fe8 <LCD_IO_WriteData+0x34>)
 8001fbe:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001fc2:	f001 fcaf 	bl	8003924 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001fc6:	2200      	movs	r2, #0
 8001fc8:	2104      	movs	r1, #4
 8001fca:	4628      	mov	r0, r5
 8001fcc:	f001 fcaa 	bl	8003924 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8001fd0:	4620      	mov	r0, r4
 8001fd2:	f7ff fd35 	bl	8001a40 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001fd6:	4628      	mov	r0, r5
 8001fd8:	2201      	movs	r2, #1
}
 8001fda:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001fde:	2104      	movs	r1, #4
 8001fe0:	f001 bca0 	b.w	8003924 <HAL_GPIO_WritePin>
 8001fe4:	40020800 	.word	0x40020800
 8001fe8:	40020c00 	.word	0x40020c00

08001fec <LCD_IO_WriteReg>:
{
 8001fec:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001fee:	4d0b      	ldr	r5, [pc, #44]	@ (800201c <LCD_IO_WriteReg+0x30>)
{
 8001ff0:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001ff2:	2200      	movs	r2, #0
 8001ff4:	480a      	ldr	r0, [pc, #40]	@ (8002020 <LCD_IO_WriteReg+0x34>)
 8001ff6:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001ffa:	f001 fc93 	bl	8003924 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001ffe:	2200      	movs	r2, #0
 8002000:	2104      	movs	r1, #4
 8002002:	4628      	mov	r0, r5
 8002004:	f001 fc8e 	bl	8003924 <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 8002008:	4620      	mov	r0, r4
 800200a:	f7ff fd19 	bl	8001a40 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800200e:	4628      	mov	r0, r5
 8002010:	2201      	movs	r2, #1
}
 8002012:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002016:	2104      	movs	r1, #4
 8002018:	f001 bc84 	b.w	8003924 <HAL_GPIO_WritePin>
 800201c:	40020800 	.word	0x40020800
 8002020:	40020c00 	.word	0x40020c00

08002024 <LCD_IO_ReadData>:
{
 8002024:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002026:	4e14      	ldr	r6, [pc, #80]	@ (8002078 <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8002028:	4f14      	ldr	r7, [pc, #80]	@ (800207c <LCD_IO_ReadData+0x58>)
{
 800202a:	4605      	mov	r5, r0
 800202c:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800202e:	4630      	mov	r0, r6
 8002030:	2200      	movs	r2, #0
 8002032:	2104      	movs	r1, #4
 8002034:	f001 fc76 	bl	8003924 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8002038:	2200      	movs	r2, #0
 800203a:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 800203e:	4638      	mov	r0, r7
 8002040:	f001 fc70 	bl	8003924 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8002044:	4628      	mov	r0, r5
 8002046:	f7ff fcfb 	bl	8001a40 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 800204a:	4b0d      	ldr	r3, [pc, #52]	@ (8002080 <LCD_IO_ReadData+0x5c>)
 800204c:	480d      	ldr	r0, [pc, #52]	@ (8002084 <LCD_IO_ReadData+0x60>)
 800204e:	681b      	ldr	r3, [r3, #0]
 8002050:	4622      	mov	r2, r4
 8002052:	a901      	add	r1, sp, #4
 8002054:	f003 feb0 	bl	8005db8 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8002058:	4638      	mov	r0, r7
 800205a:	2201      	movs	r2, #1
 800205c:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
  return readvalue;
 8002060:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8002062:	f001 fc5f 	bl	8003924 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002066:	4630      	mov	r0, r6
 8002068:	2201      	movs	r2, #1
 800206a:	2104      	movs	r1, #4
 800206c:	f001 fc5a 	bl	8003924 <HAL_GPIO_WritePin>
}
 8002070:	4620      	mov	r0, r4
 8002072:	b003      	add	sp, #12
 8002074:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002076:	bf00      	nop
 8002078:	40020800 	.word	0x40020800
 800207c:	40020c00 	.word	0x40020c00
 8002080:	2000005c 	.word	0x2000005c
 8002084:	2000208c 	.word	0x2000208c

08002088 <LCD_Delay>:
  HAL_Delay(Delay);
 8002088:	f001 b9f2 	b.w	8003470 <HAL_Delay>

0800208c <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6)
 800208c:	6802      	ldr	r2, [r0, #0]
 800208e:	4b03      	ldr	r3, [pc, #12]	@ (800209c <HAL_TIM_PeriodElapsedCallback+0x10>)
 8002090:	429a      	cmp	r2, r3
 8002092:	d101      	bne.n	8002098 <HAL_TIM_PeriodElapsedCallback+0xc>
  {
    HAL_IncTick();
 8002094:	f001 b9da 	b.w	800344c <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8002098:	4770      	bx	lr
 800209a:	bf00      	nop
 800209c:	40001000 	.word	0x40001000

080020a0 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 80020a0:	4770      	bx	lr
	...

080020a4 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80020a4:	b082      	sub	sp, #8

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80020a6:	4b0e      	ldr	r3, [pc, #56]	@ (80020e0 <HAL_MspInit+0x3c>)
 80020a8:	2200      	movs	r2, #0
 80020aa:	9200      	str	r2, [sp, #0]
 80020ac:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 80020ae:	f441 4180 	orr.w	r1, r1, #16384	@ 0x4000
 80020b2:	6459      	str	r1, [r3, #68]	@ 0x44
 80020b4:	6c59      	ldr	r1, [r3, #68]	@ 0x44
 80020b6:	f401 4180 	and.w	r1, r1, #16384	@ 0x4000
 80020ba:	9100      	str	r1, [sp, #0]
 80020bc:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80020be:	9201      	str	r2, [sp, #4]
 80020c0:	6c19      	ldr	r1, [r3, #64]	@ 0x40
 80020c2:	f041 5180 	orr.w	r1, r1, #268435456	@ 0x10000000
 80020c6:	6419      	str	r1, [r3, #64]	@ 0x40
 80020c8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80020ca:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80020ce:	9301      	str	r3, [sp, #4]
 80020d0:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80020d2:	210f      	movs	r1, #15
 80020d4:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80020d8:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80020da:	f001 b9ef 	b.w	80034bc <HAL_NVIC_SetPriority>
 80020de:	bf00      	nop
 80020e0:	40023800 	.word	0x40023800

080020e4 <HAL_CRC_MspInit>:
  * @param hcrc: CRC handle pointer
  * @retval None
  */
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 80020e4:	6802      	ldr	r2, [r0, #0]
 80020e6:	4b09      	ldr	r3, [pc, #36]	@ (800210c <HAL_CRC_MspInit+0x28>)
 80020e8:	429a      	cmp	r2, r3
{
 80020ea:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 80020ec:	d10b      	bne.n	8002106 <HAL_CRC_MspInit+0x22>
  {
    /* USER CODE BEGIN CRC_MspInit 0 */

    /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 80020ee:	2300      	movs	r3, #0
 80020f0:	9301      	str	r3, [sp, #4]
 80020f2:	4b07      	ldr	r3, [pc, #28]	@ (8002110 <HAL_CRC_MspInit+0x2c>)
 80020f4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80020f6:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 80020fa:	631a      	str	r2, [r3, #48]	@ 0x30
 80020fc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80020fe:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8002102:	9301      	str	r3, [sp, #4]
 8002104:	9b01      	ldr	r3, [sp, #4]

    /* USER CODE END CRC_MspInit 1 */

  }

}
 8002106:	b002      	add	sp, #8
 8002108:	4770      	bx	lr
 800210a:	bf00      	nop
 800210c:	40023000 	.word	0x40023000
 8002110:	40023800 	.word	0x40023800

08002114 <HAL_DMA2D_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hdma2d: DMA2D handle pointer
  * @retval None
  */
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8002114:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8002116:	4b0f      	ldr	r3, [pc, #60]	@ (8002154 <HAL_DMA2D_MspInit+0x40>)
 8002118:	6802      	ldr	r2, [r0, #0]
 800211a:	429a      	cmp	r2, r3
 800211c:	d116      	bne.n	800214c <HAL_DMA2D_MspInit+0x38>
  {
    /* USER CODE BEGIN DMA2D_MspInit 0 */

    /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800211e:	2200      	movs	r2, #0
 8002120:	f5a3 43f0 	sub.w	r3, r3, #30720	@ 0x7800
 8002124:	9201      	str	r2, [sp, #4]
 8002126:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8002128:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 800212c:	6319      	str	r1, [r3, #48]	@ 0x30
 800212e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002130:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8002134:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8002136:	2105      	movs	r1, #5
 8002138:	205a      	movs	r0, #90	@ 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800213a:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 800213c:	f001 f9be 	bl	80034bc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8002140:	205a      	movs	r0, #90	@ 0x5a

    /* USER CODE END DMA2D_MspInit 1 */

  }

}
 8002142:	b003      	add	sp, #12
 8002144:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8002148:	f001 b9ea 	b.w	8003520 <HAL_NVIC_EnableIRQ>
}
 800214c:	b003      	add	sp, #12
 800214e:	f85d fb04 	ldr.w	pc, [sp], #4
 8002152:	bf00      	nop
 8002154:	4002b000 	.word	0x4002b000

08002158 <HAL_I2C_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hi2c: I2C handle pointer
  * @retval None
  */
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8002158:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800215c:	4604      	mov	r4, r0
 800215e:	b089      	sub	sp, #36	@ 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002160:	2214      	movs	r2, #20
 8002162:	2100      	movs	r1, #0
 8002164:	a803      	add	r0, sp, #12
 8002166:	f01f fcf6 	bl	8021b56 <memset>
  if(hi2c->Instance==I2C3)
 800216a:	6822      	ldr	r2, [r4, #0]
 800216c:	4b24      	ldr	r3, [pc, #144]	@ (8002200 <HAL_I2C_MspInit+0xa8>)
 800216e:	429a      	cmp	r2, r3
 8002170:	d143      	bne.n	80021fa <HAL_I2C_MspInit+0xa2>
  {
    /* USER CODE BEGIN I2C3_MspInit 0 */

    /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002172:	4c24      	ldr	r4, [pc, #144]	@ (8002204 <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002174:	4824      	ldr	r0, [pc, #144]	@ (8002208 <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002176:	2500      	movs	r5, #0
 8002178:	9500      	str	r5, [sp, #0]
 800217a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 800217c:	f043 0304 	orr.w	r3, r3, #4
 8002180:	6323      	str	r3, [r4, #48]	@ 0x30
 8002182:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8002184:	f003 0304 	and.w	r3, r3, #4
 8002188:	9300      	str	r3, [sp, #0]
 800218a:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800218c:	9501      	str	r5, [sp, #4]
 800218e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8002190:	f043 0301 	orr.w	r3, r3, #1
 8002194:	6323      	str	r3, [r4, #48]	@ 0x30
 8002196:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8002198:	f003 0301 	and.w	r3, r3, #1
 800219c:	9301      	str	r3, [sp, #4]
 800219e:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80021a0:	f04f 0912 	mov.w	r9, #18
 80021a4:	f44f 7300 	mov.w	r3, #512	@ 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80021a8:	f04f 0801 	mov.w	r8, #1
 80021ac:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80021ae:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80021b0:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80021b2:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80021b6:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80021ba:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80021bc:	f001 fac8 	bl	8003750 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 80021c0:	f44f 7380 	mov.w	r3, #256	@ 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80021c4:	4811      	ldr	r0, [pc, #68]	@ (800220c <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80021c6:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80021c8:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80021ca:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80021ce:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80021d2:	f001 fabd 	bl	8003750 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 80021d6:	9502      	str	r5, [sp, #8]
 80021d8:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80021da:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 80021de:	6423      	str	r3, [r4, #64]	@ 0x40
 80021e0:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80021e2:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 80021e6:	9302      	str	r3, [sp, #8]
 80021e8:	9b02      	ldr	r3, [sp, #8]
    /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 80021ea:	6a23      	ldr	r3, [r4, #32]
 80021ec:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 80021f0:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 80021f2:	6a23      	ldr	r3, [r4, #32]
 80021f4:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 80021f8:	6223      	str	r3, [r4, #32]
    /* USER CODE END I2C3_MspInit 1 */

  }

}
 80021fa:	b009      	add	sp, #36	@ 0x24
 80021fc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002200:	40005c00 	.word	0x40005c00
 8002204:	40023800 	.word	0x40023800
 8002208:	40020800 	.word	0x40020800
 800220c:	40020000 	.word	0x40020000

08002210 <HAL_LTDC_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hltdc: LTDC handle pointer
  * @retval None
  */
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8002210:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002212:	b099      	sub	sp, #100	@ 0x64
 8002214:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002216:	2214      	movs	r2, #20
 8002218:	2100      	movs	r1, #0
 800221a:	a807      	add	r0, sp, #28
 800221c:	f01f fc9b 	bl	8021b56 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8002220:	2230      	movs	r2, #48	@ 0x30
 8002222:	eb0d 0002 	add.w	r0, sp, r2
 8002226:	2100      	movs	r1, #0
 8002228:	f01f fc95 	bl	8021b56 <memset>
  if(hltdc->Instance==LTDC)
 800222c:	6822      	ldr	r2, [r4, #0]
 800222e:	4b5d      	ldr	r3, [pc, #372]	@ (80023a4 <HAL_LTDC_MspInit+0x194>)
 8002230:	429a      	cmp	r2, r3
 8002232:	f040 80b4 	bne.w	800239e <HAL_LTDC_MspInit+0x18e>

    /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8002236:	2308      	movs	r3, #8
 8002238:	930c      	str	r3, [sp, #48]	@ 0x30
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 50;
 800223a:	2332      	movs	r3, #50	@ 0x32
 800223c:	9310      	str	r3, [sp, #64]	@ 0x40
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 2;
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800223e:	a80c      	add	r0, sp, #48	@ 0x30
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 2;
 8002240:	2302      	movs	r3, #2
 8002242:	9312      	str	r3, [sp, #72]	@ 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8002244:	f003 f968 	bl	8005518 <HAL_RCCEx_PeriphCLKConfig>
 8002248:	b108      	cbz	r0, 800224e <HAL_LTDC_MspInit+0x3e>
    {
      Error_Handler();
 800224a:	f7ff ff29 	bl	80020a0 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 800224e:	4b56      	ldr	r3, [pc, #344]	@ (80023a8 <HAL_LTDC_MspInit+0x198>)
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002250:	4856      	ldr	r0, [pc, #344]	@ (80023ac <HAL_LTDC_MspInit+0x19c>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8002252:	2400      	movs	r4, #0
 8002254:	9400      	str	r4, [sp, #0]
 8002256:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8002258:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 800225c:	645a      	str	r2, [r3, #68]	@ 0x44
 800225e:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8002260:	f002 6280 	and.w	r2, r2, #67108864	@ 0x4000000
 8002264:	9200      	str	r2, [sp, #0]
 8002266:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002268:	9401      	str	r4, [sp, #4]
 800226a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800226c:	f042 0220 	orr.w	r2, r2, #32
 8002270:	631a      	str	r2, [r3, #48]	@ 0x30
 8002272:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002274:	f002 0220 	and.w	r2, r2, #32
 8002278:	9201      	str	r2, [sp, #4]
 800227a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800227c:	9402      	str	r4, [sp, #8]
 800227e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002280:	f042 0201 	orr.w	r2, r2, #1
 8002284:	631a      	str	r2, [r3, #48]	@ 0x30
 8002286:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002288:	f002 0201 	and.w	r2, r2, #1
 800228c:	9202      	str	r2, [sp, #8]
 800228e:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002290:	9403      	str	r4, [sp, #12]
 8002292:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8002294:	f042 0202 	orr.w	r2, r2, #2
 8002298:	631a      	str	r2, [r3, #48]	@ 0x30
 800229a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800229c:	f002 0202 	and.w	r2, r2, #2
 80022a0:	9203      	str	r2, [sp, #12]
 80022a2:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 80022a4:	9404      	str	r4, [sp, #16]
 80022a6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80022a8:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80022ac:	631a      	str	r2, [r3, #48]	@ 0x30
 80022ae:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80022b0:	f002 0240 	and.w	r2, r2, #64	@ 0x40
 80022b4:	9204      	str	r2, [sp, #16]
 80022b6:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80022b8:	9405      	str	r4, [sp, #20]
 80022ba:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80022bc:	f042 0204 	orr.w	r2, r2, #4
 80022c0:	631a      	str	r2, [r3, #48]	@ 0x30
 80022c2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80022c4:	f002 0204 	and.w	r2, r2, #4
 80022c8:	9205      	str	r2, [sp, #20]
 80022ca:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80022cc:	9406      	str	r4, [sp, #24]
 80022ce:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80022d0:	f042 0208 	orr.w	r2, r2, #8
 80022d4:	631a      	str	r2, [r3, #48]	@ 0x30
 80022d6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80022d8:	f003 0308 	and.w	r3, r3, #8
 80022dc:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80022de:	2502      	movs	r5, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80022e0:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80022e2:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80022e4:	960b      	str	r6, [sp, #44]	@ 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80022e6:	f44f 6380 	mov.w	r3, #1024	@ 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80022ea:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80022ec:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80022f0:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80022f4:	f001 fa2c 	bl	8003750 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 80022f8:	f641 0358 	movw	r3, #6232	@ 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80022fc:	482c      	ldr	r0, [pc, #176]	@ (80023b0 <HAL_LTDC_MspInit+0x1a0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80022fe:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002300:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002302:	e9cd 3507 	strd	r3, r5, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002306:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002308:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800230c:	f001 fa20 	bl	8003750 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002310:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002312:	4828      	ldr	r0, [pc, #160]	@ (80023b4 <HAL_LTDC_MspInit+0x1a4>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002314:	970b      	str	r7, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002316:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002318:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800231c:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002320:	f001 fa16 	bl	8003750 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8002324:	f44f 6370 	mov.w	r3, #3840	@ 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002328:	4822      	ldr	r0, [pc, #136]	@ (80023b4 <HAL_LTDC_MspInit+0x1a4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800232a:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800232c:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800232e:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002332:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002336:	f001 fa0b 	bl	8003750 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 800233a:	f44f 630c 	mov.w	r3, #2240	@ 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800233e:	481e      	ldr	r0, [pc, #120]	@ (80023b8 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002340:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002342:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002344:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002348:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800234c:	f001 fa00 	bl	8003750 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8002350:	23c0      	movs	r3, #192	@ 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002352:	481a      	ldr	r0, [pc, #104]	@ (80023bc <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002354:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002356:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002358:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800235c:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002360:	f001 f9f6 	bl	8003750 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8002364:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002366:	4816      	ldr	r0, [pc, #88]	@ (80023c0 <HAL_LTDC_MspInit+0x1b0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002368:	960b      	str	r6, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800236a:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800236c:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002370:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002374:	f001 f9ec 	bl	8003750 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8002378:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800237c:	480e      	ldr	r0, [pc, #56]	@ (80023b8 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800237e:	970b      	str	r7, [sp, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002380:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002382:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002386:	e9cd 4509 	strd	r4, r5, [sp, #36]	@ 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800238a:	f001 f9e1 	bl	8003750 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 800238e:	2058      	movs	r0, #88	@ 0x58
 8002390:	4622      	mov	r2, r4
 8002392:	2105      	movs	r1, #5
 8002394:	f001 f892 	bl	80034bc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8002398:	2058      	movs	r0, #88	@ 0x58
 800239a:	f001 f8c1 	bl	8003520 <HAL_NVIC_EnableIRQ>

    /* USER CODE END LTDC_MspInit 1 */

  }

}
 800239e:	b019      	add	sp, #100	@ 0x64
 80023a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80023a2:	bf00      	nop
 80023a4:	40016800 	.word	0x40016800
 80023a8:	40023800 	.word	0x40023800
 80023ac:	40021400 	.word	0x40021400
 80023b0:	40020000 	.word	0x40020000
 80023b4:	40020400 	.word	0x40020400
 80023b8:	40021800 	.word	0x40021800
 80023bc:	40020800 	.word	0x40020800
 80023c0:	40020c00 	.word	0x40020c00

080023c4 <HAL_SPI_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hspi: SPI handle pointer
  * @retval None
  */
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 80023c4:	b510      	push	{r4, lr}
 80023c6:	4604      	mov	r4, r0
 80023c8:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80023ca:	2214      	movs	r2, #20
 80023cc:	2100      	movs	r1, #0
 80023ce:	a803      	add	r0, sp, #12
 80023d0:	f01f fbc1 	bl	8021b56 <memset>
  if(hspi->Instance==SPI5)
 80023d4:	6822      	ldr	r2, [r4, #0]
 80023d6:	4b14      	ldr	r3, [pc, #80]	@ (8002428 <HAL_SPI_MspInit+0x64>)
 80023d8:	429a      	cmp	r2, r3
 80023da:	d123      	bne.n	8002424 <HAL_SPI_MspInit+0x60>
  {
    /* USER CODE BEGIN SPI5_MspInit 0 */

    /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 80023dc:	f503 4368 	add.w	r3, r3, #59392	@ 0xe800
 80023e0:	2100      	movs	r1, #0
 80023e2:	9101      	str	r1, [sp, #4]
 80023e4:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80023e6:	4811      	ldr	r0, [pc, #68]	@ (800242c <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 80023e8:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 80023ec:	645a      	str	r2, [r3, #68]	@ 0x44
 80023ee:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80023f0:	f402 1280 	and.w	r2, r2, #1048576	@ 0x100000
 80023f4:	9201      	str	r2, [sp, #4]
 80023f6:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80023f8:	9102      	str	r1, [sp, #8]
 80023fa:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80023fc:	f042 0220 	orr.w	r2, r2, #32
 8002400:	631a      	str	r2, [r3, #48]	@ 0x30
 8002402:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002404:	f003 0320 	and.w	r3, r3, #32
 8002408:	9302      	str	r3, [sp, #8]
 800240a:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800240c:	f44f 7260 	mov.w	r2, #896	@ 0x380
 8002410:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002412:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002414:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002418:	2305      	movs	r3, #5
 800241a:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800241e:	a903      	add	r1, sp, #12
 8002420:	f001 f996 	bl	8003750 <HAL_GPIO_Init>

    /* USER CODE END SPI5_MspInit 1 */

  }

}
 8002424:	b008      	add	sp, #32
 8002426:	bd10      	pop	{r4, pc}
 8002428:	40015000 	.word	0x40015000
 800242c:	40021400 	.word	0x40021400

08002430 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002430:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002434:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8002436:	2300      	movs	r3, #0
 8002438:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 800243a:	4b2b      	ldr	r3, [pc, #172]	@ (80024e8 <HAL_SDRAM_MspInit+0xb8>)
 800243c:	681c      	ldr	r4, [r3, #0]
 800243e:	2c00      	cmp	r4, #0
 8002440:	d14f      	bne.n	80024e2 <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 8002442:	f04f 0801 	mov.w	r8, #1
 8002446:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 800244a:	4b28      	ldr	r3, [pc, #160]	@ (80024ec <HAL_SDRAM_MspInit+0xbc>)
 800244c:	9400      	str	r4, [sp, #0]
 800244e:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002450:	4827      	ldr	r0, [pc, #156]	@ (80024f0 <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8002452:	ea42 0208 	orr.w	r2, r2, r8
 8002456:	639a      	str	r2, [r3, #56]	@ 0x38
 8002458:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800245a:	ea03 0308 	and.w	r3, r3, r8
 800245e:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002460:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002462:	2603      	movs	r6, #3
 8002464:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8002466:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002468:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800246a:	f64f 033f 	movw	r3, #63551	@ 0xf83f
 800246e:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002472:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002476:	f001 f96b 	bl	8003750 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800247a:	481e      	ldr	r0, [pc, #120]	@ (80024f4 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800247c:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800247e:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002480:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002484:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002488:	f001 f962 	bl	8003750 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 800248c:	f248 1333 	movw	r3, #33075	@ 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002490:	4819      	ldr	r0, [pc, #100]	@ (80024f8 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002492:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002494:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002496:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800249a:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800249e:	f001 f957 	bl	8003750 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 80024a2:	f64f 7383 	movw	r3, #65411	@ 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80024a6:	4815      	ldr	r0, [pc, #84]	@ (80024fc <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80024a8:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80024aa:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80024ac:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80024b0:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80024b4:	f001 f94c 	bl	8003750 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 80024b8:	f24c 7303 	movw	r3, #50947	@ 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80024bc:	4810      	ldr	r0, [pc, #64]	@ (8002500 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80024be:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80024c0:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80024c2:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80024c6:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80024ca:	f001 f941 	bl	8003750 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 80024ce:	2360      	movs	r3, #96	@ 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80024d0:	480c      	ldr	r0, [pc, #48]	@ (8002504 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80024d2:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80024d4:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80024d6:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80024da:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80024de:	f001 f937 	bl	8003750 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 80024e2:	b006      	add	sp, #24
 80024e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80024e8:	20002228 	.word	0x20002228
 80024ec:	40023800 	.word	0x40023800
 80024f0:	40021400 	.word	0x40021400
 80024f4:	40020800 	.word	0x40020800
 80024f8:	40021800 	.word	0x40021800
 80024fc:	40021000 	.word	0x40021000
 8002500:	40020c00 	.word	0x40020c00
 8002504:	40020400 	.word	0x40020400

08002508 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002508:	b570      	push	{r4, r5, r6, lr}
 800250a:	b088      	sub	sp, #32
  uint32_t              pFLatency;

  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 800250c:	2300      	movs	r3, #0
 800250e:	9302      	str	r3, [sp, #8]
 8002510:	4b20      	ldr	r3, [pc, #128]	@ (8002594 <HAL_InitTick+0x8c>)
 8002512:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8002514:	f042 0210 	orr.w	r2, r2, #16
 8002518:	641a      	str	r2, [r3, #64]	@ 0x40
 800251a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800251c:	f003 0310 	and.w	r3, r3, #16
 8002520:	9302      	str	r3, [sp, #8]
{
 8002522:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002524:	a901      	add	r1, sp, #4
 8002526:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002528:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 800252a:	f002 ffd7 	bl	80054dc <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 800252e:	9b06      	ldr	r3, [sp, #24]
 8002530:	bb4b      	cbnz	r3, 8002586 <HAL_InitTick+0x7e>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8002532:	f002 ffc3 	bl	80054bc <HAL_RCC_GetPCLK1Freq>

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8002536:	4e18      	ldr	r6, [pc, #96]	@ (8002598 <HAL_InitTick+0x90>)
 8002538:	4b18      	ldr	r3, [pc, #96]	@ (800259c <HAL_InitTick+0x94>)
 800253a:	6033      	str	r3, [r6, #0]
   * Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
   * Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
   * ClockDivision = 0
   * Counter direction = Up
   */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 800253c:	f240 33e7 	movw	r3, #999	@ 0x3e7
 8002540:	60f3      	str	r3, [r6, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8002542:	4b17      	ldr	r3, [pc, #92]	@ (80025a0 <HAL_InitTick+0x98>)
 8002544:	fbb0 f3f3 	udiv	r3, r0, r3
 8002548:	3b01      	subs	r3, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 800254a:	6073      	str	r3, [r6, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 800254c:	4630      	mov	r0, r6
  htim6.Init.ClockDivision = 0;
 800254e:	2300      	movs	r3, #0
 8002550:	6133      	str	r3, [r6, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002552:	60b3      	str	r3, [r6, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002554:	61b3      	str	r3, [r6, #24]
  status = HAL_TIM_Base_Init(&htim6);
 8002556:	f003 fdff 	bl	8006158 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 800255a:	4604      	mov	r4, r0
 800255c:	b980      	cbnz	r0, 8002580 <HAL_InitTick+0x78>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim6);
 800255e:	4630      	mov	r0, r6
 8002560:	f003 fcd0 	bl	8005f04 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8002564:	4604      	mov	r4, r0
 8002566:	b958      	cbnz	r0, 8002580 <HAL_InitTick+0x78>
    {
    /* Enable the TIM6 global Interrupt */
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8002568:	2036      	movs	r0, #54	@ 0x36
 800256a:	f000 ffd9 	bl	8003520 <HAL_NVIC_EnableIRQ>
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 800256e:	2d0f      	cmp	r5, #15
 8002570:	d80d      	bhi.n	800258e <HAL_InitTick+0x86>
      {
        /* Configure the TIM IRQ priority */
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 8002572:	4622      	mov	r2, r4
 8002574:	4629      	mov	r1, r5
 8002576:	2036      	movs	r0, #54	@ 0x36
 8002578:	f000 ffa0 	bl	80034bc <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 800257c:	4b09      	ldr	r3, [pc, #36]	@ (80025a4 <HAL_InitTick+0x9c>)
 800257e:	601d      	str	r5, [r3, #0]
    }
  }

 /* Return function status */
  return status;
}
 8002580:	4620      	mov	r0, r4
 8002582:	b008      	add	sp, #32
 8002584:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8002586:	f002 ff99 	bl	80054bc <HAL_RCC_GetPCLK1Freq>
 800258a:	0040      	lsls	r0, r0, #1
 800258c:	e7d3      	b.n	8002536 <HAL_InitTick+0x2e>
        status = HAL_ERROR;
 800258e:	2401      	movs	r4, #1
 8002590:	e7f6      	b.n	8002580 <HAL_InitTick+0x78>
 8002592:	bf00      	nop
 8002594:	40023800 	.word	0x40023800
 8002598:	2000222c 	.word	0x2000222c
 800259c:	40001000 	.word	0x40001000
 80025a0:	000f4240 	.word	0x000f4240
 80025a4:	200000cc 	.word	0x200000cc

080025a8 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 80025a8:	4770      	bx	lr

080025aa <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80025aa:	e7fe      	b.n	80025aa <HardFault_Handler>

080025ac <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80025ac:	e7fe      	b.n	80025ac <MemManage_Handler>

080025ae <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80025ae:	e7fe      	b.n	80025ae <BusFault_Handler>

080025b0 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80025b0:	e7fe      	b.n	80025b0 <UsageFault_Handler>

080025b2 <DebugMon_Handler>:
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
 80025b2:	4770      	bx	lr

080025b4 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 80025b4:	4801      	ldr	r0, [pc, #4]	@ (80025bc <TIM6_DAC_IRQHandler+0x8>)
 80025b6:	f003 bce3 	b.w	8005f80 <HAL_TIM_IRQHandler>
 80025ba:	bf00      	nop
 80025bc:	2000222c 	.word	0x2000222c

080025c0 <OTG_HS_IRQHandler>:
void OTG_HS_IRQHandler(void)
{
  /* USER CODE BEGIN OTG_HS_IRQn 0 */

  /* USER CODE END OTG_HS_IRQn 0 */
  HAL_PCD_IRQHandler(&hpcd_USB_OTG_HS);
 80025c0:	4801      	ldr	r0, [pc, #4]	@ (80025c8 <OTG_HS_IRQHandler+0x8>)
 80025c2:	f002 b993 	b.w	80048ec <HAL_PCD_IRQHandler>
 80025c6:	bf00      	nop
 80025c8:	20001b64 	.word	0x20001b64

080025cc <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 80025cc:	4801      	ldr	r0, [pc, #4]	@ (80025d4 <LTDC_IRQHandler+0x8>)
 80025ce:	f001 bf27 	b.w	8004420 <HAL_LTDC_IRQHandler>
 80025d2:	bf00      	nop
 80025d4:	200020e4 	.word	0x200020e4

080025d8 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 80025d8:	4801      	ldr	r0, [pc, #4]	@ (80025e0 <DMA2D_IRQHandler+0x8>)
 80025da:	f000 bfeb 	b.w	80035b4 <HAL_DMA2D_IRQHandler>
 80025de:	bf00      	nop
 80025e0:	200021e0 	.word	0x200021e0

080025e4 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 80025e4:	2001      	movs	r0, #1
 80025e6:	4770      	bx	lr

080025e8 <_kill>:

int _kill(int pid, int sig)
{
 80025e8:	b508      	push	{r3, lr}
	errno = EINVAL;
 80025ea:	f01f fb57 	bl	8021c9c <__errno>
 80025ee:	2316      	movs	r3, #22
 80025f0:	6003      	str	r3, [r0, #0]
	return -1;
}
 80025f2:	f04f 30ff 	mov.w	r0, #4294967295
 80025f6:	bd08      	pop	{r3, pc}

080025f8 <_exit>:

void _exit (int status)
{
 80025f8:	b508      	push	{r3, lr}
	errno = EINVAL;
 80025fa:	f01f fb4f 	bl	8021c9c <__errno>
 80025fe:	2316      	movs	r3, #22
 8002600:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8002602:	e7fe      	b.n	8002602 <_exit+0xa>

08002604 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002604:	b570      	push	{r4, r5, r6, lr}
 8002606:	460d      	mov	r5, r1
 8002608:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800260a:	460e      	mov	r6, r1
 800260c:	1b73      	subs	r3, r6, r5
 800260e:	429c      	cmp	r4, r3
 8002610:	dc01      	bgt.n	8002616 <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8002612:	4620      	mov	r0, r4
 8002614:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8002616:	f3af 8000 	nop.w
 800261a:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800261e:	e7f5      	b.n	800260c <_read+0x8>

08002620 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002620:	b570      	push	{r4, r5, r6, lr}
 8002622:	460d      	mov	r5, r1
 8002624:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002626:	460e      	mov	r6, r1
 8002628:	1b73      	subs	r3, r6, r5
 800262a:	429c      	cmp	r4, r3
 800262c:	dc01      	bgt.n	8002632 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 800262e:	4620      	mov	r0, r4
 8002630:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8002632:	f816 0b01 	ldrb.w	r0, [r6], #1
 8002636:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800263a:	e7f5      	b.n	8002628 <_write+0x8>

0800263c <_close>:

int _close(int file)
{
	return -1;
}
 800263c:	f04f 30ff 	mov.w	r0, #4294967295
 8002640:	4770      	bx	lr

08002642 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8002642:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8002646:	604b      	str	r3, [r1, #4]
	return 0;
}
 8002648:	2000      	movs	r0, #0
 800264a:	4770      	bx	lr

0800264c <_isatty>:

int _isatty(int file)
{
	return 1;
}
 800264c:	2001      	movs	r0, #1
 800264e:	4770      	bx	lr

08002650 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8002650:	2000      	movs	r0, #0
 8002652:	4770      	bx	lr

08002654 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8002654:	4a0a      	ldr	r2, [pc, #40]	@ (8002680 <_sbrk+0x2c>)
 8002656:	6811      	ldr	r1, [r2, #0]
{
 8002658:	b508      	push	{r3, lr}
 800265a:	4603      	mov	r3, r0
	if (heap_end == 0)
 800265c:	b909      	cbnz	r1, 8002662 <_sbrk+0xe>
		heap_end = &end;
 800265e:	4909      	ldr	r1, [pc, #36]	@ (8002684 <_sbrk+0x30>)
 8002660:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 8002662:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8002664:	4669      	mov	r1, sp
 8002666:	4403      	add	r3, r0
 8002668:	428b      	cmp	r3, r1
 800266a:	d906      	bls.n	800267a <_sbrk+0x26>
	{
		errno = ENOMEM;
 800266c:	f01f fb16 	bl	8021c9c <__errno>
 8002670:	230c      	movs	r3, #12
 8002672:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8002674:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8002678:	bd08      	pop	{r3, pc}
	heap_end += incr;
 800267a:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 800267c:	e7fc      	b.n	8002678 <_sbrk+0x24>
 800267e:	bf00      	nop
 8002680:	20002274 	.word	0x20002274
 8002684:	20013dd0 	.word	0x20013dd0

08002688 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002688:	4770      	bx	lr

0800268a <_ZN23ApplicationFontProviderD0Ev>:
 800268a:	b510      	push	{r4, lr}
 800268c:	2104      	movs	r1, #4
 800268e:	4604      	mov	r4, r0
 8002690:	f01e f91d 	bl	80208ce <_ZdlPvj>
 8002694:	4620      	mov	r0, r4
 8002696:	bd10      	pop	{r4, pc}

08002698 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 8002698:	2901      	cmp	r1, #1
{
 800269a:	b508      	push	{r3, lr}
    switch (typography)
 800269c:	d006      	beq.n	80026ac <_ZN23ApplicationFontProvider7getFontEt+0x14>
 800269e:	2902      	cmp	r1, #2
 80026a0:	d008      	beq.n	80026b4 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 80026a2:	b959      	cbnz	r1, 80026bc <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 80026a4:	f000 fb94 	bl	8002dd0 <_ZN17TypedTextDatabase8getFontsEv>
 80026a8:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 80026aa:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 80026ac:	f000 fb90 	bl	8002dd0 <_ZN17TypedTextDatabase8getFontsEv>
 80026b0:	6840      	ldr	r0, [r0, #4]
 80026b2:	e7fa      	b.n	80026aa <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 80026b4:	f000 fb8c 	bl	8002dd0 <_ZN17TypedTextDatabase8getFontsEv>
 80026b8:	6880      	ldr	r0, [r0, #8]
 80026ba:	e7f6      	b.n	80026aa <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 80026bc:	2000      	movs	r0, #0
 80026be:	e7f4      	b.n	80026aa <_ZN23ApplicationFontProvider7getFontEt+0x12>

080026c0 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 80026c0:	4800      	ldr	r0, [pc, #0]	@ (80026c4 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 80026c2:	4770      	bx	lr
 80026c4:	080235a8 	.word	0x080235a8

080026c8 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 80026c8:	2001      	movs	r0, #1
 80026ca:	4770      	bx	lr

080026cc <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 80026cc:	b513      	push	{r0, r1, r4, lr}
 80026ce:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 80026d0:	b151      	cbz	r1, 80026e8 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80026d2:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 80026d4:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 80026d6:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80026da:	aa01      	add	r2, sp, #4
 80026dc:	689c      	ldr	r4, [r3, #8]
 80026de:	f10d 0303 	add.w	r3, sp, #3
 80026e2:	47a0      	blx	r4
        return glyph;
    }
 80026e4:	b002      	add	sp, #8
 80026e6:	bd10      	pop	{r4, pc}
            return 0;
 80026e8:	4608      	mov	r0, r1
 80026ea:	e7fb      	b.n	80026e4 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

080026ec <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 80026ec:	89c0      	ldrh	r0, [r0, #14]
 80026ee:	4770      	bx	lr

080026f0 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 80026f0:	8a00      	ldrh	r0, [r0, #16]
 80026f2:	4770      	bx	lr

080026f4 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 80026f4:	88c0      	ldrh	r0, [r0, #6]
 80026f6:	4770      	bx	lr

080026f8 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 80026f8:	8880      	ldrh	r0, [r0, #4]
 80026fa:	4770      	bx	lr

080026fc <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 80026fc:	7a80      	ldrb	r0, [r0, #10]
    }
 80026fe:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
 8002702:	4770      	bx	lr

08002704 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002704:	7a80      	ldrb	r0, [r0, #10]
    }
 8002706:	09c0      	lsrs	r0, r0, #7
 8002708:	4770      	bx	lr

0800270a <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
 800270a:	2000      	movs	r0, #0
 800270c:	4770      	bx	lr
	...

08002710 <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
 8002710:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 8002718 <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
 8002714:	4770      	bx	lr
 8002716:	bf00      	nop
 8002718:	00000000 	.word	0x00000000

0800271c <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 800271c:	4770      	bx	lr

0800271e <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 800271e:	4770      	bx	lr

08002720 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002720:	f500 7398 	add.w	r3, r0, #304	@ 0x130
 8002724:	6808      	ldr	r0, [r1, #0]
 8002726:	6849      	ldr	r1, [r1, #4]
 8002728:	c303      	stmia	r3!, {r0, r1}
    }
 800272a:	4770      	bx	lr

0800272c <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 800272c:	4770      	bx	lr

0800272e <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 800272e:	4770      	bx	lr

08002730 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8002730:	6041      	str	r1, [r0, #4]
    }
 8002732:	4770      	bx	lr

08002734 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002734:	4770      	bx	lr

08002736 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8002736:	4770      	bx	lr

08002738 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 8002738:	4b06      	ldr	r3, [pc, #24]	@ (8002754 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 800273a:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 800273e:	2300      	movs	r3, #0
 8002740:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002744:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 8002748:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 800274c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
 8002750:	4770      	bx	lr
 8002752:	bf00      	nop
 8002754:	080027f9 	.word	0x080027f9

08002758 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8002758:	2301      	movs	r3, #1
 800275a:	7203      	strb	r3, [r0, #8]
    }
 800275c:	4770      	bx	lr

0800275e <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 800275e:	4770      	bx	lr

08002760 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002760:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8002762:	68c2      	ldr	r2, [r0, #12]
 8002764:	6841      	ldr	r1, [r0, #4]
 8002766:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8002768:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 800276a:	eb01 0062 	add.w	r0, r1, r2, asr #1
 800276e:	07d2      	lsls	r2, r2, #31
 8002770:	bf48      	it	mi
 8002772:	590a      	ldrmi	r2, [r1, r4]
 8002774:	689b      	ldr	r3, [r3, #8]
    }
 8002776:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 800277a:	bf48      	it	mi
 800277c:	58d3      	ldrmi	r3, [r2, r3]
 800277e:	4718      	bx	r3

08002780 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 8002780:	4603      	mov	r3, r0
    {
        return (pobject != 0) && (pmemfun != 0);
 8002782:	6840      	ldr	r0, [r0, #4]
 8002784:	b130      	cbz	r0, 8002794 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002786:	689a      	ldr	r2, [r3, #8]
 8002788:	b91a      	cbnz	r2, 8002792 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x12>
 800278a:	68d8      	ldr	r0, [r3, #12]
 800278c:	f000 0001 	and.w	r0, r0, #1
 8002790:	4770      	bx	lr
 8002792:	2001      	movs	r0, #1
    }
 8002794:	4770      	bx	lr

08002796 <_ZN8touchgfx12NoTransitionD0Ev>:
 8002796:	b510      	push	{r4, lr}
 8002798:	210c      	movs	r1, #12
 800279a:	4604      	mov	r4, r0
 800279c:	f01e f897 	bl	80208ce <_ZdlPvj>
 80027a0:	4620      	mov	r0, r4
 80027a2:	bd10      	pop	{r4, pc}

080027a4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80027a4:	b510      	push	{r4, lr}
 80027a6:	2110      	movs	r1, #16
 80027a8:	4604      	mov	r4, r0
 80027aa:	f01e f890 	bl	80208ce <_ZdlPvj>
 80027ae:	4620      	mov	r0, r4
 80027b0:	bd10      	pop	{r4, pc}

080027b2 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 80027b2:	b510      	push	{r4, lr}
 80027b4:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 80027b8:	4604      	mov	r4, r0
 80027ba:	f01e f888 	bl	80208ce <_ZdlPvj>
 80027be:	4620      	mov	r0, r4
 80027c0:	bd10      	pop	{r4, pc}

080027c2 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80027c2:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 80027c4:	f00b fe7a 	bl	800e4bc <_ZN8touchgfx11Application11getInstanceEv>
 80027c8:	6803      	ldr	r3, [r0, #0]
    }
 80027ca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 80027ce:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80027d0:	4718      	bx	r3

080027d2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80027d2:	b510      	push	{r4, lr}
 80027d4:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80027d6:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
 80027da:	b158      	cbz	r0, 80027f4 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 80027dc:	6803      	ldr	r3, [r0, #0]
 80027de:	68db      	ldr	r3, [r3, #12]
 80027e0:	4798      	blx	r3
 80027e2:	b138      	cbz	r0, 80027f4 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 80027e4:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
 80027e8:	6803      	ldr	r3, [r0, #0]
 80027ea:	689b      	ldr	r3, [r3, #8]
 80027ec:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80027ee:	2300      	movs	r3, #0
 80027f0:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
 80027f4:	bd10      	pop	{r4, pc}
	...

080027f8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 80027f8:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80027fc:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
 8002800:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002802:	68b0      	ldr	r0, [r6, #8]
 8002804:	6803      	ldr	r3, [r0, #0]
 8002806:	6a1b      	ldr	r3, [r3, #32]
 8002808:	4798      	blx	r3
 800280a:	286b      	cmp	r0, #107	@ 0x6b
 800280c:	d805      	bhi.n	800281a <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x22>
 800280e:	4b44      	ldr	r3, [pc, #272]	@ (8002920 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x128>)
 8002810:	4a44      	ldr	r2, [pc, #272]	@ (8002924 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12c>)
 8002812:	21a3      	movs	r1, #163	@ 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002814:	4844      	ldr	r0, [pc, #272]	@ (8002928 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 8002816:	f01e ff97 	bl	8021748 <__assert_func>
 800281a:	6870      	ldr	r0, [r6, #4]
 800281c:	6803      	ldr	r3, [r0, #0]
 800281e:	6a1b      	ldr	r3, [r3, #32]
 8002820:	4798      	blx	r3
 8002822:	280f      	cmp	r0, #15
 8002824:	d803      	bhi.n	800282e <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x36>
 8002826:	4b41      	ldr	r3, [pc, #260]	@ (800292c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002828:	4a3e      	ldr	r2, [pc, #248]	@ (8002924 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12c>)
 800282a:	21a4      	movs	r1, #164	@ 0xa4
 800282c:	e7f2      	b.n	8002814 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800282e:	68f0      	ldr	r0, [r6, #12]
 8002830:	6803      	ldr	r3, [r0, #0]
 8002832:	6a1b      	ldr	r3, [r3, #32]
 8002834:	4798      	blx	r3
 8002836:	280b      	cmp	r0, #11
 8002838:	d803      	bhi.n	8002842 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4a>
 800283a:	4b3d      	ldr	r3, [pc, #244]	@ (8002930 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 800283c:	4a39      	ldr	r2, [pc, #228]	@ (8002924 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12c>)
 800283e:	21a5      	movs	r1, #165	@ 0xa5
 8002840:	e7e8      	b.n	8002814 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 8002842:	f00b fe3b 	bl	800e4bc <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8002846:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 8002938 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 800284a:	3004      	adds	r0, #4
 800284c:	f00b fe5b 	bl	800e506 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8002850:	f8d9 0000 	ldr.w	r0, [r9]
 8002854:	b110      	cbz	r0, 800285c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 8002856:	6803      	ldr	r3, [r0, #0]
 8002858:	68db      	ldr	r3, [r3, #12]
 800285a:	4798      	blx	r3
    if (*currentTrans)
 800285c:	f8d9 0000 	ldr.w	r0, [r9]
 8002860:	b110      	cbz	r0, 8002868 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 8002862:	6803      	ldr	r3, [r0, #0]
 8002864:	681b      	ldr	r3, [r3, #0]
 8002866:	4798      	blx	r3
    if (*currentScreen)
 8002868:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 800293c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>
 800286c:	f8d8 0000 	ldr.w	r0, [r8]
 8002870:	b110      	cbz	r0, 8002878 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8002872:	6803      	ldr	r3, [r0, #0]
 8002874:	695b      	ldr	r3, [r3, #20]
 8002876:	4798      	blx	r3
    if (*currentPresenter)
 8002878:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 800287c:	b110      	cbz	r0, 8002884 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 800287e:	6803      	ldr	r3, [r0, #0]
 8002880:	685b      	ldr	r3, [r3, #4]
 8002882:	4798      	blx	r3
    if (*currentScreen)
 8002884:	f8d8 0000 	ldr.w	r0, [r8]
 8002888:	b110      	cbz	r0, 8002890 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 800288a:	6803      	ldr	r3, [r0, #0]
 800288c:	681b      	ldr	r3, [r3, #0]
 800288e:	4798      	blx	r3
    if (*currentPresenter)
 8002890:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
 8002894:	b110      	cbz	r0, 800289c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8002896:	6803      	ldr	r3, [r0, #0]
 8002898:	689b      	ldr	r3, [r3, #8]
 800289a:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800289c:	68f0      	ldr	r0, [r6, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 800289e:	6803      	ldr	r3, [r0, #0]
 80028a0:	2100      	movs	r1, #0
 80028a2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80028a4:	4798      	blx	r3
        : screenContainer(0), done(false)
 80028a6:	f04f 0b00 	mov.w	fp, #0
 80028aa:	4b22      	ldr	r3, [pc, #136]	@ (8002934 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
 80028ac:	f8c0 b004 	str.w	fp, [r0, #4]
 80028b0:	4604      	mov	r4, r0
 80028b2:	f880 b008 	strb.w	fp, [r0, #8]
 80028b6:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80028b8:	68b0      	ldr	r0, [r6, #8]
 80028ba:	6803      	ldr	r3, [r0, #0]
 80028bc:	4659      	mov	r1, fp
 80028be:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80028c0:	4798      	blx	r3
 80028c2:	4605      	mov	r5, r0
 80028c4:	f000 faee 	bl	8002ea4 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80028c8:	6870      	ldr	r0, [r6, #4]
 80028ca:	6803      	ldr	r3, [r0, #0]
 80028cc:	4659      	mov	r1, fp
 80028ce:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80028d0:	4798      	blx	r3
 80028d2:	4629      	mov	r1, r5
 80028d4:	4606      	mov	r6, r0
 80028d6:	f000 fac5 	bl	8002e64 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
 80028da:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
 80028dc:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    *currentTrans = newTransition;
 80028e0:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
 80028e4:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 80028e8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80028ec:	682b      	ldr	r3, [r5, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 80028ee:	f8c6 a008 	str.w	sl, [r6, #8]
 80028f2:	4628      	mov	r0, r5
 80028f4:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 80028f6:	63ee      	str	r6, [r5, #60]	@ 0x3c
 80028f8:	4798      	blx	r3
    newPresenter->activate();
 80028fa:	6833      	ldr	r3, [r6, #0]
 80028fc:	4630      	mov	r0, r6
 80028fe:	681b      	ldr	r3, [r3, #0]
 8002900:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002902:	4621      	mov	r1, r4
 8002904:	4628      	mov	r0, r5
 8002906:	f00d ff89 	bl	801081c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800290a:	6823      	ldr	r3, [r4, #0]
 800290c:	4620      	mov	r0, r4
 800290e:	691b      	ldr	r3, [r3, #16]
 8002910:	4798      	blx	r3
    newTransition->invalidate();
 8002912:	6823      	ldr	r3, [r4, #0]
 8002914:	695b      	ldr	r3, [r3, #20]
 8002916:	4620      	mov	r0, r4
}
 8002918:	b001      	add	sp, #4
 800291a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800291e:	4718      	bx	r3
 8002920:	08022d2f 	.word	0x08022d2f
 8002924:	08022dbd 	.word	0x08022dbd
 8002928:	08022e8f 	.word	0x08022e8f
 800292c:	08022ed6 	.word	0x08022ed6
 8002930:	08022f79 	.word	0x08022f79
 8002934:	08023630 	.word	0x08023630
 8002938:	200130d8 	.word	0x200130d8
 800293c:	200130d4 	.word	0x200130d4

08002940 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002940:	4b04      	ldr	r3, [pc, #16]	@ (8002954 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8002942:	681b      	ldr	r3, [r3, #0]
 8002944:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8002948:	b10a      	cbz	r2, 800294e <_ZN8touchgfx3HAL3lcdEv+0xe>
 800294a:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800294c:	b900      	cbnz	r0, 8002950 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 800294e:	6898      	ldr	r0, [r3, #8]
    }
 8002950:	4770      	bx	lr
 8002952:	bf00      	nop
 8002954:	20013090 	.word	0x20013090

08002958 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002958:	b570      	push	{r4, r5, r6, lr}
 800295a:	4604      	mov	r4, r0
 800295c:	460d      	mov	r5, r1
 800295e:	4616      	mov	r6, r2
          pendingScreenTransitionCallback(0)
 8002960:	f00b fe6e 	bl	800e640 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8002964:	4a10      	ldr	r2, [pc, #64]	@ (80029a8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 8002966:	6014      	str	r4, [r2, #0]
      model(m)
 8002968:	4a10      	ldr	r2, [pc, #64]	@ (80029ac <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 800296a:	6022      	str	r2, [r4, #0]
        : pobject(0), pmemfun(0)
 800296c:	4a10      	ldr	r2, [pc, #64]	@ (80029b0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 800296e:	2300      	movs	r3, #0
 8002970:	e9c4 2351 	strd	r2, r3, [r4, #324]	@ 0x144
 8002974:	e9c4 3353 	strd	r3, r3, [r4, #332]	@ 0x14c
          pendingScreenTransitionCallback(0)
 8002978:	e9c4 334f 	strd	r3, r3, [r4, #316]	@ 0x13c
        return instance;
 800297c:	4b0d      	ldr	r3, [pc, #52]	@ (80029b4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 800297e:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8002980:	6803      	ldr	r3, [r0, #0]
 8002982:	2101      	movs	r1, #1
 8002984:	689b      	ldr	r3, [r3, #8]
      model(m)
 8002986:	e9c4 6555 	strd	r6, r5, [r4, #340]	@ 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 800298a:	4798      	blx	r3
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800298c:	f7ff ffd8 	bl	8002940 <_ZN8touchgfx3HAL3lcdEv>
 8002990:	f015 feb9 	bl	8018706 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8002994:	f7ff ffd4 	bl	8002940 <_ZN8touchgfx3HAL3lcdEv>
 8002998:	f015 ff30 	bl	80187fc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
 800299c:	f7ff ffd0 	bl	8002940 <_ZN8touchgfx3HAL3lcdEv>
 80029a0:	f015 ff38 	bl	8018814 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
 80029a4:	4620      	mov	r0, r4
 80029a6:	bd70      	pop	{r4, r5, r6, pc}
 80029a8:	200130e4 	.word	0x200130e4
 80029ac:	080235dc 	.word	0x080235dc
 80029b0:	080235c4 	.word	0x080235c4
 80029b4:	20013090 	.word	0x20013090

080029b8 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80029b8:	4b06      	ldr	r3, [pc, #24]	@ (80029d4 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 80029ba:	f8c0 314c 	str.w	r3, [r0, #332]	@ 0x14c
 80029be:	2300      	movs	r3, #0
 80029c0:	f8c0 3150 	str.w	r3, [r0, #336]	@ 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80029c4:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
 80029c8:	f8c0 0148 	str.w	r0, [r0, #328]	@ 0x148
 80029cc:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
}
 80029d0:	4770      	bx	lr
 80029d2:	bf00      	nop
 80029d4:	080027f9 	.word	0x080027f9

080029d8 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 80029d8:	6a40      	ldr	r0, [r0, #36]	@ 0x24
 80029da:	4770      	bx	lr

080029dc <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 80029dc:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 80029de:	4770      	bx	lr

080029e0 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 80029e0:	4770      	bx	lr

080029e2 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
    volatile const uint16_t* dataOffset = (const uint16_t*)((const uint8_t*)glyph + offsetof(GlyphNode, dataOffset));
    uint32_t offset = dataOffset[0];
    offset |= dataOffset[1] << 16;

    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    const uint8_t* pixels = table[glyph->unicode / 2048];
 80029e2:	888a      	ldrh	r2, [r1, #4]
    uint32_t offset = dataOffset[0];
 80029e4:	880b      	ldrh	r3, [r1, #0]
{
 80029e6:	b510      	push	{r4, lr}
    const uint8_t* pixels = table[glyph->unicode / 2048];
 80029e8:	0ad2      	lsrs	r2, r2, #11
    offset |= dataOffset[1] << 16;
 80029ea:	884c      	ldrh	r4, [r1, #2]
    const uint8_t* pixels = table[glyph->unicode / 2048];
 80029ec:	69c1      	ldr	r1, [r0, #28]
    uint32_t offset = dataOffset[0];
 80029ee:	b29b      	uxth	r3, r3
    return pixels + offset;
 80029f0:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
    offset |= dataOffset[1] << 16;
 80029f4:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
}
 80029f8:	4418      	add	r0, r3
 80029fa:	bd10      	pop	{r4, pc}

080029fc <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 80029fc:	b510      	push	{r4, lr}
 80029fe:	4604      	mov	r4, r0
    if (!glyph || glyph->kerningTableSize == 0)
 8002a00:	b1ba      	cbz	r2, 8002a32 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8002a02:	7b10      	ldrb	r0, [r2, #12]
 8002a04:	b168      	cbz	r0, 8002a22 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8002a06:	7b53      	ldrb	r3, [r2, #13]
 8002a08:	7ad2      	ldrb	r2, [r2, #11]
 8002a0a:	021b      	lsls	r3, r3, #8
 8002a0c:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002a10:	431a      	orrs	r2, r3
 8002a12:	6a23      	ldr	r3, [r4, #32]
 8002a14:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
    {
        if (prevChar == kerndata->unicodePrevChar)
 8002a18:	881a      	ldrh	r2, [r3, #0]
 8002a1a:	428a      	cmp	r2, r1
 8002a1c:	d102      	bne.n	8002a24 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8002a1e:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
 8002a22:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8002a24:	d805      	bhi.n	8002a32 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002a26:	3801      	subs	r0, #1
 8002a28:	b280      	uxth	r0, r0
 8002a2a:	3304      	adds	r3, #4
 8002a2c:	2800      	cmp	r0, #0
 8002a2e:	d1f3      	bne.n	8002a18 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8002a30:	e7f7      	b.n	8002a22 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8002a32:	2000      	movs	r0, #0
 8002a34:	e7f5      	b.n	8002a22 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08002a36 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8002a36:	b510      	push	{r4, lr}
 8002a38:	212c      	movs	r1, #44	@ 0x2c
 8002a3a:	4604      	mov	r4, r0
 8002a3c:	f01d ff47 	bl	80208ce <_ZdlPvj>
 8002a40:	4620      	mov	r0, r4
 8002a42:	bd10      	pop	{r4, pc}

08002a44 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8002a44:	b530      	push	{r4, r5, lr}
 8002a46:	b08b      	sub	sp, #44	@ 0x2c
 8002a48:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8002a4a:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
 8002a4e:	9508      	str	r5, [sp, #32]
 8002a50:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
 8002a54:	9507      	str	r5, [sp, #28]
 8002a56:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 8002a5a:	9506      	str	r5, [sp, #24]
 8002a5c:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
 8002a60:	9505      	str	r5, [sp, #20]
 8002a62:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 8002a66:	9504      	str	r5, [sp, #16]
 8002a68:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 8002a6c:	9503      	str	r5, [sp, #12]
 8002a6e:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
 8002a72:	9502      	str	r5, [sp, #8]
 8002a74:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
 8002a78:	9501      	str	r5, [sp, #4]
 8002a7a:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8002a7e:	9500      	str	r5, [sp, #0]
 8002a80:	f00d fb26 	bl	80100d0 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8002a84:	4b06      	ldr	r3, [pc, #24]	@ (8002aa0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 8002a86:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8002a88:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8002a8a:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 8002a8c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8002a8e:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 8002a90:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8002a92:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
 8002a94:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8002a96:	62a3      	str	r3, [r4, #40]	@ 0x28
}
 8002a98:	4620      	mov	r0, r4
 8002a9a:	b00b      	add	sp, #44	@ 0x2c
 8002a9c:	bd30      	pop	{r4, r5, pc}
 8002a9e:	bf00      	nop
 8002aa0:	08023654 	.word	0x08023654

08002aa4 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002aa4:	4770      	bx	lr

08002aa6 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002aa6:	4770      	bx	lr

08002aa8 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002aa8:	4770      	bx	lr

08002aaa <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002aaa:	4770      	bx	lr

08002aac <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002aac:	4770      	bx	lr

08002aae <_ZN15Screen1ViewBaseD1Ev>:
}

Screen1ViewBase::~Screen1ViewBase()
{

}
 8002aae:	4770      	bx	lr

08002ab0 <_ZN15Screen1ViewBase11setupScreenEv>:

void Screen1ViewBase::setupScreen()
{

}
 8002ab0:	4770      	bx	lr

08002ab2 <_ZN15Screen1ViewBaseD0Ev>:
Screen1ViewBase::~Screen1ViewBase()
 8002ab2:	b510      	push	{r4, lr}
}
 8002ab4:	216c      	movs	r1, #108	@ 0x6c
Screen1ViewBase::~Screen1ViewBase()
 8002ab6:	4604      	mov	r4, r0
}
 8002ab8:	f01d ff09 	bl	80208ce <_ZdlPvj>
 8002abc:	4620      	mov	r0, r4
 8002abe:	bd10      	pop	{r4, pc}

08002ac0 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase()
 8002ac0:	b538      	push	{r3, r4, r5, lr}
 8002ac2:	4604      	mov	r4, r0
        : presenter(0)
 8002ac4:	f00d fcfe 	bl	80104c4 <_ZN8touchgfx6ScreenC1Ev>
 8002ac8:	2300      	movs	r3, #0
 8002aca:	e9c4 3311 	strd	r3, r3, [r4, #68]	@ 0x44
 8002ace:	e9c4 3313 	strd	r3, r3, [r4, #76]	@ 0x4c
          nextSibling(0),
 8002ad2:	e9c4 3315 	strd	r3, r3, [r4, #84]	@ 0x54
          cachedAbsX(0),
 8002ad6:	e9c4 3317 	strd	r3, r3, [r4, #92]	@ 0x5c
 8002ada:	63e3      	str	r3, [r4, #60]	@ 0x3c
        : color(col)
 8002adc:	66a3      	str	r3, [r4, #104]	@ 0x68
 8002ade:	4a0f      	ldr	r2, [pc, #60]	@ (8002b1c <_ZN15Screen1ViewBaseC1Ev+0x5c>)
 8002ae0:	6022      	str	r2, [r4, #0]
          touchable(false),
 8002ae2:	f44f 7380 	mov.w	r3, #256	@ 0x100
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8002ae6:	4a0e      	ldr	r2, [pc, #56]	@ (8002b20 <_ZN15Screen1ViewBaseC1Ev+0x60>)
 8002ae8:	f8a4 3064 	strh.w	r3, [r4, #100]	@ 0x64
    __background.setPosition(0, 0, 240, 320);
 8002aec:	f104 0540 	add.w	r5, r4, #64	@ 0x40
 8002af0:	23ff      	movs	r3, #255	@ 0xff
 8002af2:	6422      	str	r2, [r4, #64]	@ 0x40
 8002af4:	f884 3066 	strb.w	r3, [r4, #102]	@ 0x66
        setWidth(width);
 8002af8:	4628      	mov	r0, r5
 8002afa:	21f0      	movs	r1, #240	@ 0xf0
 8002afc:	f7fe fc1e 	bl	800133c <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8002b00:	4628      	mov	r0, r5
 8002b02:	f44f 71a0 	mov.w	r1, #320	@ 0x140
 8002b06:	f7fe fc1b 	bl	8001340 <_ZN8touchgfx8Drawable9setHeightEs>
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8002b0a:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8002b0e:	1d20      	adds	r0, r4, #4
 8002b10:	66a3      	str	r3, [r4, #104]	@ 0x68
 8002b12:	4629      	mov	r1, r5
 8002b14:	f006 ff22 	bl	800995c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002b18:	4620      	mov	r0, r4
 8002b1a:	bd38      	pop	{r3, r4, r5, pc}
 8002b1c:	080236bc 	.word	0x080236bc
 8002b20:	080239e4 	.word	0x080239e4

08002b24 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8002b24:	4770      	bx	lr
	...

08002b28 <_Z23getFont_verdana_10_4bppv>:
{
 8002b28:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8002b2a:	4d16      	ldr	r5, [pc, #88]	@ (8002b84 <_Z23getFont_verdana_10_4bppv+0x5c>)
 8002b2c:	682c      	ldr	r4, [r5, #0]
 8002b2e:	f014 0401 	ands.w	r4, r4, #1
{
 8002b32:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8002b34:	f3bf 8f5b 	dmb	ish
 8002b38:	d120      	bne.n	8002b7c <_Z23getFont_verdana_10_4bppv+0x54>
 8002b3a:	4628      	mov	r0, r5
 8002b3c:	f01d fec9 	bl	80208d2 <__cxa_guard_acquire>
 8002b40:	b1e0      	cbz	r0, 8002b7c <_Z23getFont_verdana_10_4bppv+0x54>
 8002b42:	233f      	movs	r3, #63	@ 0x3f
 8002b44:	9309      	str	r3, [sp, #36]	@ 0x24
 8002b46:	4b10      	ldr	r3, [pc, #64]	@ (8002b88 <_Z23getFont_verdana_10_4bppv+0x60>)
 8002b48:	9308      	str	r3, [sp, #32]
 8002b4a:	4b10      	ldr	r3, [pc, #64]	@ (8002b8c <_Z23getFont_verdana_10_4bppv+0x64>)
 8002b4c:	4910      	ldr	r1, [pc, #64]	@ (8002b90 <_Z23getFont_verdana_10_4bppv+0x68>)
 8002b4e:	4811      	ldr	r0, [pc, #68]	@ (8002b94 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8002b50:	940a      	str	r4, [sp, #40]	@ 0x28
 8002b52:	2201      	movs	r2, #1
 8002b54:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8002b58:	2304      	movs	r3, #4
 8002b5a:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8002b5e:	230a      	movs	r3, #10
 8002b60:	9300      	str	r3, [sp, #0]
 8002b62:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8002b66:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8002b6a:	9405      	str	r4, [sp, #20]
 8002b6c:	f7ff ff6a 	bl	8002a44 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002b70:	4809      	ldr	r0, [pc, #36]	@ (8002b98 <_Z23getFont_verdana_10_4bppv+0x70>)
 8002b72:	f01e fe07 	bl	8021784 <atexit>
 8002b76:	4628      	mov	r0, r5
 8002b78:	f01d feb7 	bl	80208ea <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8002b7c:	4805      	ldr	r0, [pc, #20]	@ (8002b94 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8002b7e:	b00f      	add	sp, #60	@ 0x3c
 8002b80:	bd30      	pop	{r4, r5, pc}
 8002b82:	bf00      	nop
 8002b84:	20002278 	.word	0x20002278
 8002b88:	08024450 	.word	0x08024450
 8002b8c:	0802445c 	.word	0x0802445c
 8002b90:	08024420 	.word	0x08024420
 8002b94:	2000227c 	.word	0x2000227c
 8002b98:	08002b25 	.word	0x08002b25

08002b9c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8002b9c:	4770      	bx	lr
	...

08002ba0 <_Z23getFont_verdana_20_4bppv>:
{
 8002ba0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8002ba2:	4d16      	ldr	r5, [pc, #88]	@ (8002bfc <_Z23getFont_verdana_20_4bppv+0x5c>)
 8002ba4:	682c      	ldr	r4, [r5, #0]
 8002ba6:	f014 0401 	ands.w	r4, r4, #1
{
 8002baa:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8002bac:	f3bf 8f5b 	dmb	ish
 8002bb0:	d120      	bne.n	8002bf4 <_Z23getFont_verdana_20_4bppv+0x54>
 8002bb2:	4628      	mov	r0, r5
 8002bb4:	f01d fe8d 	bl	80208d2 <__cxa_guard_acquire>
 8002bb8:	b1e0      	cbz	r0, 8002bf4 <_Z23getFont_verdana_20_4bppv+0x54>
 8002bba:	233f      	movs	r3, #63	@ 0x3f
 8002bbc:	9309      	str	r3, [sp, #36]	@ 0x24
 8002bbe:	4b10      	ldr	r3, [pc, #64]	@ (8002c00 <_Z23getFont_verdana_20_4bppv+0x60>)
 8002bc0:	9308      	str	r3, [sp, #32]
 8002bc2:	4b10      	ldr	r3, [pc, #64]	@ (8002c04 <_Z23getFont_verdana_20_4bppv+0x64>)
 8002bc4:	4910      	ldr	r1, [pc, #64]	@ (8002c08 <_Z23getFont_verdana_20_4bppv+0x68>)
 8002bc6:	4811      	ldr	r0, [pc, #68]	@ (8002c0c <_Z23getFont_verdana_20_4bppv+0x6c>)
 8002bc8:	940a      	str	r4, [sp, #40]	@ 0x28
 8002bca:	2201      	movs	r2, #1
 8002bcc:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8002bd0:	2304      	movs	r3, #4
 8002bd2:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8002bd6:	2314      	movs	r3, #20
 8002bd8:	9300      	str	r3, [sp, #0]
 8002bda:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8002bde:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8002be2:	9405      	str	r4, [sp, #20]
 8002be4:	f7ff ff2e 	bl	8002a44 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002be8:	4809      	ldr	r0, [pc, #36]	@ (8002c10 <_Z23getFont_verdana_20_4bppv+0x70>)
 8002bea:	f01e fdcb 	bl	8021784 <atexit>
 8002bee:	4628      	mov	r0, r5
 8002bf0:	f01d fe7b 	bl	80208ea <__cxa_guard_release>
    return verdana_20_4bpp;
}
 8002bf4:	4805      	ldr	r0, [pc, #20]	@ (8002c0c <_Z23getFont_verdana_20_4bppv+0x6c>)
 8002bf6:	b00f      	add	sp, #60	@ 0x3c
 8002bf8:	bd30      	pop	{r4, r5, pc}
 8002bfa:	bf00      	nop
 8002bfc:	200022a8 	.word	0x200022a8
 8002c00:	08024454 	.word	0x08024454
 8002c04:	08024460 	.word	0x08024460
 8002c08:	08024430 	.word	0x08024430
 8002c0c:	200022ac 	.word	0x200022ac
 8002c10:	08002b9d 	.word	0x08002b9d

08002c14 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002c14:	4770      	bx	lr
	...

08002c18 <_Z23getFont_verdana_40_4bppv>:
{
 8002c18:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002c1a:	4d16      	ldr	r5, [pc, #88]	@ (8002c74 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8002c1c:	682c      	ldr	r4, [r5, #0]
 8002c1e:	f014 0401 	ands.w	r4, r4, #1
{
 8002c22:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002c24:	f3bf 8f5b 	dmb	ish
 8002c28:	d120      	bne.n	8002c6c <_Z23getFont_verdana_40_4bppv+0x54>
 8002c2a:	4628      	mov	r0, r5
 8002c2c:	f01d fe51 	bl	80208d2 <__cxa_guard_acquire>
 8002c30:	b1e0      	cbz	r0, 8002c6c <_Z23getFont_verdana_40_4bppv+0x54>
 8002c32:	233f      	movs	r3, #63	@ 0x3f
 8002c34:	9309      	str	r3, [sp, #36]	@ 0x24
 8002c36:	4b10      	ldr	r3, [pc, #64]	@ (8002c78 <_Z23getFont_verdana_40_4bppv+0x60>)
 8002c38:	9308      	str	r3, [sp, #32]
 8002c3a:	4b10      	ldr	r3, [pc, #64]	@ (8002c7c <_Z23getFont_verdana_40_4bppv+0x64>)
 8002c3c:	4910      	ldr	r1, [pc, #64]	@ (8002c80 <_Z23getFont_verdana_40_4bppv+0x68>)
 8002c3e:	4811      	ldr	r0, [pc, #68]	@ (8002c84 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8002c40:	940a      	str	r4, [sp, #40]	@ 0x28
 8002c42:	2201      	movs	r2, #1
 8002c44:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8002c48:	2304      	movs	r3, #4
 8002c4a:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8002c4e:	2328      	movs	r3, #40	@ 0x28
 8002c50:	9300      	str	r3, [sp, #0]
 8002c52:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
 8002c56:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8002c5a:	9405      	str	r4, [sp, #20]
 8002c5c:	f7ff fef2 	bl	8002a44 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002c60:	4809      	ldr	r0, [pc, #36]	@ (8002c88 <_Z23getFont_verdana_40_4bppv+0x70>)
 8002c62:	f01e fd8f 	bl	8021784 <atexit>
 8002c66:	4628      	mov	r0, r5
 8002c68:	f01d fe3f 	bl	80208ea <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8002c6c:	4805      	ldr	r0, [pc, #20]	@ (8002c84 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8002c6e:	b00f      	add	sp, #60	@ 0x3c
 8002c70:	bd30      	pop	{r4, r5, pc}
 8002c72:	bf00      	nop
 8002c74:	200022d8 	.word	0x200022d8
 8002c78:	08024458 	.word	0x08024458
 8002c7c:	08024464 	.word	0x08024464
 8002c80:	08024440 	.word	0x08024440
 8002c84:	200022dc 	.word	0x200022dc
 8002c88:	08002c15 	.word	0x08002c15

08002c8c <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
 8002c8c:	2000      	movs	r0, #0
 8002c8e:	4770      	bx	lr

08002c90 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
 8002c90:	2000      	movs	r0, #0
 8002c92:	4770      	bx	lr

08002c94 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8002c94:	b40e      	push	{r1, r2, r3}
 8002c96:	b503      	push	{r0, r1, lr}
 8002c98:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8002c9a:	2100      	movs	r1, #0
{
 8002c9c:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8002ca0:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8002ca2:	f00c fc93 	bl	800f5cc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8002ca6:	b002      	add	sp, #8
 8002ca8:	f85d eb04 	ldr.w	lr, [sp], #4
 8002cac:	b003      	add	sp, #12
 8002cae:	4770      	bx	lr

08002cb0 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8002cb0:	b40c      	push	{r2, r3}
 8002cb2:	b507      	push	{r0, r1, r2, lr}
 8002cb4:	ab04      	add	r3, sp, #16
 8002cb6:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8002cba:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8002cbc:	f00c fc86 	bl	800f5cc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8002cc0:	b003      	add	sp, #12
 8002cc2:	f85d eb04 	ldr.w	lr, [sp], #4
 8002cc6:	b002      	add	sp, #8
 8002cc8:	4770      	bx	lr
	...

08002ccc <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8002ccc:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
 8002cce:	b510      	push	{r4, lr}
 8002cd0:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8002cd2:	b373      	cbz	r3, 8002d32 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8002cd4:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
 8002cd6:	b92b      	cbnz	r3, 8002ce4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8002cd8:	4b18      	ldr	r3, [pc, #96]	@ (8002d3c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8002cda:	4a19      	ldr	r2, [pc, #100]	@ (8002d40 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8002cdc:	21c5      	movs	r1, #197	@ 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8002cde:	4819      	ldr	r0, [pc, #100]	@ (8002d44 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8002ce0:	f01e fd32 	bl	8021748 <__assert_func>
            return buffer[pos];
 8002ce4:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8002ce6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8002cea:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
 8002cec:	b30b      	cbz	r3, 8002d32 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8002cee:	f00e fa88 	bl	8011202 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8002cf2:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8002cf4:	2b01      	cmp	r3, #1
 8002cf6:	d803      	bhi.n	8002d00 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8002cf8:	4b13      	ldr	r3, [pc, #76]	@ (8002d48 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8002cfa:	4a14      	ldr	r2, [pc, #80]	@ (8002d4c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8002cfc:	21cb      	movs	r1, #203	@ 0xcb
 8002cfe:	e7ee      	b.n	8002cde <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8002d00:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8002d02:	1c53      	adds	r3, r2, #1
 8002d04:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8002d06:	2b09      	cmp	r3, #9
 8002d08:	4619      	mov	r1, r3
 8002d0a:	bf88      	it	hi
 8002d0c:	f1a3 010a 	subhi.w	r1, r3, #10
 8002d10:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8002d14:	f640 103f 	movw	r0, #2367	@ 0x93f
 8002d18:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
 8002d1a:	4281      	cmp	r1, r0
 8002d1c:	d109      	bne.n	8002d32 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8002d1e:	2b0a      	cmp	r3, #10
 8002d20:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8002d24:	bf28      	it	cs
 8002d26:	2300      	movcs	r3, #0
 8002d28:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8002d2c:	8c50      	ldrh	r0, [r2, #34]	@ 0x22
            buffer[index < size ? index : 0] = newChar;
 8002d2e:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
 8002d30:	8451      	strh	r1, [r2, #34]	@ 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8002d32:	4620      	mov	r0, r4
}
 8002d34:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8002d38:	f00e b966 	b.w	8011008 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8002d3c:	0802301c 	.word	0x0802301c
 8002d40:	08023025 	.word	0x08023025
 8002d44:	080230d0 	.word	0x080230d0
 8002d48:	0802311a 	.word	0x0802311a
 8002d4c:	08023128 	.word	0x08023128

08002d50 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8002d50:	f00e b921 	b.w	8010f96 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08002d54 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8002d54:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8002d56:	bb18      	cbnz	r0, 8002da0 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8002d58:	4b12      	ldr	r3, [pc, #72]	@ (8002da4 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8002d5a:	4813      	ldr	r0, [pc, #76]	@ (8002da8 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8002d5c:	681c      	ldr	r4, [r3, #0]
 8002d5e:	4913      	ldr	r1, [pc, #76]	@ (8002dac <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8002d60:	b1b4      	cbz	r4, 8002d90 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8002d62:	6822      	ldr	r2, [r4, #0]
 8002d64:	4422      	add	r2, r4
 8002d66:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8002d68:	6862      	ldr	r2, [r4, #4]
 8002d6a:	4422      	add	r2, r4
 8002d6c:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8002d6e:	68a2      	ldr	r2, [r4, #8]
 8002d70:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8002d72:	4b0f      	ldr	r3, [pc, #60]	@ (8002db0 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8002d74:	2200      	movs	r2, #0
 8002d76:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8002d78:	f000 f82a 	bl	8002dd0 <_ZN17TypedTextDatabase8getFontsEv>
 8002d7c:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8002d7e:	f000 f825 	bl	8002dcc <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8002d82:	4b0c      	ldr	r3, [pc, #48]	@ (8002db4 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8002d84:	601c      	str	r4, [r3, #0]
        fonts = f;
 8002d86:	4b0c      	ldr	r3, [pc, #48]	@ (8002db8 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8002d88:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8002d8a:	4b0c      	ldr	r3, [pc, #48]	@ (8002dbc <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8002d8c:	8018      	strh	r0, [r3, #0]
    }
}
 8002d8e:	e007      	b.n	8002da0 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8002d90:	4b0b      	ldr	r3, [pc, #44]	@ (8002dc0 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8002d92:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8002d94:	4b0b      	ldr	r3, [pc, #44]	@ (8002dc4 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8002d96:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8002d98:	4b0b      	ldr	r3, [pc, #44]	@ (8002dc8 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8002d9a:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8002d9c:	2c00      	cmp	r4, #0
 8002d9e:	d1e8      	bne.n	8002d72 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8002da0:	bd38      	pop	{r3, r4, r5, pc}
 8002da2:	bf00      	nop
 8002da4:	20002314 	.word	0x20002314
 8002da8:	2000230c 	.word	0x2000230c
 8002dac:	20002308 	.word	0x20002308
 8002db0:	20002310 	.word	0x20002310
 8002db4:	200130e8 	.word	0x200130e8
 8002db8:	200130f0 	.word	0x200130f0
 8002dbc:	200130ec 	.word	0x200130ec
 8002dc0:	0802446c 	.word	0x0802446c
 8002dc4:	08024468 	.word	0x08024468
 8002dc8:	08024470 	.word	0x08024470

08002dcc <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return 0;
}
 8002dcc:	2000      	movs	r0, #0
 8002dce:	4770      	bx	lr

08002dd0 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8002dd0:	4800      	ldr	r0, [pc, #0]	@ (8002dd4 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8002dd2:	4770      	bx	lr
 8002dd4:	20002318 	.word	0x20002318

08002dd8 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8002dd8:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 8002dda:	f7ff fee1 	bl	8002ba0 <_Z23getFont_verdana_20_4bppv>
};
 8002dde:	4c04      	ldr	r4, [pc, #16]	@ (8002df0 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 8002de0:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8002de2:	f7ff ff19 	bl	8002c18 <_Z23getFont_verdana_40_4bppv>
};
 8002de6:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 8002de8:	f7ff fe9e 	bl	8002b28 <_Z23getFont_verdana_10_4bppv>
};
 8002dec:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 8002dee:	bd10      	pop	{r4, pc}
 8002df0:	20002318 	.word	0x20002318

08002df4 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>:
/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */
#include <touchgfx/VectorFontRendererImpl.hpp>

void touchgfx::VectorFontRendererImpl::getVectorFontBuffers(float*& pointArray, int& pointArraySize, uint8_t*& commandArray, int& commandArraySize)
{
 8002df4:	b510      	push	{r4, lr}
    pointArray = 0;
 8002df6:	2400      	movs	r4, #0
 8002df8:	6004      	str	r4, [r0, #0]
    pointArraySize = 0;
 8002dfa:	600c      	str	r4, [r1, #0]
    commandArray = 0;
 8002dfc:	6014      	str	r4, [r2, #0]
    commandArraySize = 0;
 8002dfe:	601c      	str	r4, [r3, #0]
}
 8002e00:	bd10      	pop	{r4, pc}

08002e02 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8002e02:	4770      	bx	lr

08002e04 <_ZN19FrontendApplicationD0Ev>:
 8002e04:	b510      	push	{r4, lr}
 8002e06:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8002e0a:	4604      	mov	r4, r0
 8002e0c:	f01d fd5f 	bl	80208ce <_ZdlPvj>
 8002e10:	4620      	mov	r0, r4
 8002e12:	bd10      	pop	{r4, pc}

08002e14 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8002e14:	b510      	push	{r4, lr}
 8002e16:	4604      	mov	r4, r0
    {
        model.tick();
 8002e18:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
 8002e1c:	f000 f813 	bl	8002e46 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8002e20:	4620      	mov	r0, r4
    }
 8002e22:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8002e26:	f00b bbcb 	b.w	800e5c0 <_ZN8touchgfx11Application15handleTickEventEv>
	...

08002e2c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8002e2c:	b510      	push	{r4, lr}
 8002e2e:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8002e30:	f7ff fd92 	bl	8002958 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8002e34:	4b01      	ldr	r3, [pc, #4]	@ (8002e3c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8002e36:	6023      	str	r3, [r4, #0]
{

}
 8002e38:	4620      	mov	r0, r4
 8002e3a:	bd10      	pop	{r4, pc}
 8002e3c:	080236f0 	.word	0x080236f0

08002e40 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 8002e40:	2200      	movs	r2, #0
 8002e42:	6002      	str	r2, [r0, #0]
{

}
 8002e44:	4770      	bx	lr

08002e46 <_ZN5Model4tickEv>:

void Model::tick()
{

}
 8002e46:	4770      	bx	lr

08002e48 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {}
 8002e48:	4770      	bx	lr

08002e4a <_ZThn4_N16Screen1PresenterD1Ev>:
 8002e4a:	3804      	subs	r0, #4
 8002e4c:	4770      	bx	lr

08002e4e <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 8002e4e:	4770      	bx	lr

08002e50 <_ZN16Screen1PresenterD0Ev>:
 8002e50:	b510      	push	{r4, lr}
 8002e52:	2110      	movs	r1, #16
 8002e54:	4604      	mov	r4, r0
 8002e56:	f01d fd3a 	bl	80208ce <_ZdlPvj>
 8002e5a:	4620      	mov	r0, r4
 8002e5c:	bd10      	pop	{r4, pc}

08002e5e <_ZThn4_N16Screen1PresenterD0Ev>:
 8002e5e:	f1a0 0004 	sub.w	r0, r0, #4
 8002e62:	e7f5      	b.n	8002e50 <_ZN16Screen1PresenterD0Ev>

08002e64 <_ZN16Screen1PresenterC1ER11Screen1View>:
    ModelListener() : model(0) {}
 8002e64:	2200      	movs	r2, #0
 8002e66:	6082      	str	r2, [r0, #8]
    : view(v)
 8002e68:	4a02      	ldr	r2, [pc, #8]	@ (8002e74 <_ZN16Screen1PresenterC1ER11Screen1View+0x10>)
 8002e6a:	6002      	str	r2, [r0, #0]
 8002e6c:	3218      	adds	r2, #24
 8002e6e:	6042      	str	r2, [r0, #4]
 8002e70:	60c1      	str	r1, [r0, #12]
}
 8002e72:	4770      	bx	lr
 8002e74:	08023744 	.word	0x08023744

08002e78 <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 8002e78:	4770      	bx	lr
	...

08002e7c <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8002e7c:	b510      	push	{r4, lr}
 8002e7e:	4b03      	ldr	r3, [pc, #12]	@ (8002e8c <_ZN11Screen1ViewD1Ev+0x10>)
 8002e80:	6003      	str	r3, [r0, #0]
 8002e82:	4604      	mov	r4, r0
 8002e84:	f7ff fe13 	bl	8002aae <_ZN15Screen1ViewBaseD1Ev>
 8002e88:	4620      	mov	r0, r4
 8002e8a:	bd10      	pop	{r4, pc}
 8002e8c:	0802376c 	.word	0x0802376c

08002e90 <_ZN11Screen1ViewD0Ev>:
 8002e90:	b510      	push	{r4, lr}
 8002e92:	4604      	mov	r4, r0
 8002e94:	f7ff fff2 	bl	8002e7c <_ZN11Screen1ViewD1Ev>
 8002e98:	4620      	mov	r0, r4
 8002e9a:	216c      	movs	r1, #108	@ 0x6c
 8002e9c:	f01d fd17 	bl	80208ce <_ZdlPvj>
 8002ea0:	4620      	mov	r0, r4
 8002ea2:	bd10      	pop	{r4, pc}

08002ea4 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 8002ea4:	b510      	push	{r4, lr}
 8002ea6:	4604      	mov	r4, r0
 8002ea8:	f7ff fe0a 	bl	8002ac0 <_ZN15Screen1ViewBaseC1Ev>
 8002eac:	4b01      	ldr	r3, [pc, #4]	@ (8002eb4 <_ZN11Screen1ViewC1Ev+0x10>)
 8002eae:	6023      	str	r3, [r4, #0]
}
 8002eb0:	4620      	mov	r0, r4
 8002eb2:	bd10      	pop	{r4, pc}
 8002eb4:	0802376c 	.word	0x0802376c

08002eb8 <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 8002eb8:	f7ff bdfa 	b.w	8002ab0 <_ZN15Screen1ViewBase11setupScreenEv>

08002ebc <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8002ebc:	20f0      	movs	r0, #240	@ 0xf0
 8002ebe:	4770      	bx	lr

08002ec0 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8002ec0:	f44f 70a0 	mov.w	r0, #320	@ 0x140
 8002ec4:	4770      	bx	lr

08002ec6 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8002ec6:	2029      	movs	r0, #41	@ 0x29
 8002ec8:	f7ff b890 	b.w	8001fec <LCD_IO_WriteReg>

08002ecc <ili9341_DisplayOff>:
 8002ecc:	2028      	movs	r0, #40	@ 0x28
 8002ece:	f7ff b88d 	b.w	8001fec <LCD_IO_WriteReg>

08002ed2 <ili9341_Init>:
{
 8002ed2:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8002ed4:	f7ff f85e 	bl	8001f94 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8002ed8:	20ca      	movs	r0, #202	@ 0xca
 8002eda:	f7ff f887 	bl	8001fec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002ede:	20c3      	movs	r0, #195	@ 0xc3
 8002ee0:	f7ff f868 	bl	8001fb4 <LCD_IO_WriteData>
 8002ee4:	2008      	movs	r0, #8
 8002ee6:	f7ff f865 	bl	8001fb4 <LCD_IO_WriteData>
 8002eea:	2050      	movs	r0, #80	@ 0x50
 8002eec:	f7ff f862 	bl	8001fb4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002ef0:	20cf      	movs	r0, #207	@ 0xcf
 8002ef2:	f7ff f87b 	bl	8001fec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002ef6:	2000      	movs	r0, #0
 8002ef8:	f7ff f85c 	bl	8001fb4 <LCD_IO_WriteData>
 8002efc:	20c1      	movs	r0, #193	@ 0xc1
 8002efe:	f7ff f859 	bl	8001fb4 <LCD_IO_WriteData>
 8002f02:	2030      	movs	r0, #48	@ 0x30
 8002f04:	f7ff f856 	bl	8001fb4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002f08:	20ed      	movs	r0, #237	@ 0xed
 8002f0a:	f7ff f86f 	bl	8001fec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002f0e:	2064      	movs	r0, #100	@ 0x64
 8002f10:	f7ff f850 	bl	8001fb4 <LCD_IO_WriteData>
 8002f14:	2003      	movs	r0, #3
 8002f16:	f7ff f84d 	bl	8001fb4 <LCD_IO_WriteData>
 8002f1a:	2012      	movs	r0, #18
 8002f1c:	f7ff f84a 	bl	8001fb4 <LCD_IO_WriteData>
 8002f20:	2081      	movs	r0, #129	@ 0x81
 8002f22:	f7ff f847 	bl	8001fb4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002f26:	20e8      	movs	r0, #232	@ 0xe8
 8002f28:	f7ff f860 	bl	8001fec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002f2c:	2085      	movs	r0, #133	@ 0x85
 8002f2e:	f7ff f841 	bl	8001fb4 <LCD_IO_WriteData>
 8002f32:	2000      	movs	r0, #0
 8002f34:	f7ff f83e 	bl	8001fb4 <LCD_IO_WriteData>
 8002f38:	2078      	movs	r0, #120	@ 0x78
 8002f3a:	f7ff f83b 	bl	8001fb4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002f3e:	20cb      	movs	r0, #203	@ 0xcb
 8002f40:	f7ff f854 	bl	8001fec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002f44:	2039      	movs	r0, #57	@ 0x39
 8002f46:	f7ff f835 	bl	8001fb4 <LCD_IO_WriteData>
 8002f4a:	202c      	movs	r0, #44	@ 0x2c
 8002f4c:	f7ff f832 	bl	8001fb4 <LCD_IO_WriteData>
 8002f50:	2000      	movs	r0, #0
 8002f52:	f7ff f82f 	bl	8001fb4 <LCD_IO_WriteData>
 8002f56:	2034      	movs	r0, #52	@ 0x34
 8002f58:	f7ff f82c 	bl	8001fb4 <LCD_IO_WriteData>
 8002f5c:	2002      	movs	r0, #2
 8002f5e:	f7ff f829 	bl	8001fb4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002f62:	20f7      	movs	r0, #247	@ 0xf7
 8002f64:	f7ff f842 	bl	8001fec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002f68:	2020      	movs	r0, #32
 8002f6a:	f7ff f823 	bl	8001fb4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002f6e:	20ea      	movs	r0, #234	@ 0xea
 8002f70:	f7ff f83c 	bl	8001fec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002f74:	2000      	movs	r0, #0
 8002f76:	f7ff f81d 	bl	8001fb4 <LCD_IO_WriteData>
 8002f7a:	2000      	movs	r0, #0
 8002f7c:	f7ff f81a 	bl	8001fb4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002f80:	20b1      	movs	r0, #177	@ 0xb1
 8002f82:	f7ff f833 	bl	8001fec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002f86:	2000      	movs	r0, #0
 8002f88:	f7ff f814 	bl	8001fb4 <LCD_IO_WriteData>
 8002f8c:	201b      	movs	r0, #27
 8002f8e:	f7ff f811 	bl	8001fb4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002f92:	20b6      	movs	r0, #182	@ 0xb6
 8002f94:	f7ff f82a 	bl	8001fec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002f98:	200a      	movs	r0, #10
 8002f9a:	f7ff f80b 	bl	8001fb4 <LCD_IO_WriteData>
 8002f9e:	20a2      	movs	r0, #162	@ 0xa2
 8002fa0:	f7ff f808 	bl	8001fb4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002fa4:	20c0      	movs	r0, #192	@ 0xc0
 8002fa6:	f7ff f821 	bl	8001fec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002faa:	2010      	movs	r0, #16
 8002fac:	f7ff f802 	bl	8001fb4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002fb0:	20c1      	movs	r0, #193	@ 0xc1
 8002fb2:	f7ff f81b 	bl	8001fec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002fb6:	2010      	movs	r0, #16
 8002fb8:	f7fe fffc 	bl	8001fb4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002fbc:	20c5      	movs	r0, #197	@ 0xc5
 8002fbe:	f7ff f815 	bl	8001fec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002fc2:	2045      	movs	r0, #69	@ 0x45
 8002fc4:	f7fe fff6 	bl	8001fb4 <LCD_IO_WriteData>
 8002fc8:	2015      	movs	r0, #21
 8002fca:	f7fe fff3 	bl	8001fb4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002fce:	20c7      	movs	r0, #199	@ 0xc7
 8002fd0:	f7ff f80c 	bl	8001fec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002fd4:	2090      	movs	r0, #144	@ 0x90
 8002fd6:	f7fe ffed 	bl	8001fb4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002fda:	2036      	movs	r0, #54	@ 0x36
 8002fdc:	f7ff f806 	bl	8001fec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002fe0:	20c8      	movs	r0, #200	@ 0xc8
 8002fe2:	f7fe ffe7 	bl	8001fb4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002fe6:	20f2      	movs	r0, #242	@ 0xf2
 8002fe8:	f7ff f800 	bl	8001fec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002fec:	2000      	movs	r0, #0
 8002fee:	f7fe ffe1 	bl	8001fb4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002ff2:	20b0      	movs	r0, #176	@ 0xb0
 8002ff4:	f7fe fffa 	bl	8001fec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002ff8:	20c2      	movs	r0, #194	@ 0xc2
 8002ffa:	f7fe ffdb 	bl	8001fb4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002ffe:	20b6      	movs	r0, #182	@ 0xb6
 8003000:	f7fe fff4 	bl	8001fec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003004:	200a      	movs	r0, #10
 8003006:	f7fe ffd5 	bl	8001fb4 <LCD_IO_WriteData>
 800300a:	20a7      	movs	r0, #167	@ 0xa7
 800300c:	f7fe ffd2 	bl	8001fb4 <LCD_IO_WriteData>
 8003010:	2027      	movs	r0, #39	@ 0x27
 8003012:	f7fe ffcf 	bl	8001fb4 <LCD_IO_WriteData>
 8003016:	2004      	movs	r0, #4
 8003018:	f7fe ffcc 	bl	8001fb4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800301c:	202a      	movs	r0, #42	@ 0x2a
 800301e:	f7fe ffe5 	bl	8001fec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003022:	2000      	movs	r0, #0
 8003024:	f7fe ffc6 	bl	8001fb4 <LCD_IO_WriteData>
 8003028:	2000      	movs	r0, #0
 800302a:	f7fe ffc3 	bl	8001fb4 <LCD_IO_WriteData>
 800302e:	2000      	movs	r0, #0
 8003030:	f7fe ffc0 	bl	8001fb4 <LCD_IO_WriteData>
 8003034:	20ef      	movs	r0, #239	@ 0xef
 8003036:	f7fe ffbd 	bl	8001fb4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800303a:	202b      	movs	r0, #43	@ 0x2b
 800303c:	f7fe ffd6 	bl	8001fec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003040:	2000      	movs	r0, #0
 8003042:	f7fe ffb7 	bl	8001fb4 <LCD_IO_WriteData>
 8003046:	2000      	movs	r0, #0
 8003048:	f7fe ffb4 	bl	8001fb4 <LCD_IO_WriteData>
 800304c:	2001      	movs	r0, #1
 800304e:	f7fe ffb1 	bl	8001fb4 <LCD_IO_WriteData>
 8003052:	203f      	movs	r0, #63	@ 0x3f
 8003054:	f7fe ffae 	bl	8001fb4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003058:	20f6      	movs	r0, #246	@ 0xf6
 800305a:	f7fe ffc7 	bl	8001fec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800305e:	2001      	movs	r0, #1
 8003060:	f7fe ffa8 	bl	8001fb4 <LCD_IO_WriteData>
 8003064:	2000      	movs	r0, #0
 8003066:	f7fe ffa5 	bl	8001fb4 <LCD_IO_WriteData>
 800306a:	2006      	movs	r0, #6
 800306c:	f7fe ffa2 	bl	8001fb4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003070:	202c      	movs	r0, #44	@ 0x2c
 8003072:	f7fe ffbb 	bl	8001fec <LCD_IO_WriteReg>
  LCD_Delay(200);
 8003076:	20c8      	movs	r0, #200	@ 0xc8
 8003078:	f7ff f806 	bl	8002088 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 800307c:	2026      	movs	r0, #38	@ 0x26
 800307e:	f7fe ffb5 	bl	8001fec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003082:	2001      	movs	r0, #1
 8003084:	f7fe ff96 	bl	8001fb4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003088:	20e0      	movs	r0, #224	@ 0xe0
 800308a:	f7fe ffaf 	bl	8001fec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800308e:	200f      	movs	r0, #15
 8003090:	f7fe ff90 	bl	8001fb4 <LCD_IO_WriteData>
 8003094:	2029      	movs	r0, #41	@ 0x29
 8003096:	f7fe ff8d 	bl	8001fb4 <LCD_IO_WriteData>
 800309a:	2024      	movs	r0, #36	@ 0x24
 800309c:	f7fe ff8a 	bl	8001fb4 <LCD_IO_WriteData>
 80030a0:	200c      	movs	r0, #12
 80030a2:	f7fe ff87 	bl	8001fb4 <LCD_IO_WriteData>
 80030a6:	200e      	movs	r0, #14
 80030a8:	f7fe ff84 	bl	8001fb4 <LCD_IO_WriteData>
 80030ac:	2009      	movs	r0, #9
 80030ae:	f7fe ff81 	bl	8001fb4 <LCD_IO_WriteData>
 80030b2:	204e      	movs	r0, #78	@ 0x4e
 80030b4:	f7fe ff7e 	bl	8001fb4 <LCD_IO_WriteData>
 80030b8:	2078      	movs	r0, #120	@ 0x78
 80030ba:	f7fe ff7b 	bl	8001fb4 <LCD_IO_WriteData>
 80030be:	203c      	movs	r0, #60	@ 0x3c
 80030c0:	f7fe ff78 	bl	8001fb4 <LCD_IO_WriteData>
 80030c4:	2009      	movs	r0, #9
 80030c6:	f7fe ff75 	bl	8001fb4 <LCD_IO_WriteData>
 80030ca:	2013      	movs	r0, #19
 80030cc:	f7fe ff72 	bl	8001fb4 <LCD_IO_WriteData>
 80030d0:	2005      	movs	r0, #5
 80030d2:	f7fe ff6f 	bl	8001fb4 <LCD_IO_WriteData>
 80030d6:	2017      	movs	r0, #23
 80030d8:	f7fe ff6c 	bl	8001fb4 <LCD_IO_WriteData>
 80030dc:	2011      	movs	r0, #17
 80030de:	f7fe ff69 	bl	8001fb4 <LCD_IO_WriteData>
 80030e2:	2000      	movs	r0, #0
 80030e4:	f7fe ff66 	bl	8001fb4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80030e8:	20e1      	movs	r0, #225	@ 0xe1
 80030ea:	f7fe ff7f 	bl	8001fec <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80030ee:	2000      	movs	r0, #0
 80030f0:	f7fe ff60 	bl	8001fb4 <LCD_IO_WriteData>
 80030f4:	2016      	movs	r0, #22
 80030f6:	f7fe ff5d 	bl	8001fb4 <LCD_IO_WriteData>
 80030fa:	201b      	movs	r0, #27
 80030fc:	f7fe ff5a 	bl	8001fb4 <LCD_IO_WriteData>
 8003100:	2004      	movs	r0, #4
 8003102:	f7fe ff57 	bl	8001fb4 <LCD_IO_WriteData>
 8003106:	2011      	movs	r0, #17
 8003108:	f7fe ff54 	bl	8001fb4 <LCD_IO_WriteData>
 800310c:	2007      	movs	r0, #7
 800310e:	f7fe ff51 	bl	8001fb4 <LCD_IO_WriteData>
 8003112:	2031      	movs	r0, #49	@ 0x31
 8003114:	f7fe ff4e 	bl	8001fb4 <LCD_IO_WriteData>
 8003118:	2033      	movs	r0, #51	@ 0x33
 800311a:	f7fe ff4b 	bl	8001fb4 <LCD_IO_WriteData>
 800311e:	2042      	movs	r0, #66	@ 0x42
 8003120:	f7fe ff48 	bl	8001fb4 <LCD_IO_WriteData>
 8003124:	2005      	movs	r0, #5
 8003126:	f7fe ff45 	bl	8001fb4 <LCD_IO_WriteData>
 800312a:	200c      	movs	r0, #12
 800312c:	f7fe ff42 	bl	8001fb4 <LCD_IO_WriteData>
 8003130:	200a      	movs	r0, #10
 8003132:	f7fe ff3f 	bl	8001fb4 <LCD_IO_WriteData>
 8003136:	2028      	movs	r0, #40	@ 0x28
 8003138:	f7fe ff3c 	bl	8001fb4 <LCD_IO_WriteData>
 800313c:	202f      	movs	r0, #47	@ 0x2f
 800313e:	f7fe ff39 	bl	8001fb4 <LCD_IO_WriteData>
 8003142:	200f      	movs	r0, #15
 8003144:	f7fe ff36 	bl	8001fb4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003148:	2011      	movs	r0, #17
 800314a:	f7fe ff4f 	bl	8001fec <LCD_IO_WriteReg>
  LCD_Delay(200);
 800314e:	20c8      	movs	r0, #200	@ 0xc8
 8003150:	f7fe ff9a 	bl	8002088 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8003154:	2029      	movs	r0, #41	@ 0x29
 8003156:	f7fe ff49 	bl	8001fec <LCD_IO_WriteReg>
}
 800315a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 800315e:	202c      	movs	r0, #44	@ 0x2c
 8003160:	f7fe bf44 	b.w	8001fec <LCD_IO_WriteReg>

08003164 <ili9341_ReadID>:
{
 8003164:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8003166:	f7fe ff15 	bl	8001f94 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 800316a:	2103      	movs	r1, #3
 800316c:	20d3      	movs	r0, #211	@ 0xd3
 800316e:	f7fe ff59 	bl	8002024 <LCD_IO_ReadData>
}
 8003172:	b280      	uxth	r0, r0
 8003174:	bd08      	pop	{r3, pc}

08003176 <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 8003176:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8003178:	b2c4      	uxtb	r4, r0
 800317a:	2202      	movs	r2, #2
 800317c:	2103      	movs	r1, #3
 800317e:	4620      	mov	r0, r4
 8003180:	f7fe febe 	bl	8001f00 <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 8003184:	200a      	movs	r0, #10
 8003186:	f7fe ff03 	bl	8001f90 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 800318a:	4620      	mov	r0, r4
 800318c:	2200      	movs	r2, #0
 800318e:	2103      	movs	r1, #3
 8003190:	f7fe feb6 	bl	8001f00 <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 8003194:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8003198:	2002      	movs	r0, #2
 800319a:	f7fe bef9 	b.w	8001f90 <IOE_Delay>

0800319e <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 800319e:	b538      	push	{r3, r4, r5, lr}
 80031a0:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80031a2:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 80031a4:	f7fe feaa 	bl	8001efc <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80031a8:	2100      	movs	r1, #0
 80031aa:	4620      	mov	r0, r4
 80031ac:	f7fe fec0 	bl	8001f30 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 80031b0:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80031b2:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 80031b4:	4620      	mov	r0, r4
 80031b6:	f7fe febb 	bl	8001f30 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80031ba:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 80031be:	b280      	uxth	r0, r0
 80031c0:	bd38      	pop	{r3, r4, r5, pc}

080031c2 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 80031c2:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 80031c4:	b2c4      	uxtb	r4, r0
 80031c6:	2140      	movs	r1, #64	@ 0x40
 80031c8:	4620      	mov	r0, r4
 80031ca:	f7fe feb1 	bl	8001f30 <IOE_Read>
  
  if(state > 0)
 80031ce:	0603      	lsls	r3, r0, #24
 80031d0:	d507      	bpl.n	80031e2 <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 80031d2:	214c      	movs	r1, #76	@ 0x4c
 80031d4:	4620      	mov	r0, r4
 80031d6:	f7fe feab 	bl	8001f30 <IOE_Read>
 80031da:	3800      	subs	r0, #0
 80031dc:	bf18      	it	ne
 80031de:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 80031e0:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80031e2:	2201      	movs	r2, #1
 80031e4:	214b      	movs	r1, #75	@ 0x4b
 80031e6:	4620      	mov	r0, r4
 80031e8:	f7fe fe8a 	bl	8001f00 <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80031ec:	4620      	mov	r0, r4
 80031ee:	2200      	movs	r2, #0
 80031f0:	214b      	movs	r1, #75	@ 0x4b
 80031f2:	f7fe fe85 	bl	8001f00 <IOE_Write>
  uint8_t ret = 0;
 80031f6:	2000      	movs	r0, #0
 80031f8:	e7f2      	b.n	80031e0 <stmpe811_TS_DetectTouch+0x1e>

080031fa <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 80031fa:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 80031fc:	2304      	movs	r3, #4
 80031fe:	b2c4      	uxtb	r4, r0
{
 8003200:	460e      	mov	r6, r1
 8003202:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8003204:	21d7      	movs	r1, #215	@ 0xd7
 8003206:	eb0d 0203 	add.w	r2, sp, r3
 800320a:	4620      	mov	r0, r4
 800320c:	f7fe feaa 	bl	8001f64 <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8003210:	9b01      	ldr	r3, [sp, #4]
 8003212:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8003214:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8003216:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 800321a:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800321c:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800321e:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8003220:	2201      	movs	r2, #1
 8003222:	214b      	movs	r1, #75	@ 0x4b
 8003224:	f7fe fe6c 	bl	8001f00 <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8003228:	2200      	movs	r2, #0
 800322a:	214b      	movs	r1, #75	@ 0x4b
 800322c:	4620      	mov	r0, r4
 800322e:	f7fe fe67 	bl	8001f00 <IOE_Write>
}
 8003232:	b002      	add	sp, #8
 8003234:	bd70      	pop	{r4, r5, r6, pc}
	...

08003238 <stmpe811_Init>:
{
 8003238:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 800323a:	4a0a      	ldr	r2, [pc, #40]	@ (8003264 <stmpe811_Init+0x2c>)
 800323c:	7813      	ldrb	r3, [r2, #0]
 800323e:	4298      	cmp	r0, r3
{
 8003240:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 8003242:	d00d      	beq.n	8003260 <stmpe811_Init+0x28>
 8003244:	7851      	ldrb	r1, [r2, #1]
 8003246:	4288      	cmp	r0, r1
 8003248:	d00a      	beq.n	8003260 <stmpe811_Init+0x28>
 800324a:	b10b      	cbz	r3, 8003250 <stmpe811_Init+0x18>
 800324c:	b941      	cbnz	r1, 8003260 <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 800324e:	2301      	movs	r3, #1
      stmpe811[empty] = DeviceAddr;
 8003250:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 8003252:	f7fe fe53 	bl	8001efc <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 8003256:	4620      	mov	r0, r4
}
 8003258:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 800325c:	f7ff bf8b 	b.w	8003176 <stmpe811_Reset>
}
 8003260:	bd10      	pop	{r4, pc}
 8003262:	bf00      	nop
 8003264:	20002324 	.word	0x20002324

08003268 <stmpe811_EnableGlobalIT>:
{
 8003268:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800326a:	b2c4      	uxtb	r4, r0
 800326c:	2109      	movs	r1, #9
 800326e:	4620      	mov	r0, r4
 8003270:	f7fe fe5e 	bl	8001f30 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8003274:	f040 0201 	orr.w	r2, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8003278:	b2d2      	uxtb	r2, r2
 800327a:	4620      	mov	r0, r4
 800327c:	2109      	movs	r1, #9
}
 800327e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8003282:	f7fe be3d 	b.w	8001f00 <IOE_Write>

08003286 <stmpe811_DisableGlobalIT>:
{
 8003286:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8003288:	b2c4      	uxtb	r4, r0
 800328a:	2109      	movs	r1, #9
 800328c:	4620      	mov	r0, r4
 800328e:	f7fe fe4f 	bl	8001f30 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8003292:	2109      	movs	r1, #9
 8003294:	f000 02fe 	and.w	r2, r0, #254	@ 0xfe
 8003298:	4620      	mov	r0, r4
}
 800329a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 800329e:	f7fe be2f 	b.w	8001f00 <IOE_Write>

080032a2 <stmpe811_EnableITSource>:
{
 80032a2:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80032a4:	b2c4      	uxtb	r4, r0
{
 80032a6:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80032a8:	4620      	mov	r0, r4
 80032aa:	210a      	movs	r1, #10
 80032ac:	f7fe fe40 	bl	8001f30 <IOE_Read>
  tmp |= Source; 
 80032b0:	ea40 0205 	orr.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80032b4:	b2d2      	uxtb	r2, r2
 80032b6:	4620      	mov	r0, r4
 80032b8:	210a      	movs	r1, #10
}
 80032ba:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80032be:	f7fe be1f 	b.w	8001f00 <IOE_Write>

080032c2 <stmpe811_TS_EnableIT>:
{
 80032c2:	b510      	push	{r4, lr}
 80032c4:	4604      	mov	r4, r0
  IOE_ITConfig();
 80032c6:	f7fe fe1a 	bl	8001efe <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 80032ca:	4620      	mov	r0, r4
 80032cc:	211f      	movs	r1, #31
 80032ce:	f7ff ffe8 	bl	80032a2 <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 80032d2:	4620      	mov	r0, r4
}
 80032d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_EnableGlobalIT(DeviceAddr);
 80032d8:	f7ff bfc6 	b.w	8003268 <stmpe811_EnableGlobalIT>

080032dc <stmpe811_DisableITSource>:
{
 80032dc:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80032de:	b2c4      	uxtb	r4, r0
{
 80032e0:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80032e2:	4620      	mov	r0, r4
 80032e4:	210a      	movs	r1, #10
 80032e6:	f7fe fe23 	bl	8001f30 <IOE_Read>
  tmp &= ~Source; 
 80032ea:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80032ee:	b2d2      	uxtb	r2, r2
 80032f0:	4620      	mov	r0, r4
 80032f2:	210a      	movs	r1, #10
}
 80032f4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80032f8:	f7fe be02 	b.w	8001f00 <IOE_Write>

080032fc <stmpe811_TS_DisableIT>:
{
 80032fc:	b510      	push	{r4, lr}
 80032fe:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 8003300:	f7ff ffc1 	bl	8003286 <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8003304:	4620      	mov	r0, r4
 8003306:	211f      	movs	r1, #31
}
 8003308:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 800330c:	f7ff bfe6 	b.w	80032dc <stmpe811_DisableITSource>

08003310 <stmpe811_ReadGITStatus>:
{
 8003310:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8003312:	b2c0      	uxtb	r0, r0
{
 8003314:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8003316:	210b      	movs	r1, #11
 8003318:	f7fe fe0a 	bl	8001f30 <IOE_Read>
}
 800331c:	4020      	ands	r0, r4
 800331e:	bd10      	pop	{r4, pc}

08003320 <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 8003320:	211f      	movs	r1, #31
 8003322:	f7ff bff5 	b.w	8003310 <stmpe811_ReadGITStatus>

08003326 <stmpe811_ClearGlobalIT>:
{
 8003326:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8003328:	b2c0      	uxtb	r0, r0
 800332a:	210b      	movs	r1, #11
 800332c:	f7fe bde8 	b.w	8001f00 <IOE_Write>

08003330 <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 8003330:	211f      	movs	r1, #31
 8003332:	f7ff bff8 	b.w	8003326 <stmpe811_ClearGlobalIT>

08003336 <stmpe811_IO_EnableAF>:
{
 8003336:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8003338:	b2c4      	uxtb	r4, r0
{
 800333a:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 800333c:	4620      	mov	r0, r4
 800333e:	2117      	movs	r1, #23
 8003340:	f7fe fdf6 	bl	8001f30 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 8003344:	ea20 0205 	bic.w	r2, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8003348:	b2d2      	uxtb	r2, r2
 800334a:	4620      	mov	r0, r4
 800334c:	2117      	movs	r1, #23
}
 800334e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8003352:	f7fe bdd5 	b.w	8001f00 <IOE_Write>

08003356 <stmpe811_TS_Start>:
{
 8003356:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8003358:	b2c4      	uxtb	r4, r0
{
 800335a:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800335c:	2104      	movs	r1, #4
 800335e:	4620      	mov	r0, r4
 8003360:	f7fe fde6 	bl	8001f30 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8003364:	2104      	movs	r1, #4
 8003366:	f000 02fb 	and.w	r2, r0, #251	@ 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800336a:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800336c:	4620      	mov	r0, r4
 800336e:	f7fe fdc7 	bl	8001f00 <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 8003372:	4630      	mov	r0, r6
 8003374:	21f0      	movs	r1, #240	@ 0xf0
 8003376:	f7ff ffde 	bl	8003336 <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800337a:	f005 02f8 	and.w	r2, r5, #248	@ 0xf8
 800337e:	4620      	mov	r0, r4
 8003380:	2104      	movs	r1, #4
 8003382:	f7fe fdbd 	bl	8001f00 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8003386:	2249      	movs	r2, #73	@ 0x49
 8003388:	2120      	movs	r1, #32
 800338a:	4620      	mov	r0, r4
 800338c:	f7fe fdb8 	bl	8001f00 <IOE_Write>
  IOE_Delay(2); 
 8003390:	2002      	movs	r0, #2
 8003392:	f7fe fdfd 	bl	8001f90 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8003396:	4620      	mov	r0, r4
 8003398:	2201      	movs	r2, #1
 800339a:	2121      	movs	r1, #33	@ 0x21
 800339c:	f7fe fdb0 	bl	8001f00 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 80033a0:	4620      	mov	r0, r4
 80033a2:	229a      	movs	r2, #154	@ 0x9a
 80033a4:	2141      	movs	r1, #65	@ 0x41
 80033a6:	f7fe fdab 	bl	8001f00 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 80033aa:	4620      	mov	r0, r4
 80033ac:	2201      	movs	r2, #1
 80033ae:	214a      	movs	r1, #74	@ 0x4a
 80033b0:	f7fe fda6 	bl	8001f00 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80033b4:	4620      	mov	r0, r4
 80033b6:	2201      	movs	r2, #1
 80033b8:	214b      	movs	r1, #75	@ 0x4b
 80033ba:	f7fe fda1 	bl	8001f00 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80033be:	4620      	mov	r0, r4
 80033c0:	2200      	movs	r2, #0
 80033c2:	214b      	movs	r1, #75	@ 0x4b
 80033c4:	f7fe fd9c 	bl	8001f00 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 80033c8:	4620      	mov	r0, r4
 80033ca:	2201      	movs	r2, #1
 80033cc:	2156      	movs	r1, #86	@ 0x56
 80033ce:	f7fe fd97 	bl	8001f00 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 80033d2:	4620      	mov	r0, r4
 80033d4:	2201      	movs	r2, #1
 80033d6:	2158      	movs	r1, #88	@ 0x58
 80033d8:	f7fe fd92 	bl	8001f00 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 80033dc:	4620      	mov	r0, r4
 80033de:	2201      	movs	r2, #1
 80033e0:	2140      	movs	r1, #64	@ 0x40
 80033e2:	f7fe fd8d 	bl	8001f00 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 80033e6:	4620      	mov	r0, r4
 80033e8:	22ff      	movs	r2, #255	@ 0xff
 80033ea:	210b      	movs	r1, #11
 80033ec:	f7fe fd88 	bl	8001f00 <IOE_Write>
}
 80033f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 80033f4:	2002      	movs	r0, #2
 80033f6:	f7fe bdcb 	b.w	8001f90 <IOE_Delay>
	...

080033fc <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80033fc:	4b05      	ldr	r3, [pc, #20]	@ (8003414 <SystemInit+0x18>)
 80033fe:	f8d3 2088 	ldr.w	r2, [r3, #136]	@ 0x88
 8003402:	f442 0270 	orr.w	r2, r2, #15728640	@ 0xf00000
 8003406:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800340a:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 800340e:	609a      	str	r2, [r3, #8]
#endif
}
 8003410:	4770      	bx	lr
 8003412:	bf00      	nop
 8003414:	e000ed00 	.word	0xe000ed00

08003418 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8003418:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800341a:	4b0b      	ldr	r3, [pc, #44]	@ (8003448 <HAL_Init+0x30>)
 800341c:	681a      	ldr	r2, [r3, #0]
 800341e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003422:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8003424:	681a      	ldr	r2, [r3, #0]
 8003426:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 800342a:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800342c:	681a      	ldr	r2, [r3, #0]
 800342e:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8003432:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8003434:	2003      	movs	r0, #3
 8003436:	f000 f82f 	bl	8003498 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800343a:	2000      	movs	r0, #0
 800343c:	f7ff f864 	bl	8002508 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8003440:	f7fe fe30 	bl	80020a4 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8003444:	2000      	movs	r0, #0
 8003446:	bd08      	pop	{r3, pc}
 8003448:	40023c00 	.word	0x40023c00

0800344c <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 800344c:	4a03      	ldr	r2, [pc, #12]	@ (800345c <HAL_IncTick+0x10>)
 800344e:	4b04      	ldr	r3, [pc, #16]	@ (8003460 <HAL_IncTick+0x14>)
 8003450:	6811      	ldr	r1, [r2, #0]
 8003452:	781b      	ldrb	r3, [r3, #0]
 8003454:	440b      	add	r3, r1
 8003456:	6013      	str	r3, [r2, #0]
}
 8003458:	4770      	bx	lr
 800345a:	bf00      	nop
 800345c:	20002328 	.word	0x20002328
 8003460:	200000c8 	.word	0x200000c8

08003464 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8003464:	4b01      	ldr	r3, [pc, #4]	@ (800346c <HAL_GetTick+0x8>)
 8003466:	6818      	ldr	r0, [r3, #0]
}
 8003468:	4770      	bx	lr
 800346a:	bf00      	nop
 800346c:	20002328 	.word	0x20002328

08003470 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8003470:	b538      	push	{r3, r4, r5, lr}
 8003472:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8003474:	f7ff fff6 	bl	8003464 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8003478:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 800347a:	bf1c      	itt	ne
 800347c:	4b05      	ldrne	r3, [pc, #20]	@ (8003494 <HAL_Delay+0x24>)
 800347e:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8003480:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 8003482:	bf18      	it	ne
 8003484:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8003486:	f7ff ffed 	bl	8003464 <HAL_GetTick>
 800348a:	1b43      	subs	r3, r0, r5
 800348c:	42a3      	cmp	r3, r4
 800348e:	d3fa      	bcc.n	8003486 <HAL_Delay+0x16>
  {
  }
}
 8003490:	bd38      	pop	{r3, r4, r5, pc}
 8003492:	bf00      	nop
 8003494:	200000c8 	.word	0x200000c8

08003498 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8003498:	4907      	ldr	r1, [pc, #28]	@ (80034b8 <HAL_NVIC_SetPriorityGrouping+0x20>)
 800349a:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800349c:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80034a0:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80034a2:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80034a4:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80034a8:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80034aa:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80034ac:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 80034b0:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
  SCB->AIRCR =  reg_value;
 80034b4:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80034b6:	4770      	bx	lr
 80034b8:	e000ed00 	.word	0xe000ed00

080034bc <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80034bc:	4b16      	ldr	r3, [pc, #88]	@ (8003518 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80034be:	b530      	push	{r4, r5, lr}
 80034c0:	68dc      	ldr	r4, [r3, #12]
 80034c2:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80034c6:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80034ca:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80034cc:	2b04      	cmp	r3, #4
 80034ce:	bf28      	it	cs
 80034d0:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80034d2:	2d06      	cmp	r5, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80034d4:	f04f 35ff 	mov.w	r5, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80034d8:	bf8c      	ite	hi
 80034da:	3c03      	subhi	r4, #3
 80034dc:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80034de:	fa05 f303 	lsl.w	r3, r5, r3
 80034e2:	ea21 0303 	bic.w	r3, r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80034e6:	40a5      	lsls	r5, r4
 80034e8:	ea22 0205 	bic.w	r2, r2, r5
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80034ec:	40a3      	lsls	r3, r4
  if ((int32_t)(IRQn) >= 0)
 80034ee:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80034f0:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80034f4:	bfac      	ite	ge
 80034f6:	f100 4060 	addge.w	r0, r0, #3758096384	@ 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80034fa:	4a08      	ldrlt	r2, [pc, #32]	@ (800351c <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80034fc:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003500:	bfb8      	it	lt
 8003502:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003506:	b2db      	uxtb	r3, r3
 8003508:	bfaa      	itet	ge
 800350a:	f500 4061 	addge.w	r0, r0, #57600	@ 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800350e:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003510:	f880 3300 	strbge.w	r3, [r0, #768]	@ 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8003514:	bd30      	pop	{r4, r5, pc}
 8003516:	bf00      	nop
 8003518:	e000ed00 	.word	0xe000ed00
 800351c:	e000ed14 	.word	0xe000ed14

08003520 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8003520:	2800      	cmp	r0, #0
 8003522:	db07      	blt.n	8003534 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003524:	4a04      	ldr	r2, [pc, #16]	@ (8003538 <HAL_NVIC_EnableIRQ+0x18>)
 8003526:	0941      	lsrs	r1, r0, #5
 8003528:	2301      	movs	r3, #1
 800352a:	f000 001f 	and.w	r0, r0, #31
 800352e:	4083      	lsls	r3, r0
 8003530:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8003534:	4770      	bx	lr
 8003536:	bf00      	nop
 8003538:	e000e100 	.word	0xe000e100

0800353c <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 800353c:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800353e:	4604      	mov	r4, r0
 8003540:	b150      	cbz	r0, 8003558 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8003542:	7943      	ldrb	r3, [r0, #5]
 8003544:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8003548:	b913      	cbnz	r3, 8003550 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 800354a:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 800354c:	f7fe fdca 	bl	80020e4 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8003550:	2301      	movs	r3, #1
 8003552:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8003554:	2000      	movs	r0, #0
}
 8003556:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8003558:	2001      	movs	r0, #1
 800355a:	e7fc      	b.n	8003556 <HAL_CRC_Init+0x1a>

0800355c <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 800355c:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 800355e:	4604      	mov	r4, r0
 8003560:	b320      	cbz	r0, 80035ac <HAL_DMA2D_Init+0x50>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8003562:	f890 3039 	ldrb.w	r3, [r0, #57]	@ 0x39
 8003566:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 800356a:	b91b      	cbnz	r3, 8003574 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 800356c:	f880 2038 	strb.w	r2, [r0, #56]	@ 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8003570:	f7fe fdd0 	bl	8002114 <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8003574:	2302      	movs	r3, #2
 8003576:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800357a:	6823      	ldr	r3, [r4, #0]
 800357c:	6861      	ldr	r1, [r4, #4]
 800357e:	681a      	ldr	r2, [r3, #0]
 8003580:	f422 3240 	bic.w	r2, r2, #196608	@ 0x30000
 8003584:	430a      	orrs	r2, r1
 8003586:	601a      	str	r2, [r3, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8003588:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800358a:	68a1      	ldr	r1, [r4, #8]
 800358c:	f022 0207 	bic.w	r2, r2, #7
 8003590:	430a      	orrs	r2, r1
 8003592:	635a      	str	r2, [r3, #52]	@ 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8003594:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8003596:	68e1      	ldr	r1, [r4, #12]
 8003598:	f36f 020d 	bfc	r2, #0, #14
 800359c:	430a      	orrs	r2, r1
 800359e:	641a      	str	r2, [r3, #64]	@ 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80035a0:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80035a2:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80035a4:	63e0      	str	r0, [r4, #60]	@ 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80035a6:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39

  return HAL_OK;
}
 80035aa:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80035ac:	2001      	movs	r0, #1
 80035ae:	e7fc      	b.n	80035aa <HAL_DMA2D_Init+0x4e>

080035b0 <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
 80035b0:	4770      	bx	lr

080035b2 <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
 80035b2:	4770      	bx	lr

080035b4 <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80035b4:	6803      	ldr	r3, [r0, #0]
{
 80035b6:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80035b8:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 80035ba:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80035bc:	07f2      	lsls	r2, r6, #31
{
 80035be:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80035c0:	d514      	bpl.n	80035ec <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != 0U)
 80035c2:	05e9      	lsls	r1, r5, #23
 80035c4:	d512      	bpl.n	80035ec <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 80035c6:	681a      	ldr	r2, [r3, #0]
 80035c8:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 80035cc:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 80035ce:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 80035d0:	f042 0201 	orr.w	r2, r2, #1
 80035d4:	63c2      	str	r2, [r0, #60]	@ 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 80035d6:	2201      	movs	r2, #1
 80035d8:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80035da:	2304      	movs	r3, #4
 80035dc:	f880 3039 	strb.w	r3, [r0, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 80035e0:	2300      	movs	r3, #0
 80035e2:	f880 3038 	strb.w	r3, [r0, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 80035e6:	6943      	ldr	r3, [r0, #20]
 80035e8:	b103      	cbz	r3, 80035ec <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
 80035ea:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 80035ec:	06b2      	lsls	r2, r6, #26
 80035ee:	d516      	bpl.n	800361e <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != 0U)
 80035f0:	04ab      	lsls	r3, r5, #18
 80035f2:	d514      	bpl.n	800361e <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 80035f4:	6823      	ldr	r3, [r4, #0]
 80035f6:	681a      	ldr	r2, [r3, #0]
 80035f8:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 80035fc:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 80035fe:	2220      	movs	r2, #32
 8003600:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8003602:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8003604:	f043 0302 	orr.w	r3, r3, #2
 8003608:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800360a:	2304      	movs	r3, #4
 800360c:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8003610:	2300      	movs	r3, #0
 8003612:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8003616:	6963      	ldr	r3, [r4, #20]
 8003618:	b10b      	cbz	r3, 800361e <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
 800361a:	4620      	mov	r0, r4
 800361c:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 800361e:	0730      	lsls	r0, r6, #28
 8003620:	d516      	bpl.n	8003650 <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8003622:	0529      	lsls	r1, r5, #20
 8003624:	d514      	bpl.n	8003650 <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8003626:	6823      	ldr	r3, [r4, #0]
 8003628:	681a      	ldr	r2, [r3, #0]
 800362a:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800362e:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8003630:	2208      	movs	r2, #8
 8003632:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8003634:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8003636:	f043 0304 	orr.w	r3, r3, #4
 800363a:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800363c:	2304      	movs	r3, #4
 800363e:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 8003642:	2300      	movs	r3, #0
 8003644:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferErrorCallback != NULL)
 8003648:	6963      	ldr	r3, [r4, #20]
 800364a:	b10b      	cbz	r3, 8003650 <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
 800364c:	4620      	mov	r0, r4
 800364e:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8003650:	0772      	lsls	r2, r6, #29
 8003652:	d50b      	bpl.n	800366c <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != 0U)
 8003654:	056b      	lsls	r3, r5, #21
 8003656:	d509      	bpl.n	800366c <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8003658:	6823      	ldr	r3, [r4, #0]
 800365a:	681a      	ldr	r2, [r3, #0]
 800365c:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8003660:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8003662:	2204      	movs	r2, #4
 8003664:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 8003666:	4620      	mov	r0, r4
 8003668:	f7ff ffa2 	bl	80035b0 <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 800366c:	07b0      	lsls	r0, r6, #30
 800366e:	d514      	bpl.n	800369a <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != 0U)
 8003670:	05a9      	lsls	r1, r5, #22
 8003672:	d512      	bpl.n	800369a <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8003674:	6823      	ldr	r3, [r4, #0]
 8003676:	681a      	ldr	r2, [r3, #0]
 8003678:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 800367c:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 800367e:	2202      	movs	r2, #2
 8003680:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8003682:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8003684:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8003686:	2301      	movs	r3, #1
 8003688:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 800368c:	2300      	movs	r3, #0
 800368e:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      if (hdma2d->XferCpltCallback != NULL)
 8003692:	6923      	ldr	r3, [r4, #16]
 8003694:	b10b      	cbz	r3, 800369a <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
 8003696:	4620      	mov	r0, r4
 8003698:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 800369a:	06f2      	lsls	r2, r6, #27
 800369c:	d513      	bpl.n	80036c6 <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != 0U)
 800369e:	04eb      	lsls	r3, r5, #19
 80036a0:	d511      	bpl.n	80036c6 <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 80036a2:	6823      	ldr	r3, [r4, #0]
 80036a4:	681a      	ldr	r2, [r3, #0]
 80036a6:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 80036aa:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 80036ac:	2210      	movs	r2, #16
 80036ae:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80036b0:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80036b2:	63e3      	str	r3, [r4, #60]	@ 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80036b4:	2301      	movs	r3, #1
 80036b6:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
      __HAL_UNLOCK(hdma2d);
 80036ba:	2300      	movs	r3, #0
 80036bc:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 80036c0:	4620      	mov	r0, r4
 80036c2:	f7ff ff76 	bl	80035b2 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 80036c6:	bd70      	pop	{r4, r5, r6, pc}

080036c8 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 80036c8:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 80036ca:	f890 2038 	ldrb.w	r2, [r0, #56]	@ 0x38
 80036ce:	2a01      	cmp	r2, #1
{
 80036d0:	4603      	mov	r3, r0
 80036d2:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hdma2d);
 80036d6:	d02b      	beq.n	8003730 <HAL_DMA2D_ConfigLayer+0x68>
 80036d8:	2201      	movs	r2, #1
 80036da:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80036de:	f883 0039 	strb.w	r0, [r3, #57]	@ 0x39

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80036e2:	eb03 1201 	add.w	r2, r3, r1, lsl #4
 80036e6:	e9d2 4007 	ldrd	r4, r0, [r2, #28]
 80036ea:	6a55      	ldr	r5, [r2, #36]	@ 0x24
 80036ec:	4f17      	ldr	r7, [pc, #92]	@ (800374c <HAL_DMA2D_ConfigLayer+0x84>)
 80036ee:	ea44 4000 	orr.w	r0, r4, r0, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80036f2:	3c09      	subs	r4, #9
 80036f4:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 80036f6:	bf9c      	itt	ls
 80036f8:	f005 427f 	andls.w	r2, r5, #4278190080	@ 0xff000000
 80036fc:	4310      	orrls	r0, r2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80036fe:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8003702:	681a      	ldr	r2, [r3, #0]
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8003704:	bf88      	it	hi
 8003706:	ea40 6005 	orrhi.w	r0, r0, r5, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 800370a:	b991      	cbnz	r1, 8003732 <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800370c:	6a51      	ldr	r1, [r2, #36]	@ 0x24
 800370e:	4039      	ands	r1, r7
 8003710:	4301      	orrs	r1, r0
 8003712:	6251      	str	r1, [r2, #36]	@ 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003714:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8003716:	6999      	ldr	r1, [r3, #24]
 8003718:	6191      	str	r1, [r2, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800371a:	d803      	bhi.n	8003724 <HAL_DMA2D_ConfigLayer+0x5c>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 800371c:	6a59      	ldr	r1, [r3, #36]	@ 0x24
 800371e:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8003722:	6291      	str	r1, [r2, #40]	@ 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8003724:	2201      	movs	r2, #1

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8003726:	2000      	movs	r0, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8003728:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
  __HAL_UNLOCK(hdma2d);
 800372c:	f883 0038 	strb.w	r0, [r3, #56]	@ 0x38

  return HAL_OK;
}
 8003730:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8003732:	69d1      	ldr	r1, [r2, #28]
 8003734:	4039      	ands	r1, r7
 8003736:	4301      	orrs	r1, r0
 8003738:	61d1      	str	r1, [r2, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800373a:	1999      	adds	r1, r3, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800373c:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800373e:	6989      	ldr	r1, [r1, #24]
 8003740:	6111      	str	r1, [r2, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8003742:	bf9c      	itt	ls
 8003744:	f025 457f 	bicls.w	r5, r5, #4278190080	@ 0xff000000
 8003748:	6215      	strls	r5, [r2, #32]
 800374a:	e7eb      	b.n	8003724 <HAL_DMA2D_ConfigLayer+0x5c>
 800374c:	00fcfff0 	.word	0x00fcfff0

08003750 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8003750:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003754:	f8df 91bc 	ldr.w	r9, [pc, #444]	@ 8003914 <HAL_GPIO_Init+0x1c4>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8003758:	4a6c      	ldr	r2, [pc, #432]	@ (800390c <HAL_GPIO_Init+0x1bc>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 800375a:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800375c:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 800375e:	2401      	movs	r4, #1
 8003760:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8003762:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 8003766:	43ac      	bics	r4, r5
 8003768:	f040 80b7 	bne.w	80038da <HAL_GPIO_Init+0x18a>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800376c:	684d      	ldr	r5, [r1, #4]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800376e:	2703      	movs	r7, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8003770:	f005 0403 	and.w	r4, r5, #3
 8003774:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8003778:	fa07 fc08 	lsl.w	ip, r7, r8
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800377c:	1e67      	subs	r7, r4, #1
 800377e:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8003780:	ea6f 0c0c 	mvn.w	ip, ip
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8003784:	d834      	bhi.n	80037f0 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 8003786:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8003788:	ea07 0e0c 	and.w	lr, r7, ip
        temp |= (GPIO_Init->Speed << (position * 2U));
 800378c:	68cf      	ldr	r7, [r1, #12]
 800378e:	fa07 f708 	lsl.w	r7, r7, r8
 8003792:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 8003796:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8003798:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800379a:	ea27 0e06 	bic.w	lr, r7, r6
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 800379e:	f3c5 1700 	ubfx	r7, r5, #4, #1
 80037a2:	409f      	lsls	r7, r3
 80037a4:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 80037a8:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 80037aa:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 80037ac:	ea07 0e0c 	and.w	lr, r7, ip
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 80037b0:	688f      	ldr	r7, [r1, #8]
 80037b2:	fa07 f708 	lsl.w	r7, r7, r8
 80037b6:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80037ba:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 80037bc:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80037be:	d119      	bne.n	80037f4 <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 80037c0:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 80037c4:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80037c8:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 80037cc:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80037d0:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 80037d4:	f04f 0e0f 	mov.w	lr, #15
 80037d8:	fa0e fe0b 	lsl.w	lr, lr, fp
 80037dc:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80037e0:	690f      	ldr	r7, [r1, #16]
 80037e2:	fa07 f70b 	lsl.w	r7, r7, fp
 80037e6:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 80037ea:	f8ca 7020 	str.w	r7, [sl, #32]
 80037ee:	e001      	b.n	80037f4 <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 80037f0:	2c03      	cmp	r4, #3
 80037f2:	d1da      	bne.n	80037aa <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 80037f4:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80037f6:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 80037fa:	ea07 070c 	and.w	r7, r7, ip
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80037fe:	433c      	orrs	r4, r7
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8003800:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      GPIOx->MODER = temp;
 8003804:	6004      	str	r4, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8003806:	d068      	beq.n	80038da <HAL_GPIO_Init+0x18a>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003808:	2400      	movs	r4, #0
 800380a:	9401      	str	r4, [sp, #4]
 800380c:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 8003810:	f444 4480 	orr.w	r4, r4, #16384	@ 0x4000
 8003814:	f8c9 4044 	str.w	r4, [r9, #68]	@ 0x44
 8003818:	f8d9 4044 	ldr.w	r4, [r9, #68]	@ 0x44
 800381c:	f023 0703 	bic.w	r7, r3, #3
 8003820:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 8003824:	f404 4480 	and.w	r4, r4, #16384	@ 0x4000
 8003828:	f507 379c 	add.w	r7, r7, #79872	@ 0x13800
 800382c:	9401      	str	r4, [sp, #4]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800382e:	f003 0c03 	and.w	ip, r3, #3
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003832:	9c01      	ldr	r4, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8003834:	f8d7 e008 	ldr.w	lr, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8003838:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 800383c:	240f      	movs	r4, #15
 800383e:	fa04 f40c 	lsl.w	r4, r4, ip
 8003842:	ea2e 0e04 	bic.w	lr, lr, r4
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8003846:	4c32      	ldr	r4, [pc, #200]	@ (8003910 <HAL_GPIO_Init+0x1c0>)
 8003848:	42a0      	cmp	r0, r4
 800384a:	d04d      	beq.n	80038e8 <HAL_GPIO_Init+0x198>
 800384c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8003850:	42a0      	cmp	r0, r4
 8003852:	d04b      	beq.n	80038ec <HAL_GPIO_Init+0x19c>
 8003854:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8003858:	42a0      	cmp	r0, r4
 800385a:	d049      	beq.n	80038f0 <HAL_GPIO_Init+0x1a0>
 800385c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8003860:	42a0      	cmp	r0, r4
 8003862:	d047      	beq.n	80038f4 <HAL_GPIO_Init+0x1a4>
 8003864:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8003868:	42a0      	cmp	r0, r4
 800386a:	d045      	beq.n	80038f8 <HAL_GPIO_Init+0x1a8>
 800386c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8003870:	42a0      	cmp	r0, r4
 8003872:	d043      	beq.n	80038fc <HAL_GPIO_Init+0x1ac>
 8003874:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8003878:	42a0      	cmp	r0, r4
 800387a:	d041      	beq.n	8003900 <HAL_GPIO_Init+0x1b0>
 800387c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8003880:	42a0      	cmp	r0, r4
 8003882:	d03f      	beq.n	8003904 <HAL_GPIO_Init+0x1b4>
 8003884:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8003888:	42a0      	cmp	r0, r4
 800388a:	d03d      	beq.n	8003908 <HAL_GPIO_Init+0x1b8>
 800388c:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
 8003890:	42a0      	cmp	r0, r4
 8003892:	bf14      	ite	ne
 8003894:	240a      	movne	r4, #10
 8003896:	2409      	moveq	r4, #9
 8003898:	fa04 f40c 	lsl.w	r4, r4, ip
 800389c:	ea44 040e 	orr.w	r4, r4, lr
        SYSCFG->EXTICR[position >> 2U] = temp;
 80038a0:	60bc      	str	r4, [r7, #8]
        temp = EXTI->RTSR;
 80038a2:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 80038a4:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 80038a6:	f415 1f80 	tst.w	r5, #1048576	@ 0x100000
        temp &= ~((uint32_t)iocurrent);
 80038aa:	bf0c      	ite	eq
 80038ac:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 80038ae:	4334      	orrne	r4, r6
        }
        EXTI->RTSR = temp;
 80038b0:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 80038b2:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 80038b4:	f415 1f00 	tst.w	r5, #2097152	@ 0x200000
        temp &= ~((uint32_t)iocurrent);
 80038b8:	bf0c      	ite	eq
 80038ba:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 80038bc:	4334      	orrne	r4, r6
        }
        EXTI->FTSR = temp;
 80038be:	60d4      	str	r4, [r2, #12]

        temp = EXTI->EMR;
 80038c0:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 80038c2:	f415 3f00 	tst.w	r5, #131072	@ 0x20000
        temp &= ~((uint32_t)iocurrent);
 80038c6:	bf0c      	ite	eq
 80038c8:	403c      	andeq	r4, r7
        {
          temp |= iocurrent;
 80038ca:	4334      	orrne	r4, r6
        }
        EXTI->EMR = temp;
 80038cc:	6054      	str	r4, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 80038ce:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 80038d0:	03ed      	lsls	r5, r5, #15
        temp &= ~((uint32_t)iocurrent);
 80038d2:	bf54      	ite	pl
 80038d4:	403c      	andpl	r4, r7
        {
          temp |= iocurrent;
 80038d6:	4334      	orrmi	r4, r6
        }
        EXTI->IMR = temp;
 80038d8:	6014      	str	r4, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 80038da:	3301      	adds	r3, #1
 80038dc:	2b10      	cmp	r3, #16
 80038de:	f47f af3d 	bne.w	800375c <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 80038e2:	b003      	add	sp, #12
 80038e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80038e8:	2400      	movs	r4, #0
 80038ea:	e7d5      	b.n	8003898 <HAL_GPIO_Init+0x148>
 80038ec:	2401      	movs	r4, #1
 80038ee:	e7d3      	b.n	8003898 <HAL_GPIO_Init+0x148>
 80038f0:	2402      	movs	r4, #2
 80038f2:	e7d1      	b.n	8003898 <HAL_GPIO_Init+0x148>
 80038f4:	2403      	movs	r4, #3
 80038f6:	e7cf      	b.n	8003898 <HAL_GPIO_Init+0x148>
 80038f8:	2404      	movs	r4, #4
 80038fa:	e7cd      	b.n	8003898 <HAL_GPIO_Init+0x148>
 80038fc:	2405      	movs	r4, #5
 80038fe:	e7cb      	b.n	8003898 <HAL_GPIO_Init+0x148>
 8003900:	2406      	movs	r4, #6
 8003902:	e7c9      	b.n	8003898 <HAL_GPIO_Init+0x148>
 8003904:	2407      	movs	r4, #7
 8003906:	e7c7      	b.n	8003898 <HAL_GPIO_Init+0x148>
 8003908:	2408      	movs	r4, #8
 800390a:	e7c5      	b.n	8003898 <HAL_GPIO_Init+0x148>
 800390c:	40013c00 	.word	0x40013c00
 8003910:	40020000 	.word	0x40020000
 8003914:	40023800 	.word	0x40023800

08003918 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8003918:	6903      	ldr	r3, [r0, #16]
 800391a:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 800391c:	bf14      	ite	ne
 800391e:	2001      	movne	r0, #1
 8003920:	2000      	moveq	r0, #0
 8003922:	4770      	bx	lr

08003924 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8003924:	b10a      	cbz	r2, 800392a <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8003926:	6181      	str	r1, [r0, #24]
  }
}
 8003928:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800392a:	0409      	lsls	r1, r1, #16
 800392c:	e7fb      	b.n	8003926 <HAL_GPIO_WritePin+0x2>

0800392e <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 800392e:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8003930:	ea01 0203 	and.w	r2, r1, r3
 8003934:	ea21 0103 	bic.w	r1, r1, r3
 8003938:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800393c:	6181      	str	r1, [r0, #24]
}
 800393e:	4770      	bx	lr

08003940 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8003940:	6801      	ldr	r1, [r0, #0]
 8003942:	694b      	ldr	r3, [r1, #20]
 8003944:	f413 6380 	ands.w	r3, r3, #1024	@ 0x400
 8003948:	f04f 0200 	mov.w	r2, #0
 800394c:	d010      	beq.n	8003970 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800394e:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 8003952:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 8003954:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 8003956:	6302      	str	r2, [r0, #48]	@ 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8003958:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800395c:	f880 203e 	strb.w	r2, [r0, #62]	@ 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8003960:	6c03      	ldr	r3, [r0, #64]	@ 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8003962:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8003966:	f043 0304 	orr.w	r3, r3, #4
 800396a:	6403      	str	r3, [r0, #64]	@ 0x40

    return HAL_ERROR;
 800396c:	2001      	movs	r0, #1
 800396e:	4770      	bx	lr
  }
  return HAL_OK;
 8003970:	4618      	mov	r0, r3
}
 8003972:	4770      	bx	lr

08003974 <I2C_WaitOnFlagUntilTimeout>:
{
 8003974:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 8003978:	4606      	mov	r6, r0
 800397a:	460f      	mov	r7, r1
 800397c:	4691      	mov	r9, r2
 800397e:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8003980:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8003984:	6833      	ldr	r3, [r6, #0]
 8003986:	f1ba 0f01 	cmp.w	sl, #1
 800398a:	bf0c      	ite	eq
 800398c:	695c      	ldreq	r4, [r3, #20]
 800398e:	699c      	ldrne	r4, [r3, #24]
 8003990:	ea27 0404 	bic.w	r4, r7, r4
 8003994:	b2a4      	uxth	r4, r4
 8003996:	fab4 f484 	clz	r4, r4
 800399a:	0964      	lsrs	r4, r4, #5
 800399c:	45a1      	cmp	r9, r4
 800399e:	d001      	beq.n	80039a4 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 80039a0:	2000      	movs	r0, #0
 80039a2:	e025      	b.n	80039f0 <I2C_WaitOnFlagUntilTimeout+0x7c>
    if (Timeout != HAL_MAX_DELAY)
 80039a4:	1c6a      	adds	r2, r5, #1
 80039a6:	d0ee      	beq.n	8003986 <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80039a8:	f7ff fd5c 	bl	8003464 <HAL_GetTick>
 80039ac:	9b08      	ldr	r3, [sp, #32]
 80039ae:	1ac0      	subs	r0, r0, r3
 80039b0:	42a8      	cmp	r0, r5
 80039b2:	d801      	bhi.n	80039b8 <I2C_WaitOnFlagUntilTimeout+0x44>
 80039b4:	2d00      	cmp	r5, #0
 80039b6:	d1e5      	bne.n	8003984 <I2C_WaitOnFlagUntilTimeout+0x10>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 80039b8:	6833      	ldr	r3, [r6, #0]
 80039ba:	f1ba 0f01 	cmp.w	sl, #1
 80039be:	bf0c      	ite	eq
 80039c0:	695b      	ldreq	r3, [r3, #20]
 80039c2:	699b      	ldrne	r3, [r3, #24]
 80039c4:	ea27 0303 	bic.w	r3, r7, r3
 80039c8:	b29b      	uxth	r3, r3
 80039ca:	fab3 f383 	clz	r3, r3
 80039ce:	095b      	lsrs	r3, r3, #5
 80039d0:	4599      	cmp	r9, r3
 80039d2:	d1d7      	bne.n	8003984 <I2C_WaitOnFlagUntilTimeout+0x10>
          hi2c->PreviousState     = I2C_STATE_NONE;
 80039d4:	2300      	movs	r3, #0
          hi2c->State             = HAL_I2C_STATE_READY;
 80039d6:	2220      	movs	r2, #32
          hi2c->PreviousState     = I2C_STATE_NONE;
 80039d8:	6333      	str	r3, [r6, #48]	@ 0x30
          hi2c->State             = HAL_I2C_STATE_READY;
 80039da:	f886 203d 	strb.w	r2, [r6, #61]	@ 0x3d
          hi2c->Mode              = HAL_I2C_MODE_NONE;
 80039de:	f886 303e 	strb.w	r3, [r6, #62]	@ 0x3e
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80039e2:	6c32      	ldr	r2, [r6, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 80039e4:	f886 303c 	strb.w	r3, [r6, #60]	@ 0x3c
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80039e8:	f042 0220 	orr.w	r2, r2, #32
 80039ec:	6432      	str	r2, [r6, #64]	@ 0x40
          return HAL_ERROR;
 80039ee:	2001      	movs	r0, #1
}
 80039f0:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

080039f4 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 80039f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80039f8:	4604      	mov	r4, r0
 80039fa:	460f      	mov	r7, r1
 80039fc:	4616      	mov	r6, r2
 80039fe:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8003a00:	6825      	ldr	r5, [r4, #0]
 8003a02:	6968      	ldr	r0, [r5, #20]
 8003a04:	ea27 0000 	bic.w	r0, r7, r0
 8003a08:	b280      	uxth	r0, r0
 8003a0a:	b1c0      	cbz	r0, 8003a3e <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8003a0c:	696b      	ldr	r3, [r5, #20]
 8003a0e:	055a      	lsls	r2, r3, #21
 8003a10:	d517      	bpl.n	8003a42 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4e>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003a12:	682b      	ldr	r3, [r5, #0]
 8003a14:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8003a18:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8003a1a:	f46f 6380 	mvn.w	r3, #1024	@ 0x400
 8003a1e:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8003a20:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8003a22:	2300      	movs	r3, #0
 8003a24:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8003a26:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8003a2a:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8003a2e:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8003a30:	f043 0304 	orr.w	r3, r3, #4
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8003a34:	6423      	str	r3, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 8003a36:	2300      	movs	r3, #0
 8003a38:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 8003a3c:	2001      	movs	r0, #1
}
 8003a3e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8003a42:	1c73      	adds	r3, r6, #1
 8003a44:	d0dd      	beq.n	8003a02 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8003a46:	f7ff fd0d 	bl	8003464 <HAL_GetTick>
 8003a4a:	eba0 0008 	sub.w	r0, r0, r8
 8003a4e:	42b0      	cmp	r0, r6
 8003a50:	d801      	bhi.n	8003a56 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x62>
 8003a52:	2e00      	cmp	r6, #0
 8003a54:	d1d4      	bne.n	8003a00 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET))
 8003a56:	6823      	ldr	r3, [r4, #0]
 8003a58:	695a      	ldr	r2, [r3, #20]
 8003a5a:	ea27 0202 	bic.w	r2, r7, r2
 8003a5e:	b292      	uxth	r2, r2
 8003a60:	2a00      	cmp	r2, #0
 8003a62:	d0cd      	beq.n	8003a00 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
          hi2c->PreviousState       = I2C_STATE_NONE;
 8003a64:	2300      	movs	r3, #0
          hi2c->State               = HAL_I2C_STATE_READY;
 8003a66:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 8003a68:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8003a6a:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8003a6e:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8003a72:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8003a74:	4313      	orrs	r3, r2
 8003a76:	e7dd      	b.n	8003a34 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

08003a78 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 8003a78:	b570      	push	{r4, r5, r6, lr}
 8003a7a:	4604      	mov	r4, r0
 8003a7c:	460d      	mov	r5, r1
 8003a7e:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8003a80:	6823      	ldr	r3, [r4, #0]
 8003a82:	695b      	ldr	r3, [r3, #20]
 8003a84:	061b      	lsls	r3, r3, #24
 8003a86:	d501      	bpl.n	8003a8c <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 8003a88:	2000      	movs	r0, #0
 8003a8a:	e01e      	b.n	8003aca <I2C_WaitOnTXEFlagUntilTimeout+0x52>
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8003a8c:	4620      	mov	r0, r4
 8003a8e:	f7ff ff57 	bl	8003940 <I2C_IsAcknowledgeFailed>
 8003a92:	b9c8      	cbnz	r0, 8003ac8 <I2C_WaitOnTXEFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 8003a94:	1c6a      	adds	r2, r5, #1
 8003a96:	d0f3      	beq.n	8003a80 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8003a98:	f7ff fce4 	bl	8003464 <HAL_GetTick>
 8003a9c:	1b80      	subs	r0, r0, r6
 8003a9e:	42a8      	cmp	r0, r5
 8003aa0:	d801      	bhi.n	8003aa6 <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8003aa2:	2d00      	cmp	r5, #0
 8003aa4:	d1ec      	bne.n	8003a80 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET))
 8003aa6:	6823      	ldr	r3, [r4, #0]
 8003aa8:	695b      	ldr	r3, [r3, #20]
 8003aaa:	f013 0380 	ands.w	r3, r3, #128	@ 0x80
 8003aae:	d1e7      	bne.n	8003a80 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
          hi2c->State               = HAL_I2C_STATE_READY;
 8003ab0:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 8003ab2:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8003ab4:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8003ab8:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8003abc:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 8003abe:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8003ac2:	f042 0220 	orr.w	r2, r2, #32
 8003ac6:	6422      	str	r2, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8003ac8:	2001      	movs	r0, #1
}
 8003aca:	bd70      	pop	{r4, r5, r6, pc}

08003acc <I2C_RequestMemoryWrite>:
{
 8003acc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003ad0:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8003ad2:	6802      	ldr	r2, [r0, #0]
{
 8003ad4:	b085      	sub	sp, #20
 8003ad6:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	@ 0x30
 8003ada:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8003adc:	6813      	ldr	r3, [r2, #0]
 8003ade:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003ae2:	6013      	str	r3, [r2, #0]
{
 8003ae4:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8003ae6:	463b      	mov	r3, r7
 8003ae8:	f8cd 8000 	str.w	r8, [sp]
 8003aec:	2200      	movs	r2, #0
 8003aee:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
{
 8003af2:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8003af4:	f7ff ff3e 	bl	8003974 <I2C_WaitOnFlagUntilTimeout>
 8003af8:	6823      	ldr	r3, [r4, #0]
 8003afa:	b138      	cbz	r0, 8003b0c <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8003afc:	681b      	ldr	r3, [r3, #0]
 8003afe:	05db      	lsls	r3, r3, #23
 8003b00:	d502      	bpl.n	8003b08 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8003b02:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8003b06:	6423      	str	r3, [r4, #64]	@ 0x40
    return HAL_TIMEOUT;
 8003b08:	2603      	movs	r6, #3
 8003b0a:	e020      	b.n	8003b4e <I2C_RequestMemoryWrite+0x82>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8003b0c:	f006 06fe 	and.w	r6, r6, #254	@ 0xfe
 8003b10:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8003b12:	491a      	ldr	r1, [pc, #104]	@ (8003b7c <I2C_RequestMemoryWrite+0xb0>)
 8003b14:	4643      	mov	r3, r8
 8003b16:	463a      	mov	r2, r7
 8003b18:	4620      	mov	r0, r4
 8003b1a:	f7ff ff6b 	bl	80039f4 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8003b1e:	b9a8      	cbnz	r0, 8003b4c <I2C_RequestMemoryWrite+0x80>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8003b20:	6823      	ldr	r3, [r4, #0]
 8003b22:	9003      	str	r0, [sp, #12]
 8003b24:	695a      	ldr	r2, [r3, #20]
 8003b26:	9203      	str	r2, [sp, #12]
 8003b28:	699b      	ldr	r3, [r3, #24]
 8003b2a:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003b2c:	4642      	mov	r2, r8
 8003b2e:	4639      	mov	r1, r7
 8003b30:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8003b32:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003b34:	f7ff ffa0 	bl	8003a78 <I2C_WaitOnTXEFlagUntilTimeout>
 8003b38:	4606      	mov	r6, r0
 8003b3a:	b160      	cbz	r0, 8003b56 <I2C_RequestMemoryWrite+0x8a>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8003b3c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8003b3e:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003b40:	bf01      	itttt	eq
 8003b42:	6822      	ldreq	r2, [r4, #0]
 8003b44:	6813      	ldreq	r3, [r2, #0]
 8003b46:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 8003b4a:	6013      	streq	r3, [r2, #0]
    return HAL_ERROR;
 8003b4c:	2601      	movs	r6, #1
}
 8003b4e:	4630      	mov	r0, r6
 8003b50:	b005      	add	sp, #20
 8003b52:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8003b56:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003b5a:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8003b5c:	d102      	bne.n	8003b64 <I2C_RequestMemoryWrite+0x98>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8003b5e:	b2ed      	uxtb	r5, r5
 8003b60:	611d      	str	r5, [r3, #16]
 8003b62:	e7f4      	b.n	8003b4e <I2C_RequestMemoryWrite+0x82>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8003b64:	0a2a      	lsrs	r2, r5, #8
 8003b66:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003b68:	4639      	mov	r1, r7
 8003b6a:	4642      	mov	r2, r8
 8003b6c:	4620      	mov	r0, r4
 8003b6e:	f7ff ff83 	bl	8003a78 <I2C_WaitOnTXEFlagUntilTimeout>
 8003b72:	2800      	cmp	r0, #0
 8003b74:	d1e2      	bne.n	8003b3c <I2C_RequestMemoryWrite+0x70>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8003b76:	6823      	ldr	r3, [r4, #0]
 8003b78:	e7f1      	b.n	8003b5e <I2C_RequestMemoryWrite+0x92>
 8003b7a:	bf00      	nop
 8003b7c:	00010002 	.word	0x00010002

08003b80 <I2C_RequestMemoryRead>:
{
 8003b80:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8003b84:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8003b86:	6803      	ldr	r3, [r0, #0]
{
 8003b88:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8003b8a:	681a      	ldr	r2, [r3, #0]
 8003b8c:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8003b90:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8003b92:	681a      	ldr	r2, [r3, #0]
{
 8003b94:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	@ 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8003b98:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8003b9c:	601a      	str	r2, [r3, #0]
{
 8003b9e:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8003ba0:	463b      	mov	r3, r7
 8003ba2:	f8cd 8000 	str.w	r8, [sp]
 8003ba6:	2200      	movs	r2, #0
 8003ba8:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
{
 8003bac:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8003bae:	f7ff fee1 	bl	8003974 <I2C_WaitOnFlagUntilTimeout>
 8003bb2:	6823      	ldr	r3, [r4, #0]
 8003bb4:	b138      	cbz	r0, 8003bc6 <I2C_RequestMemoryRead+0x46>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8003bb6:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8003bb8:	05db      	lsls	r3, r3, #23
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8003bba:	bf44      	itt	mi
 8003bbc:	f44f 7300 	movmi.w	r3, #512	@ 0x200
 8003bc0:	6423      	strmi	r3, [r4, #64]	@ 0x40
    return HAL_TIMEOUT;
 8003bc2:	2003      	movs	r0, #3
 8003bc4:	e021      	b.n	8003c0a <I2C_RequestMemoryRead+0x8a>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8003bc6:	fa5f f986 	uxtb.w	r9, r6
 8003bca:	f006 06fe 	and.w	r6, r6, #254	@ 0xfe
 8003bce:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8003bd0:	492b      	ldr	r1, [pc, #172]	@ (8003c80 <I2C_RequestMemoryRead+0x100>)
 8003bd2:	4643      	mov	r3, r8
 8003bd4:	463a      	mov	r2, r7
 8003bd6:	4620      	mov	r0, r4
 8003bd8:	f7ff ff0c 	bl	80039f4 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8003bdc:	b9a0      	cbnz	r0, 8003c08 <I2C_RequestMemoryRead+0x88>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8003bde:	6823      	ldr	r3, [r4, #0]
 8003be0:	9003      	str	r0, [sp, #12]
 8003be2:	695a      	ldr	r2, [r3, #20]
 8003be4:	9203      	str	r2, [sp, #12]
 8003be6:	699b      	ldr	r3, [r3, #24]
 8003be8:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003bea:	4642      	mov	r2, r8
 8003bec:	4639      	mov	r1, r7
 8003bee:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8003bf0:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003bf2:	f7ff ff41 	bl	8003a78 <I2C_WaitOnTXEFlagUntilTimeout>
 8003bf6:	b158      	cbz	r0, 8003c10 <I2C_RequestMemoryRead+0x90>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8003bf8:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8003bfa:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003bfc:	bf01      	itttt	eq
 8003bfe:	6822      	ldreq	r2, [r4, #0]
 8003c00:	6813      	ldreq	r3, [r2, #0]
 8003c02:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 8003c06:	6013      	streq	r3, [r2, #0]
    return HAL_ERROR;
 8003c08:	2001      	movs	r0, #1
}
 8003c0a:	b004      	add	sp, #16
 8003c0c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8003c10:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003c14:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8003c16:	d11a      	bne.n	8003c4e <I2C_RequestMemoryRead+0xce>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8003c18:	b2ed      	uxtb	r5, r5
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003c1a:	4642      	mov	r2, r8
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8003c1c:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003c1e:	4639      	mov	r1, r7
 8003c20:	4620      	mov	r0, r4
 8003c22:	f7ff ff29 	bl	8003a78 <I2C_WaitOnTXEFlagUntilTimeout>
 8003c26:	4602      	mov	r2, r0
 8003c28:	2800      	cmp	r0, #0
 8003c2a:	d1e5      	bne.n	8003bf8 <I2C_RequestMemoryRead+0x78>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8003c2c:	6821      	ldr	r1, [r4, #0]
 8003c2e:	680b      	ldr	r3, [r1, #0]
 8003c30:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003c34:	600b      	str	r3, [r1, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8003c36:	4620      	mov	r0, r4
 8003c38:	f8cd 8000 	str.w	r8, [sp]
 8003c3c:	463b      	mov	r3, r7
 8003c3e:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8003c42:	f7ff fe97 	bl	8003974 <I2C_WaitOnFlagUntilTimeout>
 8003c46:	6822      	ldr	r2, [r4, #0]
 8003c48:	b160      	cbz	r0, 8003c64 <I2C_RequestMemoryRead+0xe4>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8003c4a:	6813      	ldr	r3, [r2, #0]
 8003c4c:	e7b4      	b.n	8003bb8 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8003c4e:	0a2a      	lsrs	r2, r5, #8
 8003c50:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003c52:	4639      	mov	r1, r7
 8003c54:	4642      	mov	r2, r8
 8003c56:	4620      	mov	r0, r4
 8003c58:	f7ff ff0e 	bl	8003a78 <I2C_WaitOnTXEFlagUntilTimeout>
 8003c5c:	2800      	cmp	r0, #0
 8003c5e:	d1cb      	bne.n	8003bf8 <I2C_RequestMemoryRead+0x78>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8003c60:	6823      	ldr	r3, [r4, #0]
 8003c62:	e7d9      	b.n	8003c18 <I2C_RequestMemoryRead+0x98>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8003c64:	f049 0301 	orr.w	r3, r9, #1
 8003c68:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8003c6a:	4905      	ldr	r1, [pc, #20]	@ (8003c80 <I2C_RequestMemoryRead+0x100>)
 8003c6c:	4643      	mov	r3, r8
 8003c6e:	463a      	mov	r2, r7
 8003c70:	4620      	mov	r0, r4
 8003c72:	f7ff febf 	bl	80039f4 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8003c76:	3800      	subs	r0, #0
 8003c78:	bf18      	it	ne
 8003c7a:	2001      	movne	r0, #1
 8003c7c:	e7c5      	b.n	8003c0a <I2C_RequestMemoryRead+0x8a>
 8003c7e:	bf00      	nop
 8003c80:	00010002 	.word	0x00010002

08003c84 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 8003c84:	b570      	push	{r4, r5, r6, lr}
 8003c86:	4604      	mov	r4, r0
 8003c88:	460d      	mov	r5, r1
 8003c8a:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8003c8c:	6823      	ldr	r3, [r4, #0]
 8003c8e:	695b      	ldr	r3, [r3, #20]
 8003c90:	075b      	lsls	r3, r3, #29
 8003c92:	d501      	bpl.n	8003c98 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 8003c94:	2000      	movs	r0, #0
 8003c96:	e01e      	b.n	8003cd6 <I2C_WaitOnBTFFlagUntilTimeout+0x52>
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8003c98:	4620      	mov	r0, r4
 8003c9a:	f7ff fe51 	bl	8003940 <I2C_IsAcknowledgeFailed>
 8003c9e:	b9c8      	cbnz	r0, 8003cd4 <I2C_WaitOnBTFFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 8003ca0:	1c6a      	adds	r2, r5, #1
 8003ca2:	d0f3      	beq.n	8003c8c <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8003ca4:	f7ff fbde 	bl	8003464 <HAL_GetTick>
 8003ca8:	1b80      	subs	r0, r0, r6
 8003caa:	42a8      	cmp	r0, r5
 8003cac:	d801      	bhi.n	8003cb2 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 8003cae:	2d00      	cmp	r5, #0
 8003cb0:	d1ec      	bne.n	8003c8c <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET))
 8003cb2:	6823      	ldr	r3, [r4, #0]
 8003cb4:	695b      	ldr	r3, [r3, #20]
 8003cb6:	f013 0304 	ands.w	r3, r3, #4
 8003cba:	d1e7      	bne.n	8003c8c <I2C_WaitOnBTFFlagUntilTimeout+0x8>
          hi2c->State               = HAL_I2C_STATE_READY;
 8003cbc:	2220      	movs	r2, #32
          hi2c->PreviousState       = I2C_STATE_NONE;
 8003cbe:	6323      	str	r3, [r4, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8003cc0:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8003cc4:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8003cc8:	6c22      	ldr	r2, [r4, #64]	@ 0x40
          __HAL_UNLOCK(hi2c);
 8003cca:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8003cce:	f042 0220 	orr.w	r2, r2, #32
 8003cd2:	6422      	str	r2, [r4, #64]	@ 0x40
      return HAL_ERROR;
 8003cd4:	2001      	movs	r0, #1
}
 8003cd6:	bd70      	pop	{r4, r5, r6, pc}

08003cd8 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8003cd8:	b570      	push	{r4, r5, r6, lr}
 8003cda:	4604      	mov	r4, r0
 8003cdc:	460d      	mov	r5, r1
 8003cde:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8003ce0:	6821      	ldr	r1, [r4, #0]
 8003ce2:	694b      	ldr	r3, [r1, #20]
 8003ce4:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 8003ce8:	d001      	beq.n	8003cee <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 8003cea:	2000      	movs	r0, #0
 8003cec:	e011      	b.n	8003d12 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8003cee:	694a      	ldr	r2, [r1, #20]
 8003cf0:	06d2      	lsls	r2, r2, #27
 8003cf2:	d50f      	bpl.n	8003d14 <I2C_WaitOnRXNEFlagUntilTimeout+0x3c>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8003cf4:	f06f 0210 	mvn.w	r2, #16
 8003cf8:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8003cfa:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8003cfc:	6323      	str	r3, [r4, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8003cfe:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8003d02:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8003d06:	6c23      	ldr	r3, [r4, #64]	@ 0x40
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8003d08:	6423      	str	r3, [r4, #64]	@ 0x40
        __HAL_UNLOCK(hi2c);
 8003d0a:	2300      	movs	r3, #0
 8003d0c:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
      return HAL_ERROR;
 8003d10:	2001      	movs	r0, #1
}
 8003d12:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8003d14:	f7ff fba6 	bl	8003464 <HAL_GetTick>
 8003d18:	1b80      	subs	r0, r0, r6
 8003d1a:	42a8      	cmp	r0, r5
 8003d1c:	d801      	bhi.n	8003d22 <I2C_WaitOnRXNEFlagUntilTimeout+0x4a>
 8003d1e:	2d00      	cmp	r5, #0
 8003d20:	d1de      	bne.n	8003ce0 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET))
 8003d22:	6823      	ldr	r3, [r4, #0]
 8003d24:	695b      	ldr	r3, [r3, #20]
 8003d26:	f013 0340 	ands.w	r3, r3, #64	@ 0x40
 8003d2a:	d1d9      	bne.n	8003ce0 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
        hi2c->State               = HAL_I2C_STATE_READY;
 8003d2c:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8003d2e:	6323      	str	r3, [r4, #48]	@ 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8003d30:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8003d34:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8003d38:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8003d3a:	4313      	orrs	r3, r2
 8003d3c:	e7e4      	b.n	8003d08 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>
	...

08003d40 <HAL_I2C_Init>:
{
 8003d40:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 8003d42:	4604      	mov	r4, r0
 8003d44:	b908      	cbnz	r0, 8003d4a <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 8003d46:	2001      	movs	r0, #1
}
 8003d48:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8003d4a:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8003d4e:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8003d52:	b91b      	cbnz	r3, 8003d5c <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 8003d54:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_I2C_MspInit(hi2c);
 8003d58:	f7fe f9fe 	bl	8002158 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8003d5c:	2324      	movs	r3, #36	@ 0x24
 8003d5e:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8003d62:	6823      	ldr	r3, [r4, #0]
 8003d64:	681a      	ldr	r2, [r3, #0]
 8003d66:	f022 0201 	bic.w	r2, r2, #1
 8003d6a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8003d6c:	681a      	ldr	r2, [r3, #0]
 8003d6e:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8003d72:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8003d74:	681a      	ldr	r2, [r3, #0]
 8003d76:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8003d7a:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8003d7c:	f001 fb9e 	bl	80054bc <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8003d80:	4b3f      	ldr	r3, [pc, #252]	@ (8003e80 <HAL_I2C_Init+0x140>)
 8003d82:	6865      	ldr	r5, [r4, #4]
 8003d84:	429d      	cmp	r5, r3
 8003d86:	bf94      	ite	ls
 8003d88:	4b3e      	ldrls	r3, [pc, #248]	@ (8003e84 <HAL_I2C_Init+0x144>)
 8003d8a:	4b3f      	ldrhi	r3, [pc, #252]	@ (8003e88 <HAL_I2C_Init+0x148>)
 8003d8c:	4298      	cmp	r0, r3
 8003d8e:	bf8c      	ite	hi
 8003d90:	2300      	movhi	r3, #0
 8003d92:	2301      	movls	r3, #1
 8003d94:	2b00      	cmp	r3, #0
 8003d96:	d1d6      	bne.n	8003d46 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8003d98:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8003d9a:	4e39      	ldr	r6, [pc, #228]	@ (8003e80 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8003d9c:	6851      	ldr	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8003d9e:	4b3b      	ldr	r3, [pc, #236]	@ (8003e8c <HAL_I2C_Init+0x14c>)
 8003da0:	fbb0 f3f3 	udiv	r3, r0, r3
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8003da4:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 8003da8:	4319      	orrs	r1, r3
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8003daa:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8003dac:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8003dae:	bf88      	it	hi
 8003db0:	f44f 7696 	movhi.w	r6, #300	@ 0x12c
 8003db4:	6a11      	ldr	r1, [r2, #32]
 8003db6:	bf88      	it	hi
 8003db8:	4373      	mulhi	r3, r6
 8003dba:	f021 013f 	bic.w	r1, r1, #63	@ 0x3f
 8003dbe:	bf84      	itt	hi
 8003dc0:	f44f 767a 	movhi.w	r6, #1000	@ 0x3e8
 8003dc4:	fbb3 f3f6 	udivhi	r3, r3, r6
 8003dc8:	3301      	adds	r3, #1
 8003dca:	430b      	orrs	r3, r1
 8003dcc:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8003dce:	69d1      	ldr	r1, [r2, #28]
 8003dd0:	1e43      	subs	r3, r0, #1
 8003dd2:	482b      	ldr	r0, [pc, #172]	@ (8003e80 <HAL_I2C_Init+0x140>)
 8003dd4:	f421 414f 	bic.w	r1, r1, #52992	@ 0xcf00
 8003dd8:	4285      	cmp	r5, r0
 8003dda:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 8003dde:	d832      	bhi.n	8003e46 <HAL_I2C_Init+0x106>
 8003de0:	006d      	lsls	r5, r5, #1
 8003de2:	f640 70fc 	movw	r0, #4092	@ 0xffc
 8003de6:	fbb3 f3f5 	udiv	r3, r3, r5
 8003dea:	3301      	adds	r3, #1
 8003dec:	4203      	tst	r3, r0
 8003dee:	d042      	beq.n	8003e76 <HAL_I2C_Init+0x136>
 8003df0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003df4:	4319      	orrs	r1, r3
 8003df6:	61d1      	str	r1, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8003df8:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8003dfc:	6811      	ldr	r1, [r2, #0]
 8003dfe:	4303      	orrs	r3, r0
 8003e00:	f021 01c0 	bic.w	r1, r1, #192	@ 0xc0
 8003e04:	430b      	orrs	r3, r1
 8003e06:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8003e08:	6891      	ldr	r1, [r2, #8]
 8003e0a:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8003e0e:	f421 4103 	bic.w	r1, r1, #33536	@ 0x8300
 8003e12:	4303      	orrs	r3, r0
 8003e14:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 8003e18:	430b      	orrs	r3, r1
 8003e1a:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8003e1c:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8003e20:	68d1      	ldr	r1, [r2, #12]
 8003e22:	4303      	orrs	r3, r0
 8003e24:	f021 01ff 	bic.w	r1, r1, #255	@ 0xff
 8003e28:	430b      	orrs	r3, r1
 8003e2a:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8003e2c:	6813      	ldr	r3, [r2, #0]
 8003e2e:	f043 0301 	orr.w	r3, r3, #1
 8003e32:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8003e34:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 8003e36:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8003e38:	6420      	str	r0, [r4, #64]	@ 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8003e3a:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8003e3e:	6320      	str	r0, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8003e40:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
  return HAL_OK;
 8003e44:	e780      	b.n	8003d48 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8003e46:	68a0      	ldr	r0, [r4, #8]
 8003e48:	b950      	cbnz	r0, 8003e60 <HAL_I2C_Init+0x120>
 8003e4a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8003e4e:	fbb3 f3f5 	udiv	r3, r3, r5
 8003e52:	3301      	adds	r3, #1
 8003e54:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003e58:	b17b      	cbz	r3, 8003e7a <HAL_I2C_Init+0x13a>
 8003e5a:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8003e5e:	e7c9      	b.n	8003df4 <HAL_I2C_Init+0xb4>
 8003e60:	2019      	movs	r0, #25
 8003e62:	4368      	muls	r0, r5
 8003e64:	fbb3 f3f0 	udiv	r3, r3, r0
 8003e68:	3301      	adds	r3, #1
 8003e6a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003e6e:	b123      	cbz	r3, 8003e7a <HAL_I2C_Init+0x13a>
 8003e70:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8003e74:	e7be      	b.n	8003df4 <HAL_I2C_Init+0xb4>
 8003e76:	2304      	movs	r3, #4
 8003e78:	e7bc      	b.n	8003df4 <HAL_I2C_Init+0xb4>
 8003e7a:	2301      	movs	r3, #1
 8003e7c:	e7ba      	b.n	8003df4 <HAL_I2C_Init+0xb4>
 8003e7e:	bf00      	nop
 8003e80:	000186a0 	.word	0x000186a0
 8003e84:	001e847f 	.word	0x001e847f
 8003e88:	003d08ff 	.word	0x003d08ff
 8003e8c:	000f4240 	.word	0x000f4240

08003e90 <HAL_I2C_Mem_Write>:
{
 8003e90:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8003e94:	4604      	mov	r4, r0
 8003e96:	4699      	mov	r9, r3
 8003e98:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8003e9a:	460f      	mov	r7, r1
 8003e9c:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8003e9e:	f7ff fae1 	bl	8003464 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8003ea2:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 8003ea6:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8003ea8:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8003eaa:	d003      	beq.n	8003eb4 <HAL_I2C_Mem_Write+0x24>
      return HAL_BUSY;
 8003eac:	2002      	movs	r0, #2
}
 8003eae:	b003      	add	sp, #12
 8003eb0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8003eb4:	9000      	str	r0, [sp, #0]
 8003eb6:	493c      	ldr	r1, [pc, #240]	@ (8003fa8 <HAL_I2C_Mem_Write+0x118>)
 8003eb8:	2319      	movs	r3, #25
 8003eba:	2201      	movs	r2, #1
 8003ebc:	4620      	mov	r0, r4
 8003ebe:	f7ff fd59 	bl	8003974 <I2C_WaitOnFlagUntilTimeout>
 8003ec2:	2800      	cmp	r0, #0
 8003ec4:	d1f2      	bne.n	8003eac <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 8003ec6:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 8003eca:	2b01      	cmp	r3, #1
 8003ecc:	d0ee      	beq.n	8003eac <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8003ece:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8003ed0:	2301      	movs	r3, #1
 8003ed2:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8003ed6:	6803      	ldr	r3, [r0, #0]
 8003ed8:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8003eda:	bf5e      	ittt	pl
 8003edc:	6803      	ldrpl	r3, [r0, #0]
 8003ede:	f043 0301 	orrpl.w	r3, r3, #1
 8003ee2:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8003ee4:	6803      	ldr	r3, [r0, #0]
 8003ee6:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8003eea:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8003eec:	2321      	movs	r3, #33	@ 0x21
 8003eee:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8003ef2:	2340      	movs	r3, #64	@ 0x40
 8003ef4:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8003ef8:	2300      	movs	r3, #0
 8003efa:	6423      	str	r3, [r4, #64]	@ 0x40
    hi2c->pBuffPtr    = pData;
 8003efc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003efe:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount   = Size;
 8003f00:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8003f04:	8563      	strh	r3, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8003f06:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8003f08:	8523      	strh	r3, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8003f0a:	4b28      	ldr	r3, [pc, #160]	@ (8003fac <HAL_I2C_Mem_Write+0x11c>)
 8003f0c:	62e3      	str	r3, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8003f0e:	4642      	mov	r2, r8
 8003f10:	e9cd 6500 	strd	r6, r5, [sp]
 8003f14:	464b      	mov	r3, r9
 8003f16:	4639      	mov	r1, r7
 8003f18:	4620      	mov	r0, r4
 8003f1a:	f7ff fdd7 	bl	8003acc <I2C_RequestMemoryWrite>
 8003f1e:	2800      	cmp	r0, #0
 8003f20:	d02a      	beq.n	8003f78 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 8003f22:	2001      	movs	r0, #1
 8003f24:	e7c3      	b.n	8003eae <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8003f26:	f7ff fda7 	bl	8003a78 <I2C_WaitOnTXEFlagUntilTimeout>
 8003f2a:	b140      	cbz	r0, 8003f3e <HAL_I2C_Mem_Write+0xae>
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8003f2c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8003f2e:	2b04      	cmp	r3, #4
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003f30:	bf01      	itttt	eq
 8003f32:	6822      	ldreq	r2, [r4, #0]
 8003f34:	6813      	ldreq	r3, [r2, #0]
 8003f36:	f443 7300 	orreq.w	r3, r3, #512	@ 0x200
 8003f3a:	6013      	streq	r3, [r2, #0]
 8003f3c:	e7f1      	b.n	8003f22 <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8003f3e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8003f40:	6827      	ldr	r7, [r4, #0]
 8003f42:	461a      	mov	r2, r3
 8003f44:	f812 1b01 	ldrb.w	r1, [r2], #1
 8003f48:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 8003f4a:	6262      	str	r2, [r4, #36]	@ 0x24
      hi2c->XferCount--;
 8003f4c:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
 8003f4e:	8d21      	ldrh	r1, [r4, #40]	@ 0x28
      hi2c->XferCount--;
 8003f50:	3a01      	subs	r2, #1
 8003f52:	b292      	uxth	r2, r2
 8003f54:	8562      	strh	r2, [r4, #42]	@ 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8003f56:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8003f58:	1e48      	subs	r0, r1, #1
 8003f5a:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8003f5c:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8003f5e:	8520      	strh	r0, [r4, #40]	@ 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8003f60:	d50a      	bpl.n	8003f78 <HAL_I2C_Mem_Write+0xe8>
 8003f62:	b148      	cbz	r0, 8003f78 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8003f64:	785a      	ldrb	r2, [r3, #1]
 8003f66:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8003f68:	3302      	adds	r3, #2
 8003f6a:	6263      	str	r3, [r4, #36]	@ 0x24
        hi2c->XferCount--;
 8003f6c:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8003f6e:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8003f70:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8003f72:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8003f74:	8521      	strh	r1, [r4, #40]	@ 0x28
        hi2c->XferCount--;
 8003f76:	8563      	strh	r3, [r4, #42]	@ 0x2a
    while (hi2c->XferSize > 0U)
 8003f78:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8003f7a:	462a      	mov	r2, r5
 8003f7c:	4631      	mov	r1, r6
 8003f7e:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8003f80:	2b00      	cmp	r3, #0
 8003f82:	d1d0      	bne.n	8003f26 <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8003f84:	f7ff fe7e 	bl	8003c84 <I2C_WaitOnBTFFlagUntilTimeout>
 8003f88:	2800      	cmp	r0, #0
 8003f8a:	d1cf      	bne.n	8003f2c <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003f8c:	6822      	ldr	r2, [r4, #0]
 8003f8e:	6813      	ldr	r3, [r2, #0]
 8003f90:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8003f94:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8003f96:	2320      	movs	r3, #32
 8003f98:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    __HAL_UNLOCK(hi2c);
 8003f9c:	f884 003c 	strb.w	r0, [r4, #60]	@ 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8003fa0:	f884 003e 	strb.w	r0, [r4, #62]	@ 0x3e
    return HAL_OK;
 8003fa4:	e783      	b.n	8003eae <HAL_I2C_Mem_Write+0x1e>
 8003fa6:	bf00      	nop
 8003fa8:	00100002 	.word	0x00100002
 8003fac:	ffff0000 	.word	0xffff0000

08003fb0 <HAL_I2C_Mem_Read>:
{
 8003fb0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003fb4:	4604      	mov	r4, r0
 8003fb6:	b087      	sub	sp, #28
 8003fb8:	4699      	mov	r9, r3
 8003fba:	9f10      	ldr	r7, [sp, #64]	@ 0x40
 8003fbc:	460d      	mov	r5, r1
 8003fbe:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8003fc0:	f7ff fa50 	bl	8003464 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8003fc4:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
 8003fc8:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8003fca:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8003fcc:	d004      	beq.n	8003fd8 <HAL_I2C_Mem_Read+0x28>
      return HAL_BUSY;
 8003fce:	2502      	movs	r5, #2
}
 8003fd0:	4628      	mov	r0, r5
 8003fd2:	b007      	add	sp, #28
 8003fd4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8003fd8:	9000      	str	r0, [sp, #0]
 8003fda:	497a      	ldr	r1, [pc, #488]	@ (80041c4 <HAL_I2C_Mem_Read+0x214>)
 8003fdc:	2319      	movs	r3, #25
 8003fde:	2201      	movs	r2, #1
 8003fe0:	4620      	mov	r0, r4
 8003fe2:	f7ff fcc7 	bl	8003974 <I2C_WaitOnFlagUntilTimeout>
 8003fe6:	2800      	cmp	r0, #0
 8003fe8:	d1f1      	bne.n	8003fce <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 8003fea:	f894 303c 	ldrb.w	r3, [r4, #60]	@ 0x3c
 8003fee:	2b01      	cmp	r3, #1
 8003ff0:	d0ed      	beq.n	8003fce <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8003ff2:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8003ff4:	2301      	movs	r3, #1
 8003ff6:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8003ffa:	6803      	ldr	r3, [r0, #0]
 8003ffc:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8003ffe:	bf5e      	ittt	pl
 8004000:	6803      	ldrpl	r3, [r0, #0]
 8004002:	f043 0301 	orrpl.w	r3, r3, #1
 8004006:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8004008:	6803      	ldr	r3, [r0, #0]
 800400a:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800400e:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8004010:	2322      	movs	r3, #34	@ 0x22
 8004012:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8004016:	2340      	movs	r3, #64	@ 0x40
 8004018:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800401c:	2300      	movs	r3, #0
 800401e:	6423      	str	r3, [r4, #64]	@ 0x40
    hi2c->pBuffPtr    = pData;
 8004020:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8004022:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->XferCount   = Size;
 8004024:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 8004028:	8563      	strh	r3, [r4, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800402a:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 800402c:	8523      	strh	r3, [r4, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800402e:	4b66      	ldr	r3, [pc, #408]	@ (80041c8 <HAL_I2C_Mem_Read+0x218>)
 8004030:	62e3      	str	r3, [r4, #44]	@ 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8004032:	4629      	mov	r1, r5
 8004034:	e9cd 7600 	strd	r7, r6, [sp]
 8004038:	464b      	mov	r3, r9
 800403a:	4642      	mov	r2, r8
 800403c:	4620      	mov	r0, r4
 800403e:	f7ff fd9f 	bl	8003b80 <I2C_RequestMemoryRead>
 8004042:	4605      	mov	r5, r0
 8004044:	b108      	cbz	r0, 800404a <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 8004046:	2501      	movs	r5, #1
 8004048:	e7c2      	b.n	8003fd0 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 800404a:	8d22      	ldrh	r2, [r4, #40]	@ 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800404c:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 800404e:	b9b2      	cbnz	r2, 800407e <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004050:	9002      	str	r0, [sp, #8]
 8004052:	695a      	ldr	r2, [r3, #20]
 8004054:	9202      	str	r2, [sp, #8]
 8004056:	699a      	ldr	r2, [r3, #24]
 8004058:	9202      	str	r2, [sp, #8]
 800405a:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800405c:	681a      	ldr	r2, [r3, #0]
 800405e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004062:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004064:	f8df 8164 	ldr.w	r8, [pc, #356]	@ 80041cc <HAL_I2C_Mem_Read+0x21c>
    while (hi2c->XferSize > 0U)
 8004068:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 800406a:	2b00      	cmp	r3, #0
 800406c:	d12c      	bne.n	80040c8 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 800406e:	2220      	movs	r2, #32
 8004070:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
    __HAL_UNLOCK(hi2c);
 8004074:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8004078:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
    return HAL_OK;
 800407c:	e7a8      	b.n	8003fd0 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 800407e:	2a01      	cmp	r2, #1
 8004080:	d10a      	bne.n	8004098 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004082:	681a      	ldr	r2, [r3, #0]
 8004084:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004088:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800408a:	9003      	str	r0, [sp, #12]
 800408c:	695a      	ldr	r2, [r3, #20]
 800408e:	9203      	str	r2, [sp, #12]
 8004090:	699a      	ldr	r2, [r3, #24]
 8004092:	9203      	str	r2, [sp, #12]
 8004094:	9a03      	ldr	r2, [sp, #12]
 8004096:	e7e1      	b.n	800405c <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8004098:	2a02      	cmp	r2, #2
 800409a:	d10e      	bne.n	80040ba <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800409c:	681a      	ldr	r2, [r3, #0]
 800409e:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80040a2:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80040a4:	681a      	ldr	r2, [r3, #0]
 80040a6:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80040aa:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80040ac:	9004      	str	r0, [sp, #16]
 80040ae:	695a      	ldr	r2, [r3, #20]
 80040b0:	9204      	str	r2, [sp, #16]
 80040b2:	699b      	ldr	r3, [r3, #24]
 80040b4:	9304      	str	r3, [sp, #16]
 80040b6:	9b04      	ldr	r3, [sp, #16]
 80040b8:	e7d4      	b.n	8004064 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80040ba:	9005      	str	r0, [sp, #20]
 80040bc:	695a      	ldr	r2, [r3, #20]
 80040be:	9205      	str	r2, [sp, #20]
 80040c0:	699b      	ldr	r3, [r3, #24]
 80040c2:	9305      	str	r3, [sp, #20]
 80040c4:	9b05      	ldr	r3, [sp, #20]
 80040c6:	e7cd      	b.n	8004064 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 80040c8:	2b03      	cmp	r3, #3
 80040ca:	d856      	bhi.n	800417a <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 80040cc:	2b01      	cmp	r3, #1
 80040ce:	d115      	bne.n	80040fc <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80040d0:	4632      	mov	r2, r6
 80040d2:	4639      	mov	r1, r7
 80040d4:	4620      	mov	r0, r4
 80040d6:	f7ff fdff 	bl	8003cd8 <I2C_WaitOnRXNEFlagUntilTimeout>
 80040da:	2800      	cmp	r0, #0
 80040dc:	d1b3      	bne.n	8004046 <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80040de:	6823      	ldr	r3, [r4, #0]
 80040e0:	691a      	ldr	r2, [r3, #16]
 80040e2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80040e4:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80040e6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80040e8:	3301      	adds	r3, #1
 80040ea:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 80040ec:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 80040ee:	3b01      	subs	r3, #1
 80040f0:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 80040f2:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 80040f4:	3b01      	subs	r3, #1
 80040f6:	b29b      	uxth	r3, r3
 80040f8:	8563      	strh	r3, [r4, #42]	@ 0x2a
 80040fa:	e7b5      	b.n	8004068 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 80040fc:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80040fe:	9600      	str	r6, [sp, #0]
 8004100:	463b      	mov	r3, r7
 8004102:	f04f 0200 	mov.w	r2, #0
 8004106:	4641      	mov	r1, r8
 8004108:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 800410a:	d119      	bne.n	8004140 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800410c:	f7ff fc32 	bl	8003974 <I2C_WaitOnFlagUntilTimeout>
 8004110:	2800      	cmp	r0, #0
 8004112:	d198      	bne.n	8004046 <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004114:	6823      	ldr	r3, [r4, #0]
 8004116:	681a      	ldr	r2, [r3, #0]
 8004118:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800411c:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800411e:	691a      	ldr	r2, [r3, #16]
 8004120:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8004122:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8004124:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8004126:	1c53      	adds	r3, r2, #1
 8004128:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 800412a:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 800412c:	3b01      	subs	r3, #1
 800412e:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 8004130:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8004132:	3b01      	subs	r3, #1
 8004134:	b29b      	uxth	r3, r3
 8004136:	8563      	strh	r3, [r4, #42]	@ 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004138:	6823      	ldr	r3, [r4, #0]
 800413a:	691b      	ldr	r3, [r3, #16]
 800413c:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 800413e:	e7d2      	b.n	80040e6 <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004140:	f7ff fc18 	bl	8003974 <I2C_WaitOnFlagUntilTimeout>
 8004144:	4602      	mov	r2, r0
 8004146:	2800      	cmp	r0, #0
 8004148:	f47f af7d 	bne.w	8004046 <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800414c:	6823      	ldr	r3, [r4, #0]
 800414e:	6819      	ldr	r1, [r3, #0]
 8004150:	f421 6180 	bic.w	r1, r1, #1024	@ 0x400
 8004154:	6019      	str	r1, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004156:	6919      	ldr	r1, [r3, #16]
 8004158:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800415a:	7019      	strb	r1, [r3, #0]
          hi2c->pBuffPtr++;
 800415c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800415e:	3301      	adds	r3, #1
 8004160:	6263      	str	r3, [r4, #36]	@ 0x24
          hi2c->XferSize--;
 8004162:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
 8004164:	3b01      	subs	r3, #1
 8004166:	8523      	strh	r3, [r4, #40]	@ 0x28
          hi2c->XferCount--;
 8004168:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 800416a:	3b01      	subs	r3, #1
 800416c:	b29b      	uxth	r3, r3
 800416e:	8563      	strh	r3, [r4, #42]	@ 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004170:	4641      	mov	r1, r8
 8004172:	9600      	str	r6, [sp, #0]
 8004174:	463b      	mov	r3, r7
 8004176:	4620      	mov	r0, r4
 8004178:	e7c8      	b.n	800410c <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800417a:	4632      	mov	r2, r6
 800417c:	4639      	mov	r1, r7
 800417e:	4620      	mov	r0, r4
 8004180:	f7ff fdaa 	bl	8003cd8 <I2C_WaitOnRXNEFlagUntilTimeout>
 8004184:	2800      	cmp	r0, #0
 8004186:	f47f af5e 	bne.w	8004046 <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800418a:	6823      	ldr	r3, [r4, #0]
 800418c:	691a      	ldr	r2, [r3, #16]
 800418e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8004190:	701a      	strb	r2, [r3, #0]
        hi2c->XferCount--;
 8004192:	8d62      	ldrh	r2, [r4, #42]	@ 0x2a
        hi2c->pBuffPtr++;
 8004194:	6a61      	ldr	r1, [r4, #36]	@ 0x24
        hi2c->XferCount--;
 8004196:	3a01      	subs	r2, #1
 8004198:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 800419a:	1c4b      	adds	r3, r1, #1
        hi2c->XferCount--;
 800419c:	8562      	strh	r2, [r4, #42]	@ 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800419e:	6822      	ldr	r2, [r4, #0]
        hi2c->pBuffPtr++;
 80041a0:	6263      	str	r3, [r4, #36]	@ 0x24
        hi2c->XferSize--;
 80041a2:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80041a4:	6950      	ldr	r0, [r2, #20]
        hi2c->XferSize--;
 80041a6:	3b01      	subs	r3, #1
 80041a8:	b29b      	uxth	r3, r3
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80041aa:	0740      	lsls	r0, r0, #29
        hi2c->XferSize--;
 80041ac:	8523      	strh	r3, [r4, #40]	@ 0x28
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80041ae:	f57f af5b 	bpl.w	8004068 <HAL_I2C_Mem_Read+0xb8>
          if (hi2c->XferSize == 3U)
 80041b2:	2b03      	cmp	r3, #3
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80041b4:	bf02      	ittt	eq
 80041b6:	6813      	ldreq	r3, [r2, #0]
 80041b8:	f423 6380 	biceq.w	r3, r3, #1024	@ 0x400
 80041bc:	6013      	streq	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80041be:	6913      	ldr	r3, [r2, #16]
 80041c0:	704b      	strb	r3, [r1, #1]
 80041c2:	e790      	b.n	80040e6 <HAL_I2C_Mem_Read+0x136>
 80041c4:	00100002 	.word	0x00100002
 80041c8:	ffff0000 	.word	0xffff0000
 80041cc:	00010004 	.word	0x00010004

080041d0 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 80041d0:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80041d2:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 80041d6:	2b20      	cmp	r3, #32
 80041d8:	b2dc      	uxtb	r4, r3
 80041da:	d116      	bne.n	800420a <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 80041dc:	2324      	movs	r3, #36	@ 0x24
 80041de:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80041e2:	6803      	ldr	r3, [r0, #0]
 80041e4:	681a      	ldr	r2, [r3, #0]
 80041e6:	f022 0201 	bic.w	r2, r2, #1
 80041ea:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 80041ec:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80041ee:	f022 0210 	bic.w	r2, r2, #16
 80041f2:	625a      	str	r2, [r3, #36]	@ 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 80041f4:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80041f6:	4311      	orrs	r1, r2
 80041f8:	6259      	str	r1, [r3, #36]	@ 0x24

    __HAL_I2C_ENABLE(hi2c);
 80041fa:	681a      	ldr	r2, [r3, #0]
 80041fc:	f042 0201 	orr.w	r2, r2, #1
 8004200:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8004202:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d

    return HAL_OK;
 8004206:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8004208:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 800420a:	2002      	movs	r0, #2
 800420c:	e7fc      	b.n	8004208 <HAL_I2CEx_ConfigAnalogFilter+0x38>

0800420e <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 800420e:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8004210:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8004214:	2b20      	cmp	r3, #32
 8004216:	b2dc      	uxtb	r4, r3
 8004218:	d116      	bne.n	8004248 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 800421a:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800421c:	2324      	movs	r3, #36	@ 0x24
 800421e:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d
    __HAL_I2C_DISABLE(hi2c);
 8004222:	6813      	ldr	r3, [r2, #0]
 8004224:	f023 0301 	bic.w	r3, r3, #1
 8004228:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 800422a:	6a55      	ldr	r5, [r2, #36]	@ 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 800422c:	f64f 73f0 	movw	r3, #65520	@ 0xfff0
 8004230:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 8004232:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 8004234:	b29b      	uxth	r3, r3
 8004236:	6253      	str	r3, [r2, #36]	@ 0x24

    __HAL_I2C_ENABLE(hi2c);
 8004238:	6813      	ldr	r3, [r2, #0]
 800423a:	f043 0301 	orr.w	r3, r3, #1
 800423e:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8004240:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d

    return HAL_OK;
 8004244:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8004246:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 8004248:	2002      	movs	r0, #2
 800424a:	e7fc      	b.n	8004246 <HAL_I2CEx_ConfigDigitalFilter+0x38>

0800424c <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800424c:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800424e:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8004252:	01d2      	lsls	r2, r2, #7
 8004254:	3284      	adds	r2, #132	@ 0x84
 8004256:	1883      	adds	r3, r0, r2
{
 8004258:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800425c:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800425e:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8004260:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8004262:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8004266:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 800426a:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800426c:	68c5      	ldr	r5, [r0, #12]
 800426e:	f10c 0701 	add.w	r7, ip, #1
 8004272:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8004276:	f3c6 460b 	ubfx	r6, r6, #16, #12
 800427a:	4426      	add	r6, r4
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800427c:	443d      	add	r5, r7
 800427e:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8004282:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8004284:	68c6      	ldr	r6, [r0, #12]
 8004286:	68cd      	ldr	r5, [r1, #12]
 8004288:	f3c6 060a 	ubfx	r6, r6, #0, #11
 800428c:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800428e:	689d      	ldr	r5, [r3, #8]
 8004290:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
 8004294:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8004296:	68c7      	ldr	r7, [r0, #12]
 8004298:	688d      	ldr	r5, [r1, #8]
 800429a:	f3c7 070a 	ubfx	r7, r7, #0, #11
 800429e:	3501      	adds	r5, #1
 80042a0:	443d      	add	r5, r7
 80042a2:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 80042a6:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 80042a8:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 80042aa:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 80042ac:	f025 0507 	bic.w	r5, r5, #7
 80042b0:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 80042b2:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 80042b6:	611e      	str	r6, [r3, #16]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 80042b8:	f891 7032 	ldrb.w	r7, [r1, #50]	@ 0x32
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 80042bc:	699d      	ldr	r5, [r3, #24]
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 80042be:	f891 8031 	ldrb.w	r8, [r1, #49]	@ 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 80042c2:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 80042c6:	f891 5030 	ldrb.w	r5, [r1, #48]	@ 0x30
 80042ca:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 80042ce:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 80042d2:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 80042d6:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 80042d8:	695d      	ldr	r5, [r3, #20]
 80042da:	f025 05ff 	bic.w	r5, r5, #255	@ 0xff
 80042de:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 80042e0:	694d      	ldr	r5, [r1, #20]
 80042e2:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 80042e4:	69dd      	ldr	r5, [r3, #28]
 80042e6:	f425 65e0 	bic.w	r5, r5, #1792	@ 0x700
 80042ea:	f025 0507 	bic.w	r5, r5, #7
 80042ee:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 80042f0:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 80042f4:	433d      	orrs	r5, r7
 80042f6:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80042f8:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80042fa:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80042fc:	f8c3 e028 	str.w	lr, [r3, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8004300:	2e07      	cmp	r6, #7
 8004302:	629d      	str	r5, [r3, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8004304:	bf9c      	itt	ls
 8004306:	4d0e      	ldrls	r5, [pc, #56]	@ (8004340 <LTDC_SetConfig+0xf4>)
 8004308:	5dae      	ldrbls	r6, [r5, r6]
  {
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800430a:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 800430c:	f005 25e0 	and.w	r5, r5, #3758153728	@ 0xe000e000
 8004310:	62dd      	str	r5, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8004312:	bf88      	it	hi
 8004314:	2601      	movhi	r6, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8004316:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8004318:	6ac9      	ldr	r1, [r1, #44]	@ 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800431a:	eba4 040c 	sub.w	r4, r4, ip
 800431e:	4374      	muls	r4, r6
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8004320:	4375      	muls	r5, r6
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8004322:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8004324:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8004328:	62dc      	str	r4, [r3, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800432a:	6b1c      	ldr	r4, [r3, #48]	@ 0x30
 800432c:	f36f 040a 	bfc	r4, #0, #11
 8004330:	631c      	str	r4, [r3, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8004332:	6319      	str	r1, [r3, #48]	@ 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8004334:	5883      	ldr	r3, [r0, r2]
 8004336:	f043 0301 	orr.w	r3, r3, #1
 800433a:	5083      	str	r3, [r0, r2]
}
 800433c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8004340:	080237b0 	.word	0x080237b0

08004344 <HAL_LTDC_Init>:
{
 8004344:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8004346:	4604      	mov	r4, r0
 8004348:	2800      	cmp	r0, #0
 800434a:	d063      	beq.n	8004414 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800434c:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
 8004350:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8004354:	b91b      	cbnz	r3, 800435e <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8004356:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
 800435a:	f7fd ff59 	bl	8002210 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800435e:	2302      	movs	r3, #2
 8004360:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8004364:	6823      	ldr	r3, [r4, #0]
 8004366:	699a      	ldr	r2, [r3, #24]
 8004368:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
 800436c:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800436e:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8004372:	4302      	orrs	r2, r0
 8004374:	68e0      	ldr	r0, [r4, #12]
 8004376:	6999      	ldr	r1, [r3, #24]
 8004378:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800437a:	6920      	ldr	r0, [r4, #16]
 800437c:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800437e:	430a      	orrs	r2, r1
 8004380:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8004382:	689a      	ldr	r2, [r3, #8]
 8004384:	4924      	ldr	r1, [pc, #144]	@ (8004418 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8004386:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8004388:	400a      	ands	r2, r1
 800438a:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800438c:	689a      	ldr	r2, [r3, #8]
 800438e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8004392:	69a0      	ldr	r0, [r4, #24]
 8004394:	4302      	orrs	r2, r0
 8004396:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8004398:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800439a:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800439c:	400a      	ands	r2, r1
 800439e:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 80043a0:	68da      	ldr	r2, [r3, #12]
 80043a2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80043a6:	6a20      	ldr	r0, [r4, #32]
 80043a8:	4302      	orrs	r2, r0
 80043aa:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 80043ac:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 80043ae:	6a60      	ldr	r0, [r4, #36]	@ 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 80043b0:	400a      	ands	r2, r1
 80043b2:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 80043b4:	691a      	ldr	r2, [r3, #16]
 80043b6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80043ba:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 80043bc:	4302      	orrs	r2, r0
 80043be:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 80043c0:	695a      	ldr	r2, [r3, #20]
 80043c2:	400a      	ands	r2, r1
 80043c4:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 80043c6:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 80043c8:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 80043ca:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80043ce:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 80043d0:	430a      	orrs	r2, r1
 80043d2:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80043d4:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 80043d6:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 80043da:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80043de:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
 80043e2:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 80043e4:	6add      	ldr	r5, [r3, #44]	@ 0x2c
 80043e6:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
 80043ea:	432a      	orrs	r2, r5
 80043ec:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 80043f0:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80043f4:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 80043f6:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80043f8:	f042 0206 	orr.w	r2, r2, #6
 80043fc:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
 80043fe:	699a      	ldr	r2, [r3, #24]
 8004400:	f042 0201 	orr.w	r2, r2, #1
 8004404:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8004406:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8004408:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800440a:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800440e:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
}
 8004412:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8004414:	2001      	movs	r0, #1
 8004416:	e7fc      	b.n	8004412 <HAL_LTDC_Init+0xce>
 8004418:	f000f800 	.word	0xf000f800

0800441c <HAL_LTDC_ErrorCallback>:
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
 800441c:	4770      	bx	lr

0800441e <HAL_LTDC_ReloadEventCallback>:
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
 800441e:	4770      	bx	lr

08004420 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8004420:	6803      	ldr	r3, [r0, #0]
{
 8004422:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8004424:	6b9e      	ldr	r6, [r3, #56]	@ 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8004426:	6b5d      	ldr	r5, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8004428:	0772      	lsls	r2, r6, #29
{
 800442a:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800442c:	d514      	bpl.n	8004458 <HAL_LTDC_IRQHandler+0x38>
 800442e:	0769      	lsls	r1, r5, #29
 8004430:	d512      	bpl.n	8004458 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8004432:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004434:	f022 0204 	bic.w	r2, r2, #4
 8004438:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800443a:	2204      	movs	r2, #4
 800443c:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800443e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 8004442:	f043 0301 	orr.w	r3, r3, #1
 8004446:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
 800444a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800444c:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 8004450:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8004454:	f7ff ffe2 	bl	800441c <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8004458:	07b2      	lsls	r2, r6, #30
 800445a:	d516      	bpl.n	800448a <HAL_LTDC_IRQHandler+0x6a>
 800445c:	07ab      	lsls	r3, r5, #30
 800445e:	d514      	bpl.n	800448a <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8004460:	6823      	ldr	r3, [r4, #0]
 8004462:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004464:	f022 0202 	bic.w	r2, r2, #2
 8004468:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800446a:	2202      	movs	r2, #2
 800446c:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800446e:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
 8004472:	4313      	orrs	r3, r2
 8004474:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8004478:	2304      	movs	r3, #4
 800447a:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 800447e:	2300      	movs	r3, #0
 8004480:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8004484:	4620      	mov	r0, r4
 8004486:	f7ff ffc9 	bl	800441c <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800448a:	07f0      	lsls	r0, r6, #31
 800448c:	d510      	bpl.n	80044b0 <HAL_LTDC_IRQHandler+0x90>
 800448e:	07e9      	lsls	r1, r5, #31
 8004490:	d50e      	bpl.n	80044b0 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8004492:	6823      	ldr	r3, [r4, #0]
 8004494:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004496:	f022 0201 	bic.w	r2, r2, #1
 800449a:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800449c:	2201      	movs	r2, #1
 800449e:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
 80044a0:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 80044a2:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 80044a6:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 80044aa:	4620      	mov	r0, r4
 80044ac:	f7fd f8b8 	bl	8001620 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 80044b0:	0732      	lsls	r2, r6, #28
 80044b2:	d511      	bpl.n	80044d8 <HAL_LTDC_IRQHandler+0xb8>
 80044b4:	072b      	lsls	r3, r5, #28
 80044b6:	d50f      	bpl.n	80044d8 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 80044b8:	6823      	ldr	r3, [r4, #0]
 80044ba:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80044bc:	f022 0208 	bic.w	r2, r2, #8
 80044c0:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 80044c2:	2208      	movs	r2, #8
 80044c4:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 80044c6:	2301      	movs	r3, #1
 80044c8:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
 80044cc:	2300      	movs	r3, #0
 80044ce:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 80044d2:	4620      	mov	r0, r4
 80044d4:	f7ff ffa3 	bl	800441e <HAL_LTDC_ReloadEventCallback>
}
 80044d8:	bd70      	pop	{r4, r5, r6, pc}

080044da <HAL_LTDC_ConfigLayer>:
{
 80044da:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 80044de:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
 80044e2:	2b01      	cmp	r3, #1
{
 80044e4:	4606      	mov	r6, r0
 80044e6:	460f      	mov	r7, r1
 80044e8:	4694      	mov	ip, r2
 80044ea:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 80044ee:	d01f      	beq.n	8004530 <HAL_LTDC_ConfigLayer+0x56>
 80044f0:	f04f 0801 	mov.w	r8, #1
 80044f4:	f886 80a0 	strb.w	r8, [r6, #160]	@ 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80044f8:	f886 00a1 	strb.w	r0, [r6, #161]	@ 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80044fc:	2434      	movs	r4, #52	@ 0x34
 80044fe:	460d      	mov	r5, r1
 8004500:	fb04 6402 	mla	r4, r4, r2, r6
 8004504:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8004506:	3438      	adds	r4, #56	@ 0x38
 8004508:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800450a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800450c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800450e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8004510:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8004512:	682b      	ldr	r3, [r5, #0]
 8004514:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8004516:	4630      	mov	r0, r6
 8004518:	4662      	mov	r2, ip
 800451a:	4639      	mov	r1, r7
 800451c:	f7ff fe96 	bl	800424c <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8004520:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 8004522:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8004524:	f8c3 8024 	str.w	r8, [r3, #36]	@ 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8004528:	f886 80a1 	strb.w	r8, [r6, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 800452c:	f886 00a0 	strb.w	r0, [r6, #160]	@ 0xa0
}
 8004530:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004534 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 8004534:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
 8004538:	2a01      	cmp	r2, #1
{
 800453a:	4603      	mov	r3, r0
 800453c:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8004540:	d012      	beq.n	8004568 <HAL_LTDC_ProgramLineEvent+0x34>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8004542:	681a      	ldr	r2, [r3, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8004544:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8004548:	6b50      	ldr	r0, [r2, #52]	@ 0x34
 800454a:	f020 0001 	bic.w	r0, r0, #1
 800454e:	6350      	str	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
 8004550:	4806      	ldr	r0, [pc, #24]	@ (800456c <HAL_LTDC_ProgramLineEvent+0x38>)
 8004552:	6401      	str	r1, [r0, #64]	@ 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8004554:	6b51      	ldr	r1, [r2, #52]	@ 0x34
 8004556:	f041 0101 	orr.w	r1, r1, #1
 800455a:	6351      	str	r1, [r2, #52]	@ 0x34
  __HAL_UNLOCK(hltdc);
 800455c:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 800455e:	2201      	movs	r2, #1
 8004560:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
 8004564:	f883 00a0 	strb.w	r0, [r3, #160]	@ 0xa0
}
 8004568:	4770      	bx	lr
 800456a:	bf00      	nop
 800456c:	40016800 	.word	0x40016800

08004570 <HAL_PCD_Init>:
  *         parameters in the PCD_InitTypeDef and initialize the associated handle.
  * @param  hpcd PCD handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_Init(PCD_HandleTypeDef *hpcd)
{
 8004570:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  const USB_OTG_GlobalTypeDef *USBx;
#endif /* defined (USB_OTG_FS) */
  uint8_t i;

  /* Check the PCD handle allocation */
  if (hpcd == NULL)
 8004572:	4604      	mov	r4, r0
 8004574:	b310      	cbz	r0, 80045bc <HAL_PCD_Init+0x4c>

#if defined (USB_OTG_FS)
  USBx = hpcd->Instance;
#endif /* defined (USB_OTG_FS) */

  if (hpcd->State == HAL_PCD_STATE_RESET)
 8004576:	f890 3495 	ldrb.w	r3, [r0, #1173]	@ 0x495
  USBx = hpcd->Instance;
 800457a:	6805      	ldr	r5, [r0, #0]
  if (hpcd->State == HAL_PCD_STATE_RESET)
 800457c:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8004580:	b91b      	cbnz	r3, 800458a <HAL_PCD_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hpcd->Lock = HAL_UNLOCKED;
 8004582:	f880 2494 	strb.w	r2, [r0, #1172]	@ 0x494

    /* Init the low level hardware */
    hpcd->MspInitCallback(hpcd);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_PCD_MspInit(hpcd);
 8004586:	f7fd f91d 	bl	80017c4 <HAL_PCD_MspInit>
#endif /* (USE_HAL_PCD_REGISTER_CALLBACKS) */
  }

  hpcd->State = HAL_PCD_STATE_BUSY;
 800458a:	2303      	movs	r3, #3

#if defined (USB_OTG_FS)
  /* Disable DMA mode for FS instance */
  if (USBx == USB_OTG_FS)
 800458c:	f1b5 4fa0 	cmp.w	r5, #1342177280	@ 0x50000000
  hpcd->State = HAL_PCD_STATE_BUSY;
 8004590:	f884 3495 	strb.w	r3, [r4, #1173]	@ 0x495
  {
    hpcd->Init.dma_enable = 0U;
 8004594:	bf04      	itt	eq
 8004596:	2300      	moveq	r3, #0
 8004598:	71a3      	strbeq	r3, [r4, #6]
  }
#endif /* defined (USB_OTG_FS) */

  /* Disable the Interrupts */
  __HAL_PCD_DISABLE(hpcd);
 800459a:	6820      	ldr	r0, [r4, #0]
 800459c:	f001 ff80 	bl	80064a0 <USB_DisableGlobalInt>

  /*Init the Core (common init.) */
  if (USB_CoreInit(hpcd->Instance, hpcd->Init) != HAL_OK)
 80045a0:	7c23      	ldrb	r3, [r4, #16]
 80045a2:	f88d 3000 	strb.w	r3, [sp]
 80045a6:	1d25      	adds	r5, r4, #4
 80045a8:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
 80045ac:	6820      	ldr	r0, [r4, #0]
 80045ae:	f001 febc 	bl	800632a <USB_CoreInit>
 80045b2:	4601      	mov	r1, r0
 80045b4:	b130      	cbz	r0, 80045c4 <HAL_PCD_Init+0x54>
  {
    hpcd->State = HAL_PCD_STATE_ERROR;
 80045b6:	2302      	movs	r3, #2
 80045b8:	f884 3495 	strb.w	r3, [r4, #1173]	@ 0x495
    return HAL_ERROR;
 80045bc:	2501      	movs	r5, #1
          defined(STM32F412Vx) || defined(STM32F412Rx) || defined(STM32F412Cx) || defined(STM32F413xx) ||
          defined(STM32F423xx) */
  (void)USB_DevDisconnect(hpcd->Instance);

  return HAL_OK;
}
 80045be:	4628      	mov	r0, r5
 80045c0:	b003      	add	sp, #12
 80045c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (USB_SetCurrentMode(hpcd->Instance, USB_DEVICE_MODE) != HAL_OK)
 80045c4:	6820      	ldr	r0, [r4, #0]
 80045c6:	f001 ff71 	bl	80064ac <USB_SetCurrentMode>
 80045ca:	2800      	cmp	r0, #0
 80045cc:	d1f3      	bne.n	80045b6 <HAL_PCD_Init+0x46>
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 80045ce:	7926      	ldrb	r6, [r4, #4]
 80045d0:	f104 0314 	add.w	r3, r4, #20
    hpcd->IN_ep[i].is_in = 1U;
 80045d4:	2701      	movs	r7, #1
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
 80045d6:	4602      	mov	r2, r0
 80045d8:	b2c1      	uxtb	r1, r0
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 80045da:	428e      	cmp	r6, r1
 80045dc:	f103 0324 	add.w	r3, r3, #36	@ 0x24
 80045e0:	d81b      	bhi.n	800461a <HAL_PCD_Init+0xaa>
 80045e2:	2100      	movs	r1, #0
 80045e4:	f504 7315 	add.w	r3, r4, #596	@ 0x254
    hpcd->OUT_ep[i].is_in = 0U;
 80045e8:	460a      	mov	r2, r1
 80045ea:	b2c8      	uxtb	r0, r1
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 80045ec:	4286      	cmp	r6, r0
 80045ee:	f103 0324 	add.w	r3, r3, #36	@ 0x24
 80045f2:	d820      	bhi.n	8004636 <HAL_PCD_Init+0xc6>
  if (USB_DevInit(hpcd->Instance, hpcd->Init) != HAL_OK)
 80045f4:	7c23      	ldrb	r3, [r4, #16]
 80045f6:	f88d 3000 	strb.w	r3, [sp]
 80045fa:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
 80045fe:	6820      	ldr	r0, [r4, #0]
 8004600:	f001 ffd0 	bl	80065a4 <USB_DevInit>
 8004604:	4605      	mov	r5, r0
 8004606:	2800      	cmp	r0, #0
 8004608:	d1d5      	bne.n	80045b6 <HAL_PCD_Init+0x46>
  hpcd->State = HAL_PCD_STATE_READY;
 800460a:	2301      	movs	r3, #1
  hpcd->USB_Address = 0U;
 800460c:	7460      	strb	r0, [r4, #17]
  (void)USB_DevDisconnect(hpcd->Instance);
 800460e:	6820      	ldr	r0, [r4, #0]
  hpcd->State = HAL_PCD_STATE_READY;
 8004610:	f884 3495 	strb.w	r3, [r4, #1173]	@ 0x495
  (void)USB_DevDisconnect(hpcd->Instance);
 8004614:	f002 fb0a 	bl	8006c2c <USB_DevDisconnect>
  return HAL_OK;
 8004618:	e7d1      	b.n	80045be <HAL_PCD_Init+0x4e>
    hpcd->IN_ep[i].tx_fifo_num = i;
 800461a:	f823 0c0a 	strh.w	r0, [r3, #-10]
    hpcd->IN_ep[i].xfer_buff = 0U;
 800461e:	e943 2207 	strd	r2, r2, [r3, #-28]
    hpcd->IN_ep[i].is_in = 1U;
 8004622:	f803 7c23 	strb.w	r7, [r3, #-35]
    hpcd->IN_ep[i].num = i;
 8004626:	f803 1c24 	strb.w	r1, [r3, #-36]
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
 800462a:	f803 2c20 	strb.w	r2, [r3, #-32]
    hpcd->IN_ep[i].xfer_len = 0U;
 800462e:	f843 2c14 	str.w	r2, [r3, #-20]
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8004632:	3001      	adds	r0, #1
 8004634:	e7d0      	b.n	80045d8 <HAL_PCD_Init+0x68>
    hpcd->OUT_ep[i].xfer_buff = 0U;
 8004636:	e943 2207 	strd	r2, r2, [r3, #-28]
    hpcd->OUT_ep[i].is_in = 0U;
 800463a:	f803 2c23 	strb.w	r2, [r3, #-35]
    hpcd->OUT_ep[i].num = i;
 800463e:	f803 0c24 	strb.w	r0, [r3, #-36]
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
 8004642:	f803 2c20 	strb.w	r2, [r3, #-32]
    hpcd->OUT_ep[i].xfer_len = 0U;
 8004646:	f843 2c14 	str.w	r2, [r3, #-20]
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 800464a:	3101      	adds	r1, #1
 800464c:	e7cd      	b.n	80045ea <HAL_PCD_Init+0x7a>

0800464e <HAL_PCD_Start>:
  * @brief  Start the USB device
  * @param  hpcd PCD handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_Start(PCD_HandleTypeDef *hpcd)
{
 800464e:	b510      	push	{r4, lr}
 8004650:	4604      	mov	r4, r0
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 8004652:	6800      	ldr	r0, [r0, #0]

  __HAL_LOCK(hpcd);
 8004654:	f894 3494 	ldrb.w	r3, [r4, #1172]	@ 0x494
 8004658:	2b01      	cmp	r3, #1
 800465a:	d015      	beq.n	8004688 <HAL_PCD_Start+0x3a>
 800465c:	2301      	movs	r3, #1
 800465e:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494

  if (((USBx->GUSBCFG & USB_OTG_GUSBCFG_PHYSEL) != 0U) &&
 8004662:	68c3      	ldr	r3, [r0, #12]
 8004664:	065b      	lsls	r3, r3, #25
 8004666:	d506      	bpl.n	8004676 <HAL_PCD_Start+0x28>
 8004668:	7b63      	ldrb	r3, [r4, #13]
 800466a:	2b01      	cmp	r3, #1
      (hpcd->Init.battery_charging_enable == 1U))
  {
    /* Enable USB Transceiver */
    USBx->GCCFG |= USB_OTG_GCCFG_PWRDWN;
 800466c:	bf02      	ittt	eq
 800466e:	6b83      	ldreq	r3, [r0, #56]	@ 0x38
 8004670:	f443 3380 	orreq.w	r3, r3, #65536	@ 0x10000
 8004674:	6383      	streq	r3, [r0, #56]	@ 0x38
  }

  __HAL_PCD_ENABLE(hpcd);
 8004676:	f001 ff0d 	bl	8006494 <USB_EnableGlobalInt>
  (void)USB_DevConnect(hpcd->Instance);
 800467a:	6820      	ldr	r0, [r4, #0]
 800467c:	f002 fac8 	bl	8006c10 <USB_DevConnect>
  __HAL_UNLOCK(hpcd);
 8004680:	2000      	movs	r0, #0
 8004682:	f884 0494 	strb.w	r0, [r4, #1172]	@ 0x494

  return HAL_OK;
}
 8004686:	bd10      	pop	{r4, pc}
  __HAL_LOCK(hpcd);
 8004688:	2002      	movs	r0, #2
 800468a:	e7fc      	b.n	8004686 <HAL_PCD_Start+0x38>

0800468c <HAL_PCD_SetAddress>:
  * @param  hpcd PCD handle
  * @param  address new device address
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_SetAddress(PCD_HandleTypeDef *hpcd, uint8_t address)
{
 800468c:	b510      	push	{r4, lr}
  __HAL_LOCK(hpcd);
 800468e:	f890 2494 	ldrb.w	r2, [r0, #1172]	@ 0x494
 8004692:	2a01      	cmp	r2, #1
{
 8004694:	4604      	mov	r4, r0
  __HAL_LOCK(hpcd);
 8004696:	d00a      	beq.n	80046ae <HAL_PCD_SetAddress+0x22>
 8004698:	2201      	movs	r2, #1
 800469a:	f880 2494 	strb.w	r2, [r0, #1172]	@ 0x494
  hpcd->USB_Address = address;
 800469e:	7441      	strb	r1, [r0, #17]
  (void)USB_SetDevAddress(hpcd->Instance, address);
 80046a0:	6800      	ldr	r0, [r0, #0]
 80046a2:	f002 faa5 	bl	8006bf0 <USB_SetDevAddress>
  __HAL_UNLOCK(hpcd);
 80046a6:	2000      	movs	r0, #0
 80046a8:	f884 0494 	strb.w	r0, [r4, #1172]	@ 0x494

  return HAL_OK;
}
 80046ac:	bd10      	pop	{r4, pc}
  __HAL_LOCK(hpcd);
 80046ae:	2002      	movs	r0, #2
 80046b0:	e7fc      	b.n	80046ac <HAL_PCD_SetAddress+0x20>

080046b2 <HAL_PCD_EP_Open>:
  * @param  ep_type endpoint type
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_Open(PCD_HandleTypeDef *hpcd, uint8_t ep_addr,
                                  uint16_t ep_mps, uint8_t ep_type)
{
 80046b2:	b570      	push	{r4, r5, r6, lr}
 80046b4:	f001 060f 	and.w	r6, r1, #15
 80046b8:	eb06 04c6 	add.w	r4, r6, r6, lsl #3
  HAL_StatusTypeDef ret = HAL_OK;
  PCD_EPTypeDef *ep;

  if ((ep_addr & 0x80U) == 0x80U)
 80046bc:	f011 0f80 	tst.w	r1, #128	@ 0x80
{
 80046c0:	4605      	mov	r5, r0
 80046c2:	ea4f 0484 	mov.w	r4, r4, lsl #2
 80046c6:	f04f 0024 	mov.w	r0, #36	@ 0x24
  if ((ep_addr & 0x80U) == 0x80U)
 80046ca:	d020      	beq.n	800470e <HAL_PCD_EP_Open+0x5c>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 1U;
 80046cc:	fb00 5006 	mla	r0, r0, r6, r5
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 80046d0:	f104 0114 	add.w	r1, r4, #20
    ep->is_in = 1U;
 80046d4:	2401      	movs	r4, #1
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 80046d6:	4429      	add	r1, r5
    ep->is_in = 1U;
 80046d8:	7544      	strb	r4, [r0, #21]
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 0U;
  }

  ep->num = ep_addr & EP_ADDR_MSK;
  ep->maxpacket = (uint32_t)ep_mps & 0x7FFU;
 80046da:	f3c2 020a 	ubfx	r2, r2, #0, #11
 80046de:	608a      	str	r2, [r1, #8]
  ep->type = ep_type;

  if (ep->is_in != 0U)
 80046e0:	784a      	ldrb	r2, [r1, #1]
  ep->num = ep_addr & EP_ADDR_MSK;
 80046e2:	700e      	strb	r6, [r1, #0]
  ep->type = ep_type;
 80046e4:	710b      	strb	r3, [r1, #4]
  if (ep->is_in != 0U)
 80046e6:	b102      	cbz	r2, 80046ea <HAL_PCD_EP_Open+0x38>
  {
    /* Assign a Tx FIFO */
    ep->tx_fifo_num = ep->num;
 80046e8:	834e      	strh	r6, [r1, #26]
  }

  /* Set initial data PID. */
  if (ep_type == EP_TYPE_BULK)
 80046ea:	2b02      	cmp	r3, #2
  {
    ep->data_pid_start = 0U;
 80046ec:	bf04      	itt	eq
 80046ee:	2300      	moveq	r3, #0
 80046f0:	714b      	strbeq	r3, [r1, #5]
  }

  __HAL_LOCK(hpcd);
 80046f2:	f895 3494 	ldrb.w	r3, [r5, #1172]	@ 0x494
 80046f6:	2b01      	cmp	r3, #1
 80046f8:	d012      	beq.n	8004720 <HAL_PCD_EP_Open+0x6e>
 80046fa:	2301      	movs	r3, #1
  (void)USB_ActivateEndpoint(hpcd->Instance, ep);
 80046fc:	6828      	ldr	r0, [r5, #0]
  __HAL_LOCK(hpcd);
 80046fe:	f885 3494 	strb.w	r3, [r5, #1172]	@ 0x494
  (void)USB_ActivateEndpoint(hpcd->Instance, ep);
 8004702:	f002 f814 	bl	800672e <USB_ActivateEndpoint>
  __HAL_UNLOCK(hpcd);
 8004706:	2000      	movs	r0, #0
 8004708:	f885 0494 	strb.w	r0, [r5, #1172]	@ 0x494

  return ret;
}
 800470c:	bd70      	pop	{r4, r5, r6, pc}
    ep->is_in = 0U;
 800470e:	fb00 5006 	mla	r0, r0, r6, r5
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8004712:	f504 7115 	add.w	r1, r4, #596	@ 0x254
    ep->is_in = 0U;
 8004716:	2400      	movs	r4, #0
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8004718:	4429      	add	r1, r5
    ep->is_in = 0U;
 800471a:	f880 4255 	strb.w	r4, [r0, #597]	@ 0x255
 800471e:	e7dc      	b.n	80046da <HAL_PCD_EP_Open+0x28>
  __HAL_LOCK(hpcd);
 8004720:	2002      	movs	r0, #2
 8004722:	e7f3      	b.n	800470c <HAL_PCD_EP_Open+0x5a>

08004724 <HAL_PCD_EP_Close>:
  * @param  hpcd PCD handle
  * @param  ep_addr endpoint address
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_Close(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
{
 8004724:	b510      	push	{r4, lr}
 8004726:	4604      	mov	r4, r0
 8004728:	f001 000f 	and.w	r0, r1, #15
 800472c:	eb00 03c0 	add.w	r3, r0, r0, lsl #3
  PCD_EPTypeDef *ep;

  if ((ep_addr & 0x80U) == 0x80U)
 8004730:	f011 0f80 	tst.w	r1, #128	@ 0x80
 8004734:	ea4f 0383 	mov.w	r3, r3, lsl #2
 8004738:	f04f 0224 	mov.w	r2, #36	@ 0x24
 800473c:	d015      	beq.n	800476a <HAL_PCD_EP_Close+0x46>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 1U;
 800473e:	fb02 4200 	mla	r2, r2, r0, r4
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8004742:	f103 0114 	add.w	r1, r3, #20
    ep->is_in = 1U;
 8004746:	2301      	movs	r3, #1
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8004748:	4421      	add	r1, r4
    ep->is_in = 1U;
 800474a:	7553      	strb	r3, [r2, #21]
  else
  {
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 0U;
  }
  ep->num = ep_addr & EP_ADDR_MSK;
 800474c:	7008      	strb	r0, [r1, #0]

  __HAL_LOCK(hpcd);
 800474e:	f894 3494 	ldrb.w	r3, [r4, #1172]	@ 0x494
 8004752:	2b01      	cmp	r3, #1
 8004754:	d012      	beq.n	800477c <HAL_PCD_EP_Close+0x58>
 8004756:	2301      	movs	r3, #1
  (void)USB_DeactivateEndpoint(hpcd->Instance, ep);
 8004758:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(hpcd);
 800475a:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
  (void)USB_DeactivateEndpoint(hpcd->Instance, ep);
 800475e:	f002 f825 	bl	80067ac <USB_DeactivateEndpoint>
  __HAL_UNLOCK(hpcd);
 8004762:	2000      	movs	r0, #0
 8004764:	f884 0494 	strb.w	r0, [r4, #1172]	@ 0x494
  return HAL_OK;
}
 8004768:	bd10      	pop	{r4, pc}
    ep->is_in = 0U;
 800476a:	fb02 4200 	mla	r2, r2, r0, r4
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 800476e:	f503 7115 	add.w	r1, r3, #596	@ 0x254
    ep->is_in = 0U;
 8004772:	2300      	movs	r3, #0
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8004774:	4421      	add	r1, r4
    ep->is_in = 0U;
 8004776:	f882 3255 	strb.w	r3, [r2, #597]	@ 0x255
 800477a:	e7e7      	b.n	800474c <HAL_PCD_EP_Close+0x28>
  __HAL_LOCK(hpcd);
 800477c:	2002      	movs	r0, #2
 800477e:	e7f3      	b.n	8004768 <HAL_PCD_EP_Close+0x44>

08004780 <HAL_PCD_EP_Receive>:
  * @param  pBuf pointer to the reception buffer
  * @param  len amount of data to be received
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_Receive(PCD_HandleTypeDef *hpcd, uint8_t ep_addr, uint8_t *pBuf, uint32_t len)
{
 8004780:	b570      	push	{r4, r5, r6, lr}
 8004782:	f001 050f 	and.w	r5, r1, #15
  PCD_EPTypeDef *ep;

  ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 8004786:	2424      	movs	r4, #36	@ 0x24
 8004788:	fb04 0105 	mla	r1, r4, r5, r0

  /*setup and start the Xfer */
  ep->xfer_buff = pBuf;
 800478c:	fb04 0405 	mla	r4, r4, r5, r0
  ep->xfer_len = len;
 8004790:	e9c4 2398 	strd	r2, r3, [r4, #608]	@ 0x260
  ep->xfer_count = 0U;
 8004794:	2300      	movs	r3, #0
 8004796:	f8c4 3268 	str.w	r3, [r4, #616]	@ 0x268
  ep->is_in = 0U;
 800479a:	f884 3255 	strb.w	r3, [r4, #597]	@ 0x255
  ep->num = ep_addr & EP_ADDR_MSK;
 800479e:	f884 5254 	strb.w	r5, [r4, #596]	@ 0x254
{
 80047a2:	4616      	mov	r6, r2

  if (hpcd->Init.dma_enable == 1U)
 80047a4:	7982      	ldrb	r2, [r0, #6]
  {
    ep->dma_addr = (uint32_t)pBuf;
  }

  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 80047a6:	6800      	ldr	r0, [r0, #0]
  if (hpcd->Init.dma_enable == 1U)
 80047a8:	2a01      	cmp	r2, #1
  ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 80047aa:	f501 7115 	add.w	r1, r1, #596	@ 0x254
    ep->dma_addr = (uint32_t)pBuf;
 80047ae:	bf08      	it	eq
 80047b0:	f8c4 6270 	streq.w	r6, [r4, #624]	@ 0x270
  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 80047b4:	f002 f8a6 	bl	8006904 <USB_EPStartXfer>

  return HAL_OK;
}
 80047b8:	2000      	movs	r0, #0
 80047ba:	bd70      	pop	{r4, r5, r6, pc}

080047bc <HAL_PCD_EP_Transmit>:
  * @param  pBuf pointer to the transmission buffer
  * @param  len amount of data to be sent
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_Transmit(PCD_HandleTypeDef *hpcd, uint8_t ep_addr, uint8_t *pBuf, uint32_t len)
{
 80047bc:	b570      	push	{r4, r5, r6, lr}
 80047be:	f001 050f 	and.w	r5, r1, #15
  PCD_EPTypeDef *ep;

  ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 80047c2:	2424      	movs	r4, #36	@ 0x24
 80047c4:	fb04 0105 	mla	r1, r4, r5, r0

  /*setup and start the Xfer */
  ep->xfer_buff = pBuf;
 80047c8:	fb04 0405 	mla	r4, r4, r5, r0
  ep->xfer_len = len;
 80047cc:	e9c4 2308 	strd	r2, r3, [r4, #32]
  ep->xfer_count = 0U;
 80047d0:	2300      	movs	r3, #0
 80047d2:	62a3      	str	r3, [r4, #40]	@ 0x28
  ep->is_in = 1U;
 80047d4:	2301      	movs	r3, #1
 80047d6:	7563      	strb	r3, [r4, #21]
  ep->num = ep_addr & EP_ADDR_MSK;
 80047d8:	7525      	strb	r5, [r4, #20]
{
 80047da:	4616      	mov	r6, r2

  if (hpcd->Init.dma_enable == 1U)
 80047dc:	7982      	ldrb	r2, [r0, #6]
  {
    ep->dma_addr = (uint32_t)pBuf;
  }

  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 80047de:	6800      	ldr	r0, [r0, #0]
  if (hpcd->Init.dma_enable == 1U)
 80047e0:	429a      	cmp	r2, r3
  ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 80047e2:	f101 0114 	add.w	r1, r1, #20
    ep->dma_addr = (uint32_t)pBuf;
 80047e6:	bf08      	it	eq
 80047e8:	6326      	streq	r6, [r4, #48]	@ 0x30
  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
 80047ea:	f002 f88b 	bl	8006904 <USB_EPStartXfer>

  return HAL_OK;
}
 80047ee:	2000      	movs	r0, #0
 80047f0:	bd70      	pop	{r4, r5, r6, pc}

080047f2 <HAL_PCD_EP_SetStall>:
  * @param  hpcd PCD handle
  * @param  ep_addr endpoint address
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_SetStall(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
{
 80047f2:	b538      	push	{r3, r4, r5, lr}
  PCD_EPTypeDef *ep;

  if (((uint32_t)ep_addr & EP_ADDR_MSK) > hpcd->Init.dev_endpoints)
 80047f4:	7903      	ldrb	r3, [r0, #4]
 80047f6:	f001 050f 	and.w	r5, r1, #15
 80047fa:	42ab      	cmp	r3, r5
{
 80047fc:	4604      	mov	r4, r0
  if (((uint32_t)ep_addr & EP_ADDR_MSK) > hpcd->Init.dev_endpoints)
 80047fe:	d32b      	bcc.n	8004858 <HAL_PCD_EP_SetStall+0x66>
  {
    return HAL_ERROR;
  }

  if ((0x80U & ep_addr) == 0x80U)
 8004800:	f011 0f80 	tst.w	r1, #128	@ 0x80
 8004804:	f04f 0024 	mov.w	r0, #36	@ 0x24
 8004808:	d01d      	beq.n	8004846 <HAL_PCD_EP_SetStall+0x54>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 800480a:	fb00 4105 	mla	r1, r0, r5, r4
    ep->is_in = 1U;
 800480e:	fb00 4005 	mla	r0, r0, r5, r4
 8004812:	2301      	movs	r3, #1
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8004814:	3114      	adds	r1, #20
    ep->is_in = 1U;
 8004816:	7543      	strb	r3, [r0, #21]
  {
    ep = &hpcd->OUT_ep[ep_addr];
    ep->is_in = 0U;
  }

  ep->is_stall = 1U;
 8004818:	2301      	movs	r3, #1
 800481a:	708b      	strb	r3, [r1, #2]
  ep->num = ep_addr & EP_ADDR_MSK;
 800481c:	700d      	strb	r5, [r1, #0]

  __HAL_LOCK(hpcd);
 800481e:	f894 2494 	ldrb.w	r2, [r4, #1172]	@ 0x494
 8004822:	429a      	cmp	r2, r3
 8004824:	d01a      	beq.n	800485c <HAL_PCD_EP_SetStall+0x6a>

  (void)USB_EPSetStall(hpcd->Instance, ep);
 8004826:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(hpcd);
 8004828:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
  (void)USB_EPSetStall(hpcd->Instance, ep);
 800482c:	f002 f98c 	bl	8006b48 <USB_EPSetStall>

  if ((ep_addr & EP_ADDR_MSK) == 0U)
 8004830:	b92d      	cbnz	r5, 800483e <HAL_PCD_EP_SetStall+0x4c>
  {
    (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t)hpcd->Init.dma_enable, (uint8_t *)hpcd->Setup);
 8004832:	79a1      	ldrb	r1, [r4, #6]
 8004834:	6820      	ldr	r0, [r4, #0]
 8004836:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 800483a:	f002 fa45 	bl	8006cc8 <USB_EP0_OutStart>
  }

  __HAL_UNLOCK(hpcd);
 800483e:	2000      	movs	r0, #0
 8004840:	f884 0494 	strb.w	r0, [r4, #1172]	@ 0x494

  return HAL_OK;
}
 8004844:	bd38      	pop	{r3, r4, r5, pc}
    ep = &hpcd->OUT_ep[ep_addr];
 8004846:	fb00 4301 	mla	r3, r0, r1, r4
    ep->is_in = 0U;
 800484a:	461a      	mov	r2, r3
    ep = &hpcd->OUT_ep[ep_addr];
 800484c:	f503 7115 	add.w	r1, r3, #596	@ 0x254
    ep->is_in = 0U;
 8004850:	2300      	movs	r3, #0
 8004852:	f882 3255 	strb.w	r3, [r2, #597]	@ 0x255
 8004856:	e7df      	b.n	8004818 <HAL_PCD_EP_SetStall+0x26>
    return HAL_ERROR;
 8004858:	2001      	movs	r0, #1
 800485a:	e7f3      	b.n	8004844 <HAL_PCD_EP_SetStall+0x52>
  __HAL_LOCK(hpcd);
 800485c:	2002      	movs	r0, #2
 800485e:	e7f1      	b.n	8004844 <HAL_PCD_EP_SetStall+0x52>

08004860 <HAL_PCD_EP_ClrStall>:
  * @param  hpcd PCD handle
  * @param  ep_addr endpoint address
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_EP_ClrStall(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
{
 8004860:	b538      	push	{r3, r4, r5, lr}
  PCD_EPTypeDef *ep;

  if (((uint32_t)ep_addr & 0x0FU) > hpcd->Init.dev_endpoints)
 8004862:	7903      	ldrb	r3, [r0, #4]
 8004864:	f001 020f 	and.w	r2, r1, #15
 8004868:	4293      	cmp	r3, r2
{
 800486a:	4604      	mov	r4, r0
  if (((uint32_t)ep_addr & 0x0FU) > hpcd->Init.dev_endpoints)
 800486c:	d329      	bcc.n	80048c2 <HAL_PCD_EP_ClrStall+0x62>
  {
    return HAL_ERROR;
  }

  if ((0x80U & ep_addr) == 0x80U)
 800486e:	eb02 03c2 	add.w	r3, r2, r2, lsl #3
 8004872:	f011 0f80 	tst.w	r1, #128	@ 0x80
 8004876:	ea4f 0383 	mov.w	r3, r3, lsl #2
 800487a:	f04f 0024 	mov.w	r0, #36	@ 0x24
 800487e:	d017      	beq.n	80048b0 <HAL_PCD_EP_ClrStall+0x50>
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 1U;
 8004880:	fb00 4002 	mla	r0, r0, r2, r4
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 8004884:	f103 0114 	add.w	r1, r3, #20
    ep->is_in = 1U;
 8004888:	2301      	movs	r3, #1
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 800488a:	4421      	add	r1, r4
    ep->is_in = 1U;
 800488c:	7543      	strb	r3, [r0, #21]
  {
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
    ep->is_in = 0U;
  }

  ep->is_stall = 0U;
 800488e:	2500      	movs	r5, #0
 8004890:	708d      	strb	r5, [r1, #2]
  ep->num = ep_addr & EP_ADDR_MSK;
 8004892:	700a      	strb	r2, [r1, #0]

  __HAL_LOCK(hpcd);
 8004894:	f894 3494 	ldrb.w	r3, [r4, #1172]	@ 0x494
 8004898:	2b01      	cmp	r3, #1
 800489a:	d014      	beq.n	80048c6 <HAL_PCD_EP_ClrStall+0x66>
 800489c:	2301      	movs	r3, #1
  (void)USB_EPClearStall(hpcd->Instance, ep);
 800489e:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(hpcd);
 80048a0:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
  (void)USB_EPClearStall(hpcd->Instance, ep);
 80048a4:	f002 f97b 	bl	8006b9e <USB_EPClearStall>
  __HAL_UNLOCK(hpcd);
 80048a8:	f884 5494 	strb.w	r5, [r4, #1172]	@ 0x494

  return HAL_OK;
 80048ac:	4628      	mov	r0, r5
}
 80048ae:	bd38      	pop	{r3, r4, r5, pc}
    ep->is_in = 0U;
 80048b0:	fb00 4002 	mla	r0, r0, r2, r4
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 80048b4:	f503 7115 	add.w	r1, r3, #596	@ 0x254
    ep->is_in = 0U;
 80048b8:	2300      	movs	r3, #0
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 80048ba:	4421      	add	r1, r4
    ep->is_in = 0U;
 80048bc:	f880 3255 	strb.w	r3, [r0, #597]	@ 0x255
 80048c0:	e7e5      	b.n	800488e <HAL_PCD_EP_ClrStall+0x2e>
    return HAL_ERROR;
 80048c2:	2001      	movs	r0, #1
 80048c4:	e7f3      	b.n	80048ae <HAL_PCD_EP_ClrStall+0x4e>
  __HAL_LOCK(hpcd);
 80048c6:	2002      	movs	r0, #2
 80048c8:	e7f1      	b.n	80048ae <HAL_PCD_EP_ClrStall+0x4e>

080048ca <HAL_PCD_EP_Abort>:
HAL_StatusTypeDef HAL_PCD_EP_Abort(PCD_HandleTypeDef *hpcd, uint8_t ep_addr)
{
  HAL_StatusTypeDef ret;
  PCD_EPTypeDef *ep;

  if ((0x80U & ep_addr) == 0x80U)
 80048ca:	f001 030f 	and.w	r3, r1, #15
 80048ce:	eb03 03c3 	add.w	r3, r3, r3, lsl #3
 80048d2:	060a      	lsls	r2, r1, #24
  {
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
 80048d4:	ea4f 0383 	mov.w	r3, r3, lsl #2
 80048d8:	bf4c      	ite	mi
 80048da:	f103 0114 	addmi.w	r1, r3, #20
  }
  else
  {
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
 80048de:	f503 7115 	addpl.w	r1, r3, #596	@ 0x254
 80048e2:	4401      	add	r1, r0
  }

  /* Stop Xfer */
  ret = USB_EPStopXfer(hpcd->Instance, ep);
 80048e4:	6800      	ldr	r0, [r0, #0]
 80048e6:	f001 bfb7 	b.w	8006858 <USB_EPStopXfer>
	...

080048ec <HAL_PCD_IRQHandler>:
{
 80048ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 80048f0:	6806      	ldr	r6, [r0, #0]
{
 80048f2:	b089      	sub	sp, #36	@ 0x24
 80048f4:	4604      	mov	r4, r0
  if (USB_GetMode(hpcd->Instance) == USB_OTG_MODE_DEVICE)
 80048f6:	4630      	mov	r0, r6
 80048f8:	f002 f9d4 	bl	8006ca4 <USB_GetMode>
 80048fc:	9003      	str	r0, [sp, #12]
 80048fe:	2800      	cmp	r0, #0
 8004900:	f040 8158 	bne.w	8004bb4 <HAL_PCD_IRQHandler+0x2c8>
    if (__HAL_PCD_IS_INVALID_INTERRUPT(hpcd))
 8004904:	6820      	ldr	r0, [r4, #0]
 8004906:	f002 f99f 	bl	8006c48 <USB_ReadInterrupts>
 800490a:	2800      	cmp	r0, #0
 800490c:	f000 8152 	beq.w	8004bb4 <HAL_PCD_IRQHandler+0x2c8>
    hpcd->FrameNumber = (USBx_DEVICE->DSTS & USB_OTG_DSTS_FNSOF_Msk) >> USB_OTG_DSTS_FNSOF_Pos;
 8004910:	f8d6 3808 	ldr.w	r3, [r6, #2056]	@ 0x808
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_MMIS))
 8004914:	6820      	ldr	r0, [r4, #0]
    hpcd->FrameNumber = (USBx_DEVICE->DSTS & USB_OTG_DSTS_FNSOF_Msk) >> USB_OTG_DSTS_FNSOF_Pos;
 8004916:	f3c3 230d 	ubfx	r3, r3, #8, #14
 800491a:	f8c4 34d4 	str.w	r3, [r4, #1236]	@ 0x4d4
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_MMIS))
 800491e:	f002 f993 	bl	8006c48 <USB_ReadInterrupts>
 8004922:	0787      	lsls	r7, r0, #30
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_MMIS);
 8004924:	bf48      	it	mi
 8004926:	6822      	ldrmi	r2, [r4, #0]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_RXFLVL))
 8004928:	6820      	ldr	r0, [r4, #0]
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_MMIS);
 800492a:	bf42      	ittt	mi
 800492c:	6953      	ldrmi	r3, [r2, #20]
 800492e:	f003 0302 	andmi.w	r3, r3, #2
 8004932:	6153      	strmi	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_RXFLVL))
 8004934:	f002 f988 	bl	8006c48 <USB_ReadInterrupts>
 8004938:	06c0      	lsls	r0, r0, #27
    hpcd->FrameNumber = (USBx_DEVICE->DSTS & USB_OTG_DSTS_FNSOF_Msk) >> USB_OTG_DSTS_FNSOF_Pos;
 800493a:	f506 6500 	add.w	r5, r6, #2048	@ 0x800
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_RXFLVL))
 800493e:	d52d      	bpl.n	800499c <HAL_PCD_IRQHandler+0xb0>
      USB_MASK_INTERRUPT(hpcd->Instance, USB_OTG_GINTSTS_RXFLVL);
 8004940:	6822      	ldr	r2, [r4, #0]
 8004942:	6993      	ldr	r3, [r2, #24]
 8004944:	f023 0310 	bic.w	r3, r3, #16
 8004948:	6193      	str	r3, [r2, #24]
      RegVal = USBx->GRXSTSP;
 800494a:	f8d6 8020 	ldr.w	r8, [r6, #32]
      if (((RegVal & USB_OTG_GRXSTSP_PKTSTS) >> 17) ==  STS_DATA_UPDT)
 800494e:	f408 13f0 	and.w	r3, r8, #1966080	@ 0x1e0000
 8004952:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
      ep = &hpcd->OUT_ep[RegVal & USB_OTG_GRXSTSP_EPNUM];
 8004956:	f008 070f 	and.w	r7, r8, #15
      if (((RegVal & USB_OTG_GRXSTSP_PKTSTS) >> 17) ==  STS_DATA_UPDT)
 800495a:	f040 812e 	bne.w	8004bba <HAL_PCD_IRQHandler+0x2ce>
        if ((RegVal & USB_OTG_GRXSTSP_BCNT) != 0U)
 800495e:	f647 73f0 	movw	r3, #32752	@ 0x7ff0
 8004962:	ea18 0f03 	tst.w	r8, r3
 8004966:	d014      	beq.n	8004992 <HAL_PCD_IRQHandler+0xa6>
          (void)USB_ReadPacket(USBx, ep->xfer_buff,
 8004968:	2324      	movs	r3, #36	@ 0x24
 800496a:	fb03 4707 	mla	r7, r3, r7, r4
 800496e:	f3c8 190a 	ubfx	r9, r8, #4, #11
 8004972:	f8d7 1260 	ldr.w	r1, [r7, #608]	@ 0x260
 8004976:	464a      	mov	r2, r9
 8004978:	4630      	mov	r0, r6
 800497a:	f002 f8c5 	bl	8006b08 <USB_ReadPacket>
          ep->xfer_buff += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
 800497e:	f8d7 3260 	ldr.w	r3, [r7, #608]	@ 0x260
 8004982:	444b      	add	r3, r9
 8004984:	f8c7 3260 	str.w	r3, [r7, #608]	@ 0x260
          ep->xfer_count += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
 8004988:	f8d7 3268 	ldr.w	r3, [r7, #616]	@ 0x268
 800498c:	444b      	add	r3, r9
        ep->xfer_count += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
 800498e:	f8c7 3268 	str.w	r3, [r7, #616]	@ 0x268
      USB_UNMASK_INTERRUPT(hpcd->Instance, USB_OTG_GINTSTS_RXFLVL);
 8004992:	6822      	ldr	r2, [r4, #0]
 8004994:	6993      	ldr	r3, [r2, #24]
 8004996:	f043 0310 	orr.w	r3, r3, #16
 800499a:	6193      	str	r3, [r2, #24]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_OEPINT))
 800499c:	6820      	ldr	r0, [r4, #0]
 800499e:	f002 f953 	bl	8006c48 <USB_ReadInterrupts>
 80049a2:	0301      	lsls	r1, r0, #12
 80049a4:	f100 811c 	bmi.w	8004be0 <HAL_PCD_IRQHandler+0x2f4>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_IEPINT))
 80049a8:	6820      	ldr	r0, [r4, #0]
 80049aa:	f002 f94d 	bl	8006c48 <USB_ReadInterrupts>
 80049ae:	0342      	lsls	r2, r0, #13
 80049b0:	d50d      	bpl.n	80049ce <HAL_PCD_IRQHandler+0xe2>
      ep_intr = USB_ReadDevAllInEpInterrupt(hpcd->Instance);
 80049b2:	6820      	ldr	r0, [r4, #0]
 80049b4:	f002 f954 	bl	8006c60 <USB_ReadDevAllInEpInterrupt>
 80049b8:	4627      	mov	r7, r4
 80049ba:	9004      	str	r0, [sp, #16]
      while (ep_intr != 0U)
 80049bc:	f506 6b10 	add.w	fp, r6, #2304	@ 0x900
      epnum = 0U;
 80049c0:	f04f 0a00 	mov.w	sl, #0
      while (ep_intr != 0U)
 80049c4:	9b04      	ldr	r3, [sp, #16]
          epint = USB_ReadDevInEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 80049c6:	6820      	ldr	r0, [r4, #0]
      while (ep_intr != 0U)
 80049c8:	2b00      	cmp	r3, #0
 80049ca:	f040 81d3 	bne.w	8004d74 <HAL_PCD_IRQHandler+0x488>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_WKUINT))
 80049ce:	6820      	ldr	r0, [r4, #0]
 80049d0:	f002 f93a 	bl	8006c48 <USB_ReadInterrupts>
 80049d4:	2800      	cmp	r0, #0
 80049d6:	da13      	bge.n	8004a00 <HAL_PCD_IRQHandler+0x114>
      USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
 80049d8:	686b      	ldr	r3, [r5, #4]
 80049da:	f023 0301 	bic.w	r3, r3, #1
 80049de:	606b      	str	r3, [r5, #4]
      if (hpcd->LPM_State == LPM_L1)
 80049e0:	f894 34cc 	ldrb.w	r3, [r4, #1228]	@ 0x4cc
 80049e4:	2b01      	cmp	r3, #1
 80049e6:	f040 826b 	bne.w	8004ec0 <HAL_PCD_IRQHandler+0x5d4>
        hpcd->LPM_State = LPM_L0;
 80049ea:	2100      	movs	r1, #0
 80049ec:	f884 14cc 	strb.w	r1, [r4, #1228]	@ 0x4cc
        HAL_PCDEx_LPM_Callback(hpcd, PCD_LPM_L0_ACTIVE);
 80049f0:	4620      	mov	r0, r4
 80049f2:	f000 fae6 	bl	8004fc2 <HAL_PCDEx_LPM_Callback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_WKUINT);
 80049f6:	6822      	ldr	r2, [r4, #0]
 80049f8:	6953      	ldr	r3, [r2, #20]
 80049fa:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
 80049fe:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_USBSUSP))
 8004a00:	6820      	ldr	r0, [r4, #0]
 8004a02:	f002 f921 	bl	8006c48 <USB_ReadInterrupts>
 8004a06:	0501      	lsls	r1, r0, #20
 8004a08:	d50a      	bpl.n	8004a20 <HAL_PCD_IRQHandler+0x134>
      if ((USBx_DEVICE->DSTS & USB_OTG_DSTS_SUSPSTS) == USB_OTG_DSTS_SUSPSTS)
 8004a0a:	68ab      	ldr	r3, [r5, #8]
 8004a0c:	07da      	lsls	r2, r3, #31
 8004a0e:	d502      	bpl.n	8004a16 <HAL_PCD_IRQHandler+0x12a>
        HAL_PCD_SuspendCallback(hpcd);
 8004a10:	4620      	mov	r0, r4
 8004a12:	f7fc ff4d 	bl	80018b0 <HAL_PCD_SuspendCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_USBSUSP);
 8004a16:	6822      	ldr	r2, [r4, #0]
 8004a18:	6953      	ldr	r3, [r2, #20]
 8004a1a:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8004a1e:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_USBRST))
 8004a20:	6820      	ldr	r0, [r4, #0]
 8004a22:	f002 f911 	bl	8006c48 <USB_ReadInterrupts>
 8004a26:	04c3      	lsls	r3, r0, #19
 8004a28:	d533      	bpl.n	8004a92 <HAL_PCD_IRQHandler+0x1a6>
      USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
 8004a2a:	686b      	ldr	r3, [r5, #4]
      (void)USB_FlushTxFifo(hpcd->Instance, 0x10U);
 8004a2c:	6820      	ldr	r0, [r4, #0]
      USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
 8004a2e:	f023 0301 	bic.w	r3, r3, #1
 8004a32:	606b      	str	r3, [r5, #4]
      (void)USB_FlushTxFifo(hpcd->Instance, 0x10U);
 8004a34:	2110      	movs	r1, #16
 8004a36:	f001 fd69 	bl	800650c <USB_FlushTxFifo>
      for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8004a3a:	7920      	ldrb	r0, [r4, #4]
 8004a3c:	f506 6310 	add.w	r3, r6, #2304	@ 0x900
        USBx_INEP(i)->DIEPINT = 0xFB7FU;
 8004a40:	f64f 317f 	movw	r1, #64383	@ 0xfb7f
      for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8004a44:	9a03      	ldr	r2, [sp, #12]
 8004a46:	4290      	cmp	r0, r2
 8004a48:	f200 823e 	bhi.w	8004ec8 <HAL_PCD_IRQHandler+0x5dc>
      USBx_DEVICE->DAINTMSK |= 0x10001U;
 8004a4c:	69eb      	ldr	r3, [r5, #28]
 8004a4e:	f043 1301 	orr.w	r3, r3, #65537	@ 0x10001
 8004a52:	61eb      	str	r3, [r5, #28]
      if (hpcd->Init.use_dedicated_ep1 != 0U)
 8004a54:	7be3      	ldrb	r3, [r4, #15]
 8004a56:	2b00      	cmp	r3, #0
 8004a58:	f000 8252 	beq.w	8004f00 <HAL_PCD_IRQHandler+0x614>
        USBx_DEVICE->DOUTEP1MSK |= USB_OTG_DOEPMSK_STUPM |
 8004a5c:	f8d5 3084 	ldr.w	r3, [r5, #132]	@ 0x84
 8004a60:	f043 030b 	orr.w	r3, r3, #11
 8004a64:	f8c5 3084 	str.w	r3, [r5, #132]	@ 0x84
        USBx_DEVICE->DINEP1MSK |= USB_OTG_DIEPMSK_TOM |
 8004a68:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
 8004a6a:	f043 030b 	orr.w	r3, r3, #11
 8004a6e:	646b      	str	r3, [r5, #68]	@ 0x44
      USBx_DEVICE->DCFG &= ~USB_OTG_DCFG_DAD;
 8004a70:	f8d6 3800 	ldr.w	r3, [r6, #2048]	@ 0x800
      (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t)hpcd->Init.dma_enable,
 8004a74:	6820      	ldr	r0, [r4, #0]
      USBx_DEVICE->DCFG &= ~USB_OTG_DCFG_DAD;
 8004a76:	f423 63fe 	bic.w	r3, r3, #2032	@ 0x7f0
 8004a7a:	f8c6 3800 	str.w	r3, [r6, #2048]	@ 0x800
      (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t)hpcd->Init.dma_enable,
 8004a7e:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 8004a82:	79a1      	ldrb	r1, [r4, #6]
 8004a84:	f002 f920 	bl	8006cc8 <USB_EP0_OutStart>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_USBRST);
 8004a88:	6822      	ldr	r2, [r4, #0]
 8004a8a:	6953      	ldr	r3, [r2, #20]
 8004a8c:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8004a90:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_ENUMDNE))
 8004a92:	6820      	ldr	r0, [r4, #0]
 8004a94:	f002 f8d8 	bl	8006c48 <USB_ReadInterrupts>
 8004a98:	0487      	lsls	r7, r0, #18
 8004a9a:	d516      	bpl.n	8004aca <HAL_PCD_IRQHandler+0x1de>
      (void)USB_ActivateSetup(hpcd->Instance);
 8004a9c:	6820      	ldr	r0, [r4, #0]
 8004a9e:	f002 f905 	bl	8006cac <USB_ActivateSetup>
      hpcd->Init.speed = USB_GetDevSpeed(hpcd->Instance);
 8004aa2:	6820      	ldr	r0, [r4, #0]
 8004aa4:	f001 fe38 	bl	8006718 <USB_GetDevSpeed>
 8004aa8:	71e0      	strb	r0, [r4, #7]
      (void)USB_SetTurnaroundTime(hpcd->Instance,
 8004aaa:	6827      	ldr	r7, [r4, #0]
 8004aac:	f000 fd00 	bl	80054b0 <HAL_RCC_GetHCLKFreq>
 8004ab0:	79e2      	ldrb	r2, [r4, #7]
 8004ab2:	4601      	mov	r1, r0
 8004ab4:	4638      	mov	r0, r7
 8004ab6:	f001 fc7d 	bl	80063b4 <USB_SetTurnaroundTime>
      HAL_PCD_ResetCallback(hpcd);
 8004aba:	4620      	mov	r0, r4
 8004abc:	f7fc fee5 	bl	800188a <HAL_PCD_ResetCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_ENUMDNE);
 8004ac0:	6822      	ldr	r2, [r4, #0]
 8004ac2:	6953      	ldr	r3, [r2, #20]
 8004ac4:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8004ac8:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_SOF))
 8004aca:	6820      	ldr	r0, [r4, #0]
 8004acc:	f002 f8bc 	bl	8006c48 <USB_ReadInterrupts>
 8004ad0:	0700      	lsls	r0, r0, #28
 8004ad2:	d507      	bpl.n	8004ae4 <HAL_PCD_IRQHandler+0x1f8>
      HAL_PCD_SOFCallback(hpcd);
 8004ad4:	4620      	mov	r0, r4
 8004ad6:	f7fc fed4 	bl	8001882 <HAL_PCD_SOFCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_SOF);
 8004ada:	6822      	ldr	r2, [r4, #0]
 8004adc:	6953      	ldr	r3, [r2, #20]
 8004ade:	f003 0308 	and.w	r3, r3, #8
 8004ae2:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_BOUTNAKEFF))
 8004ae4:	6820      	ldr	r0, [r4, #0]
 8004ae6:	f002 f8af 	bl	8006c48 <USB_ReadInterrupts>
 8004aea:	0601      	lsls	r1, r0, #24
 8004aec:	f100 8213 	bmi.w	8004f16 <HAL_PCD_IRQHandler+0x62a>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_IISOIXFR))
 8004af0:	6820      	ldr	r0, [r4, #0]
 8004af2:	f002 f8a9 	bl	8006c48 <USB_ReadInterrupts>
 8004af6:	02c2      	lsls	r2, r0, #11
 8004af8:	d50c      	bpl.n	8004b14 <HAL_PCD_IRQHandler+0x228>
 8004afa:	46a0      	mov	r8, r4
 8004afc:	f506 6912 	add.w	r9, r6, #2336	@ 0x920
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 8004b00:	2701      	movs	r7, #1
 8004b02:	7923      	ldrb	r3, [r4, #4]
 8004b04:	42bb      	cmp	r3, r7
 8004b06:	f200 821f 	bhi.w	8004f48 <HAL_PCD_IRQHandler+0x65c>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_IISOIXFR);
 8004b0a:	6822      	ldr	r2, [r4, #0]
 8004b0c:	6953      	ldr	r3, [r2, #20]
 8004b0e:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8004b12:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_PXFR_INCOMPISOOUT))
 8004b14:	6820      	ldr	r0, [r4, #0]
 8004b16:	f002 f897 	bl	8006c48 <USB_ReadInterrupts>
 8004b1a:	0283      	lsls	r3, r0, #10
 8004b1c:	d52d      	bpl.n	8004b7a <HAL_PCD_IRQHandler+0x28e>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 8004b1e:	f894 e004 	ldrb.w	lr, [r4, #4]
 8004b22:	4623      	mov	r3, r4
 8004b24:	f506 6032 	add.w	r0, r6, #2848	@ 0xb20
 8004b28:	2101      	movs	r1, #1
 8004b2a:	458e      	cmp	lr, r1
 8004b2c:	d920      	bls.n	8004b70 <HAL_PCD_IRQHandler+0x284>
        if ((hpcd->OUT_ep[epnum].type == EP_TYPE_ISOC) &&
 8004b2e:	f893 c27c 	ldrb.w	ip, [r3, #636]	@ 0x27c
        RegVal = USBx_OUTEP(epnum)->DOEPCTL;
 8004b32:	6802      	ldr	r2, [r0, #0]
        if ((hpcd->OUT_ep[epnum].type == EP_TYPE_ISOC) &&
 8004b34:	f1bc 0f01 	cmp.w	ip, #1
 8004b38:	f040 821c 	bne.w	8004f74 <HAL_PCD_IRQHandler+0x688>
 8004b3c:	2a00      	cmp	r2, #0
 8004b3e:	f280 8219 	bge.w	8004f74 <HAL_PCD_IRQHandler+0x688>
            ((RegVal & (0x1U << 16)) == (hpcd->FrameNumber & 0x1U)))
 8004b42:	f8d4 74d4 	ldr.w	r7, [r4, #1236]	@ 0x4d4
 8004b46:	f402 3280 	and.w	r2, r2, #65536	@ 0x10000
 8004b4a:	f007 0701 	and.w	r7, r7, #1
            ((RegVal & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA) &&
 8004b4e:	42ba      	cmp	r2, r7
 8004b50:	f040 8210 	bne.w	8004f74 <HAL_PCD_IRQHandler+0x688>
          hpcd->OUT_ep[epnum].is_iso_incomplete = 1U;
 8004b54:	f883 c27b 	strb.w	ip, [r3, #635]	@ 0x27b
          USBx->GINTMSK |= USB_OTG_GINTMSK_GONAKEFFM;
 8004b58:	69b2      	ldr	r2, [r6, #24]
 8004b5a:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8004b5e:	61b2      	str	r2, [r6, #24]
          if ((USBx->GINTSTS & USB_OTG_GINTSTS_BOUTNAKEFF) == 0U)
 8004b60:	6972      	ldr	r2, [r6, #20]
 8004b62:	0617      	lsls	r7, r2, #24
 8004b64:	f100 8206 	bmi.w	8004f74 <HAL_PCD_IRQHandler+0x688>
            USBx_DEVICE->DCTL |= USB_OTG_DCTL_SGONAK;
 8004b68:	686b      	ldr	r3, [r5, #4]
 8004b6a:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8004b6e:	606b      	str	r3, [r5, #4]
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_PXFR_INCOMPISOOUT);
 8004b70:	6822      	ldr	r2, [r4, #0]
 8004b72:	6953      	ldr	r3, [r2, #20]
 8004b74:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8004b78:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_SRQINT))
 8004b7a:	6820      	ldr	r0, [r4, #0]
 8004b7c:	f002 f864 	bl	8006c48 <USB_ReadInterrupts>
 8004b80:	0041      	lsls	r1, r0, #1
 8004b82:	d507      	bpl.n	8004b94 <HAL_PCD_IRQHandler+0x2a8>
      HAL_PCD_ConnectCallback(hpcd);
 8004b84:	4620      	mov	r0, r4
 8004b86:	f7fc feb7 	bl	80018f8 <HAL_PCD_ConnectCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_SRQINT);
 8004b8a:	6822      	ldr	r2, [r4, #0]
 8004b8c:	6953      	ldr	r3, [r2, #20]
 8004b8e:	f003 4380 	and.w	r3, r3, #1073741824	@ 0x40000000
 8004b92:	6153      	str	r3, [r2, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_OTGINT))
 8004b94:	6820      	ldr	r0, [r4, #0]
 8004b96:	f002 f857 	bl	8006c48 <USB_ReadInterrupts>
 8004b9a:	0742      	lsls	r2, r0, #29
 8004b9c:	d50a      	bpl.n	8004bb4 <HAL_PCD_IRQHandler+0x2c8>
      RegVal = hpcd->Instance->GOTGINT;
 8004b9e:	6823      	ldr	r3, [r4, #0]
 8004ba0:	685d      	ldr	r5, [r3, #4]
      if ((RegVal & USB_OTG_GOTGINT_SEDET) == USB_OTG_GOTGINT_SEDET)
 8004ba2:	076b      	lsls	r3, r5, #29
 8004ba4:	d502      	bpl.n	8004bac <HAL_PCD_IRQHandler+0x2c0>
        HAL_PCD_DisconnectCallback(hpcd);
 8004ba6:	4620      	mov	r0, r4
 8004ba8:	f7fc feaa 	bl	8001900 <HAL_PCD_DisconnectCallback>
      hpcd->Instance->GOTGINT |= RegVal;
 8004bac:	6822      	ldr	r2, [r4, #0]
 8004bae:	6853      	ldr	r3, [r2, #4]
 8004bb0:	432b      	orrs	r3, r5
 8004bb2:	6053      	str	r3, [r2, #4]
}
 8004bb4:	b009      	add	sp, #36	@ 0x24
 8004bb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      else if (((RegVal & USB_OTG_GRXSTSP_PKTSTS) >> 17) == STS_SETUP_UPDT)
 8004bba:	f5b3 2f40 	cmp.w	r3, #786432	@ 0xc0000
 8004bbe:	f47f aee8 	bne.w	8004992 <HAL_PCD_IRQHandler+0xa6>
        (void)USB_ReadPacket(USBx, (uint8_t *)hpcd->Setup, 8U);
 8004bc2:	2208      	movs	r2, #8
 8004bc4:	f204 419c 	addw	r1, r4, #1180	@ 0x49c
 8004bc8:	4630      	mov	r0, r6
 8004bca:	f001 ff9d 	bl	8006b08 <USB_ReadPacket>
        ep->xfer_count += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
 8004bce:	2324      	movs	r3, #36	@ 0x24
 8004bd0:	fb03 4707 	mla	r7, r3, r7, r4
 8004bd4:	f3c8 180a 	ubfx	r8, r8, #4, #11
 8004bd8:	f8d7 3268 	ldr.w	r3, [r7, #616]	@ 0x268
 8004bdc:	4443      	add	r3, r8
 8004bde:	e6d6      	b.n	800498e <HAL_PCD_IRQHandler+0xa2>
      ep_intr = USB_ReadDevAllOutEpInterrupt(hpcd->Instance);
 8004be0:	6820      	ldr	r0, [r4, #0]
 8004be2:	f002 f835 	bl	8006c50 <USB_ReadDevAllOutEpInterrupt>
 8004be6:	f506 6830 	add.w	r8, r6, #2816	@ 0xb00
 8004bea:	9004      	str	r0, [sp, #16]
      while (ep_intr != 0U)
 8004bec:	46a2      	mov	sl, r4
      epnum = 0U;
 8004bee:	2700      	movs	r7, #0
      while (ep_intr != 0U)
 8004bf0:	9b04      	ldr	r3, [sp, #16]
          epint = USB_ReadDevOutEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 8004bf2:	6820      	ldr	r0, [r4, #0]
      while (ep_intr != 0U)
 8004bf4:	2b00      	cmp	r3, #0
 8004bf6:	f43f aed7 	beq.w	80049a8 <HAL_PCD_IRQHandler+0xbc>
        if ((ep_intr & 0x1U) != 0U)
 8004bfa:	9b04      	ldr	r3, [sp, #16]
 8004bfc:	07db      	lsls	r3, r3, #31
 8004bfe:	d578      	bpl.n	8004cf2 <HAL_PCD_IRQHandler+0x406>
          epint = USB_ReadDevOutEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 8004c00:	fa5f fb87 	uxtb.w	fp, r7
 8004c04:	4659      	mov	r1, fp
 8004c06:	f002 f833 	bl	8006c70 <USB_ReadDevOutEPInterrupt>
          if ((epint & USB_OTG_DOEPINT_XFRC) == USB_OTG_DOEPINT_XFRC)
 8004c0a:	f010 0f01 	tst.w	r0, #1
          epint = USB_ReadDevOutEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 8004c0e:	4681      	mov	r9, r0
          if ((epint & USB_OTG_DOEPINT_XFRC) == USB_OTG_DOEPINT_XFRC)
 8004c10:	d01f      	beq.n	8004c52 <HAL_PCD_IRQHandler+0x366>
  * @retval HAL status
  */
static HAL_StatusTypeDef PCD_EP_OutXfrComplete_int(PCD_HandleTypeDef *hpcd, uint32_t epnum)
{
  USB_OTG_EPTypeDef *ep;
  const USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 8004c12:	6820      	ldr	r0, [r4, #0]
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_XFRC);
 8004c14:	2301      	movs	r3, #1
 8004c16:	f8c8 3008 	str.w	r3, [r8, #8]
  uint32_t USBx_BASE = (uint32_t)USBx;
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;

  if (hpcd->Init.dma_enable == 1U)
 8004c1a:	f894 c006 	ldrb.w	ip, [r4, #6]
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
 8004c1e:	6c01      	ldr	r1, [r0, #64]	@ 0x40
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
 8004c20:	f500 6330 	add.w	r3, r0, #2816	@ 0xb00
 8004c24:	eb03 1347 	add.w	r3, r3, r7, lsl #5
  if (hpcd->Init.dma_enable == 1U)
 8004c28:	f1bc 0f01 	cmp.w	ip, #1
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
 8004c2c:	689a      	ldr	r2, [r3, #8]
  if (hpcd->Init.dma_enable == 1U)
 8004c2e:	f040 808b 	bne.w	8004d48 <HAL_PCD_IRQHandler+0x45c>
  {
    if ((DoepintReg & USB_OTG_DOEPINT_STUP) == USB_OTG_DOEPINT_STUP) /* Class C */
 8004c32:	f012 0f08 	tst.w	r2, #8
 8004c36:	d007      	beq.n	8004c48 <HAL_PCD_IRQHandler+0x35c>
    {
      /* StupPktRcvd = 1 this is a setup packet */
      if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 8004c38:	48af      	ldr	r0, [pc, #700]	@ (8004ef8 <HAL_PCD_IRQHandler+0x60c>)
 8004c3a:	4281      	cmp	r1, r0
 8004c3c:	d909      	bls.n	8004c52 <HAL_PCD_IRQHandler+0x366>
 8004c3e:	0412      	lsls	r2, r2, #16
 8004c40:	d507      	bpl.n	8004c52 <HAL_PCD_IRQHandler+0x366>
    if (gSNPSiD == USB_OTG_CORE_ID_310A)
    {
      /* StupPktRcvd = 1 this is a setup packet */
      if ((DoepintReg & USB_OTG_DOEPINT_STPKTRX) == USB_OTG_DOEPINT_STPKTRX)
      {
        CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
 8004c42:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
 8004c46:	e003      	b.n	8004c50 <HAL_PCD_IRQHandler+0x364>
    else if ((DoepintReg & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR) /* Class E */
 8004c48:	f012 0f20 	tst.w	r2, #32
 8004c4c:	d05a      	beq.n	8004d04 <HAL_PCD_IRQHandler+0x418>
      CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
 8004c4e:	2220      	movs	r2, #32
        CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
 8004c50:	609a      	str	r2, [r3, #8]
          if ((epint & USB_OTG_DOEPINT_STUP) == USB_OTG_DOEPINT_STUP)
 8004c52:	f019 0f08 	tst.w	r9, #8
 8004c56:	d021      	beq.n	8004c9c <HAL_PCD_IRQHandler+0x3b0>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STUP);
 8004c58:	2308      	movs	r3, #8
 8004c5a:	f8c8 3008 	str.w	r3, [r8, #8]
  * @param  epnum endpoint number
  * @retval HAL status
  */
static HAL_StatusTypeDef PCD_EP_OutSetupPacket_int(PCD_HandleTypeDef *hpcd, uint32_t epnum)
{
  const USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 8004c5e:	6823      	ldr	r3, [r4, #0]
  uint32_t USBx_BASE = (uint32_t)USBx;
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;

  if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 8004c60:	49a5      	ldr	r1, [pc, #660]	@ (8004ef8 <HAL_PCD_IRQHandler+0x60c>)
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
 8004c62:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
 8004c64:	f503 6330 	add.w	r3, r3, #2816	@ 0xb00
 8004c68:	eb03 1347 	add.w	r3, r3, r7, lsl #5
  if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 8004c6c:	428a      	cmp	r2, r1
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
 8004c6e:	6898      	ldr	r0, [r3, #8]
  if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 8004c70:	d904      	bls.n	8004c7c <HAL_PCD_IRQHandler+0x390>
 8004c72:	0401      	lsls	r1, r0, #16
      ((DoepintReg & USB_OTG_DOEPINT_STPKTRX) == USB_OTG_DOEPINT_STPKTRX))
  {
    CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
 8004c74:	bf44      	itt	mi
 8004c76:	f44f 4000 	movmi.w	r0, #32768	@ 0x8000
 8004c7a:	6098      	strmi	r0, [r3, #8]

  /* Inform the upper layer that a setup packet is available */
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
  hpcd->SetupStageCallback(hpcd);
#else
  HAL_PCD_SetupStageCallback(hpcd);
 8004c7c:	4620      	mov	r0, r4
 8004c7e:	9205      	str	r2, [sp, #20]
 8004c80:	f7fc fde8 	bl	8001854 <HAL_PCD_SetupStageCallback>
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */

  if ((gSNPSiD > USB_OTG_CORE_ID_300A) && (hpcd->Init.dma_enable == 1U))
 8004c84:	9a05      	ldr	r2, [sp, #20]
 8004c86:	499c      	ldr	r1, [pc, #624]	@ (8004ef8 <HAL_PCD_IRQHandler+0x60c>)
 8004c88:	428a      	cmp	r2, r1
 8004c8a:	d907      	bls.n	8004c9c <HAL_PCD_IRQHandler+0x3b0>
 8004c8c:	79a1      	ldrb	r1, [r4, #6]
 8004c8e:	2901      	cmp	r1, #1
 8004c90:	d104      	bne.n	8004c9c <HAL_PCD_IRQHandler+0x3b0>
  {
    (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
 8004c92:	6820      	ldr	r0, [r4, #0]
 8004c94:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 8004c98:	f002 f816 	bl	8006cc8 <USB_EP0_OutStart>
          if ((epint & USB_OTG_DOEPINT_OTEPDIS) == USB_OTG_DOEPINT_OTEPDIS)
 8004c9c:	f019 0f10 	tst.w	r9, #16
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPDIS);
 8004ca0:	bf1c      	itt	ne
 8004ca2:	2310      	movne	r3, #16
 8004ca4:	f8c8 3008 	strne.w	r3, [r8, #8]
          if ((epint & USB_OTG_DOEPINT_EPDISD) == USB_OTG_DOEPINT_EPDISD)
 8004ca8:	f019 0f02 	tst.w	r9, #2
 8004cac:	d014      	beq.n	8004cd8 <HAL_PCD_IRQHandler+0x3ec>
            if ((USBx->GINTSTS & USB_OTG_GINTSTS_BOUTNAKEFF) == USB_OTG_GINTSTS_BOUTNAKEFF)
 8004cae:	6973      	ldr	r3, [r6, #20]
 8004cb0:	061a      	lsls	r2, r3, #24
              USBx_DEVICE->DCTL |= USB_OTG_DCTL_CGONAK;
 8004cb2:	bf42      	ittt	mi
 8004cb4:	686b      	ldrmi	r3, [r5, #4]
 8004cb6:	f443 6380 	orrmi.w	r3, r3, #1024	@ 0x400
 8004cba:	606b      	strmi	r3, [r5, #4]
            if (ep->is_iso_incomplete == 1U)
 8004cbc:	f89a 3257 	ldrb.w	r3, [sl, #599]	@ 0x257
 8004cc0:	2b01      	cmp	r3, #1
 8004cc2:	d106      	bne.n	8004cd2 <HAL_PCD_IRQHandler+0x3e6>
              ep->is_iso_incomplete = 0U;
 8004cc4:	2300      	movs	r3, #0
 8004cc6:	f88a 3257 	strb.w	r3, [sl, #599]	@ 0x257
              HAL_PCD_ISOOUTIncompleteCallback(hpcd, (uint8_t)epnum);
 8004cca:	4659      	mov	r1, fp
 8004ccc:	4620      	mov	r0, r4
 8004cce:	f7fc fe0b 	bl	80018e8 <HAL_PCD_ISOOUTIncompleteCallback>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_EPDISD);
 8004cd2:	2302      	movs	r3, #2
 8004cd4:	f8c8 3008 	str.w	r3, [r8, #8]
          if ((epint & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR)
 8004cd8:	f019 0f20 	tst.w	r9, #32
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
 8004cdc:	bf1c      	itt	ne
 8004cde:	2320      	movne	r3, #32
 8004ce0:	f8c8 3008 	strne.w	r3, [r8, #8]
          if ((epint & USB_OTG_DOEPINT_NAK) == USB_OTG_DOEPINT_NAK)
 8004ce4:	f419 5f00 	tst.w	r9, #8192	@ 0x2000
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_NAK);
 8004ce8:	bf1c      	itt	ne
 8004cea:	f44f 5300 	movne.w	r3, #8192	@ 0x2000
 8004cee:	f8c8 3008 	strne.w	r3, [r8, #8]
        ep_intr >>= 1U;
 8004cf2:	9b04      	ldr	r3, [sp, #16]
 8004cf4:	085b      	lsrs	r3, r3, #1
        epnum++;
 8004cf6:	3701      	adds	r7, #1
        ep_intr >>= 1U;
 8004cf8:	9304      	str	r3, [sp, #16]
 8004cfa:	f108 0820 	add.w	r8, r8, #32
 8004cfe:	f10a 0a24 	add.w	sl, sl, #36	@ 0x24
 8004d02:	e775      	b.n	8004bf0 <HAL_PCD_IRQHandler+0x304>
      if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
 8004d04:	f8df c1f0 	ldr.w	ip, [pc, #496]	@ 8004ef8 <HAL_PCD_IRQHandler+0x60c>
 8004d08:	4561      	cmp	r1, ip
 8004d0a:	d901      	bls.n	8004d10 <HAL_PCD_IRQHandler+0x424>
 8004d0c:	0412      	lsls	r2, r2, #16
 8004d0e:	d498      	bmi.n	8004c42 <HAL_PCD_IRQHandler+0x356>
        ep->xfer_count = ep->xfer_size - (USBx_OUTEP(epnum)->DOEPTSIZ & USB_OTG_DOEPTSIZ_XFRSIZ);
 8004d10:	691a      	ldr	r2, [r3, #16]
 8004d12:	f8da 3274 	ldr.w	r3, [sl, #628]	@ 0x274
 8004d16:	f3c2 0212 	ubfx	r2, r2, #0, #19
 8004d1a:	1a9b      	subs	r3, r3, r2
 8004d1c:	f8ca 3268 	str.w	r3, [sl, #616]	@ 0x268
        if (epnum == 0U)
 8004d20:	b96f      	cbnz	r7, 8004d3e <HAL_PCD_IRQHandler+0x452>
          if (ep->xfer_len == 0U)
 8004d22:	f8d4 2264 	ldr.w	r2, [r4, #612]	@ 0x264
 8004d26:	b92a      	cbnz	r2, 8004d34 <HAL_PCD_IRQHandler+0x448>
            (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
 8004d28:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 8004d2c:	2101      	movs	r1, #1
        (void)USB_EP0_OutStart(hpcd->Instance, 0U, (uint8_t *)hpcd->Setup);
 8004d2e:	f001 ffcb 	bl	8006cc8 <USB_EP0_OutStart>
 8004d32:	e004      	b.n	8004d3e <HAL_PCD_IRQHandler+0x452>
            ep->xfer_buff += ep->xfer_count;
 8004d34:	f8d4 2260 	ldr.w	r2, [r4, #608]	@ 0x260
 8004d38:	441a      	add	r2, r3
 8004d3a:	f8c4 2260 	str.w	r2, [r4, #608]	@ 0x260
      HAL_PCD_DataOutStageCallback(hpcd, (uint8_t)epnum);
 8004d3e:	4659      	mov	r1, fp
 8004d40:	4620      	mov	r0, r4
 8004d42:	f7fc fd8d 	bl	8001860 <HAL_PCD_DataOutStageCallback>
 8004d46:	e784      	b.n	8004c52 <HAL_PCD_IRQHandler+0x366>
    if (gSNPSiD == USB_OTG_CORE_ID_310A)
 8004d48:	f8df c1b0 	ldr.w	ip, [pc, #432]	@ 8004efc <HAL_PCD_IRQHandler+0x610>
 8004d4c:	4561      	cmp	r1, ip
 8004d4e:	d107      	bne.n	8004d60 <HAL_PCD_IRQHandler+0x474>
      if ((DoepintReg & USB_OTG_DOEPINT_STPKTRX) == USB_OTG_DOEPINT_STPKTRX)
 8004d50:	0411      	lsls	r1, r2, #16
 8004d52:	f53f af76 	bmi.w	8004c42 <HAL_PCD_IRQHandler+0x356>
        if ((DoepintReg & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR)
 8004d56:	0690      	lsls	r0, r2, #26
 8004d58:	d5f1      	bpl.n	8004d3e <HAL_PCD_IRQHandler+0x452>
          CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
 8004d5a:	2220      	movs	r2, #32
 8004d5c:	609a      	str	r2, [r3, #8]
        HAL_PCD_DataOutStageCallback(hpcd, (uint8_t)epnum);
 8004d5e:	e7ee      	b.n	8004d3e <HAL_PCD_IRQHandler+0x452>
      if ((epnum == 0U) && (hpcd->OUT_ep[epnum].xfer_len == 0U))
 8004d60:	2f00      	cmp	r7, #0
 8004d62:	d1ec      	bne.n	8004d3e <HAL_PCD_IRQHandler+0x452>
 8004d64:	f8d4 3264 	ldr.w	r3, [r4, #612]	@ 0x264
 8004d68:	2b00      	cmp	r3, #0
 8004d6a:	d1e8      	bne.n	8004d3e <HAL_PCD_IRQHandler+0x452>
        (void)USB_EP0_OutStart(hpcd->Instance, 0U, (uint8_t *)hpcd->Setup);
 8004d6c:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 8004d70:	4639      	mov	r1, r7
 8004d72:	e7dc      	b.n	8004d2e <HAL_PCD_IRQHandler+0x442>
        if ((ep_intr & 0x1U) != 0U) /* In ITR */
 8004d74:	9b04      	ldr	r3, [sp, #16]
 8004d76:	07db      	lsls	r3, r3, #31
 8004d78:	f140 8099 	bpl.w	8004eae <HAL_PCD_IRQHandler+0x5c2>
          epint = USB_ReadDevInEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 8004d7c:	fa5f f38a 	uxtb.w	r3, sl
 8004d80:	4619      	mov	r1, r3
 8004d82:	9305      	str	r3, [sp, #20]
 8004d84:	f001 ff7d 	bl	8006c82 <USB_ReadDevInEPInterrupt>
          if ((epint & USB_OTG_DIEPINT_XFRC) == USB_OTG_DIEPINT_XFRC)
 8004d88:	f010 0f01 	tst.w	r0, #1
          epint = USB_ReadDevInEPInterrupt(hpcd->Instance, (uint8_t)epnum);
 8004d8c:	4680      	mov	r8, r0
          if ((epint & USB_OTG_DIEPINT_XFRC) == USB_OTG_DIEPINT_XFRC)
 8004d8e:	d01f      	beq.n	8004dd0 <HAL_PCD_IRQHandler+0x4e4>
            USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 8004d90:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
            fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
 8004d92:	2101      	movs	r1, #1
 8004d94:	f00a 020f 	and.w	r2, sl, #15
 8004d98:	fa01 f202 	lsl.w	r2, r1, r2
            USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 8004d9c:	ea23 0302 	bic.w	r3, r3, r2
 8004da0:	636b      	str	r3, [r5, #52]	@ 0x34
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_XFRC);
 8004da2:	f8cb 1008 	str.w	r1, [fp, #8]
            if (hpcd->Init.dma_enable == 1U)
 8004da6:	79a1      	ldrb	r1, [r4, #6]
 8004da8:	2901      	cmp	r1, #1
 8004daa:	d10d      	bne.n	8004dc8 <HAL_PCD_IRQHandler+0x4dc>
              hpcd->IN_ep[epnum].xfer_buff += hpcd->IN_ep[epnum].maxpacket;
 8004dac:	e9d7 2307 	ldrd	r2, r3, [r7, #28]
 8004db0:	4413      	add	r3, r2
 8004db2:	623b      	str	r3, [r7, #32]
              if ((epnum == 0U) && (hpcd->IN_ep[epnum].xfer_len == 0U))
 8004db4:	f1ba 0f00 	cmp.w	sl, #0
 8004db8:	d106      	bne.n	8004dc8 <HAL_PCD_IRQHandler+0x4dc>
 8004dba:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8004dbc:	b923      	cbnz	r3, 8004dc8 <HAL_PCD_IRQHandler+0x4dc>
                (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
 8004dbe:	6820      	ldr	r0, [r4, #0]
 8004dc0:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
 8004dc4:	f001 ff80 	bl	8006cc8 <USB_EP0_OutStart>
            HAL_PCD_DataInStageCallback(hpcd, (uint8_t)epnum);
 8004dc8:	9905      	ldr	r1, [sp, #20]
 8004dca:	4620      	mov	r0, r4
 8004dcc:	f7fc fd51 	bl	8001872 <HAL_PCD_DataInStageCallback>
          if ((epint & USB_OTG_DIEPINT_TOC) == USB_OTG_DIEPINT_TOC)
 8004dd0:	f018 0f08 	tst.w	r8, #8
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_TOC);
 8004dd4:	bf1c      	itt	ne
 8004dd6:	2308      	movne	r3, #8
 8004dd8:	f8cb 3008 	strne.w	r3, [fp, #8]
          if ((epint & USB_OTG_DIEPINT_ITTXFE) == USB_OTG_DIEPINT_ITTXFE)
 8004ddc:	f018 0f10 	tst.w	r8, #16
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_ITTXFE);
 8004de0:	bf1c      	itt	ne
 8004de2:	2310      	movne	r3, #16
 8004de4:	f8cb 3008 	strne.w	r3, [fp, #8]
          if ((epint & USB_OTG_DIEPINT_INEPNE) == USB_OTG_DIEPINT_INEPNE)
 8004de8:	f018 0f40 	tst.w	r8, #64	@ 0x40
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_INEPNE);
 8004dec:	bf1c      	itt	ne
 8004dee:	2340      	movne	r3, #64	@ 0x40
 8004df0:	f8cb 3008 	strne.w	r3, [fp, #8]
          if ((epint & USB_OTG_DIEPINT_EPDISD) == USB_OTG_DIEPINT_EPDISD)
 8004df4:	f018 0f02 	tst.w	r8, #2
 8004df8:	d00f      	beq.n	8004e1a <HAL_PCD_IRQHandler+0x52e>
            (void)USB_FlushTxFifo(USBx, epnum);
 8004dfa:	4651      	mov	r1, sl
 8004dfc:	4630      	mov	r0, r6
 8004dfe:	f001 fb85 	bl	800650c <USB_FlushTxFifo>
            if (ep->is_iso_incomplete == 1U)
 8004e02:	7dfb      	ldrb	r3, [r7, #23]
 8004e04:	2b01      	cmp	r3, #1
 8004e06:	d105      	bne.n	8004e14 <HAL_PCD_IRQHandler+0x528>
              ep->is_iso_incomplete = 0U;
 8004e08:	2300      	movs	r3, #0
              HAL_PCD_ISOINIncompleteCallback(hpcd, (uint8_t)epnum);
 8004e0a:	9905      	ldr	r1, [sp, #20]
              ep->is_iso_incomplete = 0U;
 8004e0c:	75fb      	strb	r3, [r7, #23]
              HAL_PCD_ISOINIncompleteCallback(hpcd, (uint8_t)epnum);
 8004e0e:	4620      	mov	r0, r4
 8004e10:	f7fc fd6e 	bl	80018f0 <HAL_PCD_ISOINIncompleteCallback>
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_EPDISD);
 8004e14:	2302      	movs	r3, #2
 8004e16:	f8cb 3008 	str.w	r3, [fp, #8]
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 8004e1a:	6823      	ldr	r3, [r4, #0]
 8004e1c:	9306      	str	r3, [sp, #24]
          if ((epint & USB_OTG_DIEPINT_TXFE) == USB_OTG_DIEPINT_TXFE)
 8004e1e:	f018 0f80 	tst.w	r8, #128	@ 0x80
 8004e22:	d044      	beq.n	8004eae <HAL_PCD_IRQHandler+0x5c2>
  if (ep->xfer_count > ep->xfer_len)
 8004e24:	e9d7 3209 	ldrd	r3, r2, [r7, #36]	@ 0x24
 8004e28:	429a      	cmp	r2, r3
 8004e2a:	d840      	bhi.n	8004eae <HAL_PCD_IRQHandler+0x5c2>
  len = ep->xfer_len - ep->xfer_count;
 8004e2c:	eba3 0802 	sub.w	r8, r3, r2
  if (len > ep->maxpacket)
 8004e30:	69fb      	ldr	r3, [r7, #28]
 8004e32:	4598      	cmp	r8, r3
 8004e34:	bf28      	it	cs
 8004e36:	4698      	movcs	r8, r3
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 8004e38:	9b06      	ldr	r3, [sp, #24]
 8004e3a:	f503 6310 	add.w	r3, r3, #2304	@ 0x900
  len32b = (len + 3U) / 4U;
 8004e3e:	f108 0803 	add.w	r8, r8, #3
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 8004e42:	eb03 134a 	add.w	r3, r3, sl, lsl #5
  len32b = (len + 3U) / 4U;
 8004e46:	ea4f 0898 	mov.w	r8, r8, lsr #2
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 8004e4a:	9307      	str	r3, [sp, #28]
 8004e4c:	9b07      	ldr	r3, [sp, #28]
 8004e4e:	6999      	ldr	r1, [r3, #24]
 8004e50:	b289      	uxth	r1, r1
         (ep->xfer_count < ep->xfer_len) && (ep->xfer_len != 0U))
 8004e52:	4541      	cmp	r1, r8
 8004e54:	e9d7 3209 	ldrd	r3, r2, [r7, #36]	@ 0x24
 8004e58:	d327      	bcc.n	8004eaa <HAL_PCD_IRQHandler+0x5be>
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
 8004e5a:	4293      	cmp	r3, r2
 8004e5c:	d80b      	bhi.n	8004e76 <HAL_PCD_IRQHandler+0x58a>
    USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 8004e5e:	9b06      	ldr	r3, [sp, #24]
    fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
 8004e60:	f00a 000f 	and.w	r0, sl, #15
    USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 8004e64:	f8d3 2834 	ldr.w	r2, [r3, #2100]	@ 0x834
    fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
 8004e68:	2101      	movs	r1, #1
 8004e6a:	4081      	lsls	r1, r0
    USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
 8004e6c:	ea22 0201 	bic.w	r2, r2, r1
 8004e70:	f8c3 2834 	str.w	r2, [r3, #2100]	@ 0x834
 8004e74:	e01b      	b.n	8004eae <HAL_PCD_IRQHandler+0x5c2>
    len = ep->xfer_len - ep->xfer_count;
 8004e76:	eba3 0902 	sub.w	r9, r3, r2
    if (len > ep->maxpacket)
 8004e7a:	69fb      	ldr	r3, [r7, #28]
    (void)USB_WritePacket(USBx, ep->xfer_buff, (uint8_t)epnum, (uint16_t)len,
 8004e7c:	9a05      	ldr	r2, [sp, #20]
 8004e7e:	9806      	ldr	r0, [sp, #24]
    if (len > ep->maxpacket)
 8004e80:	4599      	cmp	r9, r3
 8004e82:	bf28      	it	cs
 8004e84:	4699      	movcs	r9, r3
    (void)USB_WritePacket(USBx, ep->xfer_buff, (uint8_t)epnum, (uint16_t)len,
 8004e86:	79a3      	ldrb	r3, [r4, #6]
 8004e88:	9300      	str	r3, [sp, #0]
 8004e8a:	6a39      	ldr	r1, [r7, #32]
 8004e8c:	fa1f f389 	uxth.w	r3, r9
 8004e90:	f001 fd24 	bl	80068dc <USB_WritePacket>
    ep->xfer_buff  += len;
 8004e94:	6a3b      	ldr	r3, [r7, #32]
 8004e96:	444b      	add	r3, r9
 8004e98:	623b      	str	r3, [r7, #32]
    ep->xfer_count += len;
 8004e9a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
    len32b = (len + 3U) / 4U;
 8004e9c:	f109 0803 	add.w	r8, r9, #3
    ep->xfer_count += len;
 8004ea0:	444b      	add	r3, r9
    len32b = (len + 3U) / 4U;
 8004ea2:	ea4f 0898 	mov.w	r8, r8, lsr #2
    ep->xfer_count += len;
 8004ea6:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004ea8:	e7d0      	b.n	8004e4c <HAL_PCD_IRQHandler+0x560>
  if (ep->xfer_len <= ep->xfer_count)
 8004eaa:	4293      	cmp	r3, r2
 8004eac:	d9d7      	bls.n	8004e5e <HAL_PCD_IRQHandler+0x572>
        ep_intr >>= 1U;
 8004eae:	9b04      	ldr	r3, [sp, #16]
 8004eb0:	085b      	lsrs	r3, r3, #1
        epnum++;
 8004eb2:	f10a 0a01 	add.w	sl, sl, #1
        ep_intr >>= 1U;
 8004eb6:	9304      	str	r3, [sp, #16]
 8004eb8:	3724      	adds	r7, #36	@ 0x24
 8004eba:	f10b 0b20 	add.w	fp, fp, #32
 8004ebe:	e581      	b.n	80049c4 <HAL_PCD_IRQHandler+0xd8>
        HAL_PCD_ResumeCallback(hpcd);
 8004ec0:	4620      	mov	r0, r4
 8004ec2:	f7fc fd0d 	bl	80018e0 <HAL_PCD_ResumeCallback>
 8004ec6:	e596      	b.n	80049f6 <HAL_PCD_IRQHandler+0x10a>
        USBx_INEP(i)->DIEPINT = 0xFB7FU;
 8004ec8:	6099      	str	r1, [r3, #8]
        USBx_INEP(i)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 8004eca:	681a      	ldr	r2, [r3, #0]
 8004ecc:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
 8004ed0:	601a      	str	r2, [r3, #0]
        USBx_OUTEP(i)->DOEPINT = 0xFB7FU;
 8004ed2:	f8c3 1208 	str.w	r1, [r3, #520]	@ 0x208
        USBx_OUTEP(i)->DOEPCTL &= ~USB_OTG_DOEPCTL_STALL;
 8004ed6:	f8d3 2200 	ldr.w	r2, [r3, #512]	@ 0x200
 8004eda:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
 8004ede:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
        USBx_OUTEP(i)->DOEPCTL |= USB_OTG_DOEPCTL_SNAK;
 8004ee2:	f8d3 2200 	ldr.w	r2, [r3, #512]	@ 0x200
 8004ee6:	f042 6200 	orr.w	r2, r2, #134217728	@ 0x8000000
 8004eea:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
      for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8004eee:	9a03      	ldr	r2, [sp, #12]
 8004ef0:	3201      	adds	r2, #1
 8004ef2:	9203      	str	r2, [sp, #12]
 8004ef4:	3320      	adds	r3, #32
 8004ef6:	e5a5      	b.n	8004a44 <HAL_PCD_IRQHandler+0x158>
 8004ef8:	4f54300a 	.word	0x4f54300a
 8004efc:	4f54310a 	.word	0x4f54310a
        USBx_DEVICE->DOEPMSK |= USB_OTG_DOEPMSK_STUPM |
 8004f00:	696b      	ldr	r3, [r5, #20]
 8004f02:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8004f06:	f043 032b 	orr.w	r3, r3, #43	@ 0x2b
 8004f0a:	616b      	str	r3, [r5, #20]
        USBx_DEVICE->DIEPMSK |= USB_OTG_DIEPMSK_TOM |
 8004f0c:	692b      	ldr	r3, [r5, #16]
 8004f0e:	f043 030b 	orr.w	r3, r3, #11
 8004f12:	612b      	str	r3, [r5, #16]
 8004f14:	e5ac      	b.n	8004a70 <HAL_PCD_IRQHandler+0x184>
      USBx->GINTMSK &= ~USB_OTG_GINTMSK_GONAKEFFM;
 8004f16:	69b3      	ldr	r3, [r6, #24]
 8004f18:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8004f1c:	61b3      	str	r3, [r6, #24]
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 8004f1e:	2701      	movs	r7, #1
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
 8004f20:	f204 2857 	addw	r8, r4, #599	@ 0x257
 8004f24:	f04f 0924 	mov.w	r9, #36	@ 0x24
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 8004f28:	7923      	ldrb	r3, [r4, #4]
 8004f2a:	42bb      	cmp	r3, r7
 8004f2c:	f67f ade0 	bls.w	8004af0 <HAL_PCD_IRQHandler+0x204>
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
 8004f30:	fb09 f307 	mul.w	r3, r9, r7
 8004f34:	f818 3003 	ldrb.w	r3, [r8, r3]
 8004f38:	2b01      	cmp	r3, #1
 8004f3a:	d103      	bne.n	8004f44 <HAL_PCD_IRQHandler+0x658>
          (void)HAL_PCD_EP_Abort(hpcd, (uint8_t)epnum);
 8004f3c:	b2f9      	uxtb	r1, r7
 8004f3e:	4620      	mov	r0, r4
 8004f40:	f7ff fcc3 	bl	80048ca <HAL_PCD_EP_Abort>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 8004f44:	3701      	adds	r7, #1
 8004f46:	e7ef      	b.n	8004f28 <HAL_PCD_IRQHandler+0x63c>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
 8004f48:	f898 303c 	ldrb.w	r3, [r8, #60]	@ 0x3c
        RegVal = USBx_INEP(epnum)->DIEPCTL;
 8004f4c:	f8d9 2000 	ldr.w	r2, [r9]
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
 8004f50:	2b01      	cmp	r3, #1
 8004f52:	d109      	bne.n	8004f68 <HAL_PCD_IRQHandler+0x67c>
 8004f54:	2a00      	cmp	r2, #0
 8004f56:	da07      	bge.n	8004f68 <HAL_PCD_IRQHandler+0x67c>
          (void)HAL_PCD_EP_Abort(hpcd, (uint8_t)(epnum | 0x80U));
 8004f58:	f067 017f 	orn	r1, r7, #127	@ 0x7f
          hpcd->IN_ep[epnum].is_iso_incomplete = 1U;
 8004f5c:	f888 303b 	strb.w	r3, [r8, #59]	@ 0x3b
          (void)HAL_PCD_EP_Abort(hpcd, (uint8_t)(epnum | 0x80U));
 8004f60:	b2c9      	uxtb	r1, r1
 8004f62:	4620      	mov	r0, r4
 8004f64:	f7ff fcb1 	bl	80048ca <HAL_PCD_EP_Abort>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 8004f68:	3701      	adds	r7, #1
 8004f6a:	f108 0824 	add.w	r8, r8, #36	@ 0x24
 8004f6e:	f109 0920 	add.w	r9, r9, #32
 8004f72:	e5c6      	b.n	8004b02 <HAL_PCD_IRQHandler+0x216>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
 8004f74:	3101      	adds	r1, #1
 8004f76:	3324      	adds	r3, #36	@ 0x24
 8004f78:	3020      	adds	r0, #32
 8004f7a:	e5d6      	b.n	8004b2a <HAL_PCD_IRQHandler+0x23e>

08004f7c <HAL_PCDEx_SetTxFiFo>:
         --> Txn should be configured with the minimum space of 16 words
     The FIFO is used optimally when used TxFIFOs are allocated in the top
         of the FIFO.Ex: use EP1 and EP2 as IN instead of EP1 and EP3 as IN ones.
     When DMA is used 3n * FIFO locations should be reserved for internal DMA registers */

  Tx_Offset = hpcd->Instance->GRXFSIZ;
 8004f7c:	6800      	ldr	r0, [r0, #0]
{
 8004f7e:	b570      	push	{r4, r5, r6, lr}
  Tx_Offset = hpcd->Instance->GRXFSIZ;
 8004f80:	6a43      	ldr	r3, [r0, #36]	@ 0x24

  if (fifo == 0U)
  {
    hpcd->Instance->DIEPTXF0_HNPTXFSIZ = ((uint32_t)size << 16) | Tx_Offset;
 8004f82:	0412      	lsls	r2, r2, #16
  if (fifo == 0U)
 8004f84:	b919      	cbnz	r1, 8004f8e <HAL_PCDEx_SetTxFiFo+0x12>
    hpcd->Instance->DIEPTXF0_HNPTXFSIZ = ((uint32_t)size << 16) | Tx_Offset;
 8004f86:	4313      	orrs	r3, r2
 8004f88:	6283      	str	r3, [r0, #40]	@ 0x28
    /* Multiply Tx_Size by 2 to get higher performance */
    hpcd->Instance->DIEPTXF[fifo - 1U] = ((uint32_t)size << 16) | Tx_Offset;
  }

  return HAL_OK;
}
 8004f8a:	2000      	movs	r0, #0
 8004f8c:	bd70      	pop	{r4, r5, r6, pc}
    Tx_Offset += (hpcd->Instance->DIEPTXF0_HNPTXFSIZ) >> 16;
 8004f8e:	6a84      	ldr	r4, [r0, #40]	@ 0x28
    for (i = 0U; i < (fifo - 1U); i++)
 8004f90:	1e4e      	subs	r6, r1, #1
    Tx_Offset += (hpcd->Instance->DIEPTXF0_HNPTXFSIZ) >> 16;
 8004f92:	eb03 4314 	add.w	r3, r3, r4, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
 8004f96:	2400      	movs	r4, #0
 8004f98:	42b4      	cmp	r4, r6
 8004f9a:	d305      	bcc.n	8004fa8 <HAL_PCDEx_SetTxFiFo+0x2c>
    hpcd->Instance->DIEPTXF[fifo - 1U] = ((uint32_t)size << 16) | Tx_Offset;
 8004f9c:	313f      	adds	r1, #63	@ 0x3f
 8004f9e:	eb00 0081 	add.w	r0, r0, r1, lsl #2
 8004fa2:	4313      	orrs	r3, r2
 8004fa4:	6043      	str	r3, [r0, #4]
 8004fa6:	e7f0      	b.n	8004f8a <HAL_PCDEx_SetTxFiFo+0xe>
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
 8004fa8:	f104 0540 	add.w	r5, r4, #64	@ 0x40
 8004fac:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 8004fb0:	3401      	adds	r4, #1
 8004fb2:	686d      	ldr	r5, [r5, #4]
 8004fb4:	eb03 4315 	add.w	r3, r3, r5, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
 8004fb8:	e7ee      	b.n	8004f98 <HAL_PCDEx_SetTxFiFo+0x1c>

08004fba <HAL_PCDEx_SetRxFiFo>:
  * @param  size Size of Rx fifo
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCDEx_SetRxFiFo(PCD_HandleTypeDef *hpcd, uint16_t size)
{
  hpcd->Instance->GRXFSIZ = size;
 8004fba:	6803      	ldr	r3, [r0, #0]

  return HAL_OK;
}
 8004fbc:	2000      	movs	r0, #0
  hpcd->Instance->GRXFSIZ = size;
 8004fbe:	6259      	str	r1, [r3, #36]	@ 0x24
}
 8004fc0:	4770      	bx	lr

08004fc2 <HAL_PCDEx_LPM_Callback>:
  UNUSED(msg);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_PCDEx_LPM_Callback could be implemented in the user file
   */
}
 8004fc2:	4770      	bx	lr

08004fc4 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8004fc4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart;
  uint32_t pll_config;
  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 8004fc8:	4604      	mov	r4, r0
 8004fca:	b340      	cbz	r0, 800501e <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8004fcc:	6803      	ldr	r3, [r0, #0]
 8004fce:	07de      	lsls	r6, r3, #31
 8004fd0:	d410      	bmi.n	8004ff4 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8004fd2:	6823      	ldr	r3, [r4, #0]
 8004fd4:	079d      	lsls	r5, r3, #30
 8004fd6:	d45b      	bmi.n	8005090 <HAL_RCC_OscConfig+0xcc>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8004fd8:	6823      	ldr	r3, [r4, #0]
 8004fda:	0719      	lsls	r1, r3, #28
 8004fdc:	f100 809d 	bmi.w	800511a <HAL_RCC_OscConfig+0x156>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8004fe0:	6823      	ldr	r3, [r4, #0]
 8004fe2:	075a      	lsls	r2, r3, #29
 8004fe4:	f100 80bd 	bmi.w	8005162 <HAL_RCC_OscConfig+0x19e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8004fe8:	69a3      	ldr	r3, [r4, #24]
 8004fea:	2b00      	cmp	r3, #0
 8004fec:	f040 8124 	bne.w	8005238 <HAL_RCC_OscConfig+0x274>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 8004ff0:	2000      	movs	r0, #0
 8004ff2:	e02c      	b.n	800504e <HAL_RCC_OscConfig+0x8a>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) || \
 8004ff4:	4b8d      	ldr	r3, [pc, #564]	@ (800522c <HAL_RCC_OscConfig+0x268>)
 8004ff6:	689a      	ldr	r2, [r3, #8]
 8004ff8:	f002 020c 	and.w	r2, r2, #12
 8004ffc:	2a04      	cmp	r2, #4
 8004ffe:	d007      	beq.n	8005010 <HAL_RCC_OscConfig+0x4c>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8005000:	689a      	ldr	r2, [r3, #8]
 8005002:	f002 020c 	and.w	r2, r2, #12
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) || \
 8005006:	2a08      	cmp	r2, #8
 8005008:	d10b      	bne.n	8005022 <HAL_RCC_OscConfig+0x5e>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800500a:	685b      	ldr	r3, [r3, #4]
 800500c:	0259      	lsls	r1, r3, #9
 800500e:	d508      	bpl.n	8005022 <HAL_RCC_OscConfig+0x5e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8005010:	4b86      	ldr	r3, [pc, #536]	@ (800522c <HAL_RCC_OscConfig+0x268>)
 8005012:	681b      	ldr	r3, [r3, #0]
 8005014:	039a      	lsls	r2, r3, #14
 8005016:	d5dc      	bpl.n	8004fd2 <HAL_RCC_OscConfig+0xe>
 8005018:	6863      	ldr	r3, [r4, #4]
 800501a:	2b00      	cmp	r3, #0
 800501c:	d1d9      	bne.n	8004fd2 <HAL_RCC_OscConfig+0xe>
    return HAL_ERROR;
 800501e:	2001      	movs	r0, #1
 8005020:	e015      	b.n	800504e <HAL_RCC_OscConfig+0x8a>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8005022:	6863      	ldr	r3, [r4, #4]
 8005024:	4d81      	ldr	r5, [pc, #516]	@ (800522c <HAL_RCC_OscConfig+0x268>)
 8005026:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800502a:	d113      	bne.n	8005054 <HAL_RCC_OscConfig+0x90>
 800502c:	682b      	ldr	r3, [r5, #0]
 800502e:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8005032:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8005034:	f7fe fa16 	bl	8003464 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005038:	4e7c      	ldr	r6, [pc, #496]	@ (800522c <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 800503a:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800503c:	6833      	ldr	r3, [r6, #0]
 800503e:	039b      	lsls	r3, r3, #14
 8005040:	d4c7      	bmi.n	8004fd2 <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8005042:	f7fe fa0f 	bl	8003464 <HAL_GetTick>
 8005046:	1b40      	subs	r0, r0, r5
 8005048:	2864      	cmp	r0, #100	@ 0x64
 800504a:	d9f7      	bls.n	800503c <HAL_RCC_OscConfig+0x78>
            return HAL_TIMEOUT;
 800504c:	2003      	movs	r0, #3
}
 800504e:	b002      	add	sp, #8
 8005050:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8005054:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8005058:	d104      	bne.n	8005064 <HAL_RCC_OscConfig+0xa0>
 800505a:	682b      	ldr	r3, [r5, #0]
 800505c:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8005060:	602b      	str	r3, [r5, #0]
 8005062:	e7e3      	b.n	800502c <HAL_RCC_OscConfig+0x68>
 8005064:	682a      	ldr	r2, [r5, #0]
 8005066:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 800506a:	602a      	str	r2, [r5, #0]
 800506c:	682a      	ldr	r2, [r5, #0]
 800506e:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8005072:	602a      	str	r2, [r5, #0]
      if ((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8005074:	2b00      	cmp	r3, #0
 8005076:	d1dd      	bne.n	8005034 <HAL_RCC_OscConfig+0x70>
        tickstart = HAL_GetTick();
 8005078:	f7fe f9f4 	bl	8003464 <HAL_GetTick>
 800507c:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800507e:	682b      	ldr	r3, [r5, #0]
 8005080:	039f      	lsls	r7, r3, #14
 8005082:	d5a6      	bpl.n	8004fd2 <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8005084:	f7fe f9ee 	bl	8003464 <HAL_GetTick>
 8005088:	1b80      	subs	r0, r0, r6
 800508a:	2864      	cmp	r0, #100	@ 0x64
 800508c:	d9f7      	bls.n	800507e <HAL_RCC_OscConfig+0xba>
 800508e:	e7dd      	b.n	800504c <HAL_RCC_OscConfig+0x88>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) || \
 8005090:	4b66      	ldr	r3, [pc, #408]	@ (800522c <HAL_RCC_OscConfig+0x268>)
 8005092:	689a      	ldr	r2, [r3, #8]
 8005094:	f012 0f0c 	tst.w	r2, #12
 8005098:	d007      	beq.n	80050aa <HAL_RCC_OscConfig+0xe6>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800509a:	689a      	ldr	r2, [r3, #8]
 800509c:	f002 020c 	and.w	r2, r2, #12
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) || \
 80050a0:	2a08      	cmp	r2, #8
 80050a2:	d111      	bne.n	80050c8 <HAL_RCC_OscConfig+0x104>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80050a4:	685b      	ldr	r3, [r3, #4]
 80050a6:	025d      	lsls	r5, r3, #9
 80050a8:	d40e      	bmi.n	80050c8 <HAL_RCC_OscConfig+0x104>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80050aa:	4a60      	ldr	r2, [pc, #384]	@ (800522c <HAL_RCC_OscConfig+0x268>)
 80050ac:	6813      	ldr	r3, [r2, #0]
 80050ae:	0799      	lsls	r1, r3, #30
 80050b0:	d502      	bpl.n	80050b8 <HAL_RCC_OscConfig+0xf4>
 80050b2:	68e3      	ldr	r3, [r4, #12]
 80050b4:	2b01      	cmp	r3, #1
 80050b6:	d1b2      	bne.n	800501e <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80050b8:	6813      	ldr	r3, [r2, #0]
 80050ba:	6921      	ldr	r1, [r4, #16]
 80050bc:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 80050c0:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 80050c4:	6013      	str	r3, [r2, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80050c6:	e787      	b.n	8004fd8 <HAL_RCC_OscConfig+0x14>
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 80050c8:	68e2      	ldr	r2, [r4, #12]
 80050ca:	4b59      	ldr	r3, [pc, #356]	@ (8005230 <HAL_RCC_OscConfig+0x26c>)
 80050cc:	b1b2      	cbz	r2, 80050fc <HAL_RCC_OscConfig+0x138>
        __HAL_RCC_HSI_ENABLE();
 80050ce:	2201      	movs	r2, #1
 80050d0:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80050d2:	f7fe f9c7 	bl	8003464 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80050d6:	4d55      	ldr	r5, [pc, #340]	@ (800522c <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 80050d8:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80050da:	682b      	ldr	r3, [r5, #0]
 80050dc:	079b      	lsls	r3, r3, #30
 80050de:	d507      	bpl.n	80050f0 <HAL_RCC_OscConfig+0x12c>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80050e0:	682b      	ldr	r3, [r5, #0]
 80050e2:	6922      	ldr	r2, [r4, #16]
 80050e4:	f023 03f8 	bic.w	r3, r3, #248	@ 0xf8
 80050e8:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80050ec:	602b      	str	r3, [r5, #0]
 80050ee:	e773      	b.n	8004fd8 <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 80050f0:	f7fe f9b8 	bl	8003464 <HAL_GetTick>
 80050f4:	1b80      	subs	r0, r0, r6
 80050f6:	2802      	cmp	r0, #2
 80050f8:	d9ef      	bls.n	80050da <HAL_RCC_OscConfig+0x116>
 80050fa:	e7a7      	b.n	800504c <HAL_RCC_OscConfig+0x88>
        __HAL_RCC_HSI_DISABLE();
 80050fc:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80050fe:	f7fe f9b1 	bl	8003464 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8005102:	4e4a      	ldr	r6, [pc, #296]	@ (800522c <HAL_RCC_OscConfig+0x268>)
        tickstart = HAL_GetTick();
 8005104:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8005106:	6833      	ldr	r3, [r6, #0]
 8005108:	079f      	lsls	r7, r3, #30
 800510a:	f57f af65 	bpl.w	8004fd8 <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 800510e:	f7fe f9a9 	bl	8003464 <HAL_GetTick>
 8005112:	1b40      	subs	r0, r0, r5
 8005114:	2802      	cmp	r0, #2
 8005116:	d9f6      	bls.n	8005106 <HAL_RCC_OscConfig+0x142>
 8005118:	e798      	b.n	800504c <HAL_RCC_OscConfig+0x88>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 800511a:	6962      	ldr	r2, [r4, #20]
 800511c:	4b44      	ldr	r3, [pc, #272]	@ (8005230 <HAL_RCC_OscConfig+0x26c>)
 800511e:	b182      	cbz	r2, 8005142 <HAL_RCC_OscConfig+0x17e>
      __HAL_RCC_LSI_ENABLE();
 8005120:	2201      	movs	r2, #1
 8005122:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 8005126:	f7fe f99d 	bl	8003464 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800512a:	4e40      	ldr	r6, [pc, #256]	@ (800522c <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 800512c:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800512e:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 8005130:	079b      	lsls	r3, r3, #30
 8005132:	f53f af55 	bmi.w	8004fe0 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8005136:	f7fe f995 	bl	8003464 <HAL_GetTick>
 800513a:	1b40      	subs	r0, r0, r5
 800513c:	2802      	cmp	r0, #2
 800513e:	d9f6      	bls.n	800512e <HAL_RCC_OscConfig+0x16a>
 8005140:	e784      	b.n	800504c <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_LSI_DISABLE();
 8005142:	f8c3 2e80 	str.w	r2, [r3, #3712]	@ 0xe80
      tickstart = HAL_GetTick();
 8005146:	f7fe f98d 	bl	8003464 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800514a:	4e38      	ldr	r6, [pc, #224]	@ (800522c <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 800514c:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800514e:	6f73      	ldr	r3, [r6, #116]	@ 0x74
 8005150:	079f      	lsls	r7, r3, #30
 8005152:	f57f af45 	bpl.w	8004fe0 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8005156:	f7fe f985 	bl	8003464 <HAL_GetTick>
 800515a:	1b40      	subs	r0, r0, r5
 800515c:	2802      	cmp	r0, #2
 800515e:	d9f6      	bls.n	800514e <HAL_RCC_OscConfig+0x18a>
 8005160:	e774      	b.n	800504c <HAL_RCC_OscConfig+0x88>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8005162:	4b32      	ldr	r3, [pc, #200]	@ (800522c <HAL_RCC_OscConfig+0x268>)
 8005164:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8005166:	f012 5280 	ands.w	r2, r2, #268435456	@ 0x10000000
 800516a:	d128      	bne.n	80051be <HAL_RCC_OscConfig+0x1fa>
      __HAL_RCC_PWR_CLK_ENABLE();
 800516c:	9201      	str	r2, [sp, #4]
 800516e:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8005170:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8005174:	641a      	str	r2, [r3, #64]	@ 0x40
 8005176:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005178:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800517c:	9301      	str	r3, [sp, #4]
 800517e:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8005180:	2701      	movs	r7, #1
    if (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005182:	4d2c      	ldr	r5, [pc, #176]	@ (8005234 <HAL_RCC_OscConfig+0x270>)
 8005184:	682b      	ldr	r3, [r5, #0]
 8005186:	05d8      	lsls	r0, r3, #23
 8005188:	d51b      	bpl.n	80051c2 <HAL_RCC_OscConfig+0x1fe>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800518a:	68a3      	ldr	r3, [r4, #8]
 800518c:	4d27      	ldr	r5, [pc, #156]	@ (800522c <HAL_RCC_OscConfig+0x268>)
 800518e:	2b01      	cmp	r3, #1
 8005190:	d127      	bne.n	80051e2 <HAL_RCC_OscConfig+0x21e>
 8005192:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8005194:	f043 0301 	orr.w	r3, r3, #1
 8005198:	672b      	str	r3, [r5, #112]	@ 0x70
      tickstart = HAL_GetTick();
 800519a:	f7fe f963 	bl	8003464 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800519e:	4e23      	ldr	r6, [pc, #140]	@ (800522c <HAL_RCC_OscConfig+0x268>)
      tickstart = HAL_GetTick();
 80051a0:	4605      	mov	r5, r0
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80051a2:	f241 3888 	movw	r8, #5000	@ 0x1388
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80051a6:	6f33      	ldr	r3, [r6, #112]	@ 0x70
 80051a8:	079a      	lsls	r2, r3, #30
 80051aa:	d539      	bpl.n	8005220 <HAL_RCC_OscConfig+0x25c>
    if (pwrclkchanged == SET)
 80051ac:	2f00      	cmp	r7, #0
 80051ae:	f43f af1b 	beq.w	8004fe8 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 80051b2:	4a1e      	ldr	r2, [pc, #120]	@ (800522c <HAL_RCC_OscConfig+0x268>)
 80051b4:	6c13      	ldr	r3, [r2, #64]	@ 0x40
 80051b6:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 80051ba:	6413      	str	r3, [r2, #64]	@ 0x40
 80051bc:	e714      	b.n	8004fe8 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 80051be:	2700      	movs	r7, #0
 80051c0:	e7df      	b.n	8005182 <HAL_RCC_OscConfig+0x1be>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 80051c2:	682b      	ldr	r3, [r5, #0]
 80051c4:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80051c8:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 80051ca:	f7fe f94b 	bl	8003464 <HAL_GetTick>
 80051ce:	4606      	mov	r6, r0
      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80051d0:	682b      	ldr	r3, [r5, #0]
 80051d2:	05d9      	lsls	r1, r3, #23
 80051d4:	d4d9      	bmi.n	800518a <HAL_RCC_OscConfig+0x1c6>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80051d6:	f7fe f945 	bl	8003464 <HAL_GetTick>
 80051da:	1b80      	subs	r0, r0, r6
 80051dc:	2802      	cmp	r0, #2
 80051de:	d9f7      	bls.n	80051d0 <HAL_RCC_OscConfig+0x20c>
 80051e0:	e734      	b.n	800504c <HAL_RCC_OscConfig+0x88>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80051e2:	2b05      	cmp	r3, #5
 80051e4:	d104      	bne.n	80051f0 <HAL_RCC_OscConfig+0x22c>
 80051e6:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 80051e8:	f043 0304 	orr.w	r3, r3, #4
 80051ec:	672b      	str	r3, [r5, #112]	@ 0x70
 80051ee:	e7d0      	b.n	8005192 <HAL_RCC_OscConfig+0x1ce>
 80051f0:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 80051f2:	f022 0201 	bic.w	r2, r2, #1
 80051f6:	672a      	str	r2, [r5, #112]	@ 0x70
 80051f8:	6f2a      	ldr	r2, [r5, #112]	@ 0x70
 80051fa:	f022 0204 	bic.w	r2, r2, #4
 80051fe:	672a      	str	r2, [r5, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8005200:	2b00      	cmp	r3, #0
 8005202:	d1ca      	bne.n	800519a <HAL_RCC_OscConfig+0x1d6>
      tickstart = HAL_GetTick();
 8005204:	f7fe f92e 	bl	8003464 <HAL_GetTick>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8005208:	f241 3888 	movw	r8, #5000	@ 0x1388
      tickstart = HAL_GetTick();
 800520c:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800520e:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8005210:	079b      	lsls	r3, r3, #30
 8005212:	d5cb      	bpl.n	80051ac <HAL_RCC_OscConfig+0x1e8>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8005214:	f7fe f926 	bl	8003464 <HAL_GetTick>
 8005218:	1b80      	subs	r0, r0, r6
 800521a:	4540      	cmp	r0, r8
 800521c:	d9f7      	bls.n	800520e <HAL_RCC_OscConfig+0x24a>
 800521e:	e715      	b.n	800504c <HAL_RCC_OscConfig+0x88>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8005220:	f7fe f920 	bl	8003464 <HAL_GetTick>
 8005224:	1b40      	subs	r0, r0, r5
 8005226:	4540      	cmp	r0, r8
 8005228:	d9bd      	bls.n	80051a6 <HAL_RCC_OscConfig+0x1e2>
 800522a:	e70f      	b.n	800504c <HAL_RCC_OscConfig+0x88>
 800522c:	40023800 	.word	0x40023800
 8005230:	42470000 	.word	0x42470000
 8005234:	40007000 	.word	0x40007000
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8005238:	4d37      	ldr	r5, [pc, #220]	@ (8005318 <HAL_RCC_OscConfig+0x354>)
 800523a:	68aa      	ldr	r2, [r5, #8]
 800523c:	f002 020c 	and.w	r2, r2, #12
 8005240:	2a08      	cmp	r2, #8
 8005242:	d03e      	beq.n	80052c2 <HAL_RCC_OscConfig+0x2fe>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8005244:	2b02      	cmp	r3, #2
 8005246:	4b35      	ldr	r3, [pc, #212]	@ (800531c <HAL_RCC_OscConfig+0x358>)
 8005248:	f04f 0200 	mov.w	r2, #0
        __HAL_RCC_PLL_DISABLE();
 800524c:	661a      	str	r2, [r3, #96]	@ 0x60
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800524e:	d12b      	bne.n	80052a8 <HAL_RCC_OscConfig+0x2e4>
        tickstart = HAL_GetTick();
 8005250:	f7fe f908 	bl	8003464 <HAL_GetTick>
 8005254:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005256:	682b      	ldr	r3, [r5, #0]
 8005258:	0199      	lsls	r1, r3, #6
 800525a:	d41f      	bmi.n	800529c <HAL_RCC_OscConfig+0x2d8>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800525c:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 8005260:	4313      	orrs	r3, r2
 8005262:	6a62      	ldr	r2, [r4, #36]	@ 0x24
 8005264:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8005268:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 800526a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800526e:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8005270:	0852      	lsrs	r2, r2, #1
 8005272:	3a01      	subs	r2, #1
 8005274:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8005278:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800527a:	4b28      	ldr	r3, [pc, #160]	@ (800531c <HAL_RCC_OscConfig+0x358>)
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800527c:	4d26      	ldr	r5, [pc, #152]	@ (8005318 <HAL_RCC_OscConfig+0x354>)
        __HAL_RCC_PLL_ENABLE();
 800527e:	2201      	movs	r2, #1
 8005280:	661a      	str	r2, [r3, #96]	@ 0x60
        tickstart = HAL_GetTick();
 8005282:	f7fe f8ef 	bl	8003464 <HAL_GetTick>
 8005286:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005288:	682b      	ldr	r3, [r5, #0]
 800528a:	019a      	lsls	r2, r3, #6
 800528c:	f53f aeb0 	bmi.w	8004ff0 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8005290:	f7fe f8e8 	bl	8003464 <HAL_GetTick>
 8005294:	1b00      	subs	r0, r0, r4
 8005296:	2802      	cmp	r0, #2
 8005298:	d9f6      	bls.n	8005288 <HAL_RCC_OscConfig+0x2c4>
 800529a:	e6d7      	b.n	800504c <HAL_RCC_OscConfig+0x88>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 800529c:	f7fe f8e2 	bl	8003464 <HAL_GetTick>
 80052a0:	1b80      	subs	r0, r0, r6
 80052a2:	2802      	cmp	r0, #2
 80052a4:	d9d7      	bls.n	8005256 <HAL_RCC_OscConfig+0x292>
 80052a6:	e6d1      	b.n	800504c <HAL_RCC_OscConfig+0x88>
        tickstart = HAL_GetTick();
 80052a8:	f7fe f8dc 	bl	8003464 <HAL_GetTick>
 80052ac:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80052ae:	682b      	ldr	r3, [r5, #0]
 80052b0:	019b      	lsls	r3, r3, #6
 80052b2:	f57f ae9d 	bpl.w	8004ff0 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80052b6:	f7fe f8d5 	bl	8003464 <HAL_GetTick>
 80052ba:	1b00      	subs	r0, r0, r4
 80052bc:	2802      	cmp	r0, #2
 80052be:	d9f6      	bls.n	80052ae <HAL_RCC_OscConfig+0x2ea>
 80052c0:	e6c4      	b.n	800504c <HAL_RCC_OscConfig+0x88>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 80052c2:	2b01      	cmp	r3, #1
 80052c4:	f43f aeab 	beq.w	800501e <HAL_RCC_OscConfig+0x5a>
        pll_config = RCC->PLLCFGR;
 80052c8:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80052ca:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80052cc:	f403 0180 	and.w	r1, r3, #4194304	@ 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80052d0:	4291      	cmp	r1, r2
 80052d2:	f47f aea4 	bne.w	800501e <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80052d6:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 80052d8:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80052dc:	428a      	cmp	r2, r1
 80052de:	f47f ae9e 	bne.w	800501e <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 80052e2:	6a61      	ldr	r1, [r4, #36]	@ 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 80052e4:	f647 72c0 	movw	r2, #32704	@ 0x7fc0
 80052e8:	401a      	ands	r2, r3
 80052ea:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 80052ee:	f47f ae96 	bne.w	800501e <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 80052f2:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 80052f4:	0852      	lsrs	r2, r2, #1
 80052f6:	f403 3140 	and.w	r1, r3, #196608	@ 0x30000
 80052fa:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 80052fc:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 8005300:	f47f ae8d 	bne.w	800501e <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 8005304:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8005306:	f003 6370 	and.w	r3, r3, #251658240	@ 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800530a:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
 800530e:	bf14      	ite	ne
 8005310:	2001      	movne	r0, #1
 8005312:	2000      	moveq	r0, #0
 8005314:	e69b      	b.n	800504e <HAL_RCC_OscConfig+0x8a>
 8005316:	bf00      	nop
 8005318:	40023800 	.word	0x40023800
 800531c:	42470000 	.word	0x42470000

08005320 <HAL_RCC_GetSysClockFreq>:
  uint32_t pllvco = 0U;
  uint32_t pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005320:	4913      	ldr	r1, [pc, #76]	@ (8005370 <HAL_RCC_GetSysClockFreq+0x50>)
{
 8005322:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005324:	688b      	ldr	r3, [r1, #8]
 8005326:	f003 030c 	and.w	r3, r3, #12
 800532a:	2b04      	cmp	r3, #4
 800532c:	d01c      	beq.n	8005368 <HAL_RCC_GetSysClockFreq+0x48>
 800532e:	2b08      	cmp	r3, #8
 8005330:	d11c      	bne.n	800536c <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8005332:	684a      	ldr	r2, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8005334:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005336:	6849      	ldr	r1, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8005338:	f413 0380 	ands.w	r3, r3, #4194304	@ 0x400000
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800533c:	bf14      	ite	ne
 800533e:	480d      	ldrne	r0, [pc, #52]	@ (8005374 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005340:	480d      	ldreq	r0, [pc, #52]	@ (8005378 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005342:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8005346:	bf18      	it	ne
 8005348:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800534a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800534e:	fba1 0100 	umull	r0, r1, r1, r0
 8005352:	f7fa fff5 	bl	8000340 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) * 2U);
 8005356:	4b06      	ldr	r3, [pc, #24]	@ (8005370 <HAL_RCC_GetSysClockFreq+0x50>)
 8005358:	685b      	ldr	r3, [r3, #4]
 800535a:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800535e:	3301      	adds	r3, #1
 8005360:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco / pllp;
 8005362:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8005366:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005368:	4802      	ldr	r0, [pc, #8]	@ (8005374 <HAL_RCC_GetSysClockFreq+0x54>)
 800536a:	e7fc      	b.n	8005366 <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 800536c:	4802      	ldr	r0, [pc, #8]	@ (8005378 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 800536e:	e7fa      	b.n	8005366 <HAL_RCC_GetSysClockFreq+0x46>
 8005370:	40023800 	.word	0x40023800
 8005374:	007a1200 	.word	0x007a1200
 8005378:	00f42400 	.word	0x00f42400

0800537c <HAL_RCC_ClockConfig>:
{
 800537c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005380:	460d      	mov	r5, r1
  if (RCC_ClkInitStruct == NULL)
 8005382:	4604      	mov	r4, r0
 8005384:	b910      	cbnz	r0, 800538c <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8005386:	2001      	movs	r0, #1
}
 8005388:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 800538c:	4b43      	ldr	r3, [pc, #268]	@ (800549c <HAL_RCC_ClockConfig+0x120>)
 800538e:	681a      	ldr	r2, [r3, #0]
 8005390:	f002 020f 	and.w	r2, r2, #15
 8005394:	428a      	cmp	r2, r1
 8005396:	d328      	bcc.n	80053ea <HAL_RCC_ClockConfig+0x6e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8005398:	6821      	ldr	r1, [r4, #0]
 800539a:	078f      	lsls	r7, r1, #30
 800539c:	d42d      	bmi.n	80053fa <HAL_RCC_ClockConfig+0x7e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800539e:	07c8      	lsls	r0, r1, #31
 80053a0:	d440      	bmi.n	8005424 <HAL_RCC_ClockConfig+0xa8>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 80053a2:	4b3e      	ldr	r3, [pc, #248]	@ (800549c <HAL_RCC_ClockConfig+0x120>)
 80053a4:	681a      	ldr	r2, [r3, #0]
 80053a6:	f002 020f 	and.w	r2, r2, #15
 80053aa:	42aa      	cmp	r2, r5
 80053ac:	d865      	bhi.n	800547a <HAL_RCC_ClockConfig+0xfe>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80053ae:	6822      	ldr	r2, [r4, #0]
 80053b0:	0751      	lsls	r1, r2, #29
 80053b2:	d46b      	bmi.n	800548c <HAL_RCC_ClockConfig+0x110>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80053b4:	0713      	lsls	r3, r2, #28
 80053b6:	d507      	bpl.n	80053c8 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 80053b8:	4a39      	ldr	r2, [pc, #228]	@ (80054a0 <HAL_RCC_ClockConfig+0x124>)
 80053ba:	6921      	ldr	r1, [r4, #16]
 80053bc:	6893      	ldr	r3, [r2, #8]
 80053be:	f423 4360 	bic.w	r3, r3, #57344	@ 0xe000
 80053c2:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 80053c6:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 80053c8:	f7ff ffaa 	bl	8005320 <HAL_RCC_GetSysClockFreq>
 80053cc:	4b34      	ldr	r3, [pc, #208]	@ (80054a0 <HAL_RCC_ClockConfig+0x124>)
 80053ce:	4a35      	ldr	r2, [pc, #212]	@ (80054a4 <HAL_RCC_ClockConfig+0x128>)
 80053d0:	689b      	ldr	r3, [r3, #8]
 80053d2:	f3c3 1303 	ubfx	r3, r3, #4, #4
 80053d6:	5cd3      	ldrb	r3, [r2, r3]
 80053d8:	40d8      	lsrs	r0, r3
 80053da:	4b33      	ldr	r3, [pc, #204]	@ (80054a8 <HAL_RCC_ClockConfig+0x12c>)
 80053dc:	6018      	str	r0, [r3, #0]
  HAL_InitTick(uwTickPrio);
 80053de:	4b33      	ldr	r3, [pc, #204]	@ (80054ac <HAL_RCC_ClockConfig+0x130>)
 80053e0:	6818      	ldr	r0, [r3, #0]
 80053e2:	f7fd f891 	bl	8002508 <HAL_InitTick>
  return HAL_OK;
 80053e6:	2000      	movs	r0, #0
 80053e8:	e7ce      	b.n	8005388 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80053ea:	b2ca      	uxtb	r2, r1
 80053ec:	701a      	strb	r2, [r3, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 80053ee:	681b      	ldr	r3, [r3, #0]
 80053f0:	f003 030f 	and.w	r3, r3, #15
 80053f4:	428b      	cmp	r3, r1
 80053f6:	d1c6      	bne.n	8005386 <HAL_RCC_ClockConfig+0xa>
 80053f8:	e7ce      	b.n	8005398 <HAL_RCC_ClockConfig+0x1c>
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80053fa:	4b29      	ldr	r3, [pc, #164]	@ (80054a0 <HAL_RCC_ClockConfig+0x124>)
 80053fc:	f011 0f04 	tst.w	r1, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8005400:	bf1e      	ittt	ne
 8005402:	689a      	ldrne	r2, [r3, #8]
 8005404:	f442 52e0 	orrne.w	r2, r2, #7168	@ 0x1c00
 8005408:	609a      	strne	r2, [r3, #8]
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800540a:	070e      	lsls	r6, r1, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800540c:	bf42      	ittt	mi
 800540e:	689a      	ldrmi	r2, [r3, #8]
 8005410:	f442 4260 	orrmi.w	r2, r2, #57344	@ 0xe000
 8005414:	609a      	strmi	r2, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8005416:	689a      	ldr	r2, [r3, #8]
 8005418:	68a0      	ldr	r0, [r4, #8]
 800541a:	f022 02f0 	bic.w	r2, r2, #240	@ 0xf0
 800541e:	4302      	orrs	r2, r0
 8005420:	609a      	str	r2, [r3, #8]
 8005422:	e7bc      	b.n	800539e <HAL_RCC_ClockConfig+0x22>
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8005424:	6862      	ldr	r2, [r4, #4]
 8005426:	4b1e      	ldr	r3, [pc, #120]	@ (80054a0 <HAL_RCC_ClockConfig+0x124>)
 8005428:	2a01      	cmp	r2, #1
 800542a:	d11c      	bne.n	8005466 <HAL_RCC_ClockConfig+0xea>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800542c:	681b      	ldr	r3, [r3, #0]
 800542e:	f413 3f00 	tst.w	r3, #131072	@ 0x20000
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005432:	d0a8      	beq.n	8005386 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8005434:	4e1a      	ldr	r6, [pc, #104]	@ (80054a0 <HAL_RCC_ClockConfig+0x124>)
 8005436:	68b3      	ldr	r3, [r6, #8]
 8005438:	f023 0303 	bic.w	r3, r3, #3
 800543c:	4313      	orrs	r3, r2
 800543e:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8005440:	f7fe f810 	bl	8003464 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8005444:	f241 3888 	movw	r8, #5000	@ 0x1388
    tickstart = HAL_GetTick();
 8005448:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800544a:	68b3      	ldr	r3, [r6, #8]
 800544c:	6862      	ldr	r2, [r4, #4]
 800544e:	f003 030c 	and.w	r3, r3, #12
 8005452:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8005456:	d0a4      	beq.n	80053a2 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8005458:	f7fe f804 	bl	8003464 <HAL_GetTick>
 800545c:	1bc0      	subs	r0, r0, r7
 800545e:	4540      	cmp	r0, r8
 8005460:	d9f3      	bls.n	800544a <HAL_RCC_ClockConfig+0xce>
        return HAL_TIMEOUT;
 8005462:	2003      	movs	r0, #3
 8005464:	e790      	b.n	8005388 <HAL_RCC_ClockConfig+0xc>
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8005466:	1e91      	subs	r1, r2, #2
 8005468:	2901      	cmp	r1, #1
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800546a:	681b      	ldr	r3, [r3, #0]
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800546c:	d802      	bhi.n	8005474 <HAL_RCC_ClockConfig+0xf8>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800546e:	f013 7f00 	tst.w	r3, #33554432	@ 0x2000000
 8005472:	e7de      	b.n	8005432 <HAL_RCC_ClockConfig+0xb6>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005474:	f013 0f02 	tst.w	r3, #2
 8005478:	e7db      	b.n	8005432 <HAL_RCC_ClockConfig+0xb6>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800547a:	b2ea      	uxtb	r2, r5
 800547c:	701a      	strb	r2, [r3, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 800547e:	681b      	ldr	r3, [r3, #0]
 8005480:	f003 030f 	and.w	r3, r3, #15
 8005484:	42ab      	cmp	r3, r5
 8005486:	f47f af7e 	bne.w	8005386 <HAL_RCC_ClockConfig+0xa>
 800548a:	e790      	b.n	80053ae <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800548c:	4904      	ldr	r1, [pc, #16]	@ (80054a0 <HAL_RCC_ClockConfig+0x124>)
 800548e:	68e0      	ldr	r0, [r4, #12]
 8005490:	688b      	ldr	r3, [r1, #8]
 8005492:	f423 53e0 	bic.w	r3, r3, #7168	@ 0x1c00
 8005496:	4303      	orrs	r3, r0
 8005498:	608b      	str	r3, [r1, #8]
 800549a:	e78b      	b.n	80053b4 <HAL_RCC_ClockConfig+0x38>
 800549c:	40023c00 	.word	0x40023c00
 80054a0:	40023800 	.word	0x40023800
 80054a4:	080237a0 	.word	0x080237a0
 80054a8:	200000c4 	.word	0x200000c4
 80054ac:	200000cc 	.word	0x200000cc

080054b0 <HAL_RCC_GetHCLKFreq>:
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
  return SystemCoreClock;
}
 80054b0:	4b01      	ldr	r3, [pc, #4]	@ (80054b8 <HAL_RCC_GetHCLKFreq+0x8>)
 80054b2:	6818      	ldr	r0, [r3, #0]
 80054b4:	4770      	bx	lr
 80054b6:	bf00      	nop
 80054b8:	200000c4 	.word	0x200000c4

080054bc <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 80054bc:	4b04      	ldr	r3, [pc, #16]	@ (80054d0 <HAL_RCC_GetPCLK1Freq+0x14>)
 80054be:	4a05      	ldr	r2, [pc, #20]	@ (80054d4 <HAL_RCC_GetPCLK1Freq+0x18>)
 80054c0:	689b      	ldr	r3, [r3, #8]
 80054c2:	f3c3 2382 	ubfx	r3, r3, #10, #3
 80054c6:	5cd3      	ldrb	r3, [r2, r3]
 80054c8:	4a03      	ldr	r2, [pc, #12]	@ (80054d8 <HAL_RCC_GetPCLK1Freq+0x1c>)
 80054ca:	6810      	ldr	r0, [r2, #0]
}
 80054cc:	40d8      	lsrs	r0, r3
 80054ce:	4770      	bx	lr
 80054d0:	40023800 	.word	0x40023800
 80054d4:	08023798 	.word	0x08023798
 80054d8:	200000c4 	.word	0x200000c4

080054dc <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 80054dc:	230f      	movs	r3, #15
 80054de:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 80054e0:	4b0b      	ldr	r3, [pc, #44]	@ (8005510 <HAL_RCC_GetClockConfig+0x34>)
 80054e2:	689a      	ldr	r2, [r3, #8]
 80054e4:	f002 0203 	and.w	r2, r2, #3
 80054e8:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 80054ea:	689a      	ldr	r2, [r3, #8]
 80054ec:	f002 02f0 	and.w	r2, r2, #240	@ 0xf0
 80054f0:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 80054f2:	689a      	ldr	r2, [r3, #8]
 80054f4:	f402 52e0 	and.w	r2, r2, #7168	@ 0x1c00
 80054f8:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 80054fa:	689b      	ldr	r3, [r3, #8]
 80054fc:	08db      	lsrs	r3, r3, #3
 80054fe:	f403 53e0 	and.w	r3, r3, #7168	@ 0x1c00
 8005502:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8005504:	4b03      	ldr	r3, [pc, #12]	@ (8005514 <HAL_RCC_GetClockConfig+0x38>)
 8005506:	681b      	ldr	r3, [r3, #0]
 8005508:	f003 030f 	and.w	r3, r3, #15
 800550c:	600b      	str	r3, [r1, #0]
}
 800550e:	4770      	bx	lr
 8005510:	40023800 	.word	0x40023800
 8005514:	40023c00 	.word	0x40023c00

08005518 <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
      (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8005518:	6803      	ldr	r3, [r0, #0]
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800551a:	f013 0f43 	tst.w	r3, #67	@ 0x43
{
 800551e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005520:	4604      	mov	r4, r0
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8005522:	f040 8088 	bne.w	8005636 <HAL_RCCEx_PeriphCLKConfig+0x11e>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8005526:	6823      	ldr	r3, [r4, #0]
 8005528:	f013 0f0c 	tst.w	r3, #12
 800552c:	d045      	beq.n	80055ba <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 800552e:	4b8c      	ldr	r3, [pc, #560]	@ (8005760 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while (__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8005530:	4d8c      	ldr	r5, [pc, #560]	@ (8005764 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLSAI_DISABLE();
 8005532:	2200      	movs	r2, #0
 8005534:	671a      	str	r2, [r3, #112]	@ 0x70
    tickstart = HAL_GetTick();
 8005536:	f7fd ff95 	bl	8003464 <HAL_GetTick>
 800553a:	4606      	mov	r6, r0
    while (__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800553c:	682b      	ldr	r3, [r5, #0]
 800553e:	0099      	lsls	r1, r3, #2
 8005540:	f100 80cb 	bmi.w	80056da <HAL_RCCEx_PeriphCLKConfig+0x1c2>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8005544:	6821      	ldr	r1, [r4, #0]
 8005546:	074a      	lsls	r2, r1, #29
 8005548:	d515      	bpl.n	8005576 <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800554a:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800554e:	f8d5 2088 	ldr.w	r2, [r5, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8005552:	061b      	lsls	r3, r3, #24
 8005554:	f002 42e0 	and.w	r2, r2, #1879048192	@ 0x70000000
 8005558:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800555c:	4313      	orrs	r3, r2
 800555e:	f8c5 3088 	str.w	r3, [r5, #136]	@ 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8005562:	f8d5 308c 	ldr.w	r3, [r5, #140]	@ 0x8c
 8005566:	6a22      	ldr	r2, [r4, #32]
 8005568:	f423 53f8 	bic.w	r3, r3, #7936	@ 0x1f00
 800556c:	3a01      	subs	r2, #1
 800556e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8005572:	f8c5 308c 	str.w	r3, [r5, #140]	@ 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8005576:	070b      	lsls	r3, r1, #28
 8005578:	d514      	bpl.n	80055a4 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800557a:	4a7a      	ldr	r2, [pc, #488]	@ (8005764 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800557c:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800557e:	f8d2 1088 	ldr.w	r1, [r2, #136]	@ 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8005582:	6920      	ldr	r0, [r4, #16]
 8005584:	071b      	lsls	r3, r3, #28
 8005586:	f001 6170 	and.w	r1, r1, #251658240	@ 0xf000000
 800558a:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800558e:	430b      	orrs	r3, r1
 8005590:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8005594:	f8d2 308c 	ldr.w	r3, [r2, #140]	@ 0x8c
 8005598:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800559a:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 800559e:	430b      	orrs	r3, r1
 80055a0:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 80055a4:	4b6e      	ldr	r3, [pc, #440]	@ (8005760 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while (__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80055a6:	4e6f      	ldr	r6, [pc, #444]	@ (8005764 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLSAI_ENABLE();
 80055a8:	2201      	movs	r2, #1
 80055aa:	671a      	str	r2, [r3, #112]	@ 0x70
    tickstart = HAL_GetTick();
 80055ac:	f7fd ff5a 	bl	8003464 <HAL_GetTick>
 80055b0:	4605      	mov	r5, r0
    while (__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80055b2:	6833      	ldr	r3, [r6, #0]
 80055b4:	009f      	lsls	r7, r3, #2
 80055b6:	f140 8097 	bpl.w	80056e8 <HAL_RCCEx_PeriphCLKConfig+0x1d0>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 80055ba:	6823      	ldr	r3, [r4, #0]
 80055bc:	0698      	lsls	r0, r3, #26
 80055be:	d534      	bpl.n	800562a <HAL_RCCEx_PeriphCLKConfig+0x112>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 80055c0:	2300      	movs	r3, #0
 80055c2:	9301      	str	r3, [sp, #4]
 80055c4:	4b67      	ldr	r3, [pc, #412]	@ (8005764 <HAL_RCCEx_PeriphCLKConfig+0x24c>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 80055c6:	4d68      	ldr	r5, [pc, #416]	@ (8005768 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PWR_CLK_ENABLE();
 80055c8:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80055ca:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 80055ce:	641a      	str	r2, [r3, #64]	@ 0x40
 80055d0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80055d2:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80055d6:	9301      	str	r3, [sp, #4]
 80055d8:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 80055da:	682b      	ldr	r3, [r5, #0]
 80055dc:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80055e0:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 80055e2:	f7fd ff3f 	bl	8003464 <HAL_GetTick>
 80055e6:	4606      	mov	r6, r0

    while ((PWR->CR & PWR_CR_DBP) == RESET)
 80055e8:	682b      	ldr	r3, [r5, #0]
 80055ea:	05d8      	lsls	r0, r3, #23
 80055ec:	f140 8083 	bpl.w	80056f6 <HAL_RCCEx_PeriphCLKConfig+0x1de>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 80055f0:	4d5c      	ldr	r5, [pc, #368]	@ (8005764 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 80055f2:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 80055f4:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 80055f6:	f413 7340 	ands.w	r3, r3, #768	@ 0x300
 80055fa:	f040 8083 	bne.w	8005704 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80055fe:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8005600:	f403 7240 	and.w	r2, r3, #768	@ 0x300
 8005604:	f5b2 7f40 	cmp.w	r2, #768	@ 0x300
 8005608:	4a56      	ldr	r2, [pc, #344]	@ (8005764 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800560a:	f040 809e 	bne.w	800574a <HAL_RCCEx_PeriphCLKConfig+0x232>
 800560e:	6891      	ldr	r1, [r2, #8]
 8005610:	f023 4070 	bic.w	r0, r3, #4026531840	@ 0xf0000000
 8005614:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 8005618:	f420 7040 	bic.w	r0, r0, #768	@ 0x300
 800561c:	4301      	orrs	r1, r0
 800561e:	6091      	str	r1, [r2, #8]
 8005620:	6f11      	ldr	r1, [r2, #112]	@ 0x70
 8005622:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005626:	430b      	orrs	r3, r1
 8005628:	6713      	str	r3, [r2, #112]	@ 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800562a:	6823      	ldr	r3, [r4, #0]
 800562c:	06db      	lsls	r3, r3, #27
 800562e:	f100 8090 	bmi.w	8005752 <HAL_RCCEx_PeriphCLKConfig+0x23a>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
 8005632:	2000      	movs	r0, #0
 8005634:	e04f      	b.n	80056d6 <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_PLLI2S_DISABLE();
 8005636:	4b4a      	ldr	r3, [pc, #296]	@ (8005760 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8005638:	4e4a      	ldr	r6, [pc, #296]	@ (8005764 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLI2S_DISABLE();
 800563a:	2200      	movs	r2, #0
 800563c:	669a      	str	r2, [r3, #104]	@ 0x68
    tickstart = HAL_GetTick();
 800563e:	f7fd ff11 	bl	8003464 <HAL_GetTick>
 8005642:	4605      	mov	r5, r0
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8005644:	6833      	ldr	r3, [r6, #0]
 8005646:	011f      	lsls	r7, r3, #4
 8005648:	d43f      	bmi.n	80056ca <HAL_RCCEx_PeriphCLKConfig+0x1b2>
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800564a:	6821      	ldr	r1, [r4, #0]
 800564c:	07c8      	lsls	r0, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SR);
 800564e:	bf41      	itttt	mi
 8005650:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 8005654:	071b      	lslmi	r3, r3, #28
 8005656:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 800565a:	f8c6 3084 	strmi.w	r3, [r6, #132]	@ 0x84
    if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800565e:	078a      	lsls	r2, r1, #30
 8005660:	d515      	bpl.n	800568e <HAL_RCCEx_PeriphCLKConfig+0x176>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8005662:	4a40      	ldr	r2, [pc, #256]	@ (8005764 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 8005664:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8005666:	f8d2 0084 	ldr.w	r0, [r2, #132]	@ 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 800566a:	6865      	ldr	r5, [r4, #4]
 800566c:	061b      	lsls	r3, r3, #24
 800566e:	f000 40e0 	and.w	r0, r0, #1879048192	@ 0x70000000
 8005672:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 8005676:	4303      	orrs	r3, r0
 8005678:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800567c:	f8d2 008c 	ldr.w	r0, [r2, #140]	@ 0x8c
 8005680:	69e3      	ldr	r3, [r4, #28]
 8005682:	f020 001f 	bic.w	r0, r0, #31
 8005686:	3b01      	subs	r3, #1
 8005688:	4303      	orrs	r3, r0
 800568a:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
    if ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800568e:	064b      	lsls	r3, r1, #25
 8005690:	d50a      	bpl.n	80056a8 <HAL_RCCEx_PeriphCLKConfig+0x190>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ,
 8005692:	68e3      	ldr	r3, [r4, #12]
 8005694:	6862      	ldr	r2, [r4, #4]
 8005696:	061b      	lsls	r3, r3, #24
 8005698:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800569c:	68a2      	ldr	r2, [r4, #8]
 800569e:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 80056a2:	4a30      	ldr	r2, [pc, #192]	@ (8005764 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 80056a4:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 80056a8:	4b2d      	ldr	r3, [pc, #180]	@ (8005760 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80056aa:	4e2e      	ldr	r6, [pc, #184]	@ (8005764 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PLLI2S_ENABLE();
 80056ac:	2201      	movs	r2, #1
 80056ae:	669a      	str	r2, [r3, #104]	@ 0x68
    tickstart = HAL_GetTick();
 80056b0:	f7fd fed8 	bl	8003464 <HAL_GetTick>
 80056b4:	4605      	mov	r5, r0
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80056b6:	6833      	ldr	r3, [r6, #0]
 80056b8:	011f      	lsls	r7, r3, #4
 80056ba:	f53f af34 	bmi.w	8005526 <HAL_RCCEx_PeriphCLKConfig+0xe>
      if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 80056be:	f7fd fed1 	bl	8003464 <HAL_GetTick>
 80056c2:	1b40      	subs	r0, r0, r5
 80056c4:	2802      	cmp	r0, #2
 80056c6:	d9f6      	bls.n	80056b6 <HAL_RCCEx_PeriphCLKConfig+0x19e>
 80056c8:	e004      	b.n	80056d4 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 80056ca:	f7fd fecb 	bl	8003464 <HAL_GetTick>
 80056ce:	1b40      	subs	r0, r0, r5
 80056d0:	2802      	cmp	r0, #2
 80056d2:	d9b7      	bls.n	8005644 <HAL_RCCEx_PeriphCLKConfig+0x12c>
        return HAL_TIMEOUT;
 80056d4:	2003      	movs	r0, #3
}
 80056d6:	b003      	add	sp, #12
 80056d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 80056da:	f7fd fec3 	bl	8003464 <HAL_GetTick>
 80056de:	1b80      	subs	r0, r0, r6
 80056e0:	2802      	cmp	r0, #2
 80056e2:	f67f af2b 	bls.w	800553c <HAL_RCCEx_PeriphCLKConfig+0x24>
 80056e6:	e7f5      	b.n	80056d4 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 80056e8:	f7fd febc 	bl	8003464 <HAL_GetTick>
 80056ec:	1b40      	subs	r0, r0, r5
 80056ee:	2802      	cmp	r0, #2
 80056f0:	f67f af5f 	bls.w	80055b2 <HAL_RCCEx_PeriphCLKConfig+0x9a>
 80056f4:	e7ee      	b.n	80056d4 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80056f6:	f7fd feb5 	bl	8003464 <HAL_GetTick>
 80056fa:	1b80      	subs	r0, r0, r6
 80056fc:	2802      	cmp	r0, #2
 80056fe:	f67f af73 	bls.w	80055e8 <HAL_RCCEx_PeriphCLKConfig+0xd0>
 8005702:	e7e7      	b.n	80056d4 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
    if ((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8005704:	f402 7240 	and.w	r2, r2, #768	@ 0x300
 8005708:	4293      	cmp	r3, r2
 800570a:	f43f af78 	beq.w	80055fe <HAL_RCCEx_PeriphCLKConfig+0xe6>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800570e:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8005710:	4a13      	ldr	r2, [pc, #76]	@ (8005760 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8005712:	2101      	movs	r1, #1
 8005714:	f8c2 1e40 	str.w	r1, [r2, #3648]	@ 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8005718:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800571c:	2100      	movs	r1, #0
 800571e:	f8c2 1e40 	str.w	r1, [r2, #3648]	@ 0xe40
      RCC->BDCR = tmpreg1;
 8005722:	672b      	str	r3, [r5, #112]	@ 0x70
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8005724:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8005726:	07d9      	lsls	r1, r3, #31
 8005728:	f57f af69 	bpl.w	80055fe <HAL_RCCEx_PeriphCLKConfig+0xe6>
        tickstart = HAL_GetTick();
 800572c:	f7fd fe9a 	bl	8003464 <HAL_GetTick>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8005730:	f241 3788 	movw	r7, #5000	@ 0x1388
        tickstart = HAL_GetTick();
 8005734:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005736:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
 8005738:	079a      	lsls	r2, r3, #30
 800573a:	f53f af60 	bmi.w	80055fe <HAL_RCCEx_PeriphCLKConfig+0xe6>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800573e:	f7fd fe91 	bl	8003464 <HAL_GetTick>
 8005742:	1b80      	subs	r0, r0, r6
 8005744:	42b8      	cmp	r0, r7
 8005746:	d9f6      	bls.n	8005736 <HAL_RCCEx_PeriphCLKConfig+0x21e>
 8005748:	e7c4      	b.n	80056d4 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800574a:	6891      	ldr	r1, [r2, #8]
 800574c:	f421 11f8 	bic.w	r1, r1, #2031616	@ 0x1f0000
 8005750:	e765      	b.n	800561e <HAL_RCCEx_PeriphCLKConfig+0x106>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8005752:	4b06      	ldr	r3, [pc, #24]	@ (800576c <HAL_RCCEx_PeriphCLKConfig+0x254>)
 8005754:	f894 202c 	ldrb.w	r2, [r4, #44]	@ 0x2c
 8005758:	f8c3 21e0 	str.w	r2, [r3, #480]	@ 0x1e0
 800575c:	e769      	b.n	8005632 <HAL_RCCEx_PeriphCLKConfig+0x11a>
 800575e:	bf00      	nop
 8005760:	42470000 	.word	0x42470000
 8005764:	40023800 	.word	0x40023800
 8005768:	40007000 	.word	0x40007000
 800576c:	42471000 	.word	0x42471000

08005770 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 8005770:	b538      	push	{r3, r4, r5, lr}
 8005772:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 8005774:	4604      	mov	r4, r0
 8005776:	b1c8      	cbz	r0, 80057ac <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 8005778:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 800577c:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8005780:	b91b      	cbnz	r3, 800578a <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8005782:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8005786:	f7fc fe53 	bl	8002430 <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800578a:	2302      	movs	r3, #2
 800578c:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8005790:	1d21      	adds	r1, r4, #4
 8005792:	6820      	ldr	r0, [r4, #0]
 8005794:	f000 fd0e 	bl	80061b4 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 8005798:	6862      	ldr	r2, [r4, #4]
 800579a:	6820      	ldr	r0, [r4, #0]
 800579c:	4629      	mov	r1, r5
 800579e:	f000 fd3f 	bl	8006220 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 80057a2:	2301      	movs	r3, #1
 80057a4:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c

  return HAL_OK;
 80057a8:	2000      	movs	r0, #0
}
 80057aa:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80057ac:	2001      	movs	r0, #1
 80057ae:	e7fc      	b.n	80057aa <HAL_SDRAM_Init+0x3a>

080057b0 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 80057b0:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 80057b2:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 80057b6:	2b02      	cmp	r3, #2
{
 80057b8:	4605      	mov	r5, r0
 80057ba:	460e      	mov	r6, r1
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 80057bc:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 80057be:	d012      	beq.n	80057e6 <HAL_SDRAM_SendCommand+0x36>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 80057c0:	f000 04fb 	and.w	r4, r0, #251	@ 0xfb
 80057c4:	2c01      	cmp	r4, #1
 80057c6:	d10f      	bne.n	80057e8 <HAL_SDRAM_SendCommand+0x38>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 80057c8:	2302      	movs	r3, #2
 80057ca:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 80057ce:	6828      	ldr	r0, [r5, #0]
 80057d0:	f000 fd5c 	bl	800628c <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 80057d4:	6833      	ldr	r3, [r6, #0]
 80057d6:	2b02      	cmp	r3, #2
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 80057d8:	bf06      	itte	eq
 80057da:	2305      	moveq	r3, #5
 80057dc:	f885 302c 	strbeq.w	r3, [r5, #44]	@ 0x2c
    }
    else
    {
      hsdram->State = HAL_SDRAM_STATE_READY;
 80057e0:	f885 402c 	strbne.w	r4, [r5, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 80057e4:	2000      	movs	r0, #0
}
 80057e6:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
 80057e8:	2001      	movs	r0, #1
 80057ea:	e7fc      	b.n	80057e6 <HAL_SDRAM_SendCommand+0x36>

080057ec <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 80057ec:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 80057ee:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 80057f2:	2b02      	cmp	r3, #2
{
 80057f4:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 80057f6:	b2d8      	uxtb	r0, r3
 80057f8:	d00d      	beq.n	8005816 <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 80057fa:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 80057fe:	2b01      	cmp	r3, #1
 8005800:	b2dd      	uxtb	r5, r3
 8005802:	d109      	bne.n	8005818 <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8005804:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8005806:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8005808:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800580c:	f000 fd62 	bl	80062d4 <FMC_SDRAM_ProgramRefreshRate>

    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
 8005810:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8005814:	2000      	movs	r0, #0
}
 8005816:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8005818:	2001      	movs	r0, #1
 800581a:	e7fc      	b.n	8005816 <HAL_SDRAM_ProgramRefreshRate+0x2a>

0800581c <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 800581c:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8005820:	461f      	mov	r7, r3
 8005822:	4689      	mov	r9, r1
 8005824:	4690      	mov	r8, r2
 8005826:	4604      	mov	r4, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 8005828:	f7fd fe1c 	bl	8003464 <HAL_GetTick>
 800582c:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 800582e:	443d      	add	r5, r7
 8005830:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 8005832:	f7fd fe17 	bl	8003464 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8005836:	4b26      	ldr	r3, [pc, #152]	@ (80058d0 <SPI_WaitFlagStateUntilTimeout+0xb4>)
 8005838:	681e      	ldr	r6, [r3, #0]
 800583a:	f3c6 36cb 	ubfx	r6, r6, #15, #12
 800583e:	436e      	muls	r6, r5
  tmp_tickstart = HAL_GetTick();
 8005840:	4682      	mov	sl, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8005842:	9601      	str	r6, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8005844:	6822      	ldr	r2, [r4, #0]
 8005846:	6893      	ldr	r3, [r2, #8]
 8005848:	ea39 0303 	bics.w	r3, r9, r3
 800584c:	bf0c      	ite	eq
 800584e:	2301      	moveq	r3, #1
 8005850:	2300      	movne	r3, #0
 8005852:	4543      	cmp	r3, r8
 8005854:	d101      	bne.n	800585a <SPI_WaitFlagStateUntilTimeout+0x3e>
      }
      count--;
    }
  }

  return HAL_OK;
 8005856:	2000      	movs	r0, #0
 8005858:	e02e      	b.n	80058b8 <SPI_WaitFlagStateUntilTimeout+0x9c>
    if (Timeout != HAL_MAX_DELAY)
 800585a:	1c7b      	adds	r3, r7, #1
 800585c:	d0f3      	beq.n	8005846 <SPI_WaitFlagStateUntilTimeout+0x2a>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800585e:	f7fd fe01 	bl	8003464 <HAL_GetTick>
 8005862:	eba0 000a 	sub.w	r0, r0, sl
 8005866:	42a8      	cmp	r0, r5
 8005868:	d329      	bcc.n	80058be <SPI_WaitFlagStateUntilTimeout+0xa2>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800586a:	6823      	ldr	r3, [r4, #0]
 800586c:	685a      	ldr	r2, [r3, #4]
 800586e:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8005872:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005874:	6862      	ldr	r2, [r4, #4]
 8005876:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 800587a:	d10a      	bne.n	8005892 <SPI_WaitFlagStateUntilTimeout+0x76>
 800587c:	68a2      	ldr	r2, [r4, #8]
 800587e:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
 8005882:	d002      	beq.n	800588a <SPI_WaitFlagStateUntilTimeout+0x6e>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8005884:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 8005888:	d103      	bne.n	8005892 <SPI_WaitFlagStateUntilTimeout+0x76>
          __HAL_SPI_DISABLE(hspi);
 800588a:	681a      	ldr	r2, [r3, #0]
 800588c:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8005890:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8005892:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8005894:	f5b2 5f00 	cmp.w	r2, #8192	@ 0x2000
 8005898:	d107      	bne.n	80058aa <SPI_WaitFlagStateUntilTimeout+0x8e>
          SPI_RESET_CRC(hspi);
 800589a:	681a      	ldr	r2, [r3, #0]
 800589c:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 80058a0:	601a      	str	r2, [r3, #0]
 80058a2:	681a      	ldr	r2, [r3, #0]
 80058a4:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 80058a8:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 80058aa:	2301      	movs	r3, #1
 80058ac:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 80058b0:	2300      	movs	r3, #0
 80058b2:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
        return HAL_TIMEOUT;
 80058b6:	2003      	movs	r0, #3
}
 80058b8:	b002      	add	sp, #8
 80058ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      if (count == 0U)
 80058be:	9a01      	ldr	r2, [sp, #4]
      count--;
 80058c0:	9b01      	ldr	r3, [sp, #4]
      if (count == 0U)
 80058c2:	2a00      	cmp	r2, #0
      count--;
 80058c4:	f103 33ff 	add.w	r3, r3, #4294967295
 80058c8:	9301      	str	r3, [sp, #4]
 80058ca:	bf08      	it	eq
 80058cc:	4615      	moveq	r5, r2
 80058ce:	e7b9      	b.n	8005844 <SPI_WaitFlagStateUntilTimeout+0x28>
 80058d0:	200000c4 	.word	0x200000c4

080058d4 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 80058d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80058d6:	b085      	sub	sp, #20
  /* Wait until TXE flag */
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 80058d8:	460b      	mov	r3, r1
 80058da:	9200      	str	r2, [sp, #0]
{
 80058dc:	460e      	mov	r6, r1
 80058de:	4617      	mov	r7, r2
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 80058e0:	2102      	movs	r1, #2
 80058e2:	2201      	movs	r2, #1
{
 80058e4:	4604      	mov	r4, r0
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 80058e6:	f7ff ff99 	bl	800581c <SPI_WaitFlagStateUntilTimeout>
 80058ea:	4605      	mov	r5, r0
 80058ec:	b128      	cbz	r0, 80058fa <SPI_EndRxTxTransaction+0x26>
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 80058ee:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80058f0:	f043 0320 	orr.w	r3, r3, #32
 80058f4:	6563      	str	r3, [r4, #84]	@ 0x54
    return HAL_TIMEOUT;
 80058f6:	2503      	movs	r5, #3
 80058f8:	e015      	b.n	8005926 <SPI_EndRxTxTransaction+0x52>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 80058fa:	4b12      	ldr	r3, [pc, #72]	@ (8005944 <SPI_EndRxTxTransaction+0x70>)
 80058fc:	6818      	ldr	r0, [r3, #0]
 80058fe:	4b12      	ldr	r3, [pc, #72]	@ (8005948 <SPI_EndRxTxTransaction+0x74>)
 8005900:	fbb0 f0f3 	udiv	r0, r0, r3
 8005904:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8005908:	4358      	muls	r0, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800590a:	6863      	ldr	r3, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800590c:	9003      	str	r0, [sp, #12]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800590e:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8005912:	d10b      	bne.n	800592c <SPI_EndRxTxTransaction+0x58>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8005914:	9700      	str	r7, [sp, #0]
 8005916:	4633      	mov	r3, r6
 8005918:	462a      	mov	r2, r5
 800591a:	2180      	movs	r1, #128	@ 0x80
 800591c:	4620      	mov	r0, r4
 800591e:	f7ff ff7d 	bl	800581c <SPI_WaitFlagStateUntilTimeout>
 8005922:	2800      	cmp	r0, #0
 8005924:	d1e3      	bne.n	80058ee <SPI_EndRxTxTransaction+0x1a>
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 8005926:	4628      	mov	r0, r5
 8005928:	b005      	add	sp, #20
 800592a:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (count == 0U)
 800592c:	9b03      	ldr	r3, [sp, #12]
 800592e:	2b00      	cmp	r3, #0
 8005930:	d0f9      	beq.n	8005926 <SPI_EndRxTxTransaction+0x52>
      count--;
 8005932:	9b03      	ldr	r3, [sp, #12]
 8005934:	3b01      	subs	r3, #1
 8005936:	9303      	str	r3, [sp, #12]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8005938:	6823      	ldr	r3, [r4, #0]
 800593a:	689b      	ldr	r3, [r3, #8]
 800593c:	061b      	lsls	r3, r3, #24
 800593e:	d4f5      	bmi.n	800592c <SPI_EndRxTxTransaction+0x58>
 8005940:	e7f1      	b.n	8005926 <SPI_EndRxTxTransaction+0x52>
 8005942:	bf00      	nop
 8005944:	200000c4 	.word	0x200000c4
 8005948:	016e3600 	.word	0x016e3600

0800594c <SPI_EndRxTransaction>:
{
 800594c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800594e:	460b      	mov	r3, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005950:	6841      	ldr	r1, [r0, #4]
 8005952:	f5b1 7f82 	cmp.w	r1, #260	@ 0x104
{
 8005956:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005958:	d008      	beq.n	800596c <SPI_EndRxTransaction+0x20>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800595a:	9200      	str	r2, [sp, #0]
 800595c:	2101      	movs	r1, #1
 800595e:	2200      	movs	r2, #0
 8005960:	f7ff ff5c 	bl	800581c <SPI_WaitFlagStateUntilTimeout>
 8005964:	b9d0      	cbnz	r0, 800599c <SPI_EndRxTransaction+0x50>
  return HAL_OK;
 8005966:	2000      	movs	r0, #0
}
 8005968:	b003      	add	sp, #12
 800596a:	bd30      	pop	{r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800596c:	6881      	ldr	r1, [r0, #8]
 800596e:	f5b1 4f00 	cmp.w	r1, #32768	@ 0x8000
 8005972:	d002      	beq.n	800597a <SPI_EndRxTransaction+0x2e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8005974:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 8005978:	d107      	bne.n	800598a <SPI_EndRxTransaction+0x3e>
    __HAL_SPI_DISABLE(hspi);
 800597a:	6825      	ldr	r5, [r4, #0]
 800597c:	6828      	ldr	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 800597e:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
    __HAL_SPI_DISABLE(hspi);
 8005982:	f020 0040 	bic.w	r0, r0, #64	@ 0x40
 8005986:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8005988:	d004      	beq.n	8005994 <SPI_EndRxTransaction+0x48>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800598a:	9200      	str	r2, [sp, #0]
 800598c:	2180      	movs	r1, #128	@ 0x80
 800598e:	2200      	movs	r2, #0
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8005990:	4620      	mov	r0, r4
 8005992:	e7e5      	b.n	8005960 <SPI_EndRxTransaction+0x14>
 8005994:	9200      	str	r2, [sp, #0]
 8005996:	2101      	movs	r1, #1
 8005998:	2200      	movs	r2, #0
 800599a:	e7f9      	b.n	8005990 <SPI_EndRxTransaction+0x44>
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800599c:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 800599e:	f043 0320 	orr.w	r3, r3, #32
 80059a2:	6563      	str	r3, [r4, #84]	@ 0x54
        return HAL_TIMEOUT;
 80059a4:	2003      	movs	r0, #3
 80059a6:	e7df      	b.n	8005968 <SPI_EndRxTransaction+0x1c>

080059a8 <HAL_SPI_Init>:
{
 80059a8:	b510      	push	{r4, lr}
  if (hspi == NULL)
 80059aa:	4604      	mov	r4, r0
 80059ac:	2800      	cmp	r0, #0
 80059ae:	d055      	beq.n	8005a5c <HAL_SPI_Init+0xb4>
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 80059b0:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 80059b2:	2b00      	cmp	r3, #0
 80059b4:	d14e      	bne.n	8005a54 <HAL_SPI_Init+0xac>
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 80059b6:	6842      	ldr	r2, [r0, #4]
 80059b8:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 80059bc:	d000      	beq.n	80059c0 <HAL_SPI_Init+0x18>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 80059be:	61c3      	str	r3, [r0, #28]
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80059c0:	2300      	movs	r3, #0
 80059c2:	62a3      	str	r3, [r4, #40]	@ 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 80059c4:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 80059c8:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 80059cc:	b923      	cbnz	r3, 80059d8 <HAL_SPI_Init+0x30>
    hspi->Lock = HAL_UNLOCKED;
 80059ce:	f884 2050 	strb.w	r2, [r4, #80]	@ 0x50
    HAL_SPI_MspInit(hspi);
 80059d2:	4620      	mov	r0, r4
 80059d4:	f7fc fcf6 	bl	80023c4 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 80059d8:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 80059da:	68a0      	ldr	r0, [r4, #8]
 80059dc:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 80059de:	2302      	movs	r3, #2
 80059e0:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  __HAL_SPI_DISABLE(hspi);
 80059e4:	680b      	ldr	r3, [r1, #0]
 80059e6:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80059ea:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 80059ec:	6863      	ldr	r3, [r4, #4]
 80059ee:	f400 4004 	and.w	r0, r0, #33792	@ 0x8400
 80059f2:	f403 7382 	and.w	r3, r3, #260	@ 0x104
 80059f6:	4303      	orrs	r3, r0
 80059f8:	68e0      	ldr	r0, [r4, #12]
 80059fa:	f400 6000 	and.w	r0, r0, #2048	@ 0x800
 80059fe:	4303      	orrs	r3, r0
 8005a00:	6920      	ldr	r0, [r4, #16]
 8005a02:	f000 0002 	and.w	r0, r0, #2
 8005a06:	4303      	orrs	r3, r0
 8005a08:	6960      	ldr	r0, [r4, #20]
 8005a0a:	f000 0001 	and.w	r0, r0, #1
 8005a0e:	4303      	orrs	r3, r0
 8005a10:	f402 7000 	and.w	r0, r2, #512	@ 0x200
 8005a14:	4303      	orrs	r3, r0
 8005a16:	69e0      	ldr	r0, [r4, #28]
 8005a18:	f000 0038 	and.w	r0, r0, #56	@ 0x38
 8005a1c:	4303      	orrs	r3, r0
 8005a1e:	6a20      	ldr	r0, [r4, #32]
 8005a20:	f000 0080 	and.w	r0, r0, #128	@ 0x80
 8005a24:	4303      	orrs	r3, r0
 8005a26:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8005a28:	f400 5000 	and.w	r0, r0, #8192	@ 0x2000
 8005a2c:	4303      	orrs	r3, r0
 8005a2e:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 8005a30:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8005a32:	0c12      	lsrs	r2, r2, #16
 8005a34:	f003 0310 	and.w	r3, r3, #16
 8005a38:	f002 0204 	and.w	r2, r2, #4
 8005a3c:	431a      	orrs	r2, r3
 8005a3e:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8005a40:	69cb      	ldr	r3, [r1, #28]
 8005a42:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8005a46:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8005a48:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 8005a4a:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8005a4c:	6560      	str	r0, [r4, #84]	@ 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8005a4e:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
}
 8005a52:	bd10      	pop	{r4, pc}
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 8005a54:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 8005a56:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8005a5a:	e7b1      	b.n	80059c0 <HAL_SPI_Init+0x18>
    return HAL_ERROR;
 8005a5c:	2001      	movs	r0, #1
 8005a5e:	e7f8      	b.n	8005a52 <HAL_SPI_Init+0xaa>

08005a60 <HAL_SPI_Transmit>:
{
 8005a60:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8005a64:	4604      	mov	r4, r0
 8005a66:	461f      	mov	r7, r3
 8005a68:	460d      	mov	r5, r1
 8005a6a:	4690      	mov	r8, r2
  tickstart = HAL_GetTick();
 8005a6c:	f7fd fcfa 	bl	8003464 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8005a70:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
 8005a74:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8005a76:	4681      	mov	r9, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8005a78:	b2d8      	uxtb	r0, r3
 8005a7a:	f040 809f 	bne.w	8005bbc <HAL_SPI_Transmit+0x15c>
  if ((pData == NULL) || (Size == 0U))
 8005a7e:	2d00      	cmp	r5, #0
 8005a80:	d074      	beq.n	8005b6c <HAL_SPI_Transmit+0x10c>
 8005a82:	f1b8 0f00 	cmp.w	r8, #0
 8005a86:	d071      	beq.n	8005b6c <HAL_SPI_Transmit+0x10c>
  __HAL_LOCK(hspi);
 8005a88:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 8005a8c:	2b01      	cmp	r3, #1
 8005a8e:	f000 8095 	beq.w	8005bbc <HAL_SPI_Transmit+0x15c>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8005a92:	2303      	movs	r3, #3
 8005a94:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8005a98:	2300      	movs	r3, #0
 8005a9a:	6563      	str	r3, [r4, #84]	@ 0x54
  hspi->RxISR       = NULL;
 8005a9c:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
  hspi->TxXferCount = Size;
 8005aa0:	f8a4 8036 	strh.w	r8, [r4, #54]	@ 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8005aa4:	63a3      	str	r3, [r4, #56]	@ 0x38
  hspi->RxXferSize  = 0U;
 8005aa6:	87a3      	strh	r3, [r4, #60]	@ 0x3c
  hspi->RxXferCount = 0U;
 8005aa8:	87e3      	strh	r3, [r4, #62]	@ 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005aaa:	68a3      	ldr	r3, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 8005aac:	6826      	ldr	r6, [r4, #0]
  __HAL_LOCK(hspi);
 8005aae:	f884 0050 	strb.w	r0, [r4, #80]	@ 0x50
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005ab2:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 8005ab6:	6325      	str	r5, [r4, #48]	@ 0x30
  hspi->TxXferSize  = Size;
 8005ab8:	f8a4 8034 	strh.w	r8, [r4, #52]	@ 0x34
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005abc:	d107      	bne.n	8005ace <HAL_SPI_Transmit+0x6e>
    __HAL_SPI_DISABLE(hspi);
 8005abe:	6833      	ldr	r3, [r6, #0]
 8005ac0:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8005ac4:	6033      	str	r3, [r6, #0]
    SPI_1LINE_TX(hspi);
 8005ac6:	6833      	ldr	r3, [r6, #0]
 8005ac8:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8005acc:	6033      	str	r3, [r6, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005ace:	6833      	ldr	r3, [r6, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8005ad0:	68e2      	ldr	r2, [r4, #12]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005ad2:	065b      	lsls	r3, r3, #25
    __HAL_SPI_ENABLE(hspi);
 8005ad4:	bf5e      	ittt	pl
 8005ad6:	6833      	ldrpl	r3, [r6, #0]
 8005ad8:	f043 0340 	orrpl.w	r3, r3, #64	@ 0x40
 8005adc:	6033      	strpl	r3, [r6, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8005ade:	f5b2 6f00 	cmp.w	r2, #2048	@ 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8005ae2:	6863      	ldr	r3, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8005ae4:	d145      	bne.n	8005b72 <HAL_SPI_Transmit+0x112>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8005ae6:	b113      	cbz	r3, 8005aee <HAL_SPI_Transmit+0x8e>
 8005ae8:	f1b8 0f01 	cmp.w	r8, #1
 8005aec:	d107      	bne.n	8005afe <HAL_SPI_Transmit+0x9e>
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 8005aee:	f835 3b02 	ldrh.w	r3, [r5], #2
 8005af2:	60f3      	str	r3, [r6, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8005af4:	6325      	str	r5, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 8005af6:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8005af8:	3b01      	subs	r3, #1
 8005afa:	b29b      	uxth	r3, r3
 8005afc:	86e3      	strh	r3, [r4, #54]	@ 0x36
    while (hspi->TxXferCount > 0U)
 8005afe:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8005b00:	b29b      	uxth	r3, r3
 8005b02:	b9d3      	cbnz	r3, 8005b3a <HAL_SPI_Transmit+0xda>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8005b04:	464a      	mov	r2, r9
 8005b06:	4639      	mov	r1, r7
 8005b08:	4620      	mov	r0, r4
 8005b0a:	f7ff fee3 	bl	80058d4 <SPI_EndRxTxTransaction>
 8005b0e:	2800      	cmp	r0, #0
 8005b10:	d151      	bne.n	8005bb6 <HAL_SPI_Transmit+0x156>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8005b12:	68a3      	ldr	r3, [r4, #8]
 8005b14:	b933      	cbnz	r3, 8005b24 <HAL_SPI_Transmit+0xc4>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8005b16:	9301      	str	r3, [sp, #4]
 8005b18:	6823      	ldr	r3, [r4, #0]
 8005b1a:	68da      	ldr	r2, [r3, #12]
 8005b1c:	9201      	str	r2, [sp, #4]
 8005b1e:	689b      	ldr	r3, [r3, #8]
 8005b20:	9301      	str	r3, [sp, #4]
 8005b22:	9b01      	ldr	r3, [sp, #4]
  hspi->State = HAL_SPI_STATE_READY;
 8005b24:	2301      	movs	r3, #1
 8005b26:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8005b2a:	6d60      	ldr	r0, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 8005b2c:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8005b2e:	1ac0      	subs	r0, r0, r3
  __HAL_UNLOCK(hspi);
 8005b30:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8005b34:	bf18      	it	ne
 8005b36:	2001      	movne	r0, #1
 8005b38:	e018      	b.n	8005b6c <HAL_SPI_Transmit+0x10c>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8005b3a:	6822      	ldr	r2, [r4, #0]
 8005b3c:	6893      	ldr	r3, [r2, #8]
 8005b3e:	0798      	lsls	r0, r3, #30
 8005b40:	d505      	bpl.n	8005b4e <HAL_SPI_Transmit+0xee>
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 8005b42:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8005b44:	f833 1b02 	ldrh.w	r1, [r3], #2
 8005b48:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8005b4a:	6323      	str	r3, [r4, #48]	@ 0x30
 8005b4c:	e7d3      	b.n	8005af6 <HAL_SPI_Transmit+0x96>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8005b4e:	f7fd fc89 	bl	8003464 <HAL_GetTick>
 8005b52:	eba0 0009 	sub.w	r0, r0, r9
 8005b56:	42b8      	cmp	r0, r7
 8005b58:	d3d1      	bcc.n	8005afe <HAL_SPI_Transmit+0x9e>
 8005b5a:	1c79      	adds	r1, r7, #1
 8005b5c:	d0cf      	beq.n	8005afe <HAL_SPI_Transmit+0x9e>
          hspi->State = HAL_SPI_STATE_READY;
 8005b5e:	2301      	movs	r3, #1
 8005b60:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 8005b64:	2300      	movs	r3, #0
 8005b66:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
          return HAL_TIMEOUT;
 8005b6a:	2003      	movs	r0, #3
}
 8005b6c:	b003      	add	sp, #12
 8005b6e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8005b72:	b113      	cbz	r3, 8005b7a <HAL_SPI_Transmit+0x11a>
 8005b74:	f1b8 0f01 	cmp.w	r8, #1
 8005b78:	d108      	bne.n	8005b8c <HAL_SPI_Transmit+0x12c>
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 8005b7a:	782b      	ldrb	r3, [r5, #0]
 8005b7c:	7333      	strb	r3, [r6, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8005b7e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8005b80:	3301      	adds	r3, #1
 8005b82:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 8005b84:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8005b86:	3b01      	subs	r3, #1
 8005b88:	b29b      	uxth	r3, r3
 8005b8a:	86e3      	strh	r3, [r4, #54]	@ 0x36
    while (hspi->TxXferCount > 0U)
 8005b8c:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8005b8e:	b29b      	uxth	r3, r3
 8005b90:	2b00      	cmp	r3, #0
 8005b92:	d0b7      	beq.n	8005b04 <HAL_SPI_Transmit+0xa4>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8005b94:	6823      	ldr	r3, [r4, #0]
 8005b96:	689a      	ldr	r2, [r3, #8]
 8005b98:	0792      	lsls	r2, r2, #30
 8005b9a:	d503      	bpl.n	8005ba4 <HAL_SPI_Transmit+0x144>
        *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 8005b9c:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 8005b9e:	7812      	ldrb	r2, [r2, #0]
 8005ba0:	731a      	strb	r2, [r3, #12]
 8005ba2:	e7ec      	b.n	8005b7e <HAL_SPI_Transmit+0x11e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8005ba4:	f7fd fc5e 	bl	8003464 <HAL_GetTick>
 8005ba8:	eba0 0009 	sub.w	r0, r0, r9
 8005bac:	42b8      	cmp	r0, r7
 8005bae:	d3ed      	bcc.n	8005b8c <HAL_SPI_Transmit+0x12c>
 8005bb0:	1c7b      	adds	r3, r7, #1
 8005bb2:	d0eb      	beq.n	8005b8c <HAL_SPI_Transmit+0x12c>
 8005bb4:	e7d3      	b.n	8005b5e <HAL_SPI_Transmit+0xfe>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8005bb6:	2320      	movs	r3, #32
 8005bb8:	6563      	str	r3, [r4, #84]	@ 0x54
 8005bba:	e7aa      	b.n	8005b12 <HAL_SPI_Transmit+0xb2>
    return HAL_BUSY;
 8005bbc:	2002      	movs	r0, #2
 8005bbe:	e7d5      	b.n	8005b6c <HAL_SPI_Transmit+0x10c>

08005bc0 <HAL_SPI_TransmitReceive>:
{
 8005bc0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8005bc4:	4604      	mov	r4, r0
 8005bc6:	460d      	mov	r5, r1
 8005bc8:	4691      	mov	r9, r2
 8005bca:	461e      	mov	r6, r3
 8005bcc:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
  tickstart = HAL_GetTick();
 8005bd0:	f7fd fc48 	bl	8003464 <HAL_GetTick>
  tmp_state           = hspi->State;
 8005bd4:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
  tmp_mode            = hspi->Init.Mode;
 8005bd8:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8005bda:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8005bdc:	4607      	mov	r7, r0
  tmp_state           = hspi->State;
 8005bde:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8005be0:	d00a      	beq.n	8005bf8 <HAL_SPI_TransmitReceive+0x38>
 8005be2:	f5b2 7f82 	cmp.w	r2, #260	@ 0x104
 8005be6:	f040 80e5 	bne.w	8005db4 <HAL_SPI_TransmitReceive+0x1f4>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 8005bea:	68a3      	ldr	r3, [r4, #8]
 8005bec:	2b00      	cmp	r3, #0
 8005bee:	f040 80e1 	bne.w	8005db4 <HAL_SPI_TransmitReceive+0x1f4>
 8005bf2:	2904      	cmp	r1, #4
 8005bf4:	f040 80de 	bne.w	8005db4 <HAL_SPI_TransmitReceive+0x1f4>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8005bf8:	2d00      	cmp	r5, #0
 8005bfa:	d04b      	beq.n	8005c94 <HAL_SPI_TransmitReceive+0xd4>
 8005bfc:	f1b9 0f00 	cmp.w	r9, #0
 8005c00:	d048      	beq.n	8005c94 <HAL_SPI_TransmitReceive+0xd4>
 8005c02:	2e00      	cmp	r6, #0
 8005c04:	d046      	beq.n	8005c94 <HAL_SPI_TransmitReceive+0xd4>
  __HAL_LOCK(hspi);
 8005c06:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 8005c0a:	2b01      	cmp	r3, #1
 8005c0c:	f000 80d2 	beq.w	8005db4 <HAL_SPI_TransmitReceive+0x1f4>
 8005c10:	2301      	movs	r3, #1
 8005c12:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8005c16:	f894 3051 	ldrb.w	r3, [r4, #81]	@ 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8005c1a:	f8c4 9038 	str.w	r9, [r4, #56]	@ 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8005c1e:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8005c20:	bf1c      	itt	ne
 8005c22:	2305      	movne	r3, #5
 8005c24:	f884 3051 	strbne.w	r3, [r4, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8005c28:	2300      	movs	r3, #0
 8005c2a:	6563      	str	r3, [r4, #84]	@ 0x54
  hspi->TxISR       = NULL;
 8005c2c:	e9c4 3310 	strd	r3, r3, [r4, #64]	@ 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005c30:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8005c32:	87e6      	strh	r6, [r4, #62]	@ 0x3e
  hspi->TxXferCount = Size;
 8005c34:	86e6      	strh	r6, [r4, #54]	@ 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005c36:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 8005c38:	87a6      	strh	r6, [r4, #60]	@ 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005c3a:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 8005c3c:	bf58      	it	pl
 8005c3e:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (const uint8_t *)pTxData;
 8005c40:	6325      	str	r5, [r4, #48]	@ 0x30
    __HAL_SPI_ENABLE(hspi);
 8005c42:	bf58      	it	pl
 8005c44:	f041 0140 	orrpl.w	r1, r1, #64	@ 0x40
  hspi->TxXferSize  = Size;
 8005c48:	86a6      	strh	r6, [r4, #52]	@ 0x34
    __HAL_SPI_ENABLE(hspi);
 8005c4a:	bf58      	it	pl
 8005c4c:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8005c4e:	68e1      	ldr	r1, [r4, #12]
 8005c50:	f5b1 6f00 	cmp.w	r1, #2048	@ 0x800
 8005c54:	d155      	bne.n	8005d02 <HAL_SPI_TransmitReceive+0x142>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8005c56:	b10a      	cbz	r2, 8005c5c <HAL_SPI_TransmitReceive+0x9c>
 8005c58:	2e01      	cmp	r6, #1
 8005c5a:	d107      	bne.n	8005c6c <HAL_SPI_TransmitReceive+0xac>
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 8005c5c:	f835 2b02 	ldrh.w	r2, [r5], #2
 8005c60:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 8005c62:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8005c64:	6325      	str	r5, [r4, #48]	@ 0x30
      hspi->TxXferCount--;
 8005c66:	3b01      	subs	r3, #1
 8005c68:	b29b      	uxth	r3, r3
 8005c6a:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 8005c6c:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8005c6e:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8005c70:	b29b      	uxth	r3, r3
 8005c72:	b98b      	cbnz	r3, 8005c98 <HAL_SPI_TransmitReceive+0xd8>
 8005c74:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8005c76:	b29b      	uxth	r3, r3
 8005c78:	b973      	cbnz	r3, 8005c98 <HAL_SPI_TransmitReceive+0xd8>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8005c7a:	463a      	mov	r2, r7
 8005c7c:	4641      	mov	r1, r8
 8005c7e:	4620      	mov	r0, r4
 8005c80:	f7ff fe28 	bl	80058d4 <SPI_EndRxTxTransaction>
 8005c84:	2800      	cmp	r0, #0
 8005c86:	f000 8081 	beq.w	8005d8c <HAL_SPI_TransmitReceive+0x1cc>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8005c8a:	2320      	movs	r3, #32
 8005c8c:	6563      	str	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hspi);
 8005c8e:	2300      	movs	r3, #0
 8005c90:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
    return HAL_ERROR;
 8005c94:	2001      	movs	r0, #1
 8005c96:	e031      	b.n	8005cfc <HAL_SPI_TransmitReceive+0x13c>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8005c98:	6821      	ldr	r1, [r4, #0]
 8005c9a:	688b      	ldr	r3, [r1, #8]
 8005c9c:	079a      	lsls	r2, r3, #30
 8005c9e:	d50d      	bpl.n	8005cbc <HAL_SPI_TransmitReceive+0xfc>
 8005ca0:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8005ca2:	b29b      	uxth	r3, r3
 8005ca4:	b153      	cbz	r3, 8005cbc <HAL_SPI_TransmitReceive+0xfc>
 8005ca6:	b145      	cbz	r5, 8005cba <HAL_SPI_TransmitReceive+0xfa>
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 8005ca8:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8005caa:	f833 2b02 	ldrh.w	r2, [r3], #2
 8005cae:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8005cb0:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 8005cb2:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8005cb4:	3b01      	subs	r3, #1
 8005cb6:	b29b      	uxth	r3, r3
 8005cb8:	86e3      	strh	r3, [r4, #54]	@ 0x36
{
 8005cba:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8005cbc:	688a      	ldr	r2, [r1, #8]
 8005cbe:	f012 0201 	ands.w	r2, r2, #1
 8005cc2:	d00c      	beq.n	8005cde <HAL_SPI_TransmitReceive+0x11e>
 8005cc4:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8005cc6:	b29b      	uxth	r3, r3
 8005cc8:	b14b      	cbz	r3, 8005cde <HAL_SPI_TransmitReceive+0x11e>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8005cca:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8005ccc:	68c9      	ldr	r1, [r1, #12]
 8005cce:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8005cd2:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8005cd4:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8005cd6:	3b01      	subs	r3, #1
 8005cd8:	b29b      	uxth	r3, r3
 8005cda:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 8005cdc:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8005cde:	f7fd fbc1 	bl	8003464 <HAL_GetTick>
 8005ce2:	1bc0      	subs	r0, r0, r7
 8005ce4:	4540      	cmp	r0, r8
 8005ce6:	d3c2      	bcc.n	8005c6e <HAL_SPI_TransmitReceive+0xae>
 8005ce8:	f1b8 3fff 	cmp.w	r8, #4294967295
 8005cec:	d0bf      	beq.n	8005c6e <HAL_SPI_TransmitReceive+0xae>
        hspi->State = HAL_SPI_STATE_READY;
 8005cee:	2301      	movs	r3, #1
 8005cf0:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 8005cf4:	2300      	movs	r3, #0
 8005cf6:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
        return HAL_TIMEOUT;
 8005cfa:	2003      	movs	r0, #3
}
 8005cfc:	b003      	add	sp, #12
 8005cfe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8005d02:	b10a      	cbz	r2, 8005d08 <HAL_SPI_TransmitReceive+0x148>
 8005d04:	2e01      	cmp	r6, #1
 8005d06:	d108      	bne.n	8005d1a <HAL_SPI_TransmitReceive+0x15a>
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 8005d08:	782a      	ldrb	r2, [r5, #0]
 8005d0a:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8005d0c:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8005d0e:	3301      	adds	r3, #1
 8005d10:	6323      	str	r3, [r4, #48]	@ 0x30
      hspi->TxXferCount--;
 8005d12:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8005d14:	3b01      	subs	r3, #1
 8005d16:	b29b      	uxth	r3, r3
 8005d18:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 8005d1a:	2501      	movs	r5, #1
 8005d1c:	e02d      	b.n	8005d7a <HAL_SPI_TransmitReceive+0x1ba>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8005d1e:	6822      	ldr	r2, [r4, #0]
 8005d20:	6893      	ldr	r3, [r2, #8]
 8005d22:	079b      	lsls	r3, r3, #30
 8005d24:	d50e      	bpl.n	8005d44 <HAL_SPI_TransmitReceive+0x184>
 8005d26:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8005d28:	b29b      	uxth	r3, r3
 8005d2a:	b15b      	cbz	r3, 8005d44 <HAL_SPI_TransmitReceive+0x184>
 8005d2c:	b14d      	cbz	r5, 8005d42 <HAL_SPI_TransmitReceive+0x182>
        *(__IO uint8_t *)&hspi->Instance->DR = *((const uint8_t *)hspi->pTxBuffPtr);
 8005d2e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8005d30:	781b      	ldrb	r3, [r3, #0]
 8005d32:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 8005d34:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8005d36:	3301      	adds	r3, #1
 8005d38:	6323      	str	r3, [r4, #48]	@ 0x30
        hspi->TxXferCount--;
 8005d3a:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8005d3c:	3b01      	subs	r3, #1
 8005d3e:	b29b      	uxth	r3, r3
 8005d40:	86e3      	strh	r3, [r4, #54]	@ 0x36
        txallowed = 1U;
 8005d42:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8005d44:	6822      	ldr	r2, [r4, #0]
 8005d46:	6891      	ldr	r1, [r2, #8]
 8005d48:	f011 0101 	ands.w	r1, r1, #1
 8005d4c:	d00d      	beq.n	8005d6a <HAL_SPI_TransmitReceive+0x1aa>
 8005d4e:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8005d50:	b29b      	uxth	r3, r3
 8005d52:	b153      	cbz	r3, 8005d6a <HAL_SPI_TransmitReceive+0x1aa>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 8005d54:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8005d56:	68d2      	ldr	r2, [r2, #12]
 8005d58:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 8005d5a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8005d5c:	3301      	adds	r3, #1
 8005d5e:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8005d60:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8005d62:	3b01      	subs	r3, #1
 8005d64:	b29b      	uxth	r3, r3
 8005d66:	87e3      	strh	r3, [r4, #62]	@ 0x3e
        txallowed = 1U;
 8005d68:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8005d6a:	f7fd fb7b 	bl	8003464 <HAL_GetTick>
 8005d6e:	1bc0      	subs	r0, r0, r7
 8005d70:	4540      	cmp	r0, r8
 8005d72:	d302      	bcc.n	8005d7a <HAL_SPI_TransmitReceive+0x1ba>
 8005d74:	f1b8 3fff 	cmp.w	r8, #4294967295
 8005d78:	d1b9      	bne.n	8005cee <HAL_SPI_TransmitReceive+0x12e>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8005d7a:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8005d7c:	b29b      	uxth	r3, r3
 8005d7e:	2b00      	cmp	r3, #0
 8005d80:	d1cd      	bne.n	8005d1e <HAL_SPI_TransmitReceive+0x15e>
 8005d82:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8005d84:	b29b      	uxth	r3, r3
 8005d86:	2b00      	cmp	r3, #0
 8005d88:	d1c9      	bne.n	8005d1e <HAL_SPI_TransmitReceive+0x15e>
 8005d8a:	e776      	b.n	8005c7a <HAL_SPI_TransmitReceive+0xba>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8005d8c:	68a3      	ldr	r3, [r4, #8]
 8005d8e:	b933      	cbnz	r3, 8005d9e <HAL_SPI_TransmitReceive+0x1de>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8005d90:	9301      	str	r3, [sp, #4]
 8005d92:	6823      	ldr	r3, [r4, #0]
 8005d94:	68da      	ldr	r2, [r3, #12]
 8005d96:	9201      	str	r2, [sp, #4]
 8005d98:	689b      	ldr	r3, [r3, #8]
 8005d9a:	9301      	str	r3, [sp, #4]
 8005d9c:	9b01      	ldr	r3, [sp, #4]
  hspi->State = HAL_SPI_STATE_READY;
 8005d9e:	2301      	movs	r3, #1
 8005da0:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8005da4:	6d60      	ldr	r0, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 8005da6:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8005da8:	1ac0      	subs	r0, r0, r3
  __HAL_UNLOCK(hspi);
 8005daa:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8005dae:	bf18      	it	ne
 8005db0:	2001      	movne	r0, #1
 8005db2:	e7a3      	b.n	8005cfc <HAL_SPI_TransmitReceive+0x13c>
    return HAL_BUSY;
 8005db4:	2002      	movs	r0, #2
 8005db6:	e7a1      	b.n	8005cfc <HAL_SPI_TransmitReceive+0x13c>

08005db8 <HAL_SPI_Receive>:
{
 8005db8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8005dbc:	461e      	mov	r6, r3
  if (hspi->State != HAL_SPI_STATE_READY)
 8005dbe:	f890 3051 	ldrb.w	r3, [r0, #81]	@ 0x51
 8005dc2:	2b01      	cmp	r3, #1
{
 8005dc4:	4604      	mov	r4, r0
 8005dc6:	4689      	mov	r9, r1
 8005dc8:	4617      	mov	r7, r2
  if (hspi->State != HAL_SPI_STATE_READY)
 8005dca:	b2dd      	uxtb	r5, r3
 8005dcc:	d004      	beq.n	8005dd8 <HAL_SPI_Receive+0x20>
    return HAL_BUSY;
 8005dce:	2502      	movs	r5, #2
}
 8005dd0:	4628      	mov	r0, r5
 8005dd2:	b003      	add	sp, #12
 8005dd4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8005dd8:	6843      	ldr	r3, [r0, #4]
 8005dda:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8005dde:	d10b      	bne.n	8005df8 <HAL_SPI_Receive+0x40>
 8005de0:	6883      	ldr	r3, [r0, #8]
 8005de2:	b94b      	cbnz	r3, 8005df8 <HAL_SPI_Receive+0x40>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 8005de4:	2304      	movs	r3, #4
 8005de6:	f880 3051 	strb.w	r3, [r0, #81]	@ 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 8005dea:	4613      	mov	r3, r2
 8005dec:	9600      	str	r6, [sp, #0]
 8005dee:	460a      	mov	r2, r1
 8005df0:	f7ff fee6 	bl	8005bc0 <HAL_SPI_TransmitReceive>
 8005df4:	4605      	mov	r5, r0
 8005df6:	e7eb      	b.n	8005dd0 <HAL_SPI_Receive+0x18>
  tickstart = HAL_GetTick();
 8005df8:	f7fd fb34 	bl	8003464 <HAL_GetTick>
 8005dfc:	4680      	mov	r8, r0
  if ((pData == NULL) || (Size == 0U))
 8005dfe:	f1b9 0f00 	cmp.w	r9, #0
 8005e02:	d0e5      	beq.n	8005dd0 <HAL_SPI_Receive+0x18>
 8005e04:	2f00      	cmp	r7, #0
 8005e06:	d0e3      	beq.n	8005dd0 <HAL_SPI_Receive+0x18>
  __HAL_LOCK(hspi);
 8005e08:	f894 3050 	ldrb.w	r3, [r4, #80]	@ 0x50
 8005e0c:	2b01      	cmp	r3, #1
 8005e0e:	d0de      	beq.n	8005dce <HAL_SPI_Receive+0x16>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005e10:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 8005e12:	f8c4 9038 	str.w	r9, [r4, #56]	@ 0x38
  __HAL_LOCK(hspi);
 8005e16:	2301      	movs	r3, #1
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8005e18:	2500      	movs	r5, #0
  __HAL_LOCK(hspi);
 8005e1a:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005e1e:	f5b2 4f00 	cmp.w	r2, #32768	@ 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 8005e22:	f04f 0304 	mov.w	r3, #4
 8005e26:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  hspi->TxISR       = NULL;
 8005e2a:	e9c4 5510 	strd	r5, r5, [r4, #64]	@ 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8005e2e:	6565      	str	r5, [r4, #84]	@ 0x54
    __HAL_SPI_DISABLE(hspi);
 8005e30:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8005e32:	87e7      	strh	r7, [r4, #62]	@ 0x3e
  hspi->RxXferSize  = Size;
 8005e34:	87a7      	strh	r7, [r4, #60]	@ 0x3c
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 8005e36:	6325      	str	r5, [r4, #48]	@ 0x30
  hspi->TxXferSize  = 0U;
 8005e38:	86a5      	strh	r5, [r4, #52]	@ 0x34
  hspi->TxXferCount = 0U;
 8005e3a:	86e5      	strh	r5, [r4, #54]	@ 0x36
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005e3c:	d107      	bne.n	8005e4e <HAL_SPI_Receive+0x96>
    __HAL_SPI_DISABLE(hspi);
 8005e3e:	681a      	ldr	r2, [r3, #0]
 8005e40:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8005e44:	601a      	str	r2, [r3, #0]
    SPI_1LINE_RX(hspi);
 8005e46:	681a      	ldr	r2, [r3, #0]
 8005e48:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8005e4c:	601a      	str	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005e4e:	681a      	ldr	r2, [r3, #0]
 8005e50:	0655      	lsls	r5, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8005e52:	bf5e      	ittt	pl
 8005e54:	681a      	ldrpl	r2, [r3, #0]
 8005e56:	f042 0240 	orrpl.w	r2, r2, #64	@ 0x40
 8005e5a:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 8005e5c:	68e3      	ldr	r3, [r4, #12]
 8005e5e:	b1f3      	cbz	r3, 8005e9e <HAL_SPI_Receive+0xe6>
    while (hspi->RxXferCount > 0U)
 8005e60:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8005e62:	b29b      	uxth	r3, r3
 8005e64:	b1fb      	cbz	r3, 8005ea6 <HAL_SPI_Receive+0xee>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8005e66:	6823      	ldr	r3, [r4, #0]
 8005e68:	689a      	ldr	r2, [r3, #8]
 8005e6a:	07d2      	lsls	r2, r2, #31
 8005e6c:	d53c      	bpl.n	8005ee8 <HAL_SPI_Receive+0x130>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8005e6e:	68da      	ldr	r2, [r3, #12]
 8005e70:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8005e72:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8005e76:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8005e78:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8005e7a:	3b01      	subs	r3, #1
 8005e7c:	b29b      	uxth	r3, r3
 8005e7e:	87e3      	strh	r3, [r4, #62]	@ 0x3e
 8005e80:	e7ee      	b.n	8005e60 <HAL_SPI_Receive+0xa8>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8005e82:	6823      	ldr	r3, [r4, #0]
 8005e84:	689a      	ldr	r2, [r3, #8]
 8005e86:	07d0      	lsls	r0, r2, #31
 8005e88:	d51e      	bpl.n	8005ec8 <HAL_SPI_Receive+0x110>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 8005e8a:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8005e8c:	7b1b      	ldrb	r3, [r3, #12]
 8005e8e:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 8005e90:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 8005e92:	3301      	adds	r3, #1
 8005e94:	63a3      	str	r3, [r4, #56]	@ 0x38
        hspi->RxXferCount--;
 8005e96:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8005e98:	3b01      	subs	r3, #1
 8005e9a:	b29b      	uxth	r3, r3
 8005e9c:	87e3      	strh	r3, [r4, #62]	@ 0x3e
    while (hspi->RxXferCount > 0U)
 8005e9e:	8fe3      	ldrh	r3, [r4, #62]	@ 0x3e
 8005ea0:	b29b      	uxth	r3, r3
 8005ea2:	2b00      	cmp	r3, #0
 8005ea4:	d1ed      	bne.n	8005e82 <HAL_SPI_Receive+0xca>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8005ea6:	4642      	mov	r2, r8
 8005ea8:	4631      	mov	r1, r6
 8005eaa:	4620      	mov	r0, r4
 8005eac:	f7ff fd4e 	bl	800594c <SPI_EndRxTransaction>
 8005eb0:	bb18      	cbnz	r0, 8005efa <HAL_SPI_Receive+0x142>
  hspi->State = HAL_SPI_STATE_READY;
 8005eb2:	2301      	movs	r3, #1
 8005eb4:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8005eb8:	6d65      	ldr	r5, [r4, #84]	@ 0x54
  __HAL_UNLOCK(hspi);
 8005eba:	2300      	movs	r3, #0
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8005ebc:	1aed      	subs	r5, r5, r3
  __HAL_UNLOCK(hspi);
 8005ebe:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8005ec2:	bf18      	it	ne
 8005ec4:	2501      	movne	r5, #1
 8005ec6:	e783      	b.n	8005dd0 <HAL_SPI_Receive+0x18>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8005ec8:	f7fd facc 	bl	8003464 <HAL_GetTick>
 8005ecc:	eba0 0008 	sub.w	r0, r0, r8
 8005ed0:	42b0      	cmp	r0, r6
 8005ed2:	d3e4      	bcc.n	8005e9e <HAL_SPI_Receive+0xe6>
 8005ed4:	1c71      	adds	r1, r6, #1
 8005ed6:	d0e2      	beq.n	8005e9e <HAL_SPI_Receive+0xe6>
          hspi->State = HAL_SPI_STATE_READY;
 8005ed8:	2301      	movs	r3, #1
 8005eda:	f884 3051 	strb.w	r3, [r4, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 8005ede:	2300      	movs	r3, #0
 8005ee0:	f884 3050 	strb.w	r3, [r4, #80]	@ 0x50
          return HAL_TIMEOUT;
 8005ee4:	2503      	movs	r5, #3
 8005ee6:	e773      	b.n	8005dd0 <HAL_SPI_Receive+0x18>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8005ee8:	f7fd fabc 	bl	8003464 <HAL_GetTick>
 8005eec:	eba0 0008 	sub.w	r0, r0, r8
 8005ef0:	42b0      	cmp	r0, r6
 8005ef2:	d3b5      	bcc.n	8005e60 <HAL_SPI_Receive+0xa8>
 8005ef4:	1c73      	adds	r3, r6, #1
 8005ef6:	d0b3      	beq.n	8005e60 <HAL_SPI_Receive+0xa8>
 8005ef8:	e7ee      	b.n	8005ed8 <HAL_SPI_Receive+0x120>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8005efa:	2320      	movs	r3, #32
 8005efc:	6563      	str	r3, [r4, #84]	@ 0x54
 8005efe:	e7d8      	b.n	8005eb2 <HAL_SPI_Receive+0xfa>

08005f00 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 8005f00:	4770      	bx	lr
	...

08005f04 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 8005f04:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8005f08:	2b01      	cmp	r3, #1
 8005f0a:	d130      	bne.n	8005f6e <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8005f0c:	2302      	movs	r3, #2
 8005f0e:	f880 303d 	strb.w	r3, [r0, #61]	@ 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8005f12:	6803      	ldr	r3, [r0, #0]
 8005f14:	68da      	ldr	r2, [r3, #12]
 8005f16:	f042 0201 	orr.w	r2, r2, #1
 8005f1a:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8005f1c:	4a15      	ldr	r2, [pc, #84]	@ (8005f74 <HAL_TIM_Base_Start_IT+0x70>)
 8005f1e:	4293      	cmp	r3, r2
 8005f20:	d01a      	beq.n	8005f58 <HAL_TIM_Base_Start_IT+0x54>
 8005f22:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005f26:	d017      	beq.n	8005f58 <HAL_TIM_Base_Start_IT+0x54>
 8005f28:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 8005f2c:	4293      	cmp	r3, r2
 8005f2e:	d013      	beq.n	8005f58 <HAL_TIM_Base_Start_IT+0x54>
 8005f30:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8005f34:	4293      	cmp	r3, r2
 8005f36:	d00f      	beq.n	8005f58 <HAL_TIM_Base_Start_IT+0x54>
 8005f38:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8005f3c:	4293      	cmp	r3, r2
 8005f3e:	d00b      	beq.n	8005f58 <HAL_TIM_Base_Start_IT+0x54>
 8005f40:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 8005f44:	4293      	cmp	r3, r2
 8005f46:	d007      	beq.n	8005f58 <HAL_TIM_Base_Start_IT+0x54>
 8005f48:	f502 5270 	add.w	r2, r2, #15360	@ 0x3c00
 8005f4c:	4293      	cmp	r3, r2
 8005f4e:	d003      	beq.n	8005f58 <HAL_TIM_Base_Start_IT+0x54>
 8005f50:	f5a2 3294 	sub.w	r2, r2, #75776	@ 0x12800
 8005f54:	4293      	cmp	r3, r2
 8005f56:	d104      	bne.n	8005f62 <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8005f58:	689a      	ldr	r2, [r3, #8]
 8005f5a:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8005f5e:	2a06      	cmp	r2, #6
 8005f60:	d003      	beq.n	8005f6a <HAL_TIM_Base_Start_IT+0x66>
    {
      __HAL_TIM_ENABLE(htim);
 8005f62:	681a      	ldr	r2, [r3, #0]
 8005f64:	f042 0201 	orr.w	r2, r2, #1
 8005f68:	601a      	str	r2, [r3, #0]
  {
    __HAL_TIM_ENABLE(htim);
  }

  /* Return function status */
  return HAL_OK;
 8005f6a:	2000      	movs	r0, #0
 8005f6c:	4770      	bx	lr
    return HAL_ERROR;
 8005f6e:	2001      	movs	r0, #1
}
 8005f70:	4770      	bx	lr
 8005f72:	bf00      	nop
 8005f74:	40010000 	.word	0x40010000

08005f78 <HAL_TIM_OC_DelayElapsedCallback>:
/**
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
 8005f78:	4770      	bx	lr

08005f7a <HAL_TIM_IC_CaptureCallback>:
/**
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
 8005f7a:	4770      	bx	lr

08005f7c <HAL_TIM_PWM_PulseFinishedCallback>:
/**
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
 8005f7c:	4770      	bx	lr

08005f7e <HAL_TIM_TriggerCallback>:
/**
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
 8005f7e:	4770      	bx	lr

08005f80 <HAL_TIM_IRQHandler>:
  uint32_t itsource = htim->Instance->DIER;
 8005f80:	6803      	ldr	r3, [r0, #0]
{
 8005f82:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsource = htim->Instance->DIER;
 8005f84:	68dd      	ldr	r5, [r3, #12]
  uint32_t itflag   = htim->Instance->SR;
 8005f86:	691e      	ldr	r6, [r3, #16]
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 8005f88:	07b1      	lsls	r1, r6, #30
{
 8005f8a:	4604      	mov	r4, r0
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 8005f8c:	d50d      	bpl.n	8005faa <HAL_TIM_IRQHandler+0x2a>
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
 8005f8e:	07aa      	lsls	r2, r5, #30
 8005f90:	d50b      	bpl.n	8005faa <HAL_TIM_IRQHandler+0x2a>
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
 8005f92:	f06f 0202 	mvn.w	r2, #2
 8005f96:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8005f98:	2201      	movs	r2, #1
 8005f9a:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8005f9c:	699b      	ldr	r3, [r3, #24]
 8005f9e:	079b      	lsls	r3, r3, #30
 8005fa0:	d069      	beq.n	8006076 <HAL_TIM_IRQHandler+0xf6>
          HAL_TIM_IC_CaptureCallback(htim);
 8005fa2:	f7ff ffea 	bl	8005f7a <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8005fa6:	2300      	movs	r3, #0
 8005fa8:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
 8005faa:	0771      	lsls	r1, r6, #29
 8005fac:	d510      	bpl.n	8005fd0 <HAL_TIM_IRQHandler+0x50>
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
 8005fae:	076a      	lsls	r2, r5, #29
 8005fb0:	d50e      	bpl.n	8005fd0 <HAL_TIM_IRQHandler+0x50>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 8005fb2:	6823      	ldr	r3, [r4, #0]
 8005fb4:	f06f 0204 	mvn.w	r2, #4
 8005fb8:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8005fba:	2202      	movs	r2, #2
 8005fbc:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8005fbe:	699b      	ldr	r3, [r3, #24]
 8005fc0:	f413 7f40 	tst.w	r3, #768	@ 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 8005fc4:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8005fc6:	d05c      	beq.n	8006082 <HAL_TIM_IRQHandler+0x102>
        HAL_TIM_IC_CaptureCallback(htim);
 8005fc8:	f7ff ffd7 	bl	8005f7a <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8005fcc:	2300      	movs	r3, #0
 8005fce:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
 8005fd0:	0733      	lsls	r3, r6, #28
 8005fd2:	d50f      	bpl.n	8005ff4 <HAL_TIM_IRQHandler+0x74>
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
 8005fd4:	0728      	lsls	r0, r5, #28
 8005fd6:	d50d      	bpl.n	8005ff4 <HAL_TIM_IRQHandler+0x74>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 8005fd8:	6823      	ldr	r3, [r4, #0]
 8005fda:	f06f 0208 	mvn.w	r2, #8
 8005fde:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8005fe0:	2204      	movs	r2, #4
 8005fe2:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8005fe4:	69db      	ldr	r3, [r3, #28]
 8005fe6:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 8005fe8:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8005fea:	d050      	beq.n	800608e <HAL_TIM_IRQHandler+0x10e>
        HAL_TIM_IC_CaptureCallback(htim);
 8005fec:	f7ff ffc5 	bl	8005f7a <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8005ff0:	2300      	movs	r3, #0
 8005ff2:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
 8005ff4:	06f2      	lsls	r2, r6, #27
 8005ff6:	d510      	bpl.n	800601a <HAL_TIM_IRQHandler+0x9a>
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
 8005ff8:	06eb      	lsls	r3, r5, #27
 8005ffa:	d50e      	bpl.n	800601a <HAL_TIM_IRQHandler+0x9a>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 8005ffc:	6823      	ldr	r3, [r4, #0]
 8005ffe:	f06f 0210 	mvn.w	r2, #16
 8006002:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8006004:	2208      	movs	r2, #8
 8006006:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8006008:	69db      	ldr	r3, [r3, #28]
 800600a:	f413 7f40 	tst.w	r3, #768	@ 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800600e:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8006010:	d043      	beq.n	800609a <HAL_TIM_IRQHandler+0x11a>
        HAL_TIM_IC_CaptureCallback(htim);
 8006012:	f7ff ffb2 	bl	8005f7a <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006016:	2300      	movs	r3, #0
 8006018:	7723      	strb	r3, [r4, #28]
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
 800601a:	07f0      	lsls	r0, r6, #31
 800601c:	d508      	bpl.n	8006030 <HAL_TIM_IRQHandler+0xb0>
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
 800601e:	07e9      	lsls	r1, r5, #31
 8006020:	d506      	bpl.n	8006030 <HAL_TIM_IRQHandler+0xb0>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 8006022:	6823      	ldr	r3, [r4, #0]
 8006024:	f06f 0201 	mvn.w	r2, #1
 8006028:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800602a:	4620      	mov	r0, r4
 800602c:	f7fc f82e 	bl	800208c <HAL_TIM_PeriodElapsedCallback>
  if ((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK))
 8006030:	0632      	lsls	r2, r6, #24
 8006032:	d508      	bpl.n	8006046 <HAL_TIM_IRQHandler+0xc6>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 8006034:	062b      	lsls	r3, r5, #24
 8006036:	d506      	bpl.n	8006046 <HAL_TIM_IRQHandler+0xc6>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK);
 8006038:	6823      	ldr	r3, [r4, #0]
 800603a:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 800603e:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 8006040:	4620      	mov	r0, r4
 8006042:	f000 f8b6 	bl	80061b2 <HAL_TIMEx_BreakCallback>
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
 8006046:	0670      	lsls	r0, r6, #25
 8006048:	d508      	bpl.n	800605c <HAL_TIM_IRQHandler+0xdc>
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
 800604a:	0669      	lsls	r1, r5, #25
 800604c:	d506      	bpl.n	800605c <HAL_TIM_IRQHandler+0xdc>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 800604e:	6823      	ldr	r3, [r4, #0]
 8006050:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8006054:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 8006056:	4620      	mov	r0, r4
 8006058:	f7ff ff91 	bl	8005f7e <HAL_TIM_TriggerCallback>
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
 800605c:	06b2      	lsls	r2, r6, #26
 800605e:	d522      	bpl.n	80060a6 <HAL_TIM_IRQHandler+0x126>
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
 8006060:	06ab      	lsls	r3, r5, #26
 8006062:	d520      	bpl.n	80060a6 <HAL_TIM_IRQHandler+0x126>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 8006064:	6823      	ldr	r3, [r4, #0]
 8006066:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800606a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 800606c:	611a      	str	r2, [r3, #16]
}
 800606e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      HAL_TIMEx_CommutCallback(htim);
 8006072:	f000 b89d 	b.w	80061b0 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8006076:	f7ff ff7f 	bl	8005f78 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800607a:	4620      	mov	r0, r4
 800607c:	f7ff ff7e 	bl	8005f7c <HAL_TIM_PWM_PulseFinishedCallback>
 8006080:	e791      	b.n	8005fa6 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006082:	f7ff ff79 	bl	8005f78 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006086:	4620      	mov	r0, r4
 8006088:	f7ff ff78 	bl	8005f7c <HAL_TIM_PWM_PulseFinishedCallback>
 800608c:	e79e      	b.n	8005fcc <HAL_TIM_IRQHandler+0x4c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800608e:	f7ff ff73 	bl	8005f78 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006092:	4620      	mov	r0, r4
 8006094:	f7ff ff72 	bl	8005f7c <HAL_TIM_PWM_PulseFinishedCallback>
 8006098:	e7aa      	b.n	8005ff0 <HAL_TIM_IRQHandler+0x70>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800609a:	f7ff ff6d 	bl	8005f78 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800609e:	4620      	mov	r0, r4
 80060a0:	f7ff ff6c 	bl	8005f7c <HAL_TIM_PWM_PulseFinishedCallback>
 80060a4:	e7b7      	b.n	8006016 <HAL_TIM_IRQHandler+0x96>
}
 80060a6:	bd70      	pop	{r4, r5, r6, pc}

080060a8 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80060a8:	4a29      	ldr	r2, [pc, #164]	@ (8006150 <TIM_Base_SetConfig+0xa8>)
  tmpcr1 = TIMx->CR1;
 80060aa:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80060ac:	4290      	cmp	r0, r2
 80060ae:	d012      	beq.n	80060d6 <TIM_Base_SetConfig+0x2e>
 80060b0:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
 80060b4:	d00f      	beq.n	80060d6 <TIM_Base_SetConfig+0x2e>
 80060b6:	f5a2 427c 	sub.w	r2, r2, #64512	@ 0xfc00
 80060ba:	4290      	cmp	r0, r2
 80060bc:	d00b      	beq.n	80060d6 <TIM_Base_SetConfig+0x2e>
 80060be:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80060c2:	4290      	cmp	r0, r2
 80060c4:	d007      	beq.n	80060d6 <TIM_Base_SetConfig+0x2e>
 80060c6:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80060ca:	4290      	cmp	r0, r2
 80060cc:	d003      	beq.n	80060d6 <TIM_Base_SetConfig+0x2e>
 80060ce:	f502 4278 	add.w	r2, r2, #63488	@ 0xf800
 80060d2:	4290      	cmp	r0, r2
 80060d4:	d108      	bne.n	80060e8 <TIM_Base_SetConfig+0x40>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 80060d6:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80060d8:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
 80060dc:	4313      	orrs	r3, r2

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80060de:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 80060e0:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80060e4:	4313      	orrs	r3, r2
 80060e6:	e016      	b.n	8006116 <TIM_Base_SetConfig+0x6e>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80060e8:	4a1a      	ldr	r2, [pc, #104]	@ (8006154 <TIM_Base_SetConfig+0xac>)
 80060ea:	4290      	cmp	r0, r2
 80060ec:	d0f7      	beq.n	80060de <TIM_Base_SetConfig+0x36>
 80060ee:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80060f2:	4290      	cmp	r0, r2
 80060f4:	d0f3      	beq.n	80060de <TIM_Base_SetConfig+0x36>
 80060f6:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 80060fa:	4290      	cmp	r0, r2
 80060fc:	d0ef      	beq.n	80060de <TIM_Base_SetConfig+0x36>
 80060fe:	f5a2 3298 	sub.w	r2, r2, #77824	@ 0x13000
 8006102:	4290      	cmp	r0, r2
 8006104:	d0eb      	beq.n	80060de <TIM_Base_SetConfig+0x36>
 8006106:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 800610a:	4290      	cmp	r0, r2
 800610c:	d0e7      	beq.n	80060de <TIM_Base_SetConfig+0x36>
 800610e:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
 8006112:	4290      	cmp	r0, r2
 8006114:	d0e3      	beq.n	80060de <TIM_Base_SetConfig+0x36>
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8006116:	694a      	ldr	r2, [r1, #20]
 8006118:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800611c:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 800611e:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8006120:	688b      	ldr	r3, [r1, #8]
 8006122:	62c3      	str	r3, [r0, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8006124:	680b      	ldr	r3, [r1, #0]
 8006126:	6283      	str	r3, [r0, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8006128:	4b09      	ldr	r3, [pc, #36]	@ (8006150 <TIM_Base_SetConfig+0xa8>)
 800612a:	4298      	cmp	r0, r3
 800612c:	d003      	beq.n	8006136 <TIM_Base_SetConfig+0x8e>
 800612e:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
 8006132:	4298      	cmp	r0, r3
 8006134:	d101      	bne.n	800613a <TIM_Base_SetConfig+0x92>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8006136:	690b      	ldr	r3, [r1, #16]
 8006138:	6303      	str	r3, [r0, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800613a:	2301      	movs	r3, #1
 800613c:	6143      	str	r3, [r0, #20]

  /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
 800613e:	6903      	ldr	r3, [r0, #16]
 8006140:	07db      	lsls	r3, r3, #31
  {
    /* Clear the update flag */
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
 8006142:	bf42      	ittt	mi
 8006144:	6903      	ldrmi	r3, [r0, #16]
 8006146:	f023 0301 	bicmi.w	r3, r3, #1
 800614a:	6103      	strmi	r3, [r0, #16]
  }
}
 800614c:	4770      	bx	lr
 800614e:	bf00      	nop
 8006150:	40010000 	.word	0x40010000
 8006154:	40014000 	.word	0x40014000

08006158 <HAL_TIM_Base_Init>:
{
 8006158:	b510      	push	{r4, lr}
  if (htim == NULL)
 800615a:	4604      	mov	r4, r0
 800615c:	b330      	cbz	r0, 80061ac <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 800615e:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
 8006162:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
 8006166:	b91b      	cbnz	r3, 8006170 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8006168:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
 800616c:	f7ff fec8 	bl	8005f00 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8006170:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006172:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8006174:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006178:	1d21      	adds	r1, r4, #4
 800617a:	f7ff ff95 	bl	80060a8 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800617e:	2301      	movs	r3, #1
 8006180:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
  return HAL_OK;
 8006184:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006186:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
 800618a:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
 800618e:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
 8006192:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006196:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800619a:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800619e:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
 80061a2:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
  htim->State = HAL_TIM_STATE_READY;
 80061a6:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
}
 80061aa:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80061ac:	2001      	movs	r0, #1
 80061ae:	e7fc      	b.n	80061aa <HAL_TIM_Base_Init+0x52>

080061b0 <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
 80061b0:	4770      	bx	lr

080061b2 <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
 80061b2:	4770      	bx	lr

080061b4 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 80061b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 80061b8:	e9d1 3807 	ldrd	r3, r8, [r1, #28]
 80061bc:	e9d1 2c01 	ldrd	r2, ip, [r1, #4]
 80061c0:	e9d1 7603 	ldrd	r7, r6, [r1, #12]
 80061c4:	e9d1 5405 	ldrd	r5, r4, [r1, #20]
 80061c8:	f8d1 e024 	ldr.w	lr, [r1, #36]	@ 0x24
  if (Init->SDBank == FMC_SDRAM_BANK1)
 80061cc:	6809      	ldr	r1, [r1, #0]
 80061ce:	ea43 0308 	orr.w	r3, r3, r8
 80061d2:	b981      	cbnz	r1, 80061f6 <FMC_SDRAM_Init+0x42>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 80061d4:	ea43 030e 	orr.w	r3, r3, lr
 80061d8:	4313      	orrs	r3, r2
 80061da:	ea43 030c 	orr.w	r3, r3, ip
 80061de:	433b      	orrs	r3, r7
 80061e0:	6801      	ldr	r1, [r0, #0]
 80061e2:	4333      	orrs	r3, r6
 80061e4:	432b      	orrs	r3, r5
 80061e6:	4323      	orrs	r3, r4
 80061e8:	f36f 010e 	bfc	r1, #0, #15
 80061ec:	430b      	orrs	r3, r1
 80061ee:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 80061f0:	2000      	movs	r0, #0
 80061f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 80061f6:	6801      	ldr	r1, [r0, #0]
 80061f8:	ea43 030e 	orr.w	r3, r3, lr
 80061fc:	f421 41f8 	bic.w	r1, r1, #31744	@ 0x7c00
 8006200:	430b      	orrs	r3, r1
 8006202:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 8006204:	ea42 030c 	orr.w	r3, r2, ip
 8006208:	6841      	ldr	r1, [r0, #4]
 800620a:	433b      	orrs	r3, r7
 800620c:	4333      	orrs	r3, r6
 800620e:	432b      	orrs	r3, r5
 8006210:	f421 42ff 	bic.w	r2, r1, #32640	@ 0x7f80
 8006214:	4323      	orrs	r3, r4
 8006216:	f022 027f 	bic.w	r2, r2, #127	@ 0x7f
 800621a:	4313      	orrs	r3, r2
 800621c:	6043      	str	r3, [r0, #4]
 800621e:	e7e7      	b.n	80061f0 <FMC_SDRAM_Init+0x3c>

08006220 <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8006220:	68cb      	ldr	r3, [r1, #12]
 8006222:	f103 3cff 	add.w	ip, r3, #4294967295
 8006226:	694b      	ldr	r3, [r1, #20]
{
 8006228:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800622a:	684c      	ldr	r4, [r1, #4]
 800622c:	688f      	ldr	r7, [r1, #8]
 800622e:	690e      	ldr	r6, [r1, #16]
 8006230:	698d      	ldr	r5, [r1, #24]
 8006232:	6809      	ldr	r1, [r1, #0]
 8006234:	3b01      	subs	r3, #1
 8006236:	051b      	lsls	r3, r3, #20
 8006238:	3c01      	subs	r4, #1
 800623a:	3f01      	subs	r7, #1
 800623c:	3e01      	subs	r6, #1
 800623e:	3d01      	subs	r5, #1
 8006240:	0124      	lsls	r4, r4, #4
 8006242:	023f      	lsls	r7, r7, #8
 8006244:	0436      	lsls	r6, r6, #16
 8006246:	062d      	lsls	r5, r5, #24
 8006248:	3901      	subs	r1, #1
 800624a:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 800624e:	b95a      	cbnz	r2, 8006268 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8006250:	430b      	orrs	r3, r1
 8006252:	4323      	orrs	r3, r4
 8006254:	6882      	ldr	r2, [r0, #8]
 8006256:	433b      	orrs	r3, r7
 8006258:	4333      	orrs	r3, r6
 800625a:	432b      	orrs	r3, r5
 800625c:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 8006260:	4313      	orrs	r3, r2
 8006262:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 8006264:	2000      	movs	r0, #0
 8006266:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8006268:	6882      	ldr	r2, [r0, #8]
 800626a:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 800626e:	f422 4270 	bic.w	r2, r2, #61440	@ 0xf000
 8006272:	4313      	orrs	r3, r2
 8006274:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 8006276:	ea44 0307 	orr.w	r3, r4, r7
 800627a:	68c2      	ldr	r2, [r0, #12]
 800627c:	430b      	orrs	r3, r1
 800627e:	4333      	orrs	r3, r6
 8006280:	432b      	orrs	r3, r5
 8006282:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
 8006286:	4313      	orrs	r3, r2
 8006288:	60c3      	str	r3, [r0, #12]
 800628a:	e7eb      	b.n	8006264 <FMC_SDRAM_Timing_Init+0x44>

0800628c <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800628c:	b570      	push	{r4, r5, r6, lr}
 800628e:	4604      	mov	r4, r0
 8006290:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 8006292:	6902      	ldr	r2, [r0, #16]
 8006294:	e9d1 3000 	ldrd	r3, r0, [r1]
 8006298:	4303      	orrs	r3, r0
 800629a:	68c8      	ldr	r0, [r1, #12]
 800629c:	f36f 0215 	bfc	r2, #0, #22
 80062a0:	ea43 2340 	orr.w	r3, r3, r0, lsl #9
 80062a4:	4313      	orrs	r3, r2
 80062a6:	688a      	ldr	r2, [r1, #8]
 80062a8:	3a01      	subs	r2, #1
 80062aa:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 80062ae:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 80062b0:	f7fd f8d8 	bl	8003464 <HAL_GetTick>
 80062b4:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 80062b6:	69a0      	ldr	r0, [r4, #24]
 80062b8:	f010 0020 	ands.w	r0, r0, #32
 80062bc:	d003      	beq.n	80062c6 <FMC_SDRAM_SendCommand+0x3a>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 80062be:	1c6b      	adds	r3, r5, #1
 80062c0:	d0f9      	beq.n	80062b6 <FMC_SDRAM_SendCommand+0x2a>
    {
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 80062c2:	b90d      	cbnz	r5, 80062c8 <FMC_SDRAM_SendCommand+0x3c>
      {
        return HAL_TIMEOUT;
 80062c4:	2003      	movs	r0, #3
      }
    }
  }
  return HAL_OK;
}
 80062c6:	bd70      	pop	{r4, r5, r6, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 80062c8:	f7fd f8cc 	bl	8003464 <HAL_GetTick>
 80062cc:	1b80      	subs	r0, r0, r6
 80062ce:	42a8      	cmp	r0, r5
 80062d0:	d9f1      	bls.n	80062b6 <FMC_SDRAM_SendCommand+0x2a>
 80062d2:	e7f7      	b.n	80062c4 <FMC_SDRAM_SendCommand+0x38>

080062d4 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 80062d4:	6943      	ldr	r3, [r0, #20]
 80062d6:	f36f 034d 	bfc	r3, #1, #13
 80062da:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
 80062de:	6143      	str	r3, [r0, #20]

  return HAL_OK;
}
 80062e0:	2000      	movs	r0, #0
 80062e2:	4770      	bx	lr

080062e4 <USB_CoreReset>:
  * @brief  Reset the USB Core (needed after USB clock settings change)
  * @param  USBx  Selected device
  * @retval HAL status
  */
static HAL_StatusTypeDef USB_CoreReset(USB_OTG_GlobalTypeDef *USBx)
{
 80062e4:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
 80062e6:	2300      	movs	r3, #0
{
 80062e8:	4602      	mov	r2, r0
  __IO uint32_t count = 0U;
 80062ea:	9301      	str	r3, [sp, #4]

  /* Wait for AHB master IDLE state. */
  do
  {
    count++;
 80062ec:	9b01      	ldr	r3, [sp, #4]
 80062ee:	3301      	adds	r3, #1
 80062f0:	9301      	str	r3, [sp, #4]

    if (count > HAL_USB_TIMEOUT)
 80062f2:	9b01      	ldr	r3, [sp, #4]
 80062f4:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 80062f8:	d815      	bhi.n	8006326 <USB_CoreReset+0x42>
    {
      return HAL_TIMEOUT;
    }
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
 80062fa:	6913      	ldr	r3, [r2, #16]
 80062fc:	2b00      	cmp	r3, #0
 80062fe:	daf5      	bge.n	80062ec <USB_CoreReset+0x8>

  /* Core Soft Reset */
  count = 0U;
 8006300:	2300      	movs	r3, #0
 8006302:	9301      	str	r3, [sp, #4]
  USBx->GRSTCTL |= USB_OTG_GRSTCTL_CSRST;
 8006304:	6913      	ldr	r3, [r2, #16]
 8006306:	f043 0301 	orr.w	r3, r3, #1
 800630a:	6113      	str	r3, [r2, #16]

  do
  {
    count++;
 800630c:	9b01      	ldr	r3, [sp, #4]
 800630e:	3301      	adds	r3, #1
 8006310:	9301      	str	r3, [sp, #4]

    if (count > HAL_USB_TIMEOUT)
 8006312:	9b01      	ldr	r3, [sp, #4]
 8006314:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8006318:	d805      	bhi.n	8006326 <USB_CoreReset+0x42>
    {
      return HAL_TIMEOUT;
    }
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_CSRST) == USB_OTG_GRSTCTL_CSRST);
 800631a:	6910      	ldr	r0, [r2, #16]
 800631c:	f010 0001 	ands.w	r0, r0, #1
 8006320:	d1f4      	bne.n	800630c <USB_CoreReset+0x28>

  return HAL_OK;
}
 8006322:	b002      	add	sp, #8
 8006324:	4770      	bx	lr
      return HAL_TIMEOUT;
 8006326:	2003      	movs	r0, #3
 8006328:	e7fb      	b.n	8006322 <USB_CoreReset+0x3e>

0800632a <USB_CoreInit>:
{
 800632a:	b084      	sub	sp, #16
 800632c:	b538      	push	{r3, r4, r5, lr}
 800632e:	ad05      	add	r5, sp, #20
 8006330:	e885 000e 	stmia.w	r5, {r1, r2, r3}
  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
 8006334:	f89d 3019 	ldrb.w	r3, [sp, #25]
 8006338:	2b01      	cmp	r3, #1
{
 800633a:	4604      	mov	r4, r0
  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
 800633c:	d127      	bne.n	800638e <USB_CoreInit+0x64>
    USBx->GCCFG &= ~(USB_OTG_GCCFG_PWRDWN);
 800633e:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8006340:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8006344:	6383      	str	r3, [r0, #56]	@ 0x38
    USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_TSDPS | USB_OTG_GUSBCFG_ULPIFSLS | USB_OTG_GUSBCFG_PHYSEL);
 8006346:	68c3      	ldr	r3, [r0, #12]
 8006348:	f423 0384 	bic.w	r3, r3, #4325376	@ 0x420000
 800634c:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8006350:	60c3      	str	r3, [r0, #12]
    USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_ULPIEVBUSD | USB_OTG_GUSBCFG_ULPIEVBUSI);
 8006352:	68c3      	ldr	r3, [r0, #12]
 8006354:	f423 1340 	bic.w	r3, r3, #3145728	@ 0x300000
 8006358:	60c3      	str	r3, [r0, #12]
    if (cfg.use_external_vbus == 1U)
 800635a:	f89d 3020 	ldrb.w	r3, [sp, #32]
 800635e:	2b01      	cmp	r3, #1
      USBx->GUSBCFG |= USB_OTG_GUSBCFG_ULPIEVBUSD;
 8006360:	bf02      	ittt	eq
 8006362:	68c3      	ldreq	r3, [r0, #12]
 8006364:	f443 1380 	orreq.w	r3, r3, #1048576	@ 0x100000
 8006368:	60c3      	streq	r3, [r0, #12]
    ret = USB_CoreReset(USBx);
 800636a:	f7ff ffbb 	bl	80062e4 <USB_CoreReset>
  if (cfg.dma_enable == 1U)
 800636e:	f89d 3016 	ldrb.w	r3, [sp, #22]
 8006372:	2b01      	cmp	r3, #1
 8006374:	d107      	bne.n	8006386 <USB_CoreInit+0x5c>
    USBx->GAHBCFG |= USB_OTG_GAHBCFG_HBSTLEN_2;
 8006376:	68a3      	ldr	r3, [r4, #8]
 8006378:	f043 0306 	orr.w	r3, r3, #6
 800637c:	60a3      	str	r3, [r4, #8]
    USBx->GAHBCFG |= USB_OTG_GAHBCFG_DMAEN;
 800637e:	68a3      	ldr	r3, [r4, #8]
 8006380:	f043 0320 	orr.w	r3, r3, #32
 8006384:	60a3      	str	r3, [r4, #8]
}
 8006386:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800638a:	b004      	add	sp, #16
 800638c:	4770      	bx	lr
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_PHYSEL;
 800638e:	68c3      	ldr	r3, [r0, #12]
 8006390:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8006394:	60c3      	str	r3, [r0, #12]
    ret = USB_CoreReset(USBx);
 8006396:	f7ff ffa5 	bl	80062e4 <USB_CoreReset>
    if (cfg.battery_charging_enable == 0U)
 800639a:	f89d 301d 	ldrb.w	r3, [sp, #29]
 800639e:	b923      	cbnz	r3, 80063aa <USB_CoreInit+0x80>
      USBx->GCCFG |= USB_OTG_GCCFG_PWRDWN;
 80063a0:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80063a2:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
      USBx->GCCFG &= ~(USB_OTG_GCCFG_PWRDWN);
 80063a6:	63a3      	str	r3, [r4, #56]	@ 0x38
 80063a8:	e7e1      	b.n	800636e <USB_CoreInit+0x44>
 80063aa:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80063ac:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80063b0:	e7f9      	b.n	80063a6 <USB_CoreInit+0x7c>
	...

080063b4 <USB_SetTurnaroundTime>:
  if (speed == USBD_FS_SPEED)
 80063b4:	2a02      	cmp	r2, #2
 80063b6:	d14a      	bne.n	800644e <USB_SetTurnaroundTime+0x9a>
    if ((hclk >= 14200000U) && (hclk < 15000000U))
 80063b8:	4b27      	ldr	r3, [pc, #156]	@ (8006458 <USB_SetTurnaroundTime+0xa4>)
 80063ba:	4a28      	ldr	r2, [pc, #160]	@ (800645c <USB_SetTurnaroundTime+0xa8>)
 80063bc:	440b      	add	r3, r1
 80063be:	4293      	cmp	r3, r2
 80063c0:	d939      	bls.n	8006436 <USB_SetTurnaroundTime+0x82>
    else if ((hclk >= 15000000U) && (hclk < 16000000U))
 80063c2:	4b27      	ldr	r3, [pc, #156]	@ (8006460 <USB_SetTurnaroundTime+0xac>)
 80063c4:	4a27      	ldr	r2, [pc, #156]	@ (8006464 <USB_SetTurnaroundTime+0xb0>)
 80063c6:	440b      	add	r3, r1
 80063c8:	4293      	cmp	r3, r2
 80063ca:	d936      	bls.n	800643a <USB_SetTurnaroundTime+0x86>
    else if ((hclk >= 16000000U) && (hclk < 17200000U))
 80063cc:	4a26      	ldr	r2, [pc, #152]	@ (8006468 <USB_SetTurnaroundTime+0xb4>)
 80063ce:	f5a1 0374 	sub.w	r3, r1, #15990784	@ 0xf40000
 80063d2:	f5a3 5310 	sub.w	r3, r3, #9216	@ 0x2400
 80063d6:	4293      	cmp	r3, r2
 80063d8:	d931      	bls.n	800643e <USB_SetTurnaroundTime+0x8a>
    else if ((hclk >= 17200000U) && (hclk < 18500000U))
 80063da:	4a24      	ldr	r2, [pc, #144]	@ (800646c <USB_SetTurnaroundTime+0xb8>)
 80063dc:	f1a1 7383 	sub.w	r3, r1, #17170432	@ 0x1060000
 80063e0:	f5a3 43e7 	sub.w	r3, r3, #29568	@ 0x7380
 80063e4:	4293      	cmp	r3, r2
 80063e6:	d32c      	bcc.n	8006442 <USB_SetTurnaroundTime+0x8e>
    else if ((hclk >= 18500000U) && (hclk < 20000000U))
 80063e8:	4b21      	ldr	r3, [pc, #132]	@ (8006470 <USB_SetTurnaroundTime+0xbc>)
 80063ea:	4a22      	ldr	r2, [pc, #136]	@ (8006474 <USB_SetTurnaroundTime+0xc0>)
 80063ec:	440b      	add	r3, r1
 80063ee:	4293      	cmp	r3, r2
 80063f0:	d929      	bls.n	8006446 <USB_SetTurnaroundTime+0x92>
    else if ((hclk >= 20000000U) && (hclk < 21800000U))
 80063f2:	4b21      	ldr	r3, [pc, #132]	@ (8006478 <USB_SetTurnaroundTime+0xc4>)
 80063f4:	4a21      	ldr	r2, [pc, #132]	@ (800647c <USB_SetTurnaroundTime+0xc8>)
 80063f6:	440b      	add	r3, r1
 80063f8:	4293      	cmp	r3, r2
 80063fa:	d326      	bcc.n	800644a <USB_SetTurnaroundTime+0x96>
    else if ((hclk >= 21800000U) && (hclk < 24000000U))
 80063fc:	4b20      	ldr	r3, [pc, #128]	@ (8006480 <USB_SetTurnaroundTime+0xcc>)
 80063fe:	4a21      	ldr	r2, [pc, #132]	@ (8006484 <USB_SetTurnaroundTime+0xd0>)
 8006400:	440b      	add	r3, r1
 8006402:	4293      	cmp	r3, r2
 8006404:	d323      	bcc.n	800644e <USB_SetTurnaroundTime+0x9a>
    else if ((hclk >= 24000000U) && (hclk < 27700000U))
 8006406:	4a20      	ldr	r2, [pc, #128]	@ (8006488 <USB_SetTurnaroundTime+0xd4>)
 8006408:	f1a1 73b7 	sub.w	r3, r1, #23986176	@ 0x16e0000
 800640c:	f5a3 5358 	sub.w	r3, r3, #13824	@ 0x3600
 8006410:	4293      	cmp	r3, r2
 8006412:	d31e      	bcc.n	8006452 <USB_SetTurnaroundTime+0x9e>
    else if ((hclk >= 27700000U) && (hclk < 32000000U))
 8006414:	4b1d      	ldr	r3, [pc, #116]	@ (800648c <USB_SetTurnaroundTime+0xd8>)
      UsbTrd = 0x7U;
 8006416:	4a1e      	ldr	r2, [pc, #120]	@ (8006490 <USB_SetTurnaroundTime+0xdc>)
    else if ((hclk >= 27700000U) && (hclk < 32000000U))
 8006418:	440b      	add	r3, r1
      UsbTrd = 0x7U;
 800641a:	4293      	cmp	r3, r2
 800641c:	bf2c      	ite	cs
 800641e:	2306      	movcs	r3, #6
 8006420:	2307      	movcc	r3, #7
  USBx->GUSBCFG &= ~USB_OTG_GUSBCFG_TRDT;
 8006422:	68c2      	ldr	r2, [r0, #12]
 8006424:	f422 5270 	bic.w	r2, r2, #15360	@ 0x3c00
 8006428:	60c2      	str	r2, [r0, #12]
  USBx->GUSBCFG |= (uint32_t)((UsbTrd << 10) & USB_OTG_GUSBCFG_TRDT);
 800642a:	68c2      	ldr	r2, [r0, #12]
 800642c:	ea42 2383 	orr.w	r3, r2, r3, lsl #10
 8006430:	60c3      	str	r3, [r0, #12]
}
 8006432:	2000      	movs	r0, #0
 8006434:	4770      	bx	lr
      UsbTrd = 0xFU;
 8006436:	230f      	movs	r3, #15
 8006438:	e7f3      	b.n	8006422 <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xEU;
 800643a:	230e      	movs	r3, #14
 800643c:	e7f1      	b.n	8006422 <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xDU;
 800643e:	230d      	movs	r3, #13
 8006440:	e7ef      	b.n	8006422 <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xCU;
 8006442:	230c      	movs	r3, #12
 8006444:	e7ed      	b.n	8006422 <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xBU;
 8006446:	230b      	movs	r3, #11
 8006448:	e7eb      	b.n	8006422 <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0xAU;
 800644a:	230a      	movs	r3, #10
 800644c:	e7e9      	b.n	8006422 <USB_SetTurnaroundTime+0x6e>
    UsbTrd = USBD_HS_TRDT_VALUE;
 800644e:	2309      	movs	r3, #9
 8006450:	e7e7      	b.n	8006422 <USB_SetTurnaroundTime+0x6e>
      UsbTrd = 0x8U;
 8006452:	2308      	movs	r3, #8
 8006454:	e7e5      	b.n	8006422 <USB_SetTurnaroundTime+0x6e>
 8006456:	bf00      	nop
 8006458:	ff275340 	.word	0xff275340
 800645c:	000c34ff 	.word	0x000c34ff
 8006460:	ff1b1e40 	.word	0xff1b1e40
 8006464:	000f423f 	.word	0x000f423f
 8006468:	00124f7f 	.word	0x00124f7f
 800646c:	0013d620 	.word	0x0013d620
 8006470:	fee5b660 	.word	0xfee5b660
 8006474:	0016e35f 	.word	0x0016e35f
 8006478:	feced300 	.word	0xfeced300
 800647c:	001b7740 	.word	0x001b7740
 8006480:	feb35bc0 	.word	0xfeb35bc0
 8006484:	002191c0 	.word	0x002191c0
 8006488:	00387520 	.word	0x00387520
 800648c:	fe5954e0 	.word	0xfe5954e0
 8006490:	00419ce0 	.word	0x00419ce0

08006494 <USB_EnableGlobalInt>:
  USBx->GAHBCFG |= USB_OTG_GAHBCFG_GINT;
 8006494:	6883      	ldr	r3, [r0, #8]
 8006496:	f043 0301 	orr.w	r3, r3, #1
 800649a:	6083      	str	r3, [r0, #8]
}
 800649c:	2000      	movs	r0, #0
 800649e:	4770      	bx	lr

080064a0 <USB_DisableGlobalInt>:
  USBx->GAHBCFG &= ~USB_OTG_GAHBCFG_GINT;
 80064a0:	6883      	ldr	r3, [r0, #8]
 80064a2:	f023 0301 	bic.w	r3, r3, #1
 80064a6:	6083      	str	r3, [r0, #8]
}
 80064a8:	2000      	movs	r0, #0
 80064aa:	4770      	bx	lr

080064ac <USB_SetCurrentMode>:
{
 80064ac:	b538      	push	{r3, r4, r5, lr}
  USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_FHMOD | USB_OTG_GUSBCFG_FDMOD);
 80064ae:	68c3      	ldr	r3, [r0, #12]
  if (mode == USB_HOST_MODE)
 80064b0:	2901      	cmp	r1, #1
  USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_FHMOD | USB_OTG_GUSBCFG_FDMOD);
 80064b2:	f023 43c0 	bic.w	r3, r3, #1610612736	@ 0x60000000
{
 80064b6:	4605      	mov	r5, r0
 80064b8:	460c      	mov	r4, r1
  USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_FHMOD | USB_OTG_GUSBCFG_FDMOD);
 80064ba:	60c3      	str	r3, [r0, #12]
  if (mode == USB_HOST_MODE)
 80064bc:	d114      	bne.n	80064e8 <USB_SetCurrentMode+0x3c>
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_FHMOD;
 80064be:	68c3      	ldr	r3, [r0, #12]
 80064c0:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 80064c4:	60c3      	str	r3, [r0, #12]
  uint32_t ms = 0U;
 80064c6:	2400      	movs	r4, #0
      HAL_Delay(10U);
 80064c8:	200a      	movs	r0, #10
 80064ca:	f7fc ffd1 	bl	8003470 <HAL_Delay>
  return ((USBx->GINTSTS) & 0x1U);
 80064ce:	696b      	ldr	r3, [r5, #20]
    } while ((USB_GetMode(USBx) != (uint32_t)USB_HOST_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
 80064d0:	07d9      	lsls	r1, r3, #31
      ms += 10U;
 80064d2:	f104 040a 	add.w	r4, r4, #10
    } while ((USB_GetMode(USBx) != (uint32_t)USB_HOST_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
 80064d6:	d402      	bmi.n	80064de <USB_SetCurrentMode+0x32>
 80064d8:	2cc8      	cmp	r4, #200	@ 0xc8
 80064da:	d1f5      	bne.n	80064c8 <USB_SetCurrentMode+0x1c>
      ms += 10U;
 80064dc:	24c8      	movs	r4, #200	@ 0xc8
  if (ms == HAL_USB_CURRENT_MODE_MAX_DELAY_MS)
 80064de:	f1a4 03c8 	sub.w	r3, r4, #200	@ 0xc8
 80064e2:	4258      	negs	r0, r3
 80064e4:	4158      	adcs	r0, r3
}
 80064e6:	bd38      	pop	{r3, r4, r5, pc}
  else if (mode == USB_DEVICE_MODE)
 80064e8:	b971      	cbnz	r1, 8006508 <USB_SetCurrentMode+0x5c>
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_FDMOD;
 80064ea:	68c3      	ldr	r3, [r0, #12]
 80064ec:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 80064f0:	60c3      	str	r3, [r0, #12]
      HAL_Delay(10U);
 80064f2:	200a      	movs	r0, #10
 80064f4:	f7fc ffbc 	bl	8003470 <HAL_Delay>
  return ((USBx->GINTSTS) & 0x1U);
 80064f8:	696b      	ldr	r3, [r5, #20]
    } while ((USB_GetMode(USBx) != (uint32_t)USB_DEVICE_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
 80064fa:	07da      	lsls	r2, r3, #31
      ms += 10U;
 80064fc:	f104 040a 	add.w	r4, r4, #10
    } while ((USB_GetMode(USBx) != (uint32_t)USB_DEVICE_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
 8006500:	d5ed      	bpl.n	80064de <USB_SetCurrentMode+0x32>
 8006502:	2cc8      	cmp	r4, #200	@ 0xc8
 8006504:	d1f5      	bne.n	80064f2 <USB_SetCurrentMode+0x46>
 8006506:	e7e9      	b.n	80064dc <USB_SetCurrentMode+0x30>
    return HAL_ERROR;
 8006508:	2001      	movs	r0, #1
 800650a:	e7ec      	b.n	80064e6 <USB_SetCurrentMode+0x3a>

0800650c <USB_FlushTxFifo>:
{
 800650c:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
 800650e:	2300      	movs	r3, #0
{
 8006510:	4602      	mov	r2, r0
  __IO uint32_t count = 0U;
 8006512:	9301      	str	r3, [sp, #4]
    count++;
 8006514:	9b01      	ldr	r3, [sp, #4]
 8006516:	3301      	adds	r3, #1
 8006518:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
 800651a:	9b01      	ldr	r3, [sp, #4]
 800651c:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8006520:	d815      	bhi.n	800654e <USB_FlushTxFifo+0x42>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
 8006522:	6913      	ldr	r3, [r2, #16]
 8006524:	2b00      	cmp	r3, #0
 8006526:	daf5      	bge.n	8006514 <USB_FlushTxFifo+0x8>
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
 8006528:	0189      	lsls	r1, r1, #6
  count = 0U;
 800652a:	2300      	movs	r3, #0
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
 800652c:	f041 0120 	orr.w	r1, r1, #32
  count = 0U;
 8006530:	9301      	str	r3, [sp, #4]
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
 8006532:	6111      	str	r1, [r2, #16]
    count++;
 8006534:	9b01      	ldr	r3, [sp, #4]
 8006536:	3301      	adds	r3, #1
 8006538:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
 800653a:	9b01      	ldr	r3, [sp, #4]
 800653c:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8006540:	d805      	bhi.n	800654e <USB_FlushTxFifo+0x42>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_TXFFLSH) == USB_OTG_GRSTCTL_TXFFLSH);
 8006542:	6910      	ldr	r0, [r2, #16]
 8006544:	f010 0020 	ands.w	r0, r0, #32
 8006548:	d1f4      	bne.n	8006534 <USB_FlushTxFifo+0x28>
}
 800654a:	b002      	add	sp, #8
 800654c:	4770      	bx	lr
      return HAL_TIMEOUT;
 800654e:	2003      	movs	r0, #3
 8006550:	e7fb      	b.n	800654a <USB_FlushTxFifo+0x3e>

08006552 <USB_FlushRxFifo>:
{
 8006552:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
 8006554:	2300      	movs	r3, #0
{
 8006556:	4602      	mov	r2, r0
  __IO uint32_t count = 0U;
 8006558:	9301      	str	r3, [sp, #4]
    count++;
 800655a:	9b01      	ldr	r3, [sp, #4]
 800655c:	3301      	adds	r3, #1
 800655e:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
 8006560:	9b01      	ldr	r3, [sp, #4]
 8006562:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8006566:	d813      	bhi.n	8006590 <USB_FlushRxFifo+0x3e>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
 8006568:	6913      	ldr	r3, [r2, #16]
 800656a:	2b00      	cmp	r3, #0
 800656c:	daf5      	bge.n	800655a <USB_FlushRxFifo+0x8>
  count = 0U;
 800656e:	2300      	movs	r3, #0
 8006570:	9301      	str	r3, [sp, #4]
  USBx->GRSTCTL = USB_OTG_GRSTCTL_RXFFLSH;
 8006572:	2310      	movs	r3, #16
 8006574:	6113      	str	r3, [r2, #16]
    count++;
 8006576:	9b01      	ldr	r3, [sp, #4]
 8006578:	3301      	adds	r3, #1
 800657a:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
 800657c:	9b01      	ldr	r3, [sp, #4]
 800657e:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
 8006582:	d805      	bhi.n	8006590 <USB_FlushRxFifo+0x3e>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_RXFFLSH) == USB_OTG_GRSTCTL_RXFFLSH);
 8006584:	6910      	ldr	r0, [r2, #16]
 8006586:	f010 0010 	ands.w	r0, r0, #16
 800658a:	d1f4      	bne.n	8006576 <USB_FlushRxFifo+0x24>
}
 800658c:	b002      	add	sp, #8
 800658e:	4770      	bx	lr
      return HAL_TIMEOUT;
 8006590:	2003      	movs	r0, #3
 8006592:	e7fb      	b.n	800658c <USB_FlushRxFifo+0x3a>

08006594 <USB_SetDevSpeed>:
  USBx_DEVICE->DCFG |= speed;
 8006594:	f8d0 3800 	ldr.w	r3, [r0, #2048]	@ 0x800
 8006598:	4319      	orrs	r1, r3
 800659a:	f8c0 1800 	str.w	r1, [r0, #2048]	@ 0x800
}
 800659e:	2000      	movs	r0, #0
 80065a0:	4770      	bx	lr
	...

080065a4 <USB_DevInit>:
{
 80065a4:	b084      	sub	sp, #16
 80065a6:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80065aa:	4604      	mov	r4, r0
 80065ac:	a809      	add	r0, sp, #36	@ 0x24
 80065ae:	e880 000e 	stmia.w	r0, {r1, r2, r3}
  for (i = 0U; i < 15U; i++)
 80065b2:	2300      	movs	r3, #0
 80065b4:	f89d 6024 	ldrb.w	r6, [sp, #36]	@ 0x24
 80065b8:	f89d 502e 	ldrb.w	r5, [sp, #46]	@ 0x2e
    USBx->DIEPTXF[i] = 0U;
 80065bc:	4619      	mov	r1, r3
 80065be:	f103 0240 	add.w	r2, r3, #64	@ 0x40
 80065c2:	eb04 0282 	add.w	r2, r4, r2, lsl #2
  for (i = 0U; i < 15U; i++)
 80065c6:	3301      	adds	r3, #1
 80065c8:	2b0f      	cmp	r3, #15
    USBx->DIEPTXF[i] = 0U;
 80065ca:	6051      	str	r1, [r2, #4]
  for (i = 0U; i < 15U; i++)
 80065cc:	d1f7      	bne.n	80065be <USB_DevInit+0x1a>
    USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
 80065ce:	f504 6700 	add.w	r7, r4, #2048	@ 0x800
  if (cfg.vbus_sensing_enable == 0U)
 80065d2:	2d00      	cmp	r5, #0
 80065d4:	d16c      	bne.n	80066b0 <USB_DevInit+0x10c>
    USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
 80065d6:	687b      	ldr	r3, [r7, #4]
 80065d8:	f043 0302 	orr.w	r3, r3, #2
 80065dc:	607b      	str	r3, [r7, #4]
    USBx->GCCFG |= USB_OTG_GCCFG_NOVBUSSENS;
 80065de:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80065e0:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 80065e4:	63a3      	str	r3, [r4, #56]	@ 0x38
    USBx->GCCFG &= ~USB_OTG_GCCFG_VBUSBSEN;
 80065e6:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80065e8:	f423 2300 	bic.w	r3, r3, #524288	@ 0x80000
 80065ec:	63a3      	str	r3, [r4, #56]	@ 0x38
    USBx->GCCFG &= ~USB_OTG_GCCFG_VBUSASEN;
 80065ee:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80065f0:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
    USBx->GCCFG |= USB_OTG_GCCFG_VBUSBSEN;
 80065f4:	63a3      	str	r3, [r4, #56]	@ 0x38
  USBx_PCGCCTL = 0U;
 80065f6:	2300      	movs	r3, #0
 80065f8:	f8c4 3e00 	str.w	r3, [r4, #3584]	@ 0xe00
  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
 80065fc:	f89d 3029 	ldrb.w	r3, [sp, #41]	@ 0x29
 8006600:	2b01      	cmp	r3, #1
 8006602:	d15f      	bne.n	80066c4 <USB_DevInit+0x120>
    if (cfg.speed == USBD_HS_SPEED)
 8006604:	f89d 1027 	ldrb.w	r1, [sp, #39]	@ 0x27
 8006608:	2900      	cmp	r1, #0
 800660a:	d159      	bne.n	80066c0 <USB_DevInit+0x11c>
    (void)USB_SetDevSpeed(USBx, USB_OTG_SPEED_FULL);
 800660c:	4620      	mov	r0, r4
 800660e:	f7ff ffc1 	bl	8006594 <USB_SetDevSpeed>
  if (USB_FlushTxFifo(USBx, 0x10U) != HAL_OK) /* all Tx FIFOs */
 8006612:	2110      	movs	r1, #16
 8006614:	4620      	mov	r0, r4
 8006616:	f7ff ff79 	bl	800650c <USB_FlushTxFifo>
 800661a:	4601      	mov	r1, r0
  if (USB_FlushRxFifo(USBx) != HAL_OK)
 800661c:	4620      	mov	r0, r4
 800661e:	f7ff ff98 	bl	8006552 <USB_FlushRxFifo>
 8006622:	4308      	orrs	r0, r1
 8006624:	b2c0      	uxtb	r0, r0
  USBx_DEVICE->DIEPMSK = 0U;
 8006626:	2300      	movs	r3, #0
  if (USB_FlushRxFifo(USBx) != HAL_OK)
 8006628:	3800      	subs	r0, #0
  USBx_DEVICE->DIEPMSK = 0U;
 800662a:	613b      	str	r3, [r7, #16]
  if (USB_FlushRxFifo(USBx) != HAL_OK)
 800662c:	bf18      	it	ne
 800662e:	2001      	movne	r0, #1
  USBx_DEVICE->DOEPMSK = 0U;
 8006630:	617b      	str	r3, [r7, #20]
  USBx_DEVICE->DAINTMSK = 0U;
 8006632:	f504 6210 	add.w	r2, r4, #2304	@ 0x900
 8006636:	61fb      	str	r3, [r7, #28]
      USBx_INEP(i)->DIEPCTL = 0U;
 8006638:	4619      	mov	r1, r3
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_EPDIS | USB_OTG_DIEPCTL_SNAK;
 800663a:	f04f 4c90 	mov.w	ip, #1207959552	@ 0x48000000
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_SNAK;
 800663e:	f04f 6e00 	mov.w	lr, #134217728	@ 0x8000000
    USBx_INEP(i)->DIEPINT  = 0xFB7FU;
 8006642:	f64f 387f 	movw	r8, #64383	@ 0xfb7f
  for (i = 0U; i < cfg.dev_endpoints; i++)
 8006646:	429e      	cmp	r6, r3
 8006648:	d83e      	bhi.n	80066c8 <USB_DevInit+0x124>
  for (i = 0U; i < cfg.dev_endpoints; i++)
 800664a:	2200      	movs	r2, #0
 800664c:	f504 6330 	add.w	r3, r4, #2816	@ 0xb00
      USBx_OUTEP(i)->DOEPCTL = 0U;
 8006650:	4611      	mov	r1, r2
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_EPDIS | USB_OTG_DOEPCTL_SNAK;
 8006652:	f04f 4c90 	mov.w	ip, #1207959552	@ 0x48000000
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_SNAK;
 8006656:	f04f 6e00 	mov.w	lr, #134217728	@ 0x8000000
    USBx_OUTEP(i)->DOEPINT  = 0xFB7FU;
 800665a:	f64f 387f 	movw	r8, #64383	@ 0xfb7f
  for (i = 0U; i < cfg.dev_endpoints; i++)
 800665e:	4296      	cmp	r6, r2
 8006660:	d845      	bhi.n	80066ee <USB_DevInit+0x14a>
  USBx_DEVICE->DIEPMSK &= ~(USB_OTG_DIEPMSK_TXFURM);
 8006662:	693b      	ldr	r3, [r7, #16]
 8006664:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8006668:	613b      	str	r3, [r7, #16]
  USBx->GINTMSK = 0U;
 800666a:	2300      	movs	r3, #0
 800666c:	61a3      	str	r3, [r4, #24]
  USBx->GINTSTS = 0xBFFFFFFFU;
 800666e:	f06f 4380 	mvn.w	r3, #1073741824	@ 0x40000000
 8006672:	6163      	str	r3, [r4, #20]
  if (cfg.dma_enable == 0U)
 8006674:	f89d 3026 	ldrb.w	r3, [sp, #38]	@ 0x26
 8006678:	b91b      	cbnz	r3, 8006682 <USB_DevInit+0xde>
    USBx->GINTMSK |= USB_OTG_GINTMSK_RXFLVLM;
 800667a:	69a3      	ldr	r3, [r4, #24]
 800667c:	f043 0310 	orr.w	r3, r3, #16
 8006680:	61a3      	str	r3, [r4, #24]
  USBx->GINTMSK |= USB_OTG_GINTMSK_USBSUSPM | USB_OTG_GINTMSK_USBRST |
 8006682:	69a2      	ldr	r2, [r4, #24]
 8006684:	4b23      	ldr	r3, [pc, #140]	@ (8006714 <USB_DevInit+0x170>)
 8006686:	4313      	orrs	r3, r2
 8006688:	61a3      	str	r3, [r4, #24]
  if (cfg.Sof_enable != 0U)
 800668a:	f89d 302a 	ldrb.w	r3, [sp, #42]	@ 0x2a
 800668e:	b11b      	cbz	r3, 8006698 <USB_DevInit+0xf4>
    USBx->GINTMSK |= USB_OTG_GINTMSK_SOFM;
 8006690:	69a3      	ldr	r3, [r4, #24]
 8006692:	f043 0308 	orr.w	r3, r3, #8
 8006696:	61a3      	str	r3, [r4, #24]
  if (cfg.vbus_sensing_enable == 1U)
 8006698:	2d01      	cmp	r5, #1
    USBx->GINTMSK |= (USB_OTG_GINTMSK_SRQIM | USB_OTG_GINTMSK_OTGINT);
 800669a:	bf01      	itttt	eq
 800669c:	69a3      	ldreq	r3, [r4, #24]
 800669e:	f043 4380 	orreq.w	r3, r3, #1073741824	@ 0x40000000
 80066a2:	f043 0304 	orreq.w	r3, r3, #4
 80066a6:	61a3      	streq	r3, [r4, #24]
}
 80066a8:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80066ac:	b004      	add	sp, #16
 80066ae:	4770      	bx	lr
    USBx->GCCFG &= ~USB_OTG_GCCFG_NOVBUSSENS;
 80066b0:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80066b2:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 80066b6:	63a3      	str	r3, [r4, #56]	@ 0x38
    USBx->GCCFG |= USB_OTG_GCCFG_VBUSBSEN;
 80066b8:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 80066ba:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 80066be:	e799      	b.n	80065f4 <USB_DevInit+0x50>
      (void)USB_SetDevSpeed(USBx, USB_OTG_SPEED_HIGH_IN_FULL);
 80066c0:	4619      	mov	r1, r3
 80066c2:	e7a3      	b.n	800660c <USB_DevInit+0x68>
    (void)USB_SetDevSpeed(USBx, USB_OTG_SPEED_FULL);
 80066c4:	2103      	movs	r1, #3
 80066c6:	e7a1      	b.n	800660c <USB_DevInit+0x68>
    if ((USBx_INEP(i)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 80066c8:	f8d2 9000 	ldr.w	r9, [r2]
 80066cc:	f1b9 0f00 	cmp.w	r9, #0
 80066d0:	da0b      	bge.n	80066ea <USB_DevInit+0x146>
      if (i == 0U)
 80066d2:	b93b      	cbnz	r3, 80066e4 <USB_DevInit+0x140>
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_SNAK;
 80066d4:	f8c2 e000 	str.w	lr, [r2]
    USBx_INEP(i)->DIEPTSIZ = 0U;
 80066d8:	6111      	str	r1, [r2, #16]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 80066da:	3301      	adds	r3, #1
    USBx_INEP(i)->DIEPINT  = 0xFB7FU;
 80066dc:	f8c2 8008 	str.w	r8, [r2, #8]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 80066e0:	3220      	adds	r2, #32
 80066e2:	e7b0      	b.n	8006646 <USB_DevInit+0xa2>
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_EPDIS | USB_OTG_DIEPCTL_SNAK;
 80066e4:	f8c2 c000 	str.w	ip, [r2]
 80066e8:	e7f6      	b.n	80066d8 <USB_DevInit+0x134>
      USBx_INEP(i)->DIEPCTL = 0U;
 80066ea:	6011      	str	r1, [r2, #0]
 80066ec:	e7f4      	b.n	80066d8 <USB_DevInit+0x134>
    if ((USBx_OUTEP(i)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 80066ee:	f8d3 9000 	ldr.w	r9, [r3]
 80066f2:	f1b9 0f00 	cmp.w	r9, #0
 80066f6:	da0b      	bge.n	8006710 <USB_DevInit+0x16c>
      if (i == 0U)
 80066f8:	b93a      	cbnz	r2, 800670a <USB_DevInit+0x166>
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_SNAK;
 80066fa:	f8c3 e000 	str.w	lr, [r3]
    USBx_OUTEP(i)->DOEPTSIZ = 0U;
 80066fe:	6119      	str	r1, [r3, #16]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 8006700:	3201      	adds	r2, #1
    USBx_OUTEP(i)->DOEPINT  = 0xFB7FU;
 8006702:	f8c3 8008 	str.w	r8, [r3, #8]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 8006706:	3320      	adds	r3, #32
 8006708:	e7a9      	b.n	800665e <USB_DevInit+0xba>
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_EPDIS | USB_OTG_DOEPCTL_SNAK;
 800670a:	f8c3 c000 	str.w	ip, [r3]
 800670e:	e7f6      	b.n	80066fe <USB_DevInit+0x15a>
      USBx_OUTEP(i)->DOEPCTL = 0U;
 8006710:	6019      	str	r1, [r3, #0]
 8006712:	e7f4      	b.n	80066fe <USB_DevInit+0x15a>
 8006714:	803c3800 	.word	0x803c3800

08006718 <USB_GetDevSpeed>:
  uint32_t DevEnumSpeed = USBx_DEVICE->DSTS & USB_OTG_DSTS_ENUMSPD;
 8006718:	f8d0 3808 	ldr.w	r3, [r0, #2056]	@ 0x808
  if (DevEnumSpeed == DSTS_ENUMSPD_HS_PHY_30MHZ_OR_60MHZ)
 800671c:	f013 0006 	ands.w	r0, r3, #6
 8006720:	d004      	beq.n	800672c <USB_GetDevSpeed+0x14>
    speed = 0xFU;
 8006722:	f013 0f02 	tst.w	r3, #2
 8006726:	bf14      	ite	ne
 8006728:	2002      	movne	r0, #2
 800672a:	200f      	moveq	r0, #15
}
 800672c:	4770      	bx	lr

0800672e <USB_ActivateEndpoint>:
{
 800672e:	b530      	push	{r4, r5, lr}
  uint32_t epnum = (uint32_t)ep->num;
 8006730:	780c      	ldrb	r4, [r1, #0]
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK));
 8006732:	2201      	movs	r2, #1
 8006734:	f004 050f 	and.w	r5, r4, #15
 8006738:	40aa      	lsls	r2, r5
  if (ep->is_in == 1U)
 800673a:	784d      	ldrb	r5, [r1, #1]
 800673c:	2d01      	cmp	r5, #1
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK));
 800673e:	f500 6300 	add.w	r3, r0, #2048	@ 0x800
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_USBAEP) == 0U)
 8006742:	eb00 1044 	add.w	r0, r0, r4, lsl #5
  if (ep->is_in == 1U)
 8006746:	d119      	bne.n	800677c <USB_ActivateEndpoint+0x4e>
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK));
 8006748:	69dd      	ldr	r5, [r3, #28]
 800674a:	432a      	orrs	r2, r5
 800674c:	61da      	str	r2, [r3, #28]
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_USBAEP) == 0U)
 800674e:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
 8006752:	041a      	lsls	r2, r3, #16
 8006754:	d410      	bmi.n	8006778 <USB_ActivateEndpoint+0x4a>
      USBx_INEP(epnum)->DIEPCTL |= (ep->maxpacket & USB_OTG_DIEPCTL_MPSIZ) |
 8006756:	688a      	ldr	r2, [r1, #8]
 8006758:	f8d0 5900 	ldr.w	r5, [r0, #2304]	@ 0x900
 800675c:	f3c2 030a 	ubfx	r3, r2, #0, #11
                                   ((uint32_t)ep->type << 18) | (epnum << 22) |
 8006760:	790a      	ldrb	r2, [r1, #4]
      USBx_INEP(epnum)->DIEPCTL |= (ep->maxpacket & USB_OTG_DIEPCTL_MPSIZ) |
 8006762:	432b      	orrs	r3, r5
 8006764:	ea43 4382 	orr.w	r3, r3, r2, lsl #18
 8006768:	ea43 5384 	orr.w	r3, r3, r4, lsl #22
 800676c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8006770:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8006774:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
}
 8006778:	2000      	movs	r0, #0
 800677a:	bd30      	pop	{r4, r5, pc}
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16);
 800677c:	69dc      	ldr	r4, [r3, #28]
 800677e:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
 8006782:	61da      	str	r2, [r3, #28]
    if (((USBx_OUTEP(epnum)->DOEPCTL) & USB_OTG_DOEPCTL_USBAEP) == 0U)
 8006784:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	@ 0xb00
 8006788:	041b      	lsls	r3, r3, #16
 800678a:	d4f5      	bmi.n	8006778 <USB_ActivateEndpoint+0x4a>
      USBx_OUTEP(epnum)->DOEPCTL |= (ep->maxpacket & USB_OTG_DOEPCTL_MPSIZ) |
 800678c:	688b      	ldr	r3, [r1, #8]
 800678e:	f8d0 2b00 	ldr.w	r2, [r0, #2816]	@ 0xb00
 8006792:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8006796:	4313      	orrs	r3, r2
                                    ((uint32_t)ep->type << 18) |
 8006798:	790a      	ldrb	r2, [r1, #4]
      USBx_OUTEP(epnum)->DOEPCTL |= (ep->maxpacket & USB_OTG_DOEPCTL_MPSIZ) |
 800679a:	ea43 4382 	orr.w	r3, r3, r2, lsl #18
 800679e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80067a2:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80067a6:	f8c0 3b00 	str.w	r3, [r0, #2816]	@ 0xb00
 80067aa:	e7e5      	b.n	8006778 <USB_ActivateEndpoint+0x4a>

080067ac <USB_DeactivateEndpoint>:
{
 80067ac:	b510      	push	{r4, lr}
  uint32_t epnum = (uint32_t)ep->num;
 80067ae:	780a      	ldrb	r2, [r1, #0]
  if (ep->is_in == 1U)
 80067b0:	7849      	ldrb	r1, [r1, #1]
 80067b2:	2901      	cmp	r1, #1
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 80067b4:	eb00 1342 	add.w	r3, r0, r2, lsl #5
 80067b8:	f500 6000 	add.w	r0, r0, #2048	@ 0x800
 80067bc:	f002 020f 	and.w	r2, r2, #15
  if (ep->is_in == 1U)
 80067c0:	d122      	bne.n	8006808 <USB_DeactivateEndpoint+0x5c>
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 80067c2:	f8d3 1900 	ldr.w	r1, [r3, #2304]	@ 0x900
 80067c6:	2900      	cmp	r1, #0
 80067c8:	da0b      	bge.n	80067e2 <USB_DeactivateEndpoint+0x36>
      USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SNAK;
 80067ca:	f8d3 1900 	ldr.w	r1, [r3, #2304]	@ 0x900
 80067ce:	f041 6100 	orr.w	r1, r1, #134217728	@ 0x8000000
 80067d2:	f8c3 1900 	str.w	r1, [r3, #2304]	@ 0x900
      USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_EPDIS;
 80067d6:	f8d3 1900 	ldr.w	r1, [r3, #2304]	@ 0x900
 80067da:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 80067de:	f8c3 1900 	str.w	r1, [r3, #2304]	@ 0x900
    USBx_DEVICE->DEACHMSK &= ~(USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK)));
 80067e2:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
 80067e4:	2101      	movs	r1, #1
 80067e6:	fa01 f202 	lsl.w	r2, r1, r2
 80067ea:	ea24 0402 	bic.w	r4, r4, r2
 80067ee:	63c4      	str	r4, [r0, #60]	@ 0x3c
    USBx_DEVICE->DAINTMSK &= ~(USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK)));
 80067f0:	69c1      	ldr	r1, [r0, #28]
 80067f2:	ea21 0202 	bic.w	r2, r1, r2
 80067f6:	61c2      	str	r2, [r0, #28]
    USBx_INEP(epnum)->DIEPCTL &= ~(USB_OTG_DIEPCTL_USBAEP |
 80067f8:	f8d3 1900 	ldr.w	r1, [r3, #2304]	@ 0x900
 80067fc:	4a14      	ldr	r2, [pc, #80]	@ (8006850 <USB_DeactivateEndpoint+0xa4>)
 80067fe:	400a      	ands	r2, r1
 8006800:	f8c3 2900 	str.w	r2, [r3, #2304]	@ 0x900
}
 8006804:	2000      	movs	r0, #0
 8006806:	bd10      	pop	{r4, pc}
    if ((USBx_OUTEP(epnum)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 8006808:	f8d3 1b00 	ldr.w	r1, [r3, #2816]	@ 0xb00
 800680c:	2900      	cmp	r1, #0
 800680e:	da0b      	bge.n	8006828 <USB_DeactivateEndpoint+0x7c>
      USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SNAK;
 8006810:	f8d3 1b00 	ldr.w	r1, [r3, #2816]	@ 0xb00
 8006814:	f041 6100 	orr.w	r1, r1, #134217728	@ 0x8000000
 8006818:	f8c3 1b00 	str.w	r1, [r3, #2816]	@ 0xb00
      USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_EPDIS;
 800681c:	f8d3 1b00 	ldr.w	r1, [r3, #2816]	@ 0xb00
 8006820:	f041 4180 	orr.w	r1, r1, #1073741824	@ 0x40000000
 8006824:	f8c3 1b00 	str.w	r1, [r3, #2816]	@ 0xb00
    USBx_DEVICE->DEACHMSK &= ~(USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16));
 8006828:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
 800682a:	f44f 3180 	mov.w	r1, #65536	@ 0x10000
 800682e:	fa01 f202 	lsl.w	r2, r1, r2
 8006832:	ea24 0402 	bic.w	r4, r4, r2
 8006836:	63c4      	str	r4, [r0, #60]	@ 0x3c
    USBx_DEVICE->DAINTMSK &= ~(USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16));
 8006838:	69c1      	ldr	r1, [r0, #28]
 800683a:	ea21 0202 	bic.w	r2, r1, r2
 800683e:	61c2      	str	r2, [r0, #28]
    USBx_OUTEP(epnum)->DOEPCTL &= ~(USB_OTG_DOEPCTL_USBAEP |
 8006840:	f8d3 1b00 	ldr.w	r1, [r3, #2816]	@ 0xb00
 8006844:	4a03      	ldr	r2, [pc, #12]	@ (8006854 <USB_DeactivateEndpoint+0xa8>)
 8006846:	400a      	ands	r2, r1
 8006848:	f8c3 2b00 	str.w	r2, [r3, #2816]	@ 0xb00
 800684c:	e7da      	b.n	8006804 <USB_DeactivateEndpoint+0x58>
 800684e:	bf00      	nop
 8006850:	ec337800 	.word	0xec337800
 8006854:	eff37800 	.word	0xeff37800

08006858 <USB_EPStopXfer>:
{
 8006858:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
 800685a:	2300      	movs	r3, #0
  if (ep->is_in == 1U)
 800685c:	784a      	ldrb	r2, [r1, #1]
  __IO uint32_t count = 0U;
 800685e:	9301      	str	r3, [sp, #4]
    if (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 8006860:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
 8006862:	2a01      	cmp	r2, #1
    if (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 8006864:	ea4f 1343 	mov.w	r3, r3, lsl #5
  if (ep->is_in == 1U)
 8006868:	d11e      	bne.n	80068a8 <USB_EPStopXfer+0x50>
    if (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 800686a:	f500 6010 	add.w	r0, r0, #2304	@ 0x900
 800686e:	18c1      	adds	r1, r0, r3
 8006870:	58c2      	ldr	r2, [r0, r3]
 8006872:	2a00      	cmp	r2, #0
 8006874:	db02      	blt.n	800687c <USB_EPStopXfer+0x24>
  HAL_StatusTypeDef ret = HAL_OK;
 8006876:	2000      	movs	r0, #0
}
 8006878:	b002      	add	sp, #8
 800687a:	4770      	bx	lr
      USBx_INEP(ep->num)->DIEPCTL |= (USB_OTG_DIEPCTL_SNAK);
 800687c:	58c2      	ldr	r2, [r0, r3]
 800687e:	f042 6200 	orr.w	r2, r2, #134217728	@ 0x8000000
 8006882:	50c2      	str	r2, [r0, r3]
      USBx_INEP(ep->num)->DIEPCTL |= (USB_OTG_DIEPCTL_EPDIS);
 8006884:	58c2      	ldr	r2, [r0, r3]
 8006886:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 800688a:	50c2      	str	r2, [r0, r3]
        if (count > 10000U)
 800688c:	f242 7210 	movw	r2, #10000	@ 0x2710
        count++;
 8006890:	9b01      	ldr	r3, [sp, #4]
 8006892:	3301      	adds	r3, #1
 8006894:	9301      	str	r3, [sp, #4]
        if (count > 10000U)
 8006896:	9b01      	ldr	r3, [sp, #4]
 8006898:	4293      	cmp	r3, r2
 800689a:	d901      	bls.n	80068a0 <USB_EPStopXfer+0x48>
          ret = HAL_ERROR;
 800689c:	2001      	movs	r0, #1
 800689e:	e7eb      	b.n	8006878 <USB_EPStopXfer+0x20>
      } while (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) ==  USB_OTG_DIEPCTL_EPENA);
 80068a0:	680b      	ldr	r3, [r1, #0]
 80068a2:	2b00      	cmp	r3, #0
 80068a4:	dbf4      	blt.n	8006890 <USB_EPStopXfer+0x38>
 80068a6:	e7e6      	b.n	8006876 <USB_EPStopXfer+0x1e>
    if (((USBx_OUTEP(ep->num)->DOEPCTL) & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 80068a8:	f500 6030 	add.w	r0, r0, #2816	@ 0xb00
 80068ac:	18c1      	adds	r1, r0, r3
 80068ae:	58c2      	ldr	r2, [r0, r3]
 80068b0:	2a00      	cmp	r2, #0
 80068b2:	dae0      	bge.n	8006876 <USB_EPStopXfer+0x1e>
      USBx_OUTEP(ep->num)->DOEPCTL |= (USB_OTG_DOEPCTL_SNAK);
 80068b4:	58c2      	ldr	r2, [r0, r3]
 80068b6:	f042 6200 	orr.w	r2, r2, #134217728	@ 0x8000000
 80068ba:	50c2      	str	r2, [r0, r3]
      USBx_OUTEP(ep->num)->DOEPCTL |= (USB_OTG_DOEPCTL_EPDIS);
 80068bc:	58c2      	ldr	r2, [r0, r3]
 80068be:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 80068c2:	50c2      	str	r2, [r0, r3]
        if (count > 10000U)
 80068c4:	f242 7210 	movw	r2, #10000	@ 0x2710
        count++;
 80068c8:	9b01      	ldr	r3, [sp, #4]
 80068ca:	3301      	adds	r3, #1
 80068cc:	9301      	str	r3, [sp, #4]
        if (count > 10000U)
 80068ce:	9b01      	ldr	r3, [sp, #4]
 80068d0:	4293      	cmp	r3, r2
 80068d2:	d8e3      	bhi.n	800689c <USB_EPStopXfer+0x44>
      } while (((USBx_OUTEP(ep->num)->DOEPCTL) & USB_OTG_DOEPCTL_EPENA) ==  USB_OTG_DOEPCTL_EPENA);
 80068d4:	680b      	ldr	r3, [r1, #0]
 80068d6:	2b00      	cmp	r3, #0
 80068d8:	dbf6      	blt.n	80068c8 <USB_EPStopXfer+0x70>
 80068da:	e7cc      	b.n	8006876 <USB_EPStopXfer+0x1e>

080068dc <USB_WritePacket>:
{
 80068dc:	b510      	push	{r4, lr}
 80068de:	f89d 4008 	ldrb.w	r4, [sp, #8]
  if (dma == 0U)
 80068e2:	b944      	cbnz	r4, 80068f6 <USB_WritePacket+0x1a>
    count32b = ((uint32_t)len + 3U) / 4U;
 80068e4:	3303      	adds	r3, #3
      USBx_DFIFO((uint32_t)ch_ep_num) = __UNALIGNED_UINT32_READ(pSrc);
 80068e6:	3201      	adds	r2, #1
    count32b = ((uint32_t)len + 3U) / 4U;
 80068e8:	089b      	lsrs	r3, r3, #2
      USBx_DFIFO((uint32_t)ch_ep_num) = __UNALIGNED_UINT32_READ(pSrc);
 80068ea:	eb00 3002 	add.w	r0, r0, r2, lsl #12
 80068ee:	eb01 0383 	add.w	r3, r1, r3, lsl #2
    for (i = 0U; i < count32b; i++)
 80068f2:	4299      	cmp	r1, r3
 80068f4:	d101      	bne.n	80068fa <USB_WritePacket+0x1e>
}
 80068f6:	2000      	movs	r0, #0
 80068f8:	bd10      	pop	{r4, pc}
      USBx_DFIFO((uint32_t)ch_ep_num) = __UNALIGNED_UINT32_READ(pSrc);
 80068fa:	f851 2b04 	ldr.w	r2, [r1], #4
 80068fe:	6002      	str	r2, [r0, #0]
    for (i = 0U; i < count32b; i++)
 8006900:	e7f7      	b.n	80068f2 <USB_WritePacket+0x16>
	...

08006904 <USB_EPStartXfer>:
{
 8006904:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  if (ep->is_in == 1U)
 8006908:	784b      	ldrb	r3, [r1, #1]
    if (ep->xfer_len == 0U)
 800690a:	690c      	ldr	r4, [r1, #16]
        if (ep->type == EP_TYPE_ISOC)
 800690c:	790f      	ldrb	r7, [r1, #4]
 800690e:	f8df e1f0 	ldr.w	lr, [pc, #496]	@ 8006b00 <USB_EPStartXfer+0x1fc>
 8006912:	f8df 81f0 	ldr.w	r8, [pc, #496]	@ 8006b04 <USB_EPStartXfer+0x200>
{
 8006916:	4616      	mov	r6, r2
  uint32_t epnum = (uint32_t)ep->num;
 8006918:	780a      	ldrb	r2, [r1, #0]
  if (ep->is_in == 1U)
 800691a:	2b01      	cmp	r3, #1
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 800691c:	eb00 1542 	add.w	r5, r0, r2, lsl #5
  if (ep->is_in == 1U)
 8006920:	f040 8097 	bne.w	8006a52 <USB_EPStartXfer+0x14e>
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 8006924:	f505 6c10 	add.w	ip, r5, #2304	@ 0x900
 8006928:	f8dc 3010 	ldr.w	r3, [ip, #16]
    if (ep->xfer_len == 0U)
 800692c:	bb74      	cbnz	r4, 800698c <USB_EPStartXfer+0x88>
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 800692e:	ea03 030e 	and.w	r3, r3, lr
 8006932:	f8cc 3010 	str.w	r3, [ip, #16]
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (1U << 19));
 8006936:	f8dc 3010 	ldr.w	r3, [ip, #16]
 800693a:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 800693e:	f8cc 3010 	str.w	r3, [ip, #16]
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
 8006942:	f8dc 3010 	ldr.w	r3, [ip, #16]
 8006946:	ea03 0308 	and.w	r3, r3, r8
    if (dma == 1U)
 800694a:	2e01      	cmp	r6, #1
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_XFRSIZ & ep->xfer_len);
 800694c:	f8cc 3010 	str.w	r3, [ip, #16]
    if (dma == 1U)
 8006950:	d157      	bne.n	8006a02 <USB_EPStartXfer+0xfe>
      if ((uint32_t)ep->dma_addr != 0U)
 8006952:	69cb      	ldr	r3, [r1, #28]
 8006954:	b10b      	cbz	r3, 800695a <USB_EPStartXfer+0x56>
        USBx_INEP(epnum)->DIEPDMA = (uint32_t)(ep->dma_addr);
 8006956:	f8cc 3014 	str.w	r3, [ip, #20]
      if (ep->type == EP_TYPE_ISOC)
 800695a:	2f01      	cmp	r7, #1
 800695c:	d10c      	bne.n	8006978 <USB_EPStartXfer+0x74>
        if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
 800695e:	f8d0 3808 	ldr.w	r3, [r0, #2056]	@ 0x808
 8006962:	f413 7f80 	tst.w	r3, #256	@ 0x100
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SODDFRM;
 8006966:	f8d5 3900 	ldr.w	r3, [r5, #2304]	@ 0x900
 800696a:	bf0c      	ite	eq
 800696c:	f043 5300 	orreq.w	r3, r3, #536870912	@ 0x20000000
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM;
 8006970:	f043 5380 	orrne.w	r3, r3, #268435456	@ 0x10000000
 8006974:	f8c5 3900 	str.w	r3, [r5, #2304]	@ 0x900
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
 8006978:	f8d5 3900 	ldr.w	r3, [r5, #2304]	@ 0x900
 800697c:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 8006980:	f8c5 3900 	str.w	r3, [r5, #2304]	@ 0x900
}
 8006984:	2000      	movs	r0, #0
 8006986:	b002      	add	sp, #8
 8006988:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
 800698c:	ea03 0308 	and.w	r3, r3, r8
 8006990:	f8cc 3010 	str.w	r3, [ip, #16]
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
 8006994:	f8dc 3010 	ldr.w	r3, [ip, #16]
 8006998:	ea03 030e 	and.w	r3, r3, lr
 800699c:	f8cc 3010 	str.w	r3, [ip, #16]
        if (ep->xfer_len > ep->maxpacket)
 80069a0:	688b      	ldr	r3, [r1, #8]
      if (epnum == 0U)
 80069a2:	b97a      	cbnz	r2, 80069c4 <USB_EPStartXfer+0xc0>
        if (ep->xfer_len > ep->maxpacket)
 80069a4:	42a3      	cmp	r3, r4
          ep->xfer_len = ep->maxpacket;
 80069a6:	bf38      	it	cc
 80069a8:	610b      	strcc	r3, [r1, #16]
        USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (1U << 19));
 80069aa:	f8dc 3010 	ldr.w	r3, [ip, #16]
 80069ae:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
          USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_MULCNT & (pktcnt << 29));
 80069b2:	f8cc 3010 	str.w	r3, [ip, #16]
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_XFRSIZ & ep->xfer_len);
 80069b6:	690b      	ldr	r3, [r1, #16]
 80069b8:	f8dc 4010 	ldr.w	r4, [ip, #16]
 80069bc:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80069c0:	4323      	orrs	r3, r4
 80069c2:	e7c2      	b.n	800694a <USB_EPStartXfer+0x46>
        pktcnt = (uint16_t)((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket);
 80069c4:	441c      	add	r4, r3
 80069c6:	3c01      	subs	r4, #1
 80069c8:	fbb4 f4f3 	udiv	r4, r4, r3
        USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (pktcnt << 19));
 80069cc:	4b4b      	ldr	r3, [pc, #300]	@ (8006afc <USB_EPStartXfer+0x1f8>)
 80069ce:	f8dc e010 	ldr.w	lr, [ip, #16]
 80069d2:	fa1f f884 	uxth.w	r8, r4
 80069d6:	ea03 44c4 	and.w	r4, r3, r4, lsl #19
 80069da:	ea44 040e 	orr.w	r4, r4, lr
        if (ep->type == EP_TYPE_ISOC)
 80069de:	2f01      	cmp	r7, #1
        USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (pktcnt << 19));
 80069e0:	f8cc 4010 	str.w	r4, [ip, #16]
        if (ep->type == EP_TYPE_ISOC)
 80069e4:	d1e7      	bne.n	80069b6 <USB_EPStartXfer+0xb2>
          USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_MULCNT);
 80069e6:	f8dc 3010 	ldr.w	r3, [ip, #16]
 80069ea:	f023 43c0 	bic.w	r3, r3, #1610612736	@ 0x60000000
 80069ee:	f8cc 3010 	str.w	r3, [ip, #16]
          USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_MULCNT & (pktcnt << 29));
 80069f2:	f8dc 4010 	ldr.w	r4, [ip, #16]
 80069f6:	ea4f 7348 	mov.w	r3, r8, lsl #29
 80069fa:	f003 43c0 	and.w	r3, r3, #1610612736	@ 0x60000000
 80069fe:	4323      	orrs	r3, r4
 8006a00:	e7d7      	b.n	80069b2 <USB_EPStartXfer+0xae>
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
 8006a02:	f8d5 3900 	ldr.w	r3, [r5, #2304]	@ 0x900
      if (ep->type != EP_TYPE_ISOC)
 8006a06:	2f01      	cmp	r7, #1
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
 8006a08:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 8006a0c:	f8c5 3900 	str.w	r3, [r5, #2304]	@ 0x900
        if (ep->xfer_len > 0U)
 8006a10:	690b      	ldr	r3, [r1, #16]
      if (ep->type != EP_TYPE_ISOC)
 8006a12:	d00b      	beq.n	8006a2c <USB_EPStartXfer+0x128>
        if (ep->xfer_len > 0U)
 8006a14:	2b00      	cmp	r3, #0
 8006a16:	d0b5      	beq.n	8006984 <USB_EPStartXfer+0x80>
          USBx_DEVICE->DIEPEMPMSK |= 1UL << (ep->num & EP_ADDR_MSK);
 8006a18:	f8d0 1834 	ldr.w	r1, [r0, #2100]	@ 0x834
 8006a1c:	f002 020f 	and.w	r2, r2, #15
 8006a20:	2301      	movs	r3, #1
 8006a22:	4093      	lsls	r3, r2
 8006a24:	430b      	orrs	r3, r1
 8006a26:	f8c0 3834 	str.w	r3, [r0, #2100]	@ 0x834
 8006a2a:	e7ab      	b.n	8006984 <USB_EPStartXfer+0x80>
        if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
 8006a2c:	f8d0 4808 	ldr.w	r4, [r0, #2056]	@ 0x808
 8006a30:	f414 7f80 	tst.w	r4, #256	@ 0x100
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SODDFRM;
 8006a34:	f8d5 4900 	ldr.w	r4, [r5, #2304]	@ 0x900
 8006a38:	bf0c      	ite	eq
 8006a3a:	f044 5400 	orreq.w	r4, r4, #536870912	@ 0x20000000
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM;
 8006a3e:	f044 5480 	orrne.w	r4, r4, #268435456	@ 0x10000000
 8006a42:	f8c5 4900 	str.w	r4, [r5, #2304]	@ 0x900
        (void)USB_WritePacket(USBx, ep->xfer_buff, ep->num, (uint16_t)ep->xfer_len, dma);
 8006a46:	9600      	str	r6, [sp, #0]
 8006a48:	68c9      	ldr	r1, [r1, #12]
 8006a4a:	b29b      	uxth	r3, r3
 8006a4c:	f7ff ff46 	bl	80068dc <USB_WritePacket>
 8006a50:	e798      	b.n	8006984 <USB_EPStartXfer+0x80>
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_XFRSIZ);
 8006a52:	f8d5 3b10 	ldr.w	r3, [r5, #2832]	@ 0xb10
 8006a56:	ea03 0308 	and.w	r3, r3, r8
 8006a5a:	f8c5 3b10 	str.w	r3, [r5, #2832]	@ 0xb10
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_PKTCNT);
 8006a5e:	f8d5 3b10 	ldr.w	r3, [r5, #2832]	@ 0xb10
 8006a62:	ea03 030e 	and.w	r3, r3, lr
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_XFRSIZ);
 8006a66:	f505 6c30 	add.w	ip, r5, #2816	@ 0xb00
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_PKTCNT);
 8006a6a:	f8cc 3010 	str.w	r3, [ip, #16]
        ep->xfer_len = ep->maxpacket;
 8006a6e:	688b      	ldr	r3, [r1, #8]
    if (epnum == 0U)
 8006a70:	bb5a      	cbnz	r2, 8006aca <USB_EPStartXfer+0x1c6>
      if (ep->xfer_len > 0U)
 8006a72:	b104      	cbz	r4, 8006a76 <USB_EPStartXfer+0x172>
        ep->xfer_len = ep->maxpacket;
 8006a74:	610b      	str	r3, [r1, #16]
      ep->xfer_size = ep->maxpacket;
 8006a76:	620b      	str	r3, [r1, #32]
        USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_XFRSIZ & ep->maxpacket);
 8006a78:	f8dc 2010 	ldr.w	r2, [ip, #16]
 8006a7c:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8006a80:	4313      	orrs	r3, r2
 8006a82:	f8cc 3010 	str.w	r3, [ip, #16]
        USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_PKTCNT & (1U << 19));
 8006a86:	f8dc 3010 	ldr.w	r3, [ip, #16]
 8006a8a:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
    if (dma == 1U)
 8006a8e:	2e01      	cmp	r6, #1
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_XFRSIZ & ep->xfer_size;
 8006a90:	f8cc 3010 	str.w	r3, [ip, #16]
    if (dma == 1U)
 8006a94:	d103      	bne.n	8006a9e <USB_EPStartXfer+0x19a>
      if ((uint32_t)ep->xfer_buff != 0U)
 8006a96:	68cb      	ldr	r3, [r1, #12]
 8006a98:	b10b      	cbz	r3, 8006a9e <USB_EPStartXfer+0x19a>
        USBx_OUTEP(epnum)->DOEPDMA = (uint32_t)(ep->xfer_buff);
 8006a9a:	f8cc 3014 	str.w	r3, [ip, #20]
    if (ep->type == EP_TYPE_ISOC)
 8006a9e:	2f01      	cmp	r7, #1
 8006aa0:	d10c      	bne.n	8006abc <USB_EPStartXfer+0x1b8>
      if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
 8006aa2:	f8d0 3808 	ldr.w	r3, [r0, #2056]	@ 0x808
 8006aa6:	f413 7f80 	tst.w	r3, #256	@ 0x100
        USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SODDFRM;
 8006aaa:	f8d5 3b00 	ldr.w	r3, [r5, #2816]	@ 0xb00
 8006aae:	bf0c      	ite	eq
 8006ab0:	f043 5300 	orreq.w	r3, r3, #536870912	@ 0x20000000
        USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SD0PID_SEVNFRM;
 8006ab4:	f043 5380 	orrne.w	r3, r3, #268435456	@ 0x10000000
 8006ab8:	f8c5 3b00 	str.w	r3, [r5, #2816]	@ 0xb00
    USBx_OUTEP(epnum)->DOEPCTL |= (USB_OTG_DOEPCTL_CNAK | USB_OTG_DOEPCTL_EPENA);
 8006abc:	f8d5 3b00 	ldr.w	r3, [r5, #2816]	@ 0xb00
 8006ac0:	f043 4304 	orr.w	r3, r3, #2214592512	@ 0x84000000
 8006ac4:	f8c5 3b00 	str.w	r3, [r5, #2816]	@ 0xb00
 8006ac8:	e75c      	b.n	8006984 <USB_EPStartXfer+0x80>
      if (ep->xfer_len == 0U)
 8006aca:	2c00      	cmp	r4, #0
 8006acc:	d0d4      	beq.n	8006a78 <USB_EPStartXfer+0x174>
        pktcnt = (uint16_t)((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket);
 8006ace:	441c      	add	r4, r3
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
 8006ad0:	4a0a      	ldr	r2, [pc, #40]	@ (8006afc <USB_EPStartXfer+0x1f8>)
 8006ad2:	f8dc e010 	ldr.w	lr, [ip, #16]
        pktcnt = (uint16_t)((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket);
 8006ad6:	3c01      	subs	r4, #1
 8006ad8:	fbb4 f4f3 	udiv	r4, r4, r3
 8006adc:	b2a4      	uxth	r4, r4
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
 8006ade:	ea02 42c4 	and.w	r2, r2, r4, lsl #19
        ep->xfer_size = ep->maxpacket * pktcnt;
 8006ae2:	4363      	muls	r3, r4
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
 8006ae4:	ea42 020e 	orr.w	r2, r2, lr
        ep->xfer_size = ep->maxpacket * pktcnt;
 8006ae8:	620b      	str	r3, [r1, #32]
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
 8006aea:	f8cc 2010 	str.w	r2, [ip, #16]
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_XFRSIZ & ep->xfer_size;
 8006aee:	f8dc 2010 	ldr.w	r2, [ip, #16]
 8006af2:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8006af6:	4313      	orrs	r3, r2
 8006af8:	e7c9      	b.n	8006a8e <USB_EPStartXfer+0x18a>
 8006afa:	bf00      	nop
 8006afc:	1ff80000 	.word	0x1ff80000
 8006b00:	e007ffff 	.word	0xe007ffff
 8006b04:	fff80000 	.word	0xfff80000

08006b08 <USB_ReadPacket>:
{
 8006b08:	4603      	mov	r3, r0
 8006b0a:	b570      	push	{r4, r5, r6, lr}
  for (i = 0U; i < count32b; i++)
 8006b0c:	2000      	movs	r0, #0
  uint32_t count32b = (uint32_t)len >> 2U;
 8006b0e:	0894      	lsrs	r4, r2, #2
    __UNALIGNED_UINT32_WRITE(pDest, USBx_DFIFO(0U));
 8006b10:	f503 5580 	add.w	r5, r3, #4096	@ 0x1000
  uint16_t remaining_bytes = len % 4U;
 8006b14:	f002 0203 	and.w	r2, r2, #3
  for (i = 0U; i < count32b; i++)
 8006b18:	42a0      	cmp	r0, r4
 8006b1a:	d310      	bcc.n	8006b3e <USB_ReadPacket+0x36>
 8006b1c:	eb01 0084 	add.w	r0, r1, r4, lsl #2
  if (remaining_bytes != 0U)
 8006b20:	b162      	cbz	r2, 8006b3c <USB_ReadPacket+0x34>
    __UNALIGNED_UINT32_WRITE(&pData, USBx_DFIFO(0U));
 8006b22:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 8006b26:	681c      	ldr	r4, [r3, #0]
    i = 0U;
 8006b28:	2300      	movs	r3, #0
      *(uint8_t *)pDest = (uint8_t)(pData >> (8U * (uint8_t)(i)));
 8006b2a:	00d9      	lsls	r1, r3, #3
 8006b2c:	fa24 f101 	lsr.w	r1, r4, r1
 8006b30:	54c1      	strb	r1, [r0, r3]
      i++;
 8006b32:	3301      	adds	r3, #1
    } while (remaining_bytes != 0U);
 8006b34:	b299      	uxth	r1, r3
 8006b36:	428a      	cmp	r2, r1
 8006b38:	d1f7      	bne.n	8006b2a <USB_ReadPacket+0x22>
 8006b3a:	4410      	add	r0, r2
}
 8006b3c:	bd70      	pop	{r4, r5, r6, pc}
    __UNALIGNED_UINT32_WRITE(pDest, USBx_DFIFO(0U));
 8006b3e:	682e      	ldr	r6, [r5, #0]
 8006b40:	f841 6020 	str.w	r6, [r1, r0, lsl #2]
  for (i = 0U; i < count32b; i++)
 8006b44:	3001      	adds	r0, #1
 8006b46:	e7e7      	b.n	8006b18 <USB_ReadPacket+0x10>

08006b48 <USB_EPSetStall>:
  if (ep->is_in == 1U)
 8006b48:	784a      	ldrb	r2, [r1, #1]
  uint32_t epnum = (uint32_t)ep->num;
 8006b4a:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
 8006b4c:	2a01      	cmp	r2, #1
    if (((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == 0U) && (epnum != 0U))
 8006b4e:	eb00 1043 	add.w	r0, r0, r3, lsl #5
  if (ep->is_in == 1U)
 8006b52:	d112      	bne.n	8006b7a <USB_EPSetStall+0x32>
    if (((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == 0U) && (epnum != 0U))
 8006b54:	f8d0 2900 	ldr.w	r2, [r0, #2304]	@ 0x900
 8006b58:	2a00      	cmp	r2, #0
 8006b5a:	db06      	blt.n	8006b6a <USB_EPSetStall+0x22>
 8006b5c:	b12b      	cbz	r3, 8006b6a <USB_EPSetStall+0x22>
      USBx_INEP(epnum)->DIEPCTL &= ~(USB_OTG_DIEPCTL_EPDIS);
 8006b5e:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
 8006b62:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 8006b66:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
    USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_STALL;
 8006b6a:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
 8006b6e:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8006b72:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
}
 8006b76:	2000      	movs	r0, #0
 8006b78:	4770      	bx	lr
    if (((USBx_OUTEP(epnum)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == 0U) && (epnum != 0U))
 8006b7a:	f8d0 2b00 	ldr.w	r2, [r0, #2816]	@ 0xb00
 8006b7e:	2a00      	cmp	r2, #0
 8006b80:	db06      	blt.n	8006b90 <USB_EPSetStall+0x48>
 8006b82:	b12b      	cbz	r3, 8006b90 <USB_EPSetStall+0x48>
      USBx_OUTEP(epnum)->DOEPCTL &= ~(USB_OTG_DOEPCTL_EPDIS);
 8006b84:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	@ 0xb00
 8006b88:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
 8006b8c:	f8c0 3b00 	str.w	r3, [r0, #2816]	@ 0xb00
    USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_STALL;
 8006b90:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	@ 0xb00
 8006b94:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8006b98:	f8c0 3b00 	str.w	r3, [r0, #2816]	@ 0xb00
 8006b9c:	e7eb      	b.n	8006b76 <USB_EPSetStall+0x2e>

08006b9e <USB_EPClearStall>:
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 8006b9e:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
 8006ba0:	784a      	ldrb	r2, [r1, #1]
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 8006ba2:	eb00 1043 	add.w	r0, r0, r3, lsl #5
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 8006ba6:	790b      	ldrb	r3, [r1, #4]
  if (ep->is_in == 1U)
 8006ba8:	2a01      	cmp	r2, #1
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 8006baa:	f1a3 0302 	sub.w	r3, r3, #2
 8006bae:	b2db      	uxtb	r3, r3
  if (ep->is_in == 1U)
 8006bb0:	d10f      	bne.n	8006bd2 <USB_EPClearStall+0x34>
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 8006bb2:	f8d0 2900 	ldr.w	r2, [r0, #2304]	@ 0x900
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 8006bb6:	2b01      	cmp	r3, #1
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
 8006bb8:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
 8006bbc:	f8c0 2900 	str.w	r2, [r0, #2304]	@ 0x900
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 8006bc0:	d805      	bhi.n	8006bce <USB_EPClearStall+0x30>
      USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM; /* DATA0 */
 8006bc2:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
 8006bc6:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8006bca:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
}
 8006bce:	2000      	movs	r0, #0
 8006bd0:	4770      	bx	lr
    USBx_OUTEP(epnum)->DOEPCTL &= ~USB_OTG_DOEPCTL_STALL;
 8006bd2:	f8d0 2b00 	ldr.w	r2, [r0, #2816]	@ 0xb00
 8006bd6:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
 8006bda:	2b01      	cmp	r3, #1
    USBx_OUTEP(epnum)->DOEPCTL &= ~USB_OTG_DOEPCTL_STALL;
 8006bdc:	f8c0 2b00 	str.w	r2, [r0, #2816]	@ 0xb00
      USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SD0PID_SEVNFRM; /* DATA0 */
 8006be0:	bf9e      	ittt	ls
 8006be2:	f8d0 3b00 	ldrls.w	r3, [r0, #2816]	@ 0xb00
 8006be6:	f043 5380 	orrls.w	r3, r3, #268435456	@ 0x10000000
 8006bea:	f8c0 3b00 	strls.w	r3, [r0, #2816]	@ 0xb00
 8006bee:	e7ee      	b.n	8006bce <USB_EPClearStall+0x30>

08006bf0 <USB_SetDevAddress>:
  USBx_DEVICE->DCFG &= ~(USB_OTG_DCFG_DAD);
 8006bf0:	f8d0 3800 	ldr.w	r3, [r0, #2048]	@ 0x800
 8006bf4:	f423 63fe 	bic.w	r3, r3, #2032	@ 0x7f0
 8006bf8:	f8c0 3800 	str.w	r3, [r0, #2048]	@ 0x800
  USBx_DEVICE->DCFG |= ((uint32_t)address << 4) & USB_OTG_DCFG_DAD;
 8006bfc:	f8d0 3800 	ldr.w	r3, [r0, #2048]	@ 0x800
 8006c00:	0109      	lsls	r1, r1, #4
 8006c02:	f401 61fe 	and.w	r1, r1, #2032	@ 0x7f0
 8006c06:	4319      	orrs	r1, r3
 8006c08:	f8c0 1800 	str.w	r1, [r0, #2048]	@ 0x800
}
 8006c0c:	2000      	movs	r0, #0
 8006c0e:	4770      	bx	lr

08006c10 <USB_DevConnect>:
  USBx_PCGCCTL &= ~(USB_OTG_PCGCCTL_STOPCLK | USB_OTG_PCGCCTL_GATECLK);
 8006c10:	f8d0 3e00 	ldr.w	r3, [r0, #3584]	@ 0xe00
 8006c14:	f023 0303 	bic.w	r3, r3, #3
 8006c18:	f8c0 3e00 	str.w	r3, [r0, #3584]	@ 0xe00
  USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_SDIS;
 8006c1c:	f8d0 3804 	ldr.w	r3, [r0, #2052]	@ 0x804
 8006c20:	f023 0302 	bic.w	r3, r3, #2
 8006c24:	f8c0 3804 	str.w	r3, [r0, #2052]	@ 0x804
}
 8006c28:	2000      	movs	r0, #0
 8006c2a:	4770      	bx	lr

08006c2c <USB_DevDisconnect>:
  USBx_PCGCCTL &= ~(USB_OTG_PCGCCTL_STOPCLK | USB_OTG_PCGCCTL_GATECLK);
 8006c2c:	f8d0 3e00 	ldr.w	r3, [r0, #3584]	@ 0xe00
 8006c30:	f023 0303 	bic.w	r3, r3, #3
 8006c34:	f8c0 3e00 	str.w	r3, [r0, #3584]	@ 0xe00
  USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
 8006c38:	f8d0 3804 	ldr.w	r3, [r0, #2052]	@ 0x804
 8006c3c:	f043 0302 	orr.w	r3, r3, #2
 8006c40:	f8c0 3804 	str.w	r3, [r0, #2052]	@ 0x804
}
 8006c44:	2000      	movs	r0, #0
 8006c46:	4770      	bx	lr

08006c48 <USB_ReadInterrupts>:
  tmpreg = USBx->GINTSTS;
 8006c48:	6942      	ldr	r2, [r0, #20]
  tmpreg &= USBx->GINTMSK;
 8006c4a:	6980      	ldr	r0, [r0, #24]
}
 8006c4c:	4010      	ands	r0, r2
 8006c4e:	4770      	bx	lr

08006c50 <USB_ReadDevAllOutEpInterrupt>:
  tmpreg  = USBx_DEVICE->DAINT;
 8006c50:	f8d0 3818 	ldr.w	r3, [r0, #2072]	@ 0x818
 8006c54:	f500 6000 	add.w	r0, r0, #2048	@ 0x800
  tmpreg &= USBx_DEVICE->DAINTMSK;
 8006c58:	69c0      	ldr	r0, [r0, #28]
 8006c5a:	4018      	ands	r0, r3
}
 8006c5c:	0c00      	lsrs	r0, r0, #16
 8006c5e:	4770      	bx	lr

08006c60 <USB_ReadDevAllInEpInterrupt>:
  tmpreg  = USBx_DEVICE->DAINT;
 8006c60:	f8d0 3818 	ldr.w	r3, [r0, #2072]	@ 0x818
 8006c64:	f500 6000 	add.w	r0, r0, #2048	@ 0x800
  tmpreg &= USBx_DEVICE->DAINTMSK;
 8006c68:	69c0      	ldr	r0, [r0, #28]
 8006c6a:	4018      	ands	r0, r3
}
 8006c6c:	b280      	uxth	r0, r0
 8006c6e:	4770      	bx	lr

08006c70 <USB_ReadDevOutEPInterrupt>:
  tmpreg  = USBx_OUTEP((uint32_t)epnum)->DOEPINT;
 8006c70:	eb00 1141 	add.w	r1, r0, r1, lsl #5
  tmpreg &= USBx_DEVICE->DOEPMSK;
 8006c74:	f500 6000 	add.w	r0, r0, #2048	@ 0x800
  tmpreg  = USBx_OUTEP((uint32_t)epnum)->DOEPINT;
 8006c78:	f8d1 2b08 	ldr.w	r2, [r1, #2824]	@ 0xb08
  tmpreg &= USBx_DEVICE->DOEPMSK;
 8006c7c:	6940      	ldr	r0, [r0, #20]
}
 8006c7e:	4010      	ands	r0, r2
 8006c80:	4770      	bx	lr

08006c82 <USB_ReadDevInEPInterrupt>:
  msk = USBx_DEVICE->DIEPMSK;
 8006c82:	f8d0 2810 	ldr.w	r2, [r0, #2064]	@ 0x810
  emp = USBx_DEVICE->DIEPEMPMSK;
 8006c86:	f8d0 3834 	ldr.w	r3, [r0, #2100]	@ 0x834
  tmpreg = USBx_INEP((uint32_t)epnum)->DIEPINT & msk;
 8006c8a:	eb00 1041 	add.w	r0, r0, r1, lsl #5
  msk |= ((emp >> (epnum & EP_ADDR_MSK)) & 0x1U) << 7;
 8006c8e:	f001 010f 	and.w	r1, r1, #15
 8006c92:	40cb      	lsrs	r3, r1
  tmpreg = USBx_INEP((uint32_t)epnum)->DIEPINT & msk;
 8006c94:	f500 6010 	add.w	r0, r0, #2304	@ 0x900
  msk |= ((emp >> (epnum & EP_ADDR_MSK)) & 0x1U) << 7;
 8006c98:	01db      	lsls	r3, r3, #7
  tmpreg = USBx_INEP((uint32_t)epnum)->DIEPINT & msk;
 8006c9a:	6880      	ldr	r0, [r0, #8]
  msk |= ((emp >> (epnum & EP_ADDR_MSK)) & 0x1U) << 7;
 8006c9c:	b2db      	uxtb	r3, r3
 8006c9e:	4313      	orrs	r3, r2
}
 8006ca0:	4018      	ands	r0, r3
 8006ca2:	4770      	bx	lr

08006ca4 <USB_GetMode>:
  return ((USBx->GINTSTS) & 0x1U);
 8006ca4:	6940      	ldr	r0, [r0, #20]
}
 8006ca6:	f000 0001 	and.w	r0, r0, #1
 8006caa:	4770      	bx	lr

08006cac <USB_ActivateSetup>:
  USBx_INEP(0U)->DIEPCTL &= ~USB_OTG_DIEPCTL_MPSIZ;
 8006cac:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
 8006cb0:	f36f 030a 	bfc	r3, #0, #11
 8006cb4:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
  USBx_DEVICE->DCTL |= USB_OTG_DCTL_CGINAK;
 8006cb8:	f8d0 3804 	ldr.w	r3, [r0, #2052]	@ 0x804
 8006cbc:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8006cc0:	f8c0 3804 	str.w	r3, [r0, #2052]	@ 0x804
}
 8006cc4:	2000      	movs	r0, #0
 8006cc6:	4770      	bx	lr

08006cc8 <USB_EP0_OutStart>:
{
 8006cc8:	b530      	push	{r4, r5, lr}
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
 8006cca:	6c05      	ldr	r5, [r0, #64]	@ 0x40
  if (gSNPSiD > USB_OTG_CORE_ID_300A)
 8006ccc:	4c10      	ldr	r4, [pc, #64]	@ (8006d10 <USB_EP0_OutStart+0x48>)
 8006cce:	42a5      	cmp	r5, r4
    if ((USBx_OUTEP(0U)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 8006cd0:	f500 6330 	add.w	r3, r0, #2816	@ 0xb00
  if (gSNPSiD > USB_OTG_CORE_ID_300A)
 8006cd4:	d903      	bls.n	8006cde <USB_EP0_OutStart+0x16>
    if ((USBx_OUTEP(0U)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 8006cd6:	f8d0 4b00 	ldr.w	r4, [r0, #2816]	@ 0xb00
 8006cda:	2c00      	cmp	r4, #0
 8006cdc:	db16      	blt.n	8006d0c <USB_EP0_OutStart+0x44>
  USBx_OUTEP(0U)->DOEPTSIZ = 0U;
 8006cde:	2400      	movs	r4, #0
 8006ce0:	611c      	str	r4, [r3, #16]
  USBx_OUTEP(0U)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_PKTCNT & (1U << 19));
 8006ce2:	691c      	ldr	r4, [r3, #16]
 8006ce4:	f444 2400 	orr.w	r4, r4, #524288	@ 0x80000
 8006ce8:	611c      	str	r4, [r3, #16]
  USBx_OUTEP(0U)->DOEPTSIZ |= (3U * 8U);
 8006cea:	691c      	ldr	r4, [r3, #16]
 8006cec:	f044 0418 	orr.w	r4, r4, #24
 8006cf0:	611c      	str	r4, [r3, #16]
  USBx_OUTEP(0U)->DOEPTSIZ |=  USB_OTG_DOEPTSIZ_STUPCNT;
 8006cf2:	691c      	ldr	r4, [r3, #16]
  if (dma == 1U)
 8006cf4:	2901      	cmp	r1, #1
  USBx_OUTEP(0U)->DOEPTSIZ |=  USB_OTG_DOEPTSIZ_STUPCNT;
 8006cf6:	f044 44c0 	orr.w	r4, r4, #1610612736	@ 0x60000000
 8006cfa:	611c      	str	r4, [r3, #16]
    USBx_OUTEP(0U)->DOEPDMA = (uint32_t)psetup;
 8006cfc:	bf01      	itttt	eq
 8006cfe:	615a      	streq	r2, [r3, #20]
    USBx_OUTEP(0U)->DOEPCTL |= USB_OTG_DOEPCTL_EPENA | USB_OTG_DOEPCTL_USBAEP;
 8006d00:	f8d0 3b00 	ldreq.w	r3, [r0, #2816]	@ 0xb00
 8006d04:	f043 2380 	orreq.w	r3, r3, #2147516416	@ 0x80008000
 8006d08:	f8c0 3b00 	streq.w	r3, [r0, #2816]	@ 0xb00
}
 8006d0c:	2000      	movs	r0, #0
 8006d0e:	bd30      	pop	{r4, r5, pc}
 8006d10:	4f54300a 	.word	0x4f54300a

08006d14 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 8006d14:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 8006d16:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8006d1a:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 8006d1c:	f001 fdee 	bl	80088fc <xTaskGetSchedulerState>
 8006d20:	2801      	cmp	r0, #1
 8006d22:	d003      	beq.n	8006d2c <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 8006d24:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 8006d28:	f000 bbdc 	b.w	80074e4 <xPortSysTickHandler>
}
 8006d2c:	bd08      	pop	{r3, pc}
	...

08006d30 <osKernelInitialize>:
 */
__STATIC_FORCEINLINE uint32_t __get_IPSR(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006d30:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8006d34:	b92b      	cbnz	r3, 8006d42 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 8006d36:	4b06      	ldr	r3, [pc, #24]	@ (8006d50 <osKernelInitialize+0x20>)
 8006d38:	6818      	ldr	r0, [r3, #0]
 8006d3a:	b928      	cbnz	r0, 8006d48 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8006d3c:	2201      	movs	r2, #1
 8006d3e:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8006d40:	4770      	bx	lr
    stat = osErrorISR;
 8006d42:	f06f 0005 	mvn.w	r0, #5
 8006d46:	4770      	bx	lr
    } else {
      stat = osError;
 8006d48:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8006d4c:	4770      	bx	lr
 8006d4e:	bf00      	nop
 8006d50:	200029ec 	.word	0x200029ec

08006d54 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8006d54:	b510      	push	{r4, lr}
 8006d56:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8006d5a:	b95c      	cbnz	r4, 8006d74 <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 8006d5c:	4b08      	ldr	r3, [pc, #32]	@ (8006d80 <osKernelStart+0x2c>)
 8006d5e:	681a      	ldr	r2, [r3, #0]
 8006d60:	2a01      	cmp	r2, #1
 8006d62:	d10a      	bne.n	8006d7a <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006d64:	4a07      	ldr	r2, [pc, #28]	@ (8006d84 <osKernelStart+0x30>)
 8006d66:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 8006d68:	2202      	movs	r2, #2
 8006d6a:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 8006d6c:	f001 fb44 	bl	80083f8 <vTaskStartScheduler>
      stat = osOK;
 8006d70:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 8006d72:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8006d74:	f06f 0005 	mvn.w	r0, #5
 8006d78:	e7fb      	b.n	8006d72 <osKernelStart+0x1e>
      stat = osError;
 8006d7a:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8006d7e:	e7f8      	b.n	8006d72 <osKernelStart+0x1e>
 8006d80:	200029ec 	.word	0x200029ec
 8006d84:	e000ed00 	.word	0xe000ed00

08006d88 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8006d88:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006d8a:	b087      	sub	sp, #28
 8006d8c:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8006d8e:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8006d90:	460b      	mov	r3, r1
  hTask = NULL;
 8006d92:	9205      	str	r2, [sp, #20]
 8006d94:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8006d98:	b9fa      	cbnz	r2, 8006dda <osThreadNew+0x52>
 8006d9a:	b1f0      	cbz	r0, 8006dda <osThreadNew+0x52>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8006d9c:	b354      	cbz	r4, 8006df4 <osThreadNew+0x6c>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8006d9e:	69a5      	ldr	r5, [r4, #24]
 8006da0:	b125      	cbz	r5, 8006dac <osThreadNew+0x24>
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8006da2:	1e69      	subs	r1, r5, #1
 8006da4:	2937      	cmp	r1, #55	@ 0x37
 8006da6:	d902      	bls.n	8006dae <osThreadNew+0x26>
        return (NULL);
 8006da8:	2000      	movs	r0, #0
 8006daa:	e017      	b.n	8006ddc <osThreadNew+0x54>
    prio  = (UBaseType_t)osPriorityNormal;
 8006dac:	2518      	movs	r5, #24
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8006dae:	6862      	ldr	r2, [r4, #4]
 8006db0:	07d2      	lsls	r2, r2, #31
 8006db2:	d4f9      	bmi.n	8006da8 <osThreadNew+0x20>
      }

      if (attr->stack_size > 0U) {
 8006db4:	6966      	ldr	r6, [r4, #20]
 8006db6:	b19e      	cbz	r6, 8006de0 <osThreadNew+0x58>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8006db8:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8006dba:	e9d4 7c02 	ldrd	r7, ip, [r4, #8]
      if (attr->name != NULL) {
 8006dbe:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8006dc0:	b187      	cbz	r7, 8006de4 <osThreadNew+0x5c>
 8006dc2:	f1bc 0f5f 	cmp.w	ip, #95	@ 0x5f
 8006dc6:	d908      	bls.n	8006dda <osThreadNew+0x52>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8006dc8:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8006dca:	b134      	cbz	r4, 8006dda <osThreadNew+0x52>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8006dcc:	b12e      	cbz	r6, 8006dda <osThreadNew+0x52>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8006dce:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8006dd2:	9500      	str	r5, [sp, #0]
 8006dd4:	f001 faa9 	bl	800832a <xTaskCreateStatic>
 8006dd8:	9005      	str	r0, [sp, #20]
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 8006dda:	9805      	ldr	r0, [sp, #20]
}
 8006ddc:	b007      	add	sp, #28
 8006dde:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8006de0:	2280      	movs	r2, #128	@ 0x80
 8006de2:	e7ea      	b.n	8006dba <osThreadNew+0x32>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8006de4:	f1bc 0f00 	cmp.w	ip, #0
 8006de8:	d1f7      	bne.n	8006dda <osThreadNew+0x52>
 8006dea:	6924      	ldr	r4, [r4, #16]
 8006dec:	2c00      	cmp	r4, #0
 8006dee:	d1f4      	bne.n	8006dda <osThreadNew+0x52>
 8006df0:	460c      	mov	r4, r1
 8006df2:	e001      	b.n	8006df8 <osThreadNew+0x70>
    prio  = (UBaseType_t)osPriorityNormal;
 8006df4:	2518      	movs	r5, #24
    stack = configMINIMAL_STACK_SIZE;
 8006df6:	2280      	movs	r2, #128	@ 0x80
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8006df8:	a905      	add	r1, sp, #20
 8006dfa:	e9cd 5100 	strd	r5, r1, [sp]
 8006dfe:	b292      	uxth	r2, r2
 8006e00:	4621      	mov	r1, r4
 8006e02:	f001 faca 	bl	800839a <xTaskCreate>
 8006e06:	2801      	cmp	r0, #1
            hTask = NULL;
 8006e08:	bf1c      	itt	ne
 8006e0a:	2300      	movne	r3, #0
 8006e0c:	9305      	strne	r3, [sp, #20]
 8006e0e:	e7e4      	b.n	8006dda <osThreadNew+0x52>

08006e10 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 8006e10:	b508      	push	{r3, lr}
 8006e12:	f3ef 8205 	mrs	r2, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8006e16:	b922      	cbnz	r2, 8006e22 <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 8006e18:	b108      	cbz	r0, 8006e1e <osDelay+0xe>
      vTaskDelay(ticks);
 8006e1a:	f001 fc4b 	bl	80086b4 <vTaskDelay>
    stat = osOK;
 8006e1e:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 8006e20:	bd08      	pop	{r3, pc}
    stat = osErrorISR;
 8006e22:	f06f 0005 	mvn.w	r0, #5
  return (stat);
 8006e26:	e7fb      	b.n	8006e20 <osDelay+0x10>

08006e28 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8006e28:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006e2a:	4604      	mov	r4, r0
 8006e2c:	460e      	mov	r6, r1
 8006e2e:	4615      	mov	r5, r2
 8006e30:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8006e34:	b942      	cbnz	r2, 8006e48 <osSemaphoreNew+0x20>
 8006e36:	b138      	cbz	r0, 8006e48 <osSemaphoreNew+0x20>
 8006e38:	4288      	cmp	r0, r1
 8006e3a:	d305      	bcc.n	8006e48 <osSemaphoreNew+0x20>
    mem = -1;

    if (attr != NULL) {
 8006e3c:	b155      	cbz	r5, 8006e54 <osSemaphoreNew+0x2c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8006e3e:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 8006e42:	b12b      	cbz	r3, 8006e50 <osSemaphoreNew+0x28>
 8006e44:	2f4f      	cmp	r7, #79	@ 0x4f
 8006e46:	d822      	bhi.n	8006e8e <osSemaphoreNew+0x66>
  hSemaphore = NULL;
 8006e48:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 8006e4a:	4620      	mov	r0, r4
 8006e4c:	b003      	add	sp, #12
 8006e4e:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8006e50:	2f00      	cmp	r7, #0
 8006e52:	d1f9      	bne.n	8006e48 <osSemaphoreNew+0x20>
      if (max_count == 1U) {
 8006e54:	2c01      	cmp	r4, #1
 8006e56:	d00c      	beq.n	8006e72 <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8006e58:	4620      	mov	r0, r4
 8006e5a:	4631      	mov	r1, r6
 8006e5c:	f000 fd7a 	bl	8007954 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8006e60:	4604      	mov	r4, r0
 8006e62:	2800      	cmp	r0, #0
 8006e64:	d0f0      	beq.n	8006e48 <osSemaphoreNew+0x20>
        if (attr != NULL) {
 8006e66:	b985      	cbnz	r5, 8006e8a <osSemaphoreNew+0x62>
        vQueueAddToRegistry (hSemaphore, name);
 8006e68:	4629      	mov	r1, r5
 8006e6a:	4620      	mov	r0, r4
 8006e6c:	f001 f898 	bl	8007fa0 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8006e70:	e7eb      	b.n	8006e4a <osSemaphoreNew+0x22>
            hSemaphore = xSemaphoreCreateBinary();
 8006e72:	2203      	movs	r2, #3
 8006e74:	2100      	movs	r1, #0
 8006e76:	2001      	movs	r0, #1
 8006e78:	f000 fd23 	bl	80078c2 <xQueueGenericCreate>
 8006e7c:	e00e      	b.n	8006e9c <osSemaphoreNew+0x74>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8006e7e:	461a      	mov	r2, r3
 8006e80:	f000 fd46 	bl	8007910 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8006e84:	4604      	mov	r4, r0
 8006e86:	2800      	cmp	r0, #0
 8006e88:	d0de      	beq.n	8006e48 <osSemaphoreNew+0x20>
          name = attr->name;
 8006e8a:	682d      	ldr	r5, [r5, #0]
 8006e8c:	e7ec      	b.n	8006e68 <osSemaphoreNew+0x40>
      if (max_count == 1U) {
 8006e8e:	2801      	cmp	r0, #1
 8006e90:	d1f5      	bne.n	8006e7e <osSemaphoreNew+0x56>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8006e92:	2103      	movs	r1, #3
 8006e94:	9100      	str	r1, [sp, #0]
 8006e96:	4611      	mov	r1, r2
 8006e98:	f000 fcc5 	bl	8007826 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 8006e9c:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8006e9e:	2800      	cmp	r0, #0
 8006ea0:	d0d2      	beq.n	8006e48 <osSemaphoreNew+0x20>
 8006ea2:	2e00      	cmp	r6, #0
 8006ea4:	d0df      	beq.n	8006e66 <osSemaphoreNew+0x3e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8006ea6:	2300      	movs	r3, #0
 8006ea8:	461a      	mov	r2, r3
 8006eaa:	4619      	mov	r1, r3
 8006eac:	f000 fd70 	bl	8007990 <xQueueGenericSend>
 8006eb0:	2801      	cmp	r0, #1
 8006eb2:	d0d8      	beq.n	8006e66 <osSemaphoreNew+0x3e>
            vSemaphoreDelete (hSemaphore);
 8006eb4:	4620      	mov	r0, r4
 8006eb6:	f001 f89d 	bl	8007ff4 <vQueueDelete>
      if (hSemaphore != NULL) {
 8006eba:	e7c5      	b.n	8006e48 <osSemaphoreNew+0x20>

08006ebc <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8006ebc:	b513      	push	{r0, r1, r4, lr}
 8006ebe:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8006ec0:	b328      	cbz	r0, 8006f0e <osSemaphoreAcquire+0x52>
 8006ec2:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8006ec6:	b1cb      	cbz	r3, 8006efc <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 8006ec8:	bb09      	cbnz	r1, 8006f0e <osSemaphoreAcquire+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8006eca:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8006ecc:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8006ece:	f001 f81a 	bl	8007f06 <xQueueReceiveFromISR>
 8006ed2:	2801      	cmp	r0, #1
 8006ed4:	d003      	beq.n	8006ede <osSemaphoreAcquire+0x22>
        stat = osErrorResource;
 8006ed6:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 8006eda:	b002      	add	sp, #8
 8006edc:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 8006ede:	9b01      	ldr	r3, [sp, #4]
 8006ee0:	b90b      	cbnz	r3, 8006ee6 <osSemaphoreAcquire+0x2a>
  stat = osOK;
 8006ee2:	2000      	movs	r0, #0
 8006ee4:	e7f9      	b.n	8006eda <osSemaphoreAcquire+0x1e>
        portYIELD_FROM_ISR (yield);
 8006ee6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8006eea:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8006eee:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8006ef2:	f3bf 8f4f 	dsb	sy
 8006ef6:	f3bf 8f6f 	isb	sy
 8006efa:	e7f2      	b.n	8006ee2 <osSemaphoreAcquire+0x26>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8006efc:	f000 ff46 	bl	8007d8c <xQueueSemaphoreTake>
 8006f00:	2801      	cmp	r0, #1
 8006f02:	d0ee      	beq.n	8006ee2 <osSemaphoreAcquire+0x26>
      if (timeout != 0U) {
 8006f04:	2c00      	cmp	r4, #0
 8006f06:	d0e6      	beq.n	8006ed6 <osSemaphoreAcquire+0x1a>
        stat = osErrorTimeout;
 8006f08:	f06f 0001 	mvn.w	r0, #1
 8006f0c:	e7e5      	b.n	8006eda <osSemaphoreAcquire+0x1e>
    stat = osErrorParameter;
 8006f0e:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8006f12:	e7e2      	b.n	8006eda <osSemaphoreAcquire+0x1e>

08006f14 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8006f14:	b507      	push	{r0, r1, r2, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8006f16:	b318      	cbz	r0, 8006f60 <osSemaphoreRelease+0x4c>
 8006f18:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8006f1c:	b1cb      	cbz	r3, 8006f52 <osSemaphoreRelease+0x3e>
    yield = pdFALSE;
 8006f1e:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8006f20:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8006f22:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8006f24:	f000 fe43 	bl	8007bae <xQueueGiveFromISR>
 8006f28:	2801      	cmp	r0, #1
 8006f2a:	d004      	beq.n	8006f36 <osSemaphoreRelease+0x22>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 8006f2c:	f06f 0002 	mvn.w	r0, #2
    }
  }

  return (stat);
}
 8006f30:	b003      	add	sp, #12
 8006f32:	f85d fb04 	ldr.w	pc, [sp], #4
      portYIELD_FROM_ISR (yield);
 8006f36:	9b01      	ldr	r3, [sp, #4]
 8006f38:	b14b      	cbz	r3, 8006f4e <osSemaphoreRelease+0x3a>
 8006f3a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8006f3e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8006f42:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8006f46:	f3bf 8f4f 	dsb	sy
 8006f4a:	f3bf 8f6f 	isb	sy
  stat = osOK;
 8006f4e:	2000      	movs	r0, #0
 8006f50:	e7ee      	b.n	8006f30 <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8006f52:	461a      	mov	r2, r3
 8006f54:	4619      	mov	r1, r3
 8006f56:	f000 fd1b 	bl	8007990 <xQueueGenericSend>
 8006f5a:	2801      	cmp	r0, #1
 8006f5c:	d0f7      	beq.n	8006f4e <osSemaphoreRelease+0x3a>
 8006f5e:	e7e5      	b.n	8006f2c <osSemaphoreRelease+0x18>
    stat = osErrorParameter;
 8006f60:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8006f64:	e7e4      	b.n	8006f30 <osSemaphoreRelease+0x1c>

08006f66 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8006f66:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006f68:	4605      	mov	r5, r0
 8006f6a:	460e      	mov	r6, r1
 8006f6c:	4614      	mov	r4, r2
 8006f6e:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8006f72:	b11f      	cbz	r7, 8006f7c <osMessageQueueNew+0x16>
  hQueue = NULL;
 8006f74:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8006f76:	4628      	mov	r0, r5
 8006f78:	b003      	add	sp, #12
 8006f7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8006f7c:	2800      	cmp	r0, #0
 8006f7e:	d0f9      	beq.n	8006f74 <osMessageQueueNew+0xe>
 8006f80:	2900      	cmp	r1, #0
 8006f82:	d0f7      	beq.n	8006f74 <osMessageQueueNew+0xe>
    if (attr != NULL) {
 8006f84:	b1da      	cbz	r2, 8006fbe <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8006f86:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 8006f8a:	b183      	cbz	r3, 8006fae <osMessageQueueNew+0x48>
 8006f8c:	2a4f      	cmp	r2, #79	@ 0x4f
 8006f8e:	d9f1      	bls.n	8006f74 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8006f90:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8006f92:	2a00      	cmp	r2, #0
 8006f94:	d0ee      	beq.n	8006f74 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8006f96:	6966      	ldr	r6, [r4, #20]
 8006f98:	434d      	muls	r5, r1
 8006f9a:	42ae      	cmp	r6, r5
 8006f9c:	d3ea      	bcc.n	8006f74 <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8006f9e:	9700      	str	r7, [sp, #0]
 8006fa0:	f000 fc41 	bl	8007826 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8006fa4:	4605      	mov	r5, r0
 8006fa6:	2800      	cmp	r0, #0
 8006fa8:	d0e4      	beq.n	8006f74 <osMessageQueueNew+0xe>
        name = attr->name;
 8006faa:	6824      	ldr	r4, [r4, #0]
 8006fac:	e011      	b.n	8006fd2 <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8006fae:	2a00      	cmp	r2, #0
 8006fb0:	d1e0      	bne.n	8006f74 <osMessageQueueNew+0xe>
 8006fb2:	6923      	ldr	r3, [r4, #16]
 8006fb4:	2b00      	cmp	r3, #0
 8006fb6:	d1dd      	bne.n	8006f74 <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8006fb8:	6963      	ldr	r3, [r4, #20]
 8006fba:	2b00      	cmp	r3, #0
 8006fbc:	d1da      	bne.n	8006f74 <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 8006fbe:	4628      	mov	r0, r5
 8006fc0:	2200      	movs	r2, #0
 8006fc2:	4631      	mov	r1, r6
 8006fc4:	f000 fc7d 	bl	80078c2 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8006fc8:	4605      	mov	r5, r0
 8006fca:	2800      	cmp	r0, #0
 8006fcc:	d0d2      	beq.n	8006f74 <osMessageQueueNew+0xe>
      if (attr != NULL) {
 8006fce:	2c00      	cmp	r4, #0
 8006fd0:	d1eb      	bne.n	8006faa <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 8006fd2:	4621      	mov	r1, r4
 8006fd4:	4628      	mov	r0, r5
 8006fd6:	f000 ffe3 	bl	8007fa0 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 8006fda:	e7cc      	b.n	8006f76 <osMessageQueueNew+0x10>

08006fdc <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8006fdc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006fde:	461c      	mov	r4, r3
 8006fe0:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8006fe4:	b1de      	cbz	r6, 800701e <osMessageQueuePut+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8006fe6:	b338      	cbz	r0, 8007038 <osMessageQueuePut+0x5c>
 8006fe8:	b331      	cbz	r1, 8007038 <osMessageQueuePut+0x5c>
 8006fea:	bb2b      	cbnz	r3, 8007038 <osMessageQueuePut+0x5c>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8006fec:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8006fee:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8006ff0:	f000 fd80 	bl	8007af4 <xQueueGenericSendFromISR>
 8006ff4:	2801      	cmp	r0, #1
 8006ff6:	d003      	beq.n	8007000 <osMessageQueuePut+0x24>
        stat = osErrorResource;
 8006ff8:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 8006ffc:	b002      	add	sp, #8
 8006ffe:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 8007000:	9b01      	ldr	r3, [sp, #4]
 8007002:	b90b      	cbnz	r3, 8007008 <osMessageQueuePut+0x2c>
  stat = osOK;
 8007004:	2000      	movs	r0, #0
 8007006:	e7f9      	b.n	8006ffc <osMessageQueuePut+0x20>
        portYIELD_FROM_ISR (yield);
 8007008:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800700c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007010:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007014:	f3bf 8f4f 	dsb	sy
 8007018:	f3bf 8f6f 	isb	sy
 800701c:	e7f2      	b.n	8007004 <osMessageQueuePut+0x28>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800701e:	b158      	cbz	r0, 8007038 <osMessageQueuePut+0x5c>
 8007020:	b151      	cbz	r1, 8007038 <osMessageQueuePut+0x5c>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8007022:	4633      	mov	r3, r6
 8007024:	4622      	mov	r2, r4
 8007026:	f000 fcb3 	bl	8007990 <xQueueGenericSend>
 800702a:	2801      	cmp	r0, #1
 800702c:	d0ea      	beq.n	8007004 <osMessageQueuePut+0x28>
        if (timeout != 0U) {
 800702e:	2c00      	cmp	r4, #0
 8007030:	d0e2      	beq.n	8006ff8 <osMessageQueuePut+0x1c>
          stat = osErrorTimeout;
 8007032:	f06f 0001 	mvn.w	r0, #1
 8007036:	e7e1      	b.n	8006ffc <osMessageQueuePut+0x20>
      stat = osErrorParameter;
 8007038:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800703c:	e7de      	b.n	8006ffc <osMessageQueuePut+0x20>

0800703e <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800703e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007040:	461c      	mov	r4, r3
 8007042:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8007046:	b1db      	cbz	r3, 8007080 <osMessageQueueGet+0x42>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8007048:	b330      	cbz	r0, 8007098 <osMessageQueueGet+0x5a>
 800704a:	b329      	cbz	r1, 8007098 <osMessageQueueGet+0x5a>
 800704c:	bb24      	cbnz	r4, 8007098 <osMessageQueueGet+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800704e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8007050:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8007052:	f000 ff58 	bl	8007f06 <xQueueReceiveFromISR>
 8007056:	2801      	cmp	r0, #1
 8007058:	d003      	beq.n	8007062 <osMessageQueueGet+0x24>
        stat = osErrorResource;
 800705a:	f06f 0002 	mvn.w	r0, #2
      }
    }
  }

  return (stat);
}
 800705e:	b003      	add	sp, #12
 8007060:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 8007062:	9b01      	ldr	r3, [sp, #4]
 8007064:	b90b      	cbnz	r3, 800706a <osMessageQueueGet+0x2c>
  stat = osOK;
 8007066:	2000      	movs	r0, #0
 8007068:	e7f9      	b.n	800705e <osMessageQueueGet+0x20>
        portYIELD_FROM_ISR (yield);
 800706a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 800706e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007072:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007076:	f3bf 8f4f 	dsb	sy
 800707a:	f3bf 8f6f 	isb	sy
 800707e:	e7f2      	b.n	8007066 <osMessageQueueGet+0x28>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8007080:	b150      	cbz	r0, 8007098 <osMessageQueueGet+0x5a>
 8007082:	b149      	cbz	r1, 8007098 <osMessageQueueGet+0x5a>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8007084:	4622      	mov	r2, r4
 8007086:	f000 fde3 	bl	8007c50 <xQueueReceive>
 800708a:	2801      	cmp	r0, #1
 800708c:	d0eb      	beq.n	8007066 <osMessageQueueGet+0x28>
        if (timeout != 0U) {
 800708e:	2c00      	cmp	r4, #0
 8007090:	d0e3      	beq.n	800705a <osMessageQueueGet+0x1c>
          stat = osErrorTimeout;
 8007092:	f06f 0001 	mvn.w	r0, #1
 8007096:	e7e2      	b.n	800705e <osMessageQueueGet+0x20>
      stat = osErrorParameter;
 8007098:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800709c:	e7df      	b.n	800705e <osMessageQueueGet+0x20>
	...

080070a0 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 80070a0:	4b03      	ldr	r3, [pc, #12]	@ (80070b0 <vApplicationGetIdleTaskMemory+0x10>)
 80070a2:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 80070a4:	4b03      	ldr	r3, [pc, #12]	@ (80070b4 <vApplicationGetIdleTaskMemory+0x14>)
 80070a6:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 80070a8:	2380      	movs	r3, #128	@ 0x80
 80070aa:	6013      	str	r3, [r2, #0]
}
 80070ac:	4770      	bx	lr
 80070ae:	bf00      	nop
 80070b0:	2000298c 	.word	0x2000298c
 80070b4:	2000278c 	.word	0x2000278c

080070b8 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 80070b8:	4b03      	ldr	r3, [pc, #12]	@ (80070c8 <vApplicationGetTimerTaskMemory+0x10>)
 80070ba:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 80070bc:	4b03      	ldr	r3, [pc, #12]	@ (80070cc <vApplicationGetTimerTaskMemory+0x14>)
 80070be:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 80070c0:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80070c4:	6013      	str	r3, [r2, #0]
}
 80070c6:	4770      	bx	lr
 80070c8:	2000272c 	.word	0x2000272c
 80070cc:	2000232c 	.word	0x2000232c

080070d0 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 80070d0:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 80070d2:	4b10      	ldr	r3, [pc, #64]	@ (8007114 <prvInsertBlockIntoFreeList+0x44>)
 80070d4:	461a      	mov	r2, r3
 80070d6:	681b      	ldr	r3, [r3, #0]
 80070d8:	4283      	cmp	r3, r0
 80070da:	d3fb      	bcc.n	80070d4 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 80070dc:	6854      	ldr	r4, [r2, #4]
 80070de:	1911      	adds	r1, r2, r4
 80070e0:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 80070e2:	bf01      	itttt	eq
 80070e4:	6841      	ldreq	r1, [r0, #4]
		pxBlockToInsert = pxIterator;
 80070e6:	4610      	moveq	r0, r2
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 80070e8:	1909      	addeq	r1, r1, r4
 80070ea:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 80070ec:	6844      	ldr	r4, [r0, #4]
 80070ee:	1901      	adds	r1, r0, r4
 80070f0:	428b      	cmp	r3, r1
 80070f2:	d10c      	bne.n	800710e <prvInsertBlockIntoFreeList+0x3e>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 80070f4:	4908      	ldr	r1, [pc, #32]	@ (8007118 <prvInsertBlockIntoFreeList+0x48>)
 80070f6:	6809      	ldr	r1, [r1, #0]
 80070f8:	428b      	cmp	r3, r1
 80070fa:	d003      	beq.n	8007104 <prvInsertBlockIntoFreeList+0x34>
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 80070fc:	6859      	ldr	r1, [r3, #4]
 80070fe:	4421      	add	r1, r4
 8007100:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8007102:	6819      	ldr	r1, [r3, #0]
		}
		else
		{
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
 8007104:	6001      	str	r1, [r0, #0]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8007106:	4290      	cmp	r0, r2
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8007108:	bf18      	it	ne
 800710a:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800710c:	bd10      	pop	{r4, pc}
 800710e:	4619      	mov	r1, r3
 8007110:	e7f8      	b.n	8007104 <prvInsertBlockIntoFreeList+0x34>
 8007112:	bf00      	nop
 8007114:	20002a08 	.word	0x20002a08
 8007118:	20002a04 	.word	0x20002a04

0800711c <pvPortMalloc>:
{
 800711c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007120:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8007122:	f001 f9af 	bl	8008484 <vTaskSuspendAll>
		if( pxEnd == NULL )
 8007126:	4942      	ldr	r1, [pc, #264]	@ (8007230 <pvPortMalloc+0x114>)
 8007128:	4d42      	ldr	r5, [pc, #264]	@ (8007234 <pvPortMalloc+0x118>)
 800712a:	680b      	ldr	r3, [r1, #0]
 800712c:	bb0b      	cbnz	r3, 8007172 <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 800712e:	4a42      	ldr	r2, [pc, #264]	@ (8007238 <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8007130:	0756      	lsls	r6, r2, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8007132:	bf1f      	itttt	ne
 8007134:	1dd0      	addne	r0, r2, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8007136:	f020 0007 	bicne.w	r0, r0, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 800713a:	f502 3280 	addne.w	r2, r2, #65536	@ 0x10000
 800713e:	1a13      	subne	r3, r2, r0
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8007140:	bf0c      	ite	eq
 8007142:	f44f 3380 	moveq.w	r3, #65536	@ 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8007146:	4602      	movne	r2, r0
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 8007148:	4413      	add	r3, r2
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800714a:	4e3c      	ldr	r6, [pc, #240]	@ (800723c <pvPortMalloc+0x120>)
	uxAddress -= xHeapStructSize;
 800714c:	3b08      	subs	r3, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800714e:	f023 0307 	bic.w	r3, r3, #7
	xStart.xBlockSize = ( size_t ) 0;
 8007152:	2000      	movs	r0, #0
 8007154:	6070      	str	r0, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8007156:	6032      	str	r2, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 8007158:	e9c3 0000 	strd	r0, r0, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800715c:	1a98      	subs	r0, r3, r2
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800715e:	e9c2 3000 	strd	r3, r0, [r2]
	pxEnd = ( void * ) uxAddress;
 8007162:	600b      	str	r3, [r1, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8007164:	4b36      	ldr	r3, [pc, #216]	@ (8007240 <pvPortMalloc+0x124>)
 8007166:	6018      	str	r0, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8007168:	4b36      	ldr	r3, [pc, #216]	@ (8007244 <pvPortMalloc+0x128>)
 800716a:	6018      	str	r0, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800716c:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 8007170:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8007172:	682e      	ldr	r6, [r5, #0]
 8007174:	4226      	tst	r6, r4
 8007176:	d155      	bne.n	8007224 <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 8007178:	2c00      	cmp	r4, #0
 800717a:	d046      	beq.n	800720a <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 800717c:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8007180:	0760      	lsls	r0, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8007182:	bf1c      	itt	ne
 8007184:	f023 0307 	bicne.w	r3, r3, #7
 8007188:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800718a:	2b00      	cmp	r3, #0
 800718c:	d04a      	beq.n	8007224 <pvPortMalloc+0x108>
 800718e:	4f2d      	ldr	r7, [pc, #180]	@ (8007244 <pvPortMalloc+0x128>)
 8007190:	683c      	ldr	r4, [r7, #0]
 8007192:	429c      	cmp	r4, r3
 8007194:	d346      	bcc.n	8007224 <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 8007196:	4a29      	ldr	r2, [pc, #164]	@ (800723c <pvPortMalloc+0x120>)
 8007198:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800719a:	6868      	ldr	r0, [r5, #4]
 800719c:	4298      	cmp	r0, r3
 800719e:	d204      	bcs.n	80071aa <pvPortMalloc+0x8e>
 80071a0:	f8d5 c000 	ldr.w	ip, [r5]
 80071a4:	f1bc 0f00 	cmp.w	ip, #0
 80071a8:	d115      	bne.n	80071d6 <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 80071aa:	6809      	ldr	r1, [r1, #0]
 80071ac:	42a9      	cmp	r1, r5
 80071ae:	d039      	beq.n	8007224 <pvPortMalloc+0x108>
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80071b0:	6829      	ldr	r1, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 80071b2:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80071b6:	6011      	str	r1, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 80071b8:	1ac2      	subs	r2, r0, r3
 80071ba:	2a10      	cmp	r2, #16
 80071bc:	d912      	bls.n	80071e4 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 80071be:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 80071c0:	0741      	lsls	r1, r0, #29
 80071c2:	d00b      	beq.n	80071dc <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 80071c4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80071c8:	f383 8811 	msr	BASEPRI, r3
 80071cc:	f3bf 8f6f 	isb	sy
 80071d0:	f3bf 8f4f 	dsb	sy
 80071d4:	e7fe      	b.n	80071d4 <pvPortMalloc+0xb8>
					pxPreviousBlock = pxBlock;
 80071d6:	462a      	mov	r2, r5
					pxBlock = pxBlock->pxNextFreeBlock;
 80071d8:	4665      	mov	r5, ip
 80071da:	e7de      	b.n	800719a <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 80071dc:	6042      	str	r2, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 80071de:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 80071e0:	f7ff ff76 	bl	80070d0 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80071e4:	686a      	ldr	r2, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80071e6:	4916      	ldr	r1, [pc, #88]	@ (8007240 <pvPortMalloc+0x124>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80071e8:	1aa4      	subs	r4, r4, r2
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 80071ea:	4316      	orrs	r6, r2
					xNumberOfSuccessfulAllocations++;
 80071ec:	4a16      	ldr	r2, [pc, #88]	@ (8007248 <pvPortMalloc+0x12c>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80071ee:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80071f0:	603c      	str	r4, [r7, #0]
					pxBlock->pxNextFreeBlock = NULL;
 80071f2:	2300      	movs	r3, #0
 80071f4:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 80071f6:	6813      	ldr	r3, [r2, #0]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 80071f8:	606e      	str	r6, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80071fa:	4284      	cmp	r4, r0
					xNumberOfSuccessfulAllocations++;
 80071fc:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8007200:	bf38      	it	cc
 8007202:	600c      	strcc	r4, [r1, #0]
					xNumberOfSuccessfulAllocations++;
 8007204:	6013      	str	r3, [r2, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8007206:	f108 0408 	add.w	r4, r8, #8
	( void ) xTaskResumeAll();
 800720a:	f001 f9df 	bl	80085cc <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800720e:	0763      	lsls	r3, r4, #29
 8007210:	d00a      	beq.n	8007228 <pvPortMalloc+0x10c>
 8007212:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007216:	f383 8811 	msr	BASEPRI, r3
 800721a:	f3bf 8f6f 	isb	sy
 800721e:	f3bf 8f4f 	dsb	sy
 8007222:	e7fe      	b.n	8007222 <pvPortMalloc+0x106>
void *pvReturn = NULL;
 8007224:	2400      	movs	r4, #0
 8007226:	e7f0      	b.n	800720a <pvPortMalloc+0xee>
}
 8007228:	4620      	mov	r0, r4
 800722a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800722e:	bf00      	nop
 8007230:	20002a04 	.word	0x20002a04
 8007234:	200029f0 	.word	0x200029f0
 8007238:	20002a10 	.word	0x20002a10
 800723c:	20002a08 	.word	0x20002a08
 8007240:	200029fc 	.word	0x200029fc
 8007244:	20002a00 	.word	0x20002a00
 8007248:	200029f8 	.word	0x200029f8

0800724c <vPortFree>:
{
 800724c:	b510      	push	{r4, lr}
	if( pv != NULL )
 800724e:	4604      	mov	r4, r0
 8007250:	b390      	cbz	r0, 80072b8 <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8007252:	4a1a      	ldr	r2, [pc, #104]	@ (80072bc <vPortFree+0x70>)
 8007254:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8007258:	6812      	ldr	r2, [r2, #0]
 800725a:	4213      	tst	r3, r2
 800725c:	d108      	bne.n	8007270 <vPortFree+0x24>
 800725e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007262:	f383 8811 	msr	BASEPRI, r3
 8007266:	f3bf 8f6f 	isb	sy
 800726a:	f3bf 8f4f 	dsb	sy
 800726e:	e7fe      	b.n	800726e <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8007270:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8007274:	b141      	cbz	r1, 8007288 <vPortFree+0x3c>
 8007276:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800727a:	f383 8811 	msr	BASEPRI, r3
 800727e:	f3bf 8f6f 	isb	sy
 8007282:	f3bf 8f4f 	dsb	sy
 8007286:	e7fe      	b.n	8007286 <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8007288:	ea23 0302 	bic.w	r3, r3, r2
 800728c:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8007290:	f001 f8f8 	bl	8008484 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8007294:	4a0a      	ldr	r2, [pc, #40]	@ (80072c0 <vPortFree+0x74>)
 8007296:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800729a:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800729c:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 80072a0:	440b      	add	r3, r1
 80072a2:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 80072a4:	f7ff ff14 	bl	80070d0 <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 80072a8:	4a06      	ldr	r2, [pc, #24]	@ (80072c4 <vPortFree+0x78>)
 80072aa:	6813      	ldr	r3, [r2, #0]
}
 80072ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 80072b0:	3301      	adds	r3, #1
 80072b2:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 80072b4:	f001 b98a 	b.w	80085cc <xTaskResumeAll>
}
 80072b8:	bd10      	pop	{r4, pc}
 80072ba:	bf00      	nop
 80072bc:	200029f0 	.word	0x200029f0
 80072c0:	20002a00 	.word	0x20002a00
 80072c4:	200029f4 	.word	0x200029f4

080072c8 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80072c8:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 80072cc:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80072d0:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80072d4:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80072d6:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 80072d8:	2300      	movs	r3, #0
 80072da:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 80072dc:	4770      	bx	lr

080072de <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 80072de:	2300      	movs	r3, #0
 80072e0:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 80072e2:	4770      	bx	lr

080072e4 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 80072e4:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 80072e6:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 80072e8:	689a      	ldr	r2, [r3, #8]
 80072ea:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 80072ec:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 80072ee:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 80072f0:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 80072f2:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 80072f4:	3301      	adds	r3, #1
 80072f6:	6003      	str	r3, [r0, #0]
}
 80072f8:	4770      	bx	lr

080072fa <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 80072fa:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 80072fc:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 80072fe:	1c63      	adds	r3, r4, #1
 8007300:	d10a      	bne.n	8007318 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8007302:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8007304:	685a      	ldr	r2, [r3, #4]
 8007306:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8007308:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800730a:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800730c:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800730e:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8007310:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8007312:	3301      	adds	r3, #1
 8007314:	6003      	str	r3, [r0, #0]
}
 8007316:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8007318:	f100 0208 	add.w	r2, r0, #8
 800731c:	4613      	mov	r3, r2
 800731e:	6852      	ldr	r2, [r2, #4]
 8007320:	6815      	ldr	r5, [r2, #0]
 8007322:	42a5      	cmp	r5, r4
 8007324:	d9fa      	bls.n	800731c <vListInsert+0x22>
 8007326:	e7ed      	b.n	8007304 <vListInsert+0xa>

08007328 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8007328:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 800732c:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800732e:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8007330:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8007332:	6859      	ldr	r1, [r3, #4]
 8007334:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8007336:	bf08      	it	eq
 8007338:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 800733a:	2200      	movs	r2, #0
 800733c:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800733e:	681a      	ldr	r2, [r3, #0]
 8007340:	3a01      	subs	r2, #1
 8007342:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8007344:	6818      	ldr	r0, [r3, #0]
}
 8007346:	4770      	bx	lr

08007348 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8007348:	4808      	ldr	r0, [pc, #32]	@ (800736c <prvPortStartFirstTask+0x24>)
 800734a:	6800      	ldr	r0, [r0, #0]
 800734c:	6800      	ldr	r0, [r0, #0]
 800734e:	f380 8808 	msr	MSP, r0
 8007352:	f04f 0000 	mov.w	r0, #0
 8007356:	f380 8814 	msr	CONTROL, r0
 800735a:	b662      	cpsie	i
 800735c:	b661      	cpsie	f
 800735e:	f3bf 8f4f 	dsb	sy
 8007362:	f3bf 8f6f 	isb	sy
 8007366:	df00      	svc	0
 8007368:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800736a:	0000      	.short	0x0000
 800736c:	e000ed08 	.word	0xe000ed08

08007370 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8007370:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 8007380 <vPortEnableVFP+0x10>
 8007374:	6801      	ldr	r1, [r0, #0]
 8007376:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800737a:	6001      	str	r1, [r0, #0]
 800737c:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800737e:	0000      	.short	0x0000
 8007380:	e000ed88 	.word	0xe000ed88

08007384 <prvTaskExitError>:
{
 8007384:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8007386:	2300      	movs	r3, #0
 8007388:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800738a:	4b0d      	ldr	r3, [pc, #52]	@ (80073c0 <prvTaskExitError+0x3c>)
 800738c:	681b      	ldr	r3, [r3, #0]
 800738e:	3301      	adds	r3, #1
 8007390:	d008      	beq.n	80073a4 <prvTaskExitError+0x20>
 8007392:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007396:	f383 8811 	msr	BASEPRI, r3
 800739a:	f3bf 8f6f 	isb	sy
 800739e:	f3bf 8f4f 	dsb	sy
 80073a2:	e7fe      	b.n	80073a2 <prvTaskExitError+0x1e>
 80073a4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80073a8:	f383 8811 	msr	BASEPRI, r3
 80073ac:	f3bf 8f6f 	isb	sy
 80073b0:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 80073b4:	9b01      	ldr	r3, [sp, #4]
 80073b6:	2b00      	cmp	r3, #0
 80073b8:	d0fc      	beq.n	80073b4 <prvTaskExitError+0x30>
}
 80073ba:	b002      	add	sp, #8
 80073bc:	4770      	bx	lr
 80073be:	bf00      	nop
 80073c0:	200000d0 	.word	0x200000d0

080073c4 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 80073c4:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 80073c8:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 80073cc:	4b07      	ldr	r3, [pc, #28]	@ (80073ec <pxPortInitialiseStack+0x28>)
 80073ce:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 80073d2:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 80073d6:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 80073da:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 80073de:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 80073e2:	f840 3c24 	str.w	r3, [r0, #-36]
}
 80073e6:	3844      	subs	r0, #68	@ 0x44
 80073e8:	4770      	bx	lr
 80073ea:	bf00      	nop
 80073ec:	08007385 	.word	0x08007385

080073f0 <SVC_Handler>:
	__asm volatile (
 80073f0:	4b07      	ldr	r3, [pc, #28]	@ (8007410 <pxCurrentTCBConst2>)
 80073f2:	6819      	ldr	r1, [r3, #0]
 80073f4:	6808      	ldr	r0, [r1, #0]
 80073f6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80073fa:	f380 8809 	msr	PSP, r0
 80073fe:	f3bf 8f6f 	isb	sy
 8007402:	f04f 0000 	mov.w	r0, #0
 8007406:	f380 8811 	msr	BASEPRI, r0
 800740a:	4770      	bx	lr
 800740c:	f3af 8000 	nop.w

08007410 <pxCurrentTCBConst2>:
 8007410:	20012f50 	.word	0x20012f50

08007414 <vPortEnterCritical>:
 8007414:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007418:	f383 8811 	msr	BASEPRI, r3
 800741c:	f3bf 8f6f 	isb	sy
 8007420:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8007424:	4a0a      	ldr	r2, [pc, #40]	@ (8007450 <vPortEnterCritical+0x3c>)
 8007426:	6813      	ldr	r3, [r2, #0]
 8007428:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800742a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800742c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800742e:	d10e      	bne.n	800744e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8007430:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007434:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
 8007438:	b2db      	uxtb	r3, r3
 800743a:	b143      	cbz	r3, 800744e <vPortEnterCritical+0x3a>
 800743c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007440:	f383 8811 	msr	BASEPRI, r3
 8007444:	f3bf 8f6f 	isb	sy
 8007448:	f3bf 8f4f 	dsb	sy
 800744c:	e7fe      	b.n	800744c <vPortEnterCritical+0x38>
}
 800744e:	4770      	bx	lr
 8007450:	200000d0 	.word	0x200000d0

08007454 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8007454:	4a08      	ldr	r2, [pc, #32]	@ (8007478 <vPortExitCritical+0x24>)
 8007456:	6813      	ldr	r3, [r2, #0]
 8007458:	b943      	cbnz	r3, 800746c <vPortExitCritical+0x18>
 800745a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800745e:	f383 8811 	msr	BASEPRI, r3
 8007462:	f3bf 8f6f 	isb	sy
 8007466:	f3bf 8f4f 	dsb	sy
 800746a:	e7fe      	b.n	800746a <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800746c:	3b01      	subs	r3, #1
 800746e:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8007470:	b90b      	cbnz	r3, 8007476 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8007472:	f383 8811 	msr	BASEPRI, r3
}
 8007476:	4770      	bx	lr
 8007478:	200000d0 	.word	0x200000d0
 800747c:	00000000 	.word	0x00000000

08007480 <PendSV_Handler>:
	__asm volatile
 8007480:	f3ef 8009 	mrs	r0, PSP
 8007484:	f3bf 8f6f 	isb	sy
 8007488:	4b15      	ldr	r3, [pc, #84]	@ (80074e0 <pxCurrentTCBConst>)
 800748a:	681a      	ldr	r2, [r3, #0]
 800748c:	f01e 0f10 	tst.w	lr, #16
 8007490:	bf08      	it	eq
 8007492:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8007496:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800749a:	6010      	str	r0, [r2, #0]
 800749c:	e92d 0009 	stmdb	sp!, {r0, r3}
 80074a0:	f04f 0050 	mov.w	r0, #80	@ 0x50
 80074a4:	f380 8811 	msr	BASEPRI, r0
 80074a8:	f3bf 8f4f 	dsb	sy
 80074ac:	f3bf 8f6f 	isb	sy
 80074b0:	f001 f924 	bl	80086fc <vTaskSwitchContext>
 80074b4:	f04f 0000 	mov.w	r0, #0
 80074b8:	f380 8811 	msr	BASEPRI, r0
 80074bc:	bc09      	pop	{r0, r3}
 80074be:	6819      	ldr	r1, [r3, #0]
 80074c0:	6808      	ldr	r0, [r1, #0]
 80074c2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80074c6:	f01e 0f10 	tst.w	lr, #16
 80074ca:	bf08      	it	eq
 80074cc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 80074d0:	f380 8809 	msr	PSP, r0
 80074d4:	f3bf 8f6f 	isb	sy
 80074d8:	4770      	bx	lr
 80074da:	bf00      	nop
 80074dc:	f3af 8000 	nop.w

080074e0 <pxCurrentTCBConst>:
 80074e0:	20012f50 	.word	0x20012f50

080074e4 <xPortSysTickHandler>:
{
 80074e4:	b508      	push	{r3, lr}
	__asm volatile
 80074e6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80074ea:	f383 8811 	msr	BASEPRI, r3
 80074ee:	f3bf 8f6f 	isb	sy
 80074f2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 80074f6:	f000 ffd3 	bl	80084a0 <xTaskIncrementTick>
 80074fa:	b128      	cbz	r0, 8007508 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 80074fc:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007500:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007504:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
	__asm volatile
 8007508:	2300      	movs	r3, #0
 800750a:	f383 8811 	msr	BASEPRI, r3
}
 800750e:	bd08      	pop	{r3, pc}

08007510 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8007510:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
 8007514:	2300      	movs	r3, #0
 8007516:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8007518:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800751a:	4b05      	ldr	r3, [pc, #20]	@ (8007530 <vPortSetupTimerInterrupt+0x20>)
 800751c:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8007520:	681b      	ldr	r3, [r3, #0]
 8007522:	fbb3 f3f1 	udiv	r3, r3, r1
 8007526:	3b01      	subs	r3, #1
 8007528:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800752a:	2307      	movs	r3, #7
 800752c:	6113      	str	r3, [r2, #16]
}
 800752e:	4770      	bx	lr
 8007530:	200000c4 	.word	0x200000c4

08007534 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8007534:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
{
 8007538:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800753a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	@ 0xd00
 800753e:	4a38      	ldr	r2, [pc, #224]	@ (8007620 <xPortStartScheduler+0xec>)
 8007540:	4291      	cmp	r1, r2
 8007542:	d108      	bne.n	8007556 <xPortStartScheduler+0x22>
	__asm volatile
 8007544:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007548:	f383 8811 	msr	BASEPRI, r3
 800754c:	f3bf 8f6f 	isb	sy
 8007550:	f3bf 8f4f 	dsb	sy
 8007554:	e7fe      	b.n	8007554 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8007556:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	@ 0xd00
 800755a:	4b32      	ldr	r3, [pc, #200]	@ (8007624 <xPortStartScheduler+0xf0>)
 800755c:	429a      	cmp	r2, r3
 800755e:	d108      	bne.n	8007572 <xPortStartScheduler+0x3e>
 8007560:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007564:	f383 8811 	msr	BASEPRI, r3
 8007568:	f3bf 8f6f 	isb	sy
 800756c:	f3bf 8f4f 	dsb	sy
 8007570:	e7fe      	b.n	8007570 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8007572:	4b2d      	ldr	r3, [pc, #180]	@ (8007628 <xPortStartScheduler+0xf4>)
 8007574:	781a      	ldrb	r2, [r3, #0]
 8007576:	b2d2      	uxtb	r2, r2
 8007578:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800757a:	22ff      	movs	r2, #255	@ 0xff
 800757c:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800757e:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8007580:	4a2a      	ldr	r2, [pc, #168]	@ (800762c <xPortStartScheduler+0xf8>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8007582:	b2db      	uxtb	r3, r3
 8007584:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8007588:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800758c:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 8007590:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8007592:	4a27      	ldr	r2, [pc, #156]	@ (8007630 <xPortStartScheduler+0xfc>)
 8007594:	2307      	movs	r3, #7
 8007596:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8007598:	f89d 1003 	ldrb.w	r1, [sp, #3]
			ulMaxPRIGROUPValue--;
 800759c:	6813      	ldr	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800759e:	0609      	lsls	r1, r1, #24
 80075a0:	d40a      	bmi.n	80075b8 <xPortStartScheduler+0x84>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 80075a2:	2b03      	cmp	r3, #3
 80075a4:	d011      	beq.n	80075ca <xPortStartScheduler+0x96>
 80075a6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80075aa:	f383 8811 	msr	BASEPRI, r3
 80075ae:	f3bf 8f6f 	isb	sy
 80075b2:	f3bf 8f4f 	dsb	sy
 80075b6:	e7fe      	b.n	80075b6 <xPortStartScheduler+0x82>
			ulMaxPRIGROUPValue--;
 80075b8:	3b01      	subs	r3, #1
 80075ba:	6013      	str	r3, [r2, #0]
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 80075bc:	f89d 3003 	ldrb.w	r3, [sp, #3]
 80075c0:	005b      	lsls	r3, r3, #1
 80075c2:	b2db      	uxtb	r3, r3
 80075c4:	f88d 3003 	strb.w	r3, [sp, #3]
 80075c8:	e7e6      	b.n	8007598 <xPortStartScheduler+0x64>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 80075ca:	f44f 7340 	mov.w	r3, #768	@ 0x300
 80075ce:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 80075d0:	9b01      	ldr	r3, [sp, #4]
 80075d2:	4a15      	ldr	r2, [pc, #84]	@ (8007628 <xPortStartScheduler+0xf4>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 80075d4:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 80075d8:	b2db      	uxtb	r3, r3
 80075da:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 80075dc:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 80075e0:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 80075e4:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 80075e8:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
 80075ec:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
 80075f0:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	vPortSetupTimerInterrupt();
 80075f4:	f7ff ff8c 	bl	8007510 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 80075f8:	4b0e      	ldr	r3, [pc, #56]	@ (8007634 <xPortStartScheduler+0x100>)
 80075fa:	2500      	movs	r5, #0
 80075fc:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 80075fe:	f7ff feb7 	bl	8007370 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 8007602:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
 8007606:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
 800760a:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
	prvPortStartFirstTask();
 800760e:	f7ff fe9b 	bl	8007348 <prvPortStartFirstTask>
	vTaskSwitchContext();
 8007612:	f001 f873 	bl	80086fc <vTaskSwitchContext>
	prvTaskExitError();
 8007616:	f7ff feb5 	bl	8007384 <prvTaskExitError>
}
 800761a:	4628      	mov	r0, r5
 800761c:	b003      	add	sp, #12
 800761e:	bd30      	pop	{r4, r5, pc}
 8007620:	410fc271 	.word	0x410fc271
 8007624:	410fc270 	.word	0x410fc270
 8007628:	e000e400 	.word	0xe000e400
 800762c:	20012a14 	.word	0x20012a14
 8007630:	20012a10 	.word	0x20012a10
 8007634:	200000d0 	.word	0x200000d0

08007638 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8007638:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800763c:	2b0f      	cmp	r3, #15
 800763e:	d90e      	bls.n	800765e <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8007640:	4a11      	ldr	r2, [pc, #68]	@ (8007688 <vPortValidateInterruptPriority+0x50>)
 8007642:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8007644:	4a11      	ldr	r2, [pc, #68]	@ (800768c <vPortValidateInterruptPriority+0x54>)
 8007646:	7812      	ldrb	r2, [r2, #0]
 8007648:	429a      	cmp	r2, r3
 800764a:	d908      	bls.n	800765e <vPortValidateInterruptPriority+0x26>
 800764c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007650:	f383 8811 	msr	BASEPRI, r3
 8007654:	f3bf 8f6f 	isb	sy
 8007658:	f3bf 8f4f 	dsb	sy
 800765c:	e7fe      	b.n	800765c <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800765e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007662:	4a0b      	ldr	r2, [pc, #44]	@ (8007690 <vPortValidateInterruptPriority+0x58>)
 8007664:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
 8007668:	6812      	ldr	r2, [r2, #0]
 800766a:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 800766e:	4293      	cmp	r3, r2
 8007670:	d908      	bls.n	8007684 <vPortValidateInterruptPriority+0x4c>
 8007672:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007676:	f383 8811 	msr	BASEPRI, r3
 800767a:	f3bf 8f6f 	isb	sy
 800767e:	f3bf 8f4f 	dsb	sy
 8007682:	e7fe      	b.n	8007682 <vPortValidateInterruptPriority+0x4a>
	}
 8007684:	4770      	bx	lr
 8007686:	bf00      	nop
 8007688:	e000e3f0 	.word	0xe000e3f0
 800768c:	20012a14 	.word	0x20012a14
 8007690:	20012a10 	.word	0x20012a10

08007694 <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 8007694:	b510      	push	{r4, lr}
 8007696:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8007698:	f7ff febc 	bl	8007414 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800769c:	6ba4      	ldr	r4, [r4, #56]	@ 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800769e:	f7ff fed9 	bl	8007454 <vPortExitCritical>

	return xReturn;
}
 80076a2:	fab4 f084 	clz	r0, r4
 80076a6:	0940      	lsrs	r0, r0, #5
 80076a8:	bd10      	pop	{r4, pc}

080076aa <prvCopyDataToQueue>:
{
 80076aa:	b570      	push	{r4, r5, r6, lr}
 80076ac:	4616      	mov	r6, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80076ae:	6c02      	ldr	r2, [r0, #64]	@ 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80076b0:	6b85      	ldr	r5, [r0, #56]	@ 0x38
{
 80076b2:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80076b4:	b942      	cbnz	r2, 80076c8 <prvCopyDataToQueue+0x1e>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80076b6:	6806      	ldr	r6, [r0, #0]
 80076b8:	b99e      	cbnz	r6, 80076e2 <prvCopyDataToQueue+0x38>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 80076ba:	6880      	ldr	r0, [r0, #8]
 80076bc:	f001 f96c 	bl	8008998 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 80076c0:	60a6      	str	r6, [r4, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80076c2:	3501      	adds	r5, #1
 80076c4:	63a5      	str	r5, [r4, #56]	@ 0x38
}
 80076c6:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 80076c8:	b96e      	cbnz	r6, 80076e6 <prvCopyDataToQueue+0x3c>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80076ca:	6840      	ldr	r0, [r0, #4]
 80076cc:	f01a fb13 	bl	8021cf6 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80076d0:	6863      	ldr	r3, [r4, #4]
 80076d2:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 80076d4:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80076d6:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80076d8:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80076da:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 80076dc:	bf24      	itt	cs
 80076de:	6823      	ldrcs	r3, [r4, #0]
 80076e0:	6063      	strcs	r3, [r4, #4]
BaseType_t xReturn = pdFALSE;
 80076e2:	2000      	movs	r0, #0
 80076e4:	e7ed      	b.n	80076c2 <prvCopyDataToQueue+0x18>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 80076e6:	68c0      	ldr	r0, [r0, #12]
 80076e8:	f01a fb05 	bl	8021cf6 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 80076ec:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 80076ee:	68e3      	ldr	r3, [r4, #12]
 80076f0:	4251      	negs	r1, r2
 80076f2:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80076f4:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 80076f6:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80076f8:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 80076fa:	bf3e      	ittt	cc
 80076fc:	68a3      	ldrcc	r3, [r4, #8]
 80076fe:	185b      	addcc	r3, r3, r1
 8007700:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 8007702:	2e02      	cmp	r6, #2
 8007704:	d1ed      	bne.n	80076e2 <prvCopyDataToQueue+0x38>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007706:	b10d      	cbz	r5, 800770c <prvCopyDataToQueue+0x62>
				--uxMessagesWaiting;
 8007708:	3d01      	subs	r5, #1
 800770a:	e7ea      	b.n	80076e2 <prvCopyDataToQueue+0x38>
BaseType_t xReturn = pdFALSE;
 800770c:	4628      	mov	r0, r5
 800770e:	e7d8      	b.n	80076c2 <prvCopyDataToQueue+0x18>

08007710 <prvCopyDataFromQueue>:
{
 8007710:	4603      	mov	r3, r0
 8007712:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007714:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
{
 8007716:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007718:	b16a      	cbz	r2, 8007736 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800771a:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800771c:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800771e:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007720:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8007722:	bf28      	it	cs
 8007724:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007726:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8007728:	bf28      	it	cs
 800772a:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800772c:	68d9      	ldr	r1, [r3, #12]
}
 800772e:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007732:	f01a bae0 	b.w	8021cf6 <memcpy>
}
 8007736:	f85d 4b04 	ldr.w	r4, [sp], #4
 800773a:	4770      	bx	lr

0800773c <prvUnlockQueue>:
{
 800773c:	b570      	push	{r4, r5, r6, lr}
 800773e:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8007740:	f7ff fe68 	bl	8007414 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8007744:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007748:	f104 0624 	add.w	r6, r4, #36	@ 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 800774c:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800774e:	2d00      	cmp	r5, #0
 8007750:	dd01      	ble.n	8007756 <prvUnlockQueue+0x1a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007752:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8007754:	b9b3      	cbnz	r3, 8007784 <prvUnlockQueue+0x48>
		pxQueue->cTxLock = queueUNLOCKED;
 8007756:	23ff      	movs	r3, #255	@ 0xff
 8007758:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
 800775c:	f7ff fe7a 	bl	8007454 <vPortExitCritical>
	taskENTER_CRITICAL();
 8007760:	f7ff fe58 	bl	8007414 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8007764:	f894 5044 	ldrb.w	r5, [r4, #68]	@ 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007768:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 800776c:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800776e:	2d00      	cmp	r5, #0
 8007770:	dd01      	ble.n	8007776 <prvUnlockQueue+0x3a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007772:	6923      	ldr	r3, [r4, #16]
 8007774:	b97b      	cbnz	r3, 8007796 <prvUnlockQueue+0x5a>
		pxQueue->cRxLock = queueUNLOCKED;
 8007776:	23ff      	movs	r3, #255	@ 0xff
 8007778:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
}
 800777c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8007780:	f7ff be68 	b.w	8007454 <vPortExitCritical>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007784:	4630      	mov	r0, r6
 8007786:	f001 f82b 	bl	80087e0 <xTaskRemoveFromEventList>
 800778a:	b108      	cbz	r0, 8007790 <prvUnlockQueue+0x54>
						vTaskMissedYield();
 800778c:	f001 f8b0 	bl	80088f0 <vTaskMissedYield>
			--cTxLock;
 8007790:	3d01      	subs	r5, #1
 8007792:	b26d      	sxtb	r5, r5
 8007794:	e7db      	b.n	800774e <prvUnlockQueue+0x12>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007796:	4630      	mov	r0, r6
 8007798:	f001 f822 	bl	80087e0 <xTaskRemoveFromEventList>
 800779c:	b108      	cbz	r0, 80077a2 <prvUnlockQueue+0x66>
					vTaskMissedYield();
 800779e:	f001 f8a7 	bl	80088f0 <vTaskMissedYield>
				--cRxLock;
 80077a2:	3d01      	subs	r5, #1
 80077a4:	b26d      	sxtb	r5, r5
 80077a6:	e7e2      	b.n	800776e <prvUnlockQueue+0x32>

080077a8 <xQueueGenericReset>:
{
 80077a8:	b538      	push	{r3, r4, r5, lr}
 80077aa:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 80077ac:	4604      	mov	r4, r0
 80077ae:	b940      	cbnz	r0, 80077c2 <xQueueGenericReset+0x1a>
 80077b0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80077b4:	f383 8811 	msr	BASEPRI, r3
 80077b8:	f3bf 8f6f 	isb	sy
 80077bc:	f3bf 8f4f 	dsb	sy
 80077c0:	e7fe      	b.n	80077c0 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 80077c2:	f7ff fe27 	bl	8007414 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80077c6:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
 80077ca:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 80077cc:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80077ce:	434b      	muls	r3, r1
 80077d0:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80077d2:	1a5b      	subs	r3, r3, r1
 80077d4:	441a      	add	r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80077d6:	60a0      	str	r0, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 80077d8:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 80077da:	2000      	movs	r0, #0
 80077dc:	63a0      	str	r0, [r4, #56]	@ 0x38
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80077de:	60e2      	str	r2, [r4, #12]
		pxQueue->cRxLock = queueUNLOCKED;
 80077e0:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 80077e4:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
		if( xNewQueue == pdFALSE )
 80077e8:	b9a5      	cbnz	r5, 8007814 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80077ea:	6923      	ldr	r3, [r4, #16]
 80077ec:	b173      	cbz	r3, 800780c <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80077ee:	f104 0010 	add.w	r0, r4, #16
 80077f2:	f000 fff5 	bl	80087e0 <xTaskRemoveFromEventList>
 80077f6:	b148      	cbz	r0, 800780c <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 80077f8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80077fc:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007800:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007804:	f3bf 8f4f 	dsb	sy
 8007808:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800780c:	f7ff fe22 	bl	8007454 <vPortExitCritical>
}
 8007810:	2001      	movs	r0, #1
 8007812:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8007814:	f104 0010 	add.w	r0, r4, #16
 8007818:	f7ff fd56 	bl	80072c8 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800781c:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8007820:	f7ff fd52 	bl	80072c8 <vListInitialise>
 8007824:	e7f2      	b.n	800780c <xQueueGenericReset+0x64>

08007826 <xQueueGenericCreateStatic>:
	{
 8007826:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007828:	460d      	mov	r5, r1
 800782a:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800782c:	b940      	cbnz	r0, 8007840 <xQueueGenericCreateStatic+0x1a>
 800782e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007832:	f383 8811 	msr	BASEPRI, r3
 8007836:	f3bf 8f6f 	isb	sy
 800783a:	f3bf 8f4f 	dsb	sy
 800783e:	e7fe      	b.n	800783e <xQueueGenericCreateStatic+0x18>
		configASSERT( pxStaticQueue != NULL );
 8007840:	b943      	cbnz	r3, 8007854 <xQueueGenericCreateStatic+0x2e>
 8007842:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007846:	f383 8811 	msr	BASEPRI, r3
 800784a:	f3bf 8f6f 	isb	sy
 800784e:	f3bf 8f4f 	dsb	sy
 8007852:	e7fe      	b.n	8007852 <xQueueGenericCreateStatic+0x2c>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8007854:	b14a      	cbz	r2, 800786a <xQueueGenericCreateStatic+0x44>
 8007856:	b991      	cbnz	r1, 800787e <xQueueGenericCreateStatic+0x58>
 8007858:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800785c:	f383 8811 	msr	BASEPRI, r3
 8007860:	f3bf 8f6f 	isb	sy
 8007864:	f3bf 8f4f 	dsb	sy
 8007868:	e7fe      	b.n	8007868 <xQueueGenericCreateStatic+0x42>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800786a:	b141      	cbz	r1, 800787e <xQueueGenericCreateStatic+0x58>
 800786c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007870:	f383 8811 	msr	BASEPRI, r3
 8007874:	f3bf 8f6f 	isb	sy
 8007878:	f3bf 8f4f 	dsb	sy
 800787c:	e7fe      	b.n	800787c <xQueueGenericCreateStatic+0x56>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800787e:	2350      	movs	r3, #80	@ 0x50
 8007880:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8007882:	9b01      	ldr	r3, [sp, #4]
 8007884:	2b50      	cmp	r3, #80	@ 0x50
 8007886:	d008      	beq.n	800789a <xQueueGenericCreateStatic+0x74>
 8007888:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800788c:	f383 8811 	msr	BASEPRI, r3
 8007890:	f3bf 8f6f 	isb	sy
 8007894:	f3bf 8f4f 	dsb	sy
 8007898:	e7fe      	b.n	8007898 <xQueueGenericCreateStatic+0x72>
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800789a:	2101      	movs	r1, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800789c:	2d00      	cmp	r5, #0
 800789e:	bf08      	it	eq
 80078a0:	4622      	moveq	r2, r4
	pxNewQueue->uxItemSize = uxItemSize;
 80078a2:	e9c4 050f 	strd	r0, r5, [r4, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80078a6:	f884 1046 	strb.w	r1, [r4, #70]	@ 0x46
 80078aa:	6022      	str	r2, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80078ac:	4620      	mov	r0, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 80078ae:	9b01      	ldr	r3, [sp, #4]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80078b0:	f7ff ff7a 	bl	80077a8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 80078b4:	f89d 3018 	ldrb.w	r3, [sp, #24]
 80078b8:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
	}
 80078bc:	4620      	mov	r0, r4
 80078be:	b003      	add	sp, #12
 80078c0:	bd30      	pop	{r4, r5, pc}

080078c2 <xQueueGenericCreate>:
	{
 80078c2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80078c4:	460d      	mov	r5, r1
 80078c6:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 80078c8:	4606      	mov	r6, r0
 80078ca:	b940      	cbnz	r0, 80078de <xQueueGenericCreate+0x1c>
 80078cc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80078d0:	f383 8811 	msr	BASEPRI, r3
 80078d4:	f3bf 8f6f 	isb	sy
 80078d8:	f3bf 8f4f 	dsb	sy
 80078dc:	e7fe      	b.n	80078dc <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80078de:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 80078e0:	3050      	adds	r0, #80	@ 0x50
 80078e2:	f7ff fc1b 	bl	800711c <pvPortMalloc>
		if( pxNewQueue != NULL )
 80078e6:	4604      	mov	r4, r0
 80078e8:	b170      	cbz	r0, 8007908 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 80078ea:	2300      	movs	r3, #0
 80078ec:	f880 3046 	strb.w	r3, [r0, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 80078f0:	b165      	cbz	r5, 800790c <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80078f2:	f100 0350 	add.w	r3, r0, #80	@ 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 80078f6:	e9c4 650f 	strd	r6, r5, [r4, #60]	@ 0x3c
 80078fa:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80078fc:	2101      	movs	r1, #1
 80078fe:	4620      	mov	r0, r4
 8007900:	f7ff ff52 	bl	80077a8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8007904:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
	}
 8007908:	4620      	mov	r0, r4
 800790a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800790c:	4603      	mov	r3, r0
 800790e:	e7f2      	b.n	80078f6 <xQueueGenericCreate+0x34>

08007910 <xQueueCreateCountingSemaphoreStatic>:
	{
 8007910:	b513      	push	{r0, r1, r4, lr}
 8007912:	4613      	mov	r3, r2
 8007914:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8007916:	b940      	cbnz	r0, 800792a <xQueueCreateCountingSemaphoreStatic+0x1a>
 8007918:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800791c:	f383 8811 	msr	BASEPRI, r3
 8007920:	f3bf 8f6f 	isb	sy
 8007924:	f3bf 8f4f 	dsb	sy
 8007928:	e7fe      	b.n	8007928 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 800792a:	4288      	cmp	r0, r1
 800792c:	d208      	bcs.n	8007940 <xQueueCreateCountingSemaphoreStatic+0x30>
 800792e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007932:	f383 8811 	msr	BASEPRI, r3
 8007936:	f3bf 8f6f 	isb	sy
 800793a:	f3bf 8f4f 	dsb	sy
 800793e:	e7fe      	b.n	800793e <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8007940:	2202      	movs	r2, #2
 8007942:	9200      	str	r2, [sp, #0]
 8007944:	2200      	movs	r2, #0
 8007946:	4611      	mov	r1, r2
 8007948:	f7ff ff6d 	bl	8007826 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800794c:	b100      	cbz	r0, 8007950 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800794e:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 8007950:	b002      	add	sp, #8
 8007952:	bd10      	pop	{r4, pc}

08007954 <xQueueCreateCountingSemaphore>:
	{
 8007954:	b510      	push	{r4, lr}
 8007956:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8007958:	b940      	cbnz	r0, 800796c <xQueueCreateCountingSemaphore+0x18>
 800795a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800795e:	f383 8811 	msr	BASEPRI, r3
 8007962:	f3bf 8f6f 	isb	sy
 8007966:	f3bf 8f4f 	dsb	sy
 800796a:	e7fe      	b.n	800796a <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 800796c:	4288      	cmp	r0, r1
 800796e:	d208      	bcs.n	8007982 <xQueueCreateCountingSemaphore+0x2e>
 8007970:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007974:	f383 8811 	msr	BASEPRI, r3
 8007978:	f3bf 8f6f 	isb	sy
 800797c:	f3bf 8f4f 	dsb	sy
 8007980:	e7fe      	b.n	8007980 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8007982:	2202      	movs	r2, #2
 8007984:	2100      	movs	r1, #0
 8007986:	f7ff ff9c 	bl	80078c2 <xQueueGenericCreate>
		if( xHandle != NULL )
 800798a:	b100      	cbz	r0, 800798e <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800798c:	6384      	str	r4, [r0, #56]	@ 0x38
	}
 800798e:	bd10      	pop	{r4, pc}

08007990 <xQueueGenericSend>:
{
 8007990:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8007994:	460f      	mov	r7, r1
 8007996:	9201      	str	r2, [sp, #4]
 8007998:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 800799a:	4604      	mov	r4, r0
 800799c:	b940      	cbnz	r0, 80079b0 <xQueueGenericSend+0x20>
 800799e:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80079a2:	f383 8811 	msr	BASEPRI, r3
 80079a6:	f3bf 8f6f 	isb	sy
 80079aa:	f3bf 8f4f 	dsb	sy
 80079ae:	e7fe      	b.n	80079ae <xQueueGenericSend+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80079b0:	b951      	cbnz	r1, 80079c8 <xQueueGenericSend+0x38>
 80079b2:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80079b4:	b143      	cbz	r3, 80079c8 <xQueueGenericSend+0x38>
 80079b6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80079ba:	f383 8811 	msr	BASEPRI, r3
 80079be:	f3bf 8f6f 	isb	sy
 80079c2:	f3bf 8f4f 	dsb	sy
 80079c6:	e7fe      	b.n	80079c6 <xQueueGenericSend+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80079c8:	2e02      	cmp	r6, #2
 80079ca:	d10b      	bne.n	80079e4 <xQueueGenericSend+0x54>
 80079cc:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80079ce:	2b01      	cmp	r3, #1
 80079d0:	d008      	beq.n	80079e4 <xQueueGenericSend+0x54>
 80079d2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80079d6:	f383 8811 	msr	BASEPRI, r3
 80079da:	f3bf 8f6f 	isb	sy
 80079de:	f3bf 8f4f 	dsb	sy
 80079e2:	e7fe      	b.n	80079e2 <xQueueGenericSend+0x52>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80079e4:	f000 ff8a 	bl	80088fc <xTaskGetSchedulerState>
 80079e8:	4605      	mov	r5, r0
 80079ea:	b320      	cbz	r0, 8007a36 <xQueueGenericSend+0xa6>
 80079ec:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 80079ee:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 80079f2:	f7ff fd0f 	bl	8007414 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80079f6:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 80079f8:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80079fa:	429a      	cmp	r2, r3
 80079fc:	d227      	bcs.n	8007a4e <xQueueGenericSend+0xbe>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80079fe:	4632      	mov	r2, r6
 8007a00:	4639      	mov	r1, r7
 8007a02:	4620      	mov	r0, r4
 8007a04:	f7ff fe51 	bl	80076aa <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007a08:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8007a0a:	b11b      	cbz	r3, 8007a14 <xQueueGenericSend+0x84>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007a0c:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8007a10:	f000 fee6 	bl	80087e0 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8007a14:	b148      	cbz	r0, 8007a2a <xQueueGenericSend+0x9a>
						queueYIELD_IF_USING_PREEMPTION();
 8007a16:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007a1a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007a1e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007a22:	f3bf 8f4f 	dsb	sy
 8007a26:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8007a2a:	f7ff fd13 	bl	8007454 <vPortExitCritical>
				return pdPASS;
 8007a2e:	2001      	movs	r0, #1
}
 8007a30:	b004      	add	sp, #16
 8007a32:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007a36:	9b01      	ldr	r3, [sp, #4]
 8007a38:	2b00      	cmp	r3, #0
 8007a3a:	d0d8      	beq.n	80079ee <xQueueGenericSend+0x5e>
 8007a3c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007a40:	f383 8811 	msr	BASEPRI, r3
 8007a44:	f3bf 8f6f 	isb	sy
 8007a48:	f3bf 8f4f 	dsb	sy
 8007a4c:	e7fe      	b.n	8007a4c <xQueueGenericSend+0xbc>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8007a4e:	2e02      	cmp	r6, #2
 8007a50:	d0d5      	beq.n	80079fe <xQueueGenericSend+0x6e>
				if( xTicksToWait == ( TickType_t ) 0 )
 8007a52:	9b01      	ldr	r3, [sp, #4]
 8007a54:	b91b      	cbnz	r3, 8007a5e <xQueueGenericSend+0xce>
					taskEXIT_CRITICAL();
 8007a56:	f7ff fcfd 	bl	8007454 <vPortExitCritical>
					return errQUEUE_FULL;
 8007a5a:	2000      	movs	r0, #0
 8007a5c:	e7e8      	b.n	8007a30 <xQueueGenericSend+0xa0>
				else if( xEntryTimeSet == pdFALSE )
 8007a5e:	b915      	cbnz	r5, 8007a66 <xQueueGenericSend+0xd6>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8007a60:	a802      	add	r0, sp, #8
 8007a62:	f000 fefd 	bl	8008860 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8007a66:	f7ff fcf5 	bl	8007454 <vPortExitCritical>
		vTaskSuspendAll();
 8007a6a:	f000 fd0b 	bl	8008484 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8007a6e:	f7ff fcd1 	bl	8007414 <vPortEnterCritical>
 8007a72:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8007a76:	2bff      	cmp	r3, #255	@ 0xff
 8007a78:	bf08      	it	eq
 8007a7a:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 8007a7e:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8007a82:	2bff      	cmp	r3, #255	@ 0xff
 8007a84:	bf08      	it	eq
 8007a86:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 8007a8a:	f7ff fce3 	bl	8007454 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8007a8e:	a901      	add	r1, sp, #4
 8007a90:	a802      	add	r0, sp, #8
 8007a92:	f000 fef1 	bl	8008878 <xTaskCheckForTimeOut>
 8007a96:	bb38      	cbnz	r0, 8007ae8 <xQueueGenericSend+0x158>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8007a98:	f7ff fcbc 	bl	8007414 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8007a9c:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8007a9e:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8007aa0:	429a      	cmp	r2, r3
 8007aa2:	d10e      	bne.n	8007ac2 <xQueueGenericSend+0x132>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8007aa4:	f7ff fcd6 	bl	8007454 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8007aa8:	9901      	ldr	r1, [sp, #4]
 8007aaa:	f104 0010 	add.w	r0, r4, #16
 8007aae:	f000 fe5f 	bl	8008770 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8007ab2:	4620      	mov	r0, r4
 8007ab4:	f7ff fe42 	bl	800773c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8007ab8:	f000 fd88 	bl	80085cc <xTaskResumeAll>
 8007abc:	b148      	cbz	r0, 8007ad2 <xQueueGenericSend+0x142>
 8007abe:	2501      	movs	r5, #1
 8007ac0:	e797      	b.n	80079f2 <xQueueGenericSend+0x62>
	taskEXIT_CRITICAL();
 8007ac2:	f7ff fcc7 	bl	8007454 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8007ac6:	4620      	mov	r0, r4
 8007ac8:	f7ff fe38 	bl	800773c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8007acc:	f000 fd7e 	bl	80085cc <xTaskResumeAll>
 8007ad0:	e7f5      	b.n	8007abe <xQueueGenericSend+0x12e>
					portYIELD_WITHIN_API();
 8007ad2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007ad6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007ada:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007ade:	f3bf 8f4f 	dsb	sy
 8007ae2:	f3bf 8f6f 	isb	sy
 8007ae6:	e7ea      	b.n	8007abe <xQueueGenericSend+0x12e>
			prvUnlockQueue( pxQueue );
 8007ae8:	4620      	mov	r0, r4
 8007aea:	f7ff fe27 	bl	800773c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8007aee:	f000 fd6d 	bl	80085cc <xTaskResumeAll>
			return errQUEUE_FULL;
 8007af2:	e7b2      	b.n	8007a5a <xQueueGenericSend+0xca>

08007af4 <xQueueGenericSendFromISR>:
{
 8007af4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007af8:	4689      	mov	r9, r1
 8007afa:	4617      	mov	r7, r2
 8007afc:	461e      	mov	r6, r3
	configASSERT( pxQueue );
 8007afe:	4604      	mov	r4, r0
 8007b00:	b940      	cbnz	r0, 8007b14 <xQueueGenericSendFromISR+0x20>
 8007b02:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007b06:	f383 8811 	msr	BASEPRI, r3
 8007b0a:	f3bf 8f6f 	isb	sy
 8007b0e:	f3bf 8f4f 	dsb	sy
 8007b12:	e7fe      	b.n	8007b12 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007b14:	b951      	cbnz	r1, 8007b2c <xQueueGenericSendFromISR+0x38>
 8007b16:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8007b18:	b143      	cbz	r3, 8007b2c <xQueueGenericSendFromISR+0x38>
 8007b1a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007b1e:	f383 8811 	msr	BASEPRI, r3
 8007b22:	f3bf 8f6f 	isb	sy
 8007b26:	f3bf 8f4f 	dsb	sy
 8007b2a:	e7fe      	b.n	8007b2a <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8007b2c:	2e02      	cmp	r6, #2
 8007b2e:	d10b      	bne.n	8007b48 <xQueueGenericSendFromISR+0x54>
 8007b30:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8007b32:	2b01      	cmp	r3, #1
 8007b34:	d008      	beq.n	8007b48 <xQueueGenericSendFromISR+0x54>
 8007b36:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007b3a:	f383 8811 	msr	BASEPRI, r3
 8007b3e:	f3bf 8f6f 	isb	sy
 8007b42:	f3bf 8f4f 	dsb	sy
 8007b46:	e7fe      	b.n	8007b46 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8007b48:	f7ff fd76 	bl	8007638 <vPortValidateInterruptPriority>
	__asm volatile
 8007b4c:	f3ef 8811 	mrs	r8, BASEPRI
 8007b50:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007b54:	f383 8811 	msr	BASEPRI, r3
 8007b58:	f3bf 8f6f 	isb	sy
 8007b5c:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8007b60:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
 8007b62:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8007b64:	429a      	cmp	r2, r3
 8007b66:	d301      	bcc.n	8007b6c <xQueueGenericSendFromISR+0x78>
 8007b68:	2e02      	cmp	r6, #2
 8007b6a:	d11e      	bne.n	8007baa <xQueueGenericSendFromISR+0xb6>
			const int8_t cTxLock = pxQueue->cTxLock;
 8007b6c:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007b70:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 8007b72:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8007b74:	4632      	mov	r2, r6
 8007b76:	4649      	mov	r1, r9
 8007b78:	4620      	mov	r0, r4
 8007b7a:	f7ff fd96 	bl	80076aa <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 8007b7e:	1c6b      	adds	r3, r5, #1
 8007b80:	d10e      	bne.n	8007ba0 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007b82:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8007b84:	b13b      	cbz	r3, 8007b96 <xQueueGenericSendFromISR+0xa2>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007b86:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8007b8a:	f000 fe29 	bl	80087e0 <xTaskRemoveFromEventList>
 8007b8e:	b110      	cbz	r0, 8007b96 <xQueueGenericSendFromISR+0xa2>
							if( pxHigherPriorityTaskWoken != NULL )
 8007b90:	b10f      	cbz	r7, 8007b96 <xQueueGenericSendFromISR+0xa2>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8007b92:	2301      	movs	r3, #1
 8007b94:	603b      	str	r3, [r7, #0]
			xReturn = pdPASS;
 8007b96:	2001      	movs	r0, #1
	__asm volatile
 8007b98:	f388 8811 	msr	BASEPRI, r8
}
 8007b9c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8007ba0:	3501      	adds	r5, #1
 8007ba2:	b26d      	sxtb	r5, r5
 8007ba4:	f884 5045 	strb.w	r5, [r4, #69]	@ 0x45
 8007ba8:	e7f5      	b.n	8007b96 <xQueueGenericSendFromISR+0xa2>
			xReturn = errQUEUE_FULL;
 8007baa:	2000      	movs	r0, #0
 8007bac:	e7f4      	b.n	8007b98 <xQueueGenericSendFromISR+0xa4>

08007bae <xQueueGiveFromISR>:
{
 8007bae:	b570      	push	{r4, r5, r6, lr}
 8007bb0:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8007bb2:	4604      	mov	r4, r0
 8007bb4:	b940      	cbnz	r0, 8007bc8 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8007bb6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007bba:	f383 8811 	msr	BASEPRI, r3
 8007bbe:	f3bf 8f6f 	isb	sy
 8007bc2:	f3bf 8f4f 	dsb	sy
 8007bc6:	e7fe      	b.n	8007bc6 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8007bc8:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8007bca:	b143      	cbz	r3, 8007bde <xQueueGiveFromISR+0x30>
 8007bcc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007bd0:	f383 8811 	msr	BASEPRI, r3
 8007bd4:	f3bf 8f6f 	isb	sy
 8007bd8:	f3bf 8f4f 	dsb	sy
 8007bdc:	e7fe      	b.n	8007bdc <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8007bde:	6803      	ldr	r3, [r0, #0]
 8007be0:	b953      	cbnz	r3, 8007bf8 <xQueueGiveFromISR+0x4a>
 8007be2:	6883      	ldr	r3, [r0, #8]
 8007be4:	b143      	cbz	r3, 8007bf8 <xQueueGiveFromISR+0x4a>
 8007be6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007bea:	f383 8811 	msr	BASEPRI, r3
 8007bee:	f3bf 8f6f 	isb	sy
 8007bf2:	f3bf 8f4f 	dsb	sy
 8007bf6:	e7fe      	b.n	8007bf6 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8007bf8:	f7ff fd1e 	bl	8007638 <vPortValidateInterruptPriority>
	__asm volatile
 8007bfc:	f3ef 8611 	mrs	r6, BASEPRI
 8007c00:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007c04:	f383 8811 	msr	BASEPRI, r3
 8007c08:	f3bf 8f6f 	isb	sy
 8007c0c:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007c10:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 8007c12:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8007c14:	4293      	cmp	r3, r2
 8007c16:	d919      	bls.n	8007c4c <xQueueGiveFromISR+0x9e>
			const int8_t cTxLock = pxQueue->cTxLock;
 8007c18:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8007c1c:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 8007c1e:	29ff      	cmp	r1, #255	@ 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 8007c20:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8007c22:	63a2      	str	r2, [r4, #56]	@ 0x38
			if( cTxLock == queueUNLOCKED )
 8007c24:	d10d      	bne.n	8007c42 <xQueueGiveFromISR+0x94>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007c26:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8007c28:	b13b      	cbz	r3, 8007c3a <xQueueGiveFromISR+0x8c>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007c2a:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8007c2e:	f000 fdd7 	bl	80087e0 <xTaskRemoveFromEventList>
 8007c32:	b110      	cbz	r0, 8007c3a <xQueueGiveFromISR+0x8c>
							if( pxHigherPriorityTaskWoken != NULL )
 8007c34:	b10d      	cbz	r5, 8007c3a <xQueueGiveFromISR+0x8c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8007c36:	2301      	movs	r3, #1
 8007c38:	602b      	str	r3, [r5, #0]
			xReturn = pdPASS;
 8007c3a:	2001      	movs	r0, #1
	__asm volatile
 8007c3c:	f386 8811 	msr	BASEPRI, r6
}
 8007c40:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8007c42:	3301      	adds	r3, #1
 8007c44:	b25b      	sxtb	r3, r3
 8007c46:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
 8007c4a:	e7f6      	b.n	8007c3a <xQueueGiveFromISR+0x8c>
			xReturn = errQUEUE_FULL;
 8007c4c:	2000      	movs	r0, #0
 8007c4e:	e7f5      	b.n	8007c3c <xQueueGiveFromISR+0x8e>

08007c50 <xQueueReceive>:
{
 8007c50:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8007c54:	460e      	mov	r6, r1
 8007c56:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8007c58:	4604      	mov	r4, r0
 8007c5a:	b940      	cbnz	r0, 8007c6e <xQueueReceive+0x1e>
	__asm volatile
 8007c5c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007c60:	f383 8811 	msr	BASEPRI, r3
 8007c64:	f3bf 8f6f 	isb	sy
 8007c68:	f3bf 8f4f 	dsb	sy
 8007c6c:	e7fe      	b.n	8007c6c <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007c6e:	b951      	cbnz	r1, 8007c86 <xQueueReceive+0x36>
 8007c70:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8007c72:	b143      	cbz	r3, 8007c86 <xQueueReceive+0x36>
 8007c74:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007c78:	f383 8811 	msr	BASEPRI, r3
 8007c7c:	f3bf 8f6f 	isb	sy
 8007c80:	f3bf 8f4f 	dsb	sy
 8007c84:	e7fe      	b.n	8007c84 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007c86:	f000 fe39 	bl	80088fc <xTaskGetSchedulerState>
 8007c8a:	4605      	mov	r5, r0
 8007c8c:	b318      	cbz	r0, 8007cd6 <xQueueReceive+0x86>
 8007c8e:	2500      	movs	r5, #0
		prvLockQueue( pxQueue );
 8007c90:	f04f 0800 	mov.w	r8, #0
		taskENTER_CRITICAL();
 8007c94:	f7ff fbbe 	bl	8007414 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007c98:	6ba7      	ldr	r7, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007c9a:	b347      	cbz	r7, 8007cee <xQueueReceive+0x9e>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007c9c:	4631      	mov	r1, r6
 8007c9e:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007ca0:	3f01      	subs	r7, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007ca2:	f7ff fd35 	bl	8007710 <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007ca6:	63a7      	str	r7, [r4, #56]	@ 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007ca8:	6923      	ldr	r3, [r4, #16]
 8007caa:	b173      	cbz	r3, 8007cca <xQueueReceive+0x7a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007cac:	f104 0010 	add.w	r0, r4, #16
 8007cb0:	f000 fd96 	bl	80087e0 <xTaskRemoveFromEventList>
 8007cb4:	b148      	cbz	r0, 8007cca <xQueueReceive+0x7a>
						queueYIELD_IF_USING_PREEMPTION();
 8007cb6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007cba:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007cbe:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007cc2:	f3bf 8f4f 	dsb	sy
 8007cc6:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8007cca:	f7ff fbc3 	bl	8007454 <vPortExitCritical>
				return pdPASS;
 8007cce:	2001      	movs	r0, #1
}
 8007cd0:	b004      	add	sp, #16
 8007cd2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007cd6:	9b01      	ldr	r3, [sp, #4]
 8007cd8:	2b00      	cmp	r3, #0
 8007cda:	d0d9      	beq.n	8007c90 <xQueueReceive+0x40>
 8007cdc:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007ce0:	f383 8811 	msr	BASEPRI, r3
 8007ce4:	f3bf 8f6f 	isb	sy
 8007ce8:	f3bf 8f4f 	dsb	sy
 8007cec:	e7fe      	b.n	8007cec <xQueueReceive+0x9c>
				if( xTicksToWait == ( TickType_t ) 0 )
 8007cee:	9b01      	ldr	r3, [sp, #4]
 8007cf0:	b91b      	cbnz	r3, 8007cfa <xQueueReceive+0xaa>
					taskEXIT_CRITICAL();
 8007cf2:	f7ff fbaf 	bl	8007454 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8007cf6:	2000      	movs	r0, #0
 8007cf8:	e7ea      	b.n	8007cd0 <xQueueReceive+0x80>
				else if( xEntryTimeSet == pdFALSE )
 8007cfa:	b915      	cbnz	r5, 8007d02 <xQueueReceive+0xb2>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8007cfc:	a802      	add	r0, sp, #8
 8007cfe:	f000 fdaf 	bl	8008860 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8007d02:	f7ff fba7 	bl	8007454 <vPortExitCritical>
		vTaskSuspendAll();
 8007d06:	f000 fbbd 	bl	8008484 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8007d0a:	f7ff fb83 	bl	8007414 <vPortEnterCritical>
 8007d0e:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8007d12:	2bff      	cmp	r3, #255	@ 0xff
 8007d14:	bf08      	it	eq
 8007d16:	f884 8044 	strbeq.w	r8, [r4, #68]	@ 0x44
 8007d1a:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8007d1e:	2bff      	cmp	r3, #255	@ 0xff
 8007d20:	bf08      	it	eq
 8007d22:	f884 8045 	strbeq.w	r8, [r4, #69]	@ 0x45
 8007d26:	f7ff fb95 	bl	8007454 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8007d2a:	a901      	add	r1, sp, #4
 8007d2c:	a802      	add	r0, sp, #8
 8007d2e:	f000 fda3 	bl	8008878 <xTaskCheckForTimeOut>
 8007d32:	bb00      	cbnz	r0, 8007d76 <xQueueReceive+0x126>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007d34:	4620      	mov	r0, r4
 8007d36:	f7ff fcad 	bl	8007694 <prvIsQueueEmpty>
 8007d3a:	b1b0      	cbz	r0, 8007d6a <xQueueReceive+0x11a>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8007d3c:	9901      	ldr	r1, [sp, #4]
 8007d3e:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8007d42:	f000 fd15 	bl	8008770 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8007d46:	4620      	mov	r0, r4
 8007d48:	f7ff fcf8 	bl	800773c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8007d4c:	f000 fc3e 	bl	80085cc <xTaskResumeAll>
 8007d50:	b948      	cbnz	r0, 8007d66 <xQueueReceive+0x116>
					portYIELD_WITHIN_API();
 8007d52:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007d56:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007d5a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007d5e:	f3bf 8f4f 	dsb	sy
 8007d62:	f3bf 8f6f 	isb	sy
 8007d66:	2501      	movs	r5, #1
 8007d68:	e794      	b.n	8007c94 <xQueueReceive+0x44>
				prvUnlockQueue( pxQueue );
 8007d6a:	4620      	mov	r0, r4
 8007d6c:	f7ff fce6 	bl	800773c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8007d70:	f000 fc2c 	bl	80085cc <xTaskResumeAll>
 8007d74:	e7f7      	b.n	8007d66 <xQueueReceive+0x116>
			prvUnlockQueue( pxQueue );
 8007d76:	4620      	mov	r0, r4
 8007d78:	f7ff fce0 	bl	800773c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8007d7c:	f000 fc26 	bl	80085cc <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007d80:	4620      	mov	r0, r4
 8007d82:	f7ff fc87 	bl	8007694 <prvIsQueueEmpty>
 8007d86:	2800      	cmp	r0, #0
 8007d88:	d0ed      	beq.n	8007d66 <xQueueReceive+0x116>
 8007d8a:	e7b4      	b.n	8007cf6 <xQueueReceive+0xa6>

08007d8c <xQueueSemaphoreTake>:
{
 8007d8c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007d8e:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 8007d90:	4604      	mov	r4, r0
{
 8007d92:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8007d94:	b940      	cbnz	r0, 8007da8 <xQueueSemaphoreTake+0x1c>
 8007d96:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007d9a:	f383 8811 	msr	BASEPRI, r3
 8007d9e:	f3bf 8f6f 	isb	sy
 8007da2:	f3bf 8f4f 	dsb	sy
 8007da6:	e7fe      	b.n	8007da6 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 8007da8:	6c05      	ldr	r5, [r0, #64]	@ 0x40
 8007daa:	b145      	cbz	r5, 8007dbe <xQueueSemaphoreTake+0x32>
 8007dac:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007db0:	f383 8811 	msr	BASEPRI, r3
 8007db4:	f3bf 8f6f 	isb	sy
 8007db8:	f3bf 8f4f 	dsb	sy
 8007dbc:	e7fe      	b.n	8007dbc <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007dbe:	f000 fd9d 	bl	80088fc <xTaskGetSchedulerState>
 8007dc2:	4606      	mov	r6, r0
 8007dc4:	b320      	cbz	r0, 8007e10 <xQueueSemaphoreTake+0x84>
 8007dc6:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8007dc8:	2700      	movs	r7, #0
		taskENTER_CRITICAL();
 8007dca:	f7ff fb23 	bl	8007414 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8007dce:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8007dd0:	b353      	cbz	r3, 8007e28 <xQueueSemaphoreTake+0x9c>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8007dd2:	3b01      	subs	r3, #1
 8007dd4:	63a3      	str	r3, [r4, #56]	@ 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8007dd6:	6823      	ldr	r3, [r4, #0]
 8007dd8:	b913      	cbnz	r3, 8007de0 <xQueueSemaphoreTake+0x54>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 8007dda:	f000 fe6d 	bl	8008ab8 <pvTaskIncrementMutexHeldCount>
 8007dde:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007de0:	6923      	ldr	r3, [r4, #16]
 8007de2:	b173      	cbz	r3, 8007e02 <xQueueSemaphoreTake+0x76>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007de4:	f104 0010 	add.w	r0, r4, #16
 8007de8:	f000 fcfa 	bl	80087e0 <xTaskRemoveFromEventList>
 8007dec:	b148      	cbz	r0, 8007e02 <xQueueSemaphoreTake+0x76>
						queueYIELD_IF_USING_PREEMPTION();
 8007dee:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007df2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007df6:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007dfa:	f3bf 8f4f 	dsb	sy
 8007dfe:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8007e02:	f7ff fb27 	bl	8007454 <vPortExitCritical>
				return pdPASS;
 8007e06:	2001      	movs	r0, #1
}
 8007e08:	b005      	add	sp, #20
 8007e0a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007e0c:	4635      	mov	r5, r6
 8007e0e:	e7db      	b.n	8007dc8 <xQueueSemaphoreTake+0x3c>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007e10:	9b01      	ldr	r3, [sp, #4]
 8007e12:	2b00      	cmp	r3, #0
 8007e14:	d0fa      	beq.n	8007e0c <xQueueSemaphoreTake+0x80>
 8007e16:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007e1a:	f383 8811 	msr	BASEPRI, r3
 8007e1e:	f3bf 8f6f 	isb	sy
 8007e22:	f3bf 8f4f 	dsb	sy
 8007e26:	e7fe      	b.n	8007e26 <xQueueSemaphoreTake+0x9a>
				if( xTicksToWait == ( TickType_t ) 0 )
 8007e28:	9b01      	ldr	r3, [sp, #4]
 8007e2a:	b953      	cbnz	r3, 8007e42 <xQueueSemaphoreTake+0xb6>
						configASSERT( xInheritanceOccurred == pdFALSE );
 8007e2c:	2d00      	cmp	r5, #0
 8007e2e:	d066      	beq.n	8007efe <xQueueSemaphoreTake+0x172>
 8007e30:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007e34:	f383 8811 	msr	BASEPRI, r3
 8007e38:	f3bf 8f6f 	isb	sy
 8007e3c:	f3bf 8f4f 	dsb	sy
 8007e40:	e7fe      	b.n	8007e40 <xQueueSemaphoreTake+0xb4>
				else if( xEntryTimeSet == pdFALSE )
 8007e42:	b916      	cbnz	r6, 8007e4a <xQueueSemaphoreTake+0xbe>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8007e44:	a802      	add	r0, sp, #8
 8007e46:	f000 fd0b 	bl	8008860 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8007e4a:	f7ff fb03 	bl	8007454 <vPortExitCritical>
		vTaskSuspendAll();
 8007e4e:	f000 fb19 	bl	8008484 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8007e52:	f7ff fadf 	bl	8007414 <vPortEnterCritical>
 8007e56:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 8007e5a:	2bff      	cmp	r3, #255	@ 0xff
 8007e5c:	bf08      	it	eq
 8007e5e:	f884 7044 	strbeq.w	r7, [r4, #68]	@ 0x44
 8007e62:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 8007e66:	2bff      	cmp	r3, #255	@ 0xff
 8007e68:	bf08      	it	eq
 8007e6a:	f884 7045 	strbeq.w	r7, [r4, #69]	@ 0x45
 8007e6e:	f7ff faf1 	bl	8007454 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8007e72:	a901      	add	r1, sp, #4
 8007e74:	a802      	add	r0, sp, #8
 8007e76:	f000 fcff 	bl	8008878 <xTaskCheckForTimeOut>
 8007e7a:	bb50      	cbnz	r0, 8007ed2 <xQueueSemaphoreTake+0x146>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007e7c:	4620      	mov	r0, r4
 8007e7e:	f7ff fc09 	bl	8007694 <prvIsQueueEmpty>
 8007e82:	b300      	cbz	r0, 8007ec6 <xQueueSemaphoreTake+0x13a>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8007e84:	6823      	ldr	r3, [r4, #0]
 8007e86:	b93b      	cbnz	r3, 8007e98 <xQueueSemaphoreTake+0x10c>
						taskENTER_CRITICAL();
 8007e88:	f7ff fac4 	bl	8007414 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8007e8c:	68a0      	ldr	r0, [r4, #8]
 8007e8e:	f000 fd45 	bl	800891c <xTaskPriorityInherit>
 8007e92:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 8007e94:	f7ff fade 	bl	8007454 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8007e98:	9901      	ldr	r1, [sp, #4]
 8007e9a:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8007e9e:	f000 fc67 	bl	8008770 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8007ea2:	4620      	mov	r0, r4
 8007ea4:	f7ff fc4a 	bl	800773c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8007ea8:	f000 fb90 	bl	80085cc <xTaskResumeAll>
 8007eac:	b948      	cbnz	r0, 8007ec2 <xQueueSemaphoreTake+0x136>
					portYIELD_WITHIN_API();
 8007eae:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8007eb2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8007eb6:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8007eba:	f3bf 8f4f 	dsb	sy
 8007ebe:	f3bf 8f6f 	isb	sy
 8007ec2:	2601      	movs	r6, #1
 8007ec4:	e781      	b.n	8007dca <xQueueSemaphoreTake+0x3e>
				prvUnlockQueue( pxQueue );
 8007ec6:	4620      	mov	r0, r4
 8007ec8:	f7ff fc38 	bl	800773c <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8007ecc:	f000 fb7e 	bl	80085cc <xTaskResumeAll>
 8007ed0:	e7f7      	b.n	8007ec2 <xQueueSemaphoreTake+0x136>
			prvUnlockQueue( pxQueue );
 8007ed2:	4620      	mov	r0, r4
 8007ed4:	f7ff fc32 	bl	800773c <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8007ed8:	f000 fb78 	bl	80085cc <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007edc:	4620      	mov	r0, r4
 8007ede:	f7ff fbd9 	bl	8007694 <prvIsQueueEmpty>
 8007ee2:	2800      	cmp	r0, #0
 8007ee4:	d0ed      	beq.n	8007ec2 <xQueueSemaphoreTake+0x136>
					if( xInheritanceOccurred != pdFALSE )
 8007ee6:	b165      	cbz	r5, 8007f02 <xQueueSemaphoreTake+0x176>
						taskENTER_CRITICAL();
 8007ee8:	f7ff fa94 	bl	8007414 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 8007eec:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8007eee:	b119      	cbz	r1, 8007ef8 <xQueueSemaphoreTake+0x16c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 8007ef0:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8007ef2:	6819      	ldr	r1, [r3, #0]
 8007ef4:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8007ef8:	68a0      	ldr	r0, [r4, #8]
 8007efa:	f000 fd8f 	bl	8008a1c <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
 8007efe:	f7ff faa9 	bl	8007454 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8007f02:	2000      	movs	r0, #0
 8007f04:	e780      	b.n	8007e08 <xQueueSemaphoreTake+0x7c>

08007f06 <xQueueReceiveFromISR>:
{
 8007f06:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007f0a:	4689      	mov	r9, r1
 8007f0c:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 8007f0e:	4604      	mov	r4, r0
 8007f10:	b940      	cbnz	r0, 8007f24 <xQueueReceiveFromISR+0x1e>
 8007f12:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007f16:	f383 8811 	msr	BASEPRI, r3
 8007f1a:	f3bf 8f6f 	isb	sy
 8007f1e:	f3bf 8f4f 	dsb	sy
 8007f22:	e7fe      	b.n	8007f22 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007f24:	b951      	cbnz	r1, 8007f3c <xQueueReceiveFromISR+0x36>
 8007f26:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8007f28:	b143      	cbz	r3, 8007f3c <xQueueReceiveFromISR+0x36>
 8007f2a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007f2e:	f383 8811 	msr	BASEPRI, r3
 8007f32:	f3bf 8f6f 	isb	sy
 8007f36:	f3bf 8f4f 	dsb	sy
 8007f3a:	e7fe      	b.n	8007f3a <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8007f3c:	f7ff fb7c 	bl	8007638 <vPortValidateInterruptPriority>
	__asm volatile
 8007f40:	f3ef 8711 	mrs	r7, BASEPRI
 8007f44:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007f48:	f383 8811 	msr	BASEPRI, r3
 8007f4c:	f3bf 8f6f 	isb	sy
 8007f50:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007f54:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007f56:	b30d      	cbz	r5, 8007f9c <xQueueReceiveFromISR+0x96>
			const int8_t cRxLock = pxQueue->cRxLock;
 8007f58:	f894 6044 	ldrb.w	r6, [r4, #68]	@ 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007f5c:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 8007f5e:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007f60:	4620      	mov	r0, r4
 8007f62:	f7ff fbd5 	bl	8007710 <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007f66:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 8007f68:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007f6a:	63a5      	str	r5, [r4, #56]	@ 0x38
			if( cRxLock == queueUNLOCKED )
 8007f6c:	d111      	bne.n	8007f92 <xQueueReceiveFromISR+0x8c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007f6e:	6923      	ldr	r3, [r4, #16]
 8007f70:	b153      	cbz	r3, 8007f88 <xQueueReceiveFromISR+0x82>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007f72:	f104 0010 	add.w	r0, r4, #16
 8007f76:	f000 fc33 	bl	80087e0 <xTaskRemoveFromEventList>
 8007f7a:	b128      	cbz	r0, 8007f88 <xQueueReceiveFromISR+0x82>
						if( pxHigherPriorityTaskWoken != NULL )
 8007f7c:	f1b8 0f00 	cmp.w	r8, #0
 8007f80:	d002      	beq.n	8007f88 <xQueueReceiveFromISR+0x82>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8007f82:	2301      	movs	r3, #1
 8007f84:	f8c8 3000 	str.w	r3, [r8]
			xReturn = pdPASS;
 8007f88:	2001      	movs	r0, #1
	__asm volatile
 8007f8a:	f387 8811 	msr	BASEPRI, r7
}
 8007f8e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8007f92:	3601      	adds	r6, #1
 8007f94:	b276      	sxtb	r6, r6
 8007f96:	f884 6044 	strb.w	r6, [r4, #68]	@ 0x44
 8007f9a:	e7f5      	b.n	8007f88 <xQueueReceiveFromISR+0x82>
			xReturn = pdFAIL;
 8007f9c:	4628      	mov	r0, r5
 8007f9e:	e7f4      	b.n	8007f8a <xQueueReceiveFromISR+0x84>

08007fa0 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 8007fa0:	b530      	push	{r4, r5, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8007fa2:	4a07      	ldr	r2, [pc, #28]	@ (8007fc0 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8007fa4:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8007fa6:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 8007faa:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 8007fae:	b91d      	cbnz	r5, 8007fb8 <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8007fb0:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8007fb4:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 8007fb6:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8007fb8:	3301      	adds	r3, #1
 8007fba:	2b08      	cmp	r3, #8
 8007fbc:	d1f3      	bne.n	8007fa6 <vQueueAddToRegistry+0x6>
 8007fbe:	e7fa      	b.n	8007fb6 <vQueueAddToRegistry+0x16>
 8007fc0:	20012a18 	.word	0x20012a18

08007fc4 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 8007fc4:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8007fc6:	4a09      	ldr	r2, [pc, #36]	@ (8007fec <vQueueUnregisterQueue+0x28>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8007fc8:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8007fca:	f852 1033 	ldr.w	r1, [r2, r3, lsl #3]
 8007fce:	4281      	cmp	r1, r0
 8007fd0:	ea4f 04c3 	mov.w	r4, r3, lsl #3
 8007fd4:	d106      	bne.n	8007fe4 <vQueueUnregisterQueue+0x20>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8007fd6:	4a06      	ldr	r2, [pc, #24]	@ (8007ff0 <vQueueUnregisterQueue+0x2c>)
 8007fd8:	2100      	movs	r1, #0
 8007fda:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 8007fde:	4422      	add	r2, r4
 8007fe0:	6051      	str	r1, [r2, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8007fe2:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8007fe4:	3301      	adds	r3, #1
 8007fe6:	2b08      	cmp	r3, #8
 8007fe8:	d1ef      	bne.n	8007fca <vQueueUnregisterQueue+0x6>
 8007fea:	e7fa      	b.n	8007fe2 <vQueueUnregisterQueue+0x1e>
 8007fec:	20012a1c 	.word	0x20012a1c
 8007ff0:	20012a18 	.word	0x20012a18

08007ff4 <vQueueDelete>:
{
 8007ff4:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8007ff6:	b940      	cbnz	r0, 800800a <vQueueDelete+0x16>
	__asm volatile
 8007ff8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8007ffc:	f383 8811 	msr	BASEPRI, r3
 8008000:	f3bf 8f6f 	isb	sy
 8008004:	f3bf 8f4f 	dsb	sy
 8008008:	e7fe      	b.n	8008008 <vQueueDelete+0x14>
		vQueueUnregisterQueue( pxQueue );
 800800a:	f7ff ffdb 	bl	8007fc4 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800800e:	f890 3046 	ldrb.w	r3, [r0, #70]	@ 0x46
 8008012:	b91b      	cbnz	r3, 800801c <vQueueDelete+0x28>
}
 8008014:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8008018:	f7ff b918 	b.w	800724c <vPortFree>
}
 800801c:	bd10      	pop	{r4, pc}

0800801e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800801e:	b570      	push	{r4, r5, r6, lr}
 8008020:	4604      	mov	r4, r0
 8008022:	460d      	mov	r5, r1
 8008024:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8008026:	f7ff f9f5 	bl	8007414 <vPortEnterCritical>
 800802a:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
 800802e:	2bff      	cmp	r3, #255	@ 0xff
 8008030:	bf04      	itt	eq
 8008032:	2300      	moveq	r3, #0
 8008034:	f884 3044 	strbeq.w	r3, [r4, #68]	@ 0x44
 8008038:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
 800803c:	2bff      	cmp	r3, #255	@ 0xff
 800803e:	bf04      	itt	eq
 8008040:	2300      	moveq	r3, #0
 8008042:	f884 3045 	strbeq.w	r3, [r4, #69]	@ 0x45
 8008046:	f7ff fa05 	bl	8007454 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800804a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
 800804c:	b92b      	cbnz	r3, 800805a <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800804e:	4632      	mov	r2, r6
 8008050:	4629      	mov	r1, r5
 8008052:	f104 0024 	add.w	r0, r4, #36	@ 0x24
 8008056:	f000 fba5 	bl	80087a4 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 800805a:	4620      	mov	r0, r4
	}
 800805c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8008060:	f7ff bb6c 	b.w	800773c <prvUnlockQueue>

08008064 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8008064:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008068:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800806a:	f7ff f9d3 	bl	8007414 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800806e:	4b30      	ldr	r3, [pc, #192]	@ (8008130 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 8008070:	4e30      	ldr	r6, [pc, #192]	@ (8008134 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 8008072:	681a      	ldr	r2, [r3, #0]
 8008074:	4f30      	ldr	r7, [pc, #192]	@ (8008138 <prvAddNewTaskToReadyList+0xd4>)
 8008076:	3201      	adds	r2, #1
 8008078:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 800807a:	6835      	ldr	r5, [r6, #0]
 800807c:	2d00      	cmp	r5, #0
 800807e:	d14b      	bne.n	8008118 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8008080:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8008082:	681b      	ldr	r3, [r3, #0]
 8008084:	2b01      	cmp	r3, #1
 8008086:	d11f      	bne.n	80080c8 <prvAddNewTaskToReadyList+0x64>
 8008088:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800808a:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800808c:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800808e:	f7ff f91b 	bl	80072c8 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8008092:	2d38      	cmp	r5, #56	@ 0x38
 8008094:	f108 0814 	add.w	r8, r8, #20
 8008098:	d1f7      	bne.n	800808a <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 800809a:	f8df 80c4 	ldr.w	r8, [pc, #196]	@ 8008160 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 800809e:	4d27      	ldr	r5, [pc, #156]	@ (800813c <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 80080a0:	4640      	mov	r0, r8
 80080a2:	f7ff f911 	bl	80072c8 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 80080a6:	4628      	mov	r0, r5
 80080a8:	f7ff f90e 	bl	80072c8 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 80080ac:	4824      	ldr	r0, [pc, #144]	@ (8008140 <prvAddNewTaskToReadyList+0xdc>)
 80080ae:	f7ff f90b 	bl	80072c8 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 80080b2:	4824      	ldr	r0, [pc, #144]	@ (8008144 <prvAddNewTaskToReadyList+0xe0>)
 80080b4:	f7ff f908 	bl	80072c8 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 80080b8:	4823      	ldr	r0, [pc, #140]	@ (8008148 <prvAddNewTaskToReadyList+0xe4>)
 80080ba:	f7ff f905 	bl	80072c8 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 80080be:	4b23      	ldr	r3, [pc, #140]	@ (800814c <prvAddNewTaskToReadyList+0xe8>)
 80080c0:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 80080c4:	4b22      	ldr	r3, [pc, #136]	@ (8008150 <prvAddNewTaskToReadyList+0xec>)
 80080c6:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 80080c8:	4a22      	ldr	r2, [pc, #136]	@ (8008154 <prvAddNewTaskToReadyList+0xf0>)
 80080ca:	6813      	ldr	r3, [r2, #0]
 80080cc:	3301      	adds	r3, #1
 80080ce:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 80080d0:	4a21      	ldr	r2, [pc, #132]	@ (8008158 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 80080d2:	6463      	str	r3, [r4, #68]	@ 0x44
		prvAddTaskToReadyList( pxNewTCB );
 80080d4:	6811      	ldr	r1, [r2, #0]
 80080d6:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80080d8:	2014      	movs	r0, #20
 80080da:	428b      	cmp	r3, r1
 80080dc:	fb00 7003 	mla	r0, r0, r3, r7
 80080e0:	f104 0104 	add.w	r1, r4, #4
 80080e4:	bf88      	it	hi
 80080e6:	6013      	strhi	r3, [r2, #0]
 80080e8:	f7ff f8fc 	bl	80072e4 <vListInsertEnd>
	taskEXIT_CRITICAL();
 80080ec:	f7ff f9b2 	bl	8007454 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 80080f0:	4b1a      	ldr	r3, [pc, #104]	@ (800815c <prvAddNewTaskToReadyList+0xf8>)
 80080f2:	681b      	ldr	r3, [r3, #0]
 80080f4:	b173      	cbz	r3, 8008114 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 80080f6:	6833      	ldr	r3, [r6, #0]
 80080f8:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80080fa:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 80080fc:	429a      	cmp	r2, r3
 80080fe:	d209      	bcs.n	8008114 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 8008100:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008104:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008108:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 800810c:	f3bf 8f4f 	dsb	sy
 8008110:	f3bf 8f6f 	isb	sy
}
 8008114:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8008118:	4b10      	ldr	r3, [pc, #64]	@ (800815c <prvAddNewTaskToReadyList+0xf8>)
 800811a:	681a      	ldr	r2, [r3, #0]
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800811c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
			if( xSchedulerRunning == pdFALSE )
 800811e:	2a00      	cmp	r2, #0
 8008120:	d1d2      	bne.n	80080c8 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8008122:	6832      	ldr	r2, [r6, #0]
 8008124:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8008126:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8008128:	bf98      	it	ls
 800812a:	6034      	strls	r4, [r6, #0]
 800812c:	e7cc      	b.n	80080c8 <prvAddNewTaskToReadyList+0x64>
 800812e:	bf00      	nop
 8008130:	20012a7c 	.word	0x20012a7c
 8008134:	20012f50 	.word	0x20012f50
 8008138:	20012af0 	.word	0x20012af0
 800813c:	20012ac8 	.word	0x20012ac8
 8008140:	20012aac 	.word	0x20012aac
 8008144:	20012a98 	.word	0x20012a98
 8008148:	20012a80 	.word	0x20012a80
 800814c:	20012ac4 	.word	0x20012ac4
 8008150:	20012ac0 	.word	0x20012ac0
 8008154:	20012a60 	.word	0x20012a60
 8008158:	20012a74 	.word	0x20012a74
 800815c:	20012a70 	.word	0x20012a70
 8008160:	20012adc 	.word	0x20012adc

08008164 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8008164:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8008166:	4b15      	ldr	r3, [pc, #84]	@ (80081bc <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008168:	4d15      	ldr	r5, [pc, #84]	@ (80081c0 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 800816a:	681c      	ldr	r4, [r3, #0]
{
 800816c:	4606      	mov	r6, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800816e:	6828      	ldr	r0, [r5, #0]
 8008170:	3004      	adds	r0, #4
{
 8008172:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008174:	f7ff f8d8 	bl	8007328 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8008178:	1c73      	adds	r3, r6, #1
 800817a:	d107      	bne.n	800818c <prvAddCurrentTaskToDelayedList+0x28>
 800817c:	b137      	cbz	r7, 800818c <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800817e:	6829      	ldr	r1, [r5, #0]
 8008180:	4810      	ldr	r0, [pc, #64]	@ (80081c4 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 8008182:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008186:	3104      	adds	r1, #4
 8008188:	f7ff b8ac 	b.w	80072e4 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800818c:	682b      	ldr	r3, [r5, #0]
 800818e:	19a4      	adds	r4, r4, r6
 8008190:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8008192:	d307      	bcc.n	80081a4 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008194:	4b0c      	ldr	r3, [pc, #48]	@ (80081c8 <prvAddCurrentTaskToDelayedList+0x64>)
 8008196:	6818      	ldr	r0, [r3, #0]
 8008198:	6829      	ldr	r1, [r5, #0]
}
 800819a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800819e:	3104      	adds	r1, #4
 80081a0:	f7ff b8ab 	b.w	80072fa <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80081a4:	4b09      	ldr	r3, [pc, #36]	@ (80081cc <prvAddCurrentTaskToDelayedList+0x68>)
 80081a6:	6818      	ldr	r0, [r3, #0]
 80081a8:	6829      	ldr	r1, [r5, #0]
 80081aa:	3104      	adds	r1, #4
 80081ac:	f7ff f8a5 	bl	80072fa <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 80081b0:	4b07      	ldr	r3, [pc, #28]	@ (80081d0 <prvAddCurrentTaskToDelayedList+0x6c>)
 80081b2:	681a      	ldr	r2, [r3, #0]
 80081b4:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 80081b6:	bf88      	it	hi
 80081b8:	601c      	strhi	r4, [r3, #0]
}
 80081ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80081bc:	20012a78 	.word	0x20012a78
 80081c0:	20012f50 	.word	0x20012f50
 80081c4:	20012a80 	.word	0x20012a80
 80081c8:	20012ac0 	.word	0x20012ac0
 80081cc:	20012ac4 	.word	0x20012ac4
 80081d0:	20012a5c 	.word	0x20012a5c

080081d4 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80081d4:	4a06      	ldr	r2, [pc, #24]	@ (80081f0 <prvResetNextTaskUnblockTime+0x1c>)
 80081d6:	6813      	ldr	r3, [r2, #0]
 80081d8:	6819      	ldr	r1, [r3, #0]
 80081da:	4b06      	ldr	r3, [pc, #24]	@ (80081f4 <prvResetNextTaskUnblockTime+0x20>)
 80081dc:	b919      	cbnz	r1, 80081e6 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 80081de:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80081e2:	601a      	str	r2, [r3, #0]
}
 80081e4:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80081e6:	6812      	ldr	r2, [r2, #0]
 80081e8:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80081ea:	68d2      	ldr	r2, [r2, #12]
 80081ec:	6852      	ldr	r2, [r2, #4]
 80081ee:	e7f8      	b.n	80081e2 <prvResetNextTaskUnblockTime+0xe>
 80081f0:	20012ac4 	.word	0x20012ac4
 80081f4:	20012a5c 	.word	0x20012a5c

080081f8 <prvDeleteTCB>:
	{
 80081f8:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 80081fa:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
	{
 80081fe:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8008200:	b93b      	cbnz	r3, 8008212 <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 8008202:	6b00      	ldr	r0, [r0, #48]	@ 0x30
 8008204:	f7ff f822 	bl	800724c <vPortFree>
				vPortFree( pxTCB );
 8008208:	4620      	mov	r0, r4
	}
 800820a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 800820e:	f7ff b81d 	b.w	800724c <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8008212:	2b01      	cmp	r3, #1
 8008214:	d0f9      	beq.n	800820a <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8008216:	2b02      	cmp	r3, #2
 8008218:	d008      	beq.n	800822c <prvDeleteTCB+0x34>
 800821a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800821e:	f383 8811 	msr	BASEPRI, r3
 8008222:	f3bf 8f6f 	isb	sy
 8008226:	f3bf 8f4f 	dsb	sy
 800822a:	e7fe      	b.n	800822a <prvDeleteTCB+0x32>
	}
 800822c:	bd10      	pop	{r4, pc}
	...

08008230 <prvIdleTask>:
{
 8008230:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8008232:	4c13      	ldr	r4, [pc, #76]	@ (8008280 <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008234:	4f13      	ldr	r7, [pc, #76]	@ (8008284 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 8008236:	4d14      	ldr	r5, [pc, #80]	@ (8008288 <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8008238:	6823      	ldr	r3, [r4, #0]
 800823a:	b973      	cbnz	r3, 800825a <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800823c:	4b13      	ldr	r3, [pc, #76]	@ (800828c <prvIdleTask+0x5c>)
 800823e:	681b      	ldr	r3, [r3, #0]
 8008240:	2b01      	cmp	r3, #1
 8008242:	d9f8      	bls.n	8008236 <prvIdleTask+0x6>
				taskYIELD();
 8008244:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008248:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 800824c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008250:	f3bf 8f4f 	dsb	sy
 8008254:	f3bf 8f6f 	isb	sy
 8008258:	e7ed      	b.n	8008236 <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 800825a:	f7ff f8db 	bl	8007414 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800825e:	68fb      	ldr	r3, [r7, #12]
 8008260:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008262:	1d30      	adds	r0, r6, #4
 8008264:	f7ff f860 	bl	8007328 <uxListRemove>
				--uxCurrentNumberOfTasks;
 8008268:	682b      	ldr	r3, [r5, #0]
 800826a:	3b01      	subs	r3, #1
 800826c:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 800826e:	6823      	ldr	r3, [r4, #0]
 8008270:	3b01      	subs	r3, #1
 8008272:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8008274:	f7ff f8ee 	bl	8007454 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 8008278:	4630      	mov	r0, r6
 800827a:	f7ff ffbd 	bl	80081f8 <prvDeleteTCB>
 800827e:	e7db      	b.n	8008238 <prvIdleTask+0x8>
 8008280:	20012a94 	.word	0x20012a94
 8008284:	20012a98 	.word	0x20012a98
 8008288:	20012a7c 	.word	0x20012a7c
 800828c:	20012af0 	.word	0x20012af0

08008290 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8008290:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008294:	e9dd 9409 	ldrd	r9, r4, [sp, #36]	@ 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8008298:	0096      	lsls	r6, r2, #2
 800829a:	4632      	mov	r2, r6
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800829c:	4607      	mov	r7, r0
 800829e:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80082a0:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 80082a2:	21a5      	movs	r1, #165	@ 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80082a4:	4698      	mov	r8, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80082a6:	f019 fc56 	bl	8021b56 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 80082aa:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 80082ac:	3e04      	subs	r6, #4
 80082ae:	441e      	add	r6, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 80082b0:	f026 0607 	bic.w	r6, r6, #7
	if( pcName != NULL )
 80082b4:	b3b5      	cbz	r5, 8008324 <prvInitialiseNewTask.constprop.0+0x94>
 80082b6:	1e6b      	subs	r3, r5, #1
 80082b8:	f104 0233 	add.w	r2, r4, #51	@ 0x33
 80082bc:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80082be:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 80082c2:	f802 1f01 	strb.w	r1, [r2, #1]!
			if( pcName[ x ] == ( char ) 0x00 )
 80082c6:	b109      	cbz	r1, 80082cc <prvInitialiseNewTask.constprop.0+0x3c>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 80082c8:	42ab      	cmp	r3, r5
 80082ca:	d1f8      	bne.n	80082be <prvInitialiseNewTask.constprop.0+0x2e>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 80082cc:	2300      	movs	r3, #0
 80082ce:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 80082d2:	9d08      	ldr	r5, [sp, #32]
 80082d4:	2d37      	cmp	r5, #55	@ 0x37
 80082d6:	bf28      	it	cs
 80082d8:	2537      	movcs	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
 80082da:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 80082de:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 80082e0:	64e5      	str	r5, [r4, #76]	@ 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 80082e2:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 80082e4:	f8c4 a050 	str.w	sl, [r4, #80]	@ 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 80082e8:	f7fe fff9 	bl	80072de <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80082ec:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 80082f0:	f104 0018 	add.w	r0, r4, #24
 80082f4:	f7fe fff3 	bl	80072de <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 80082f8:	f8c4 a058 	str.w	sl, [r4, #88]	@ 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 80082fc:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80082fe:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8008300:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
 8008302:	f8c4 a054 	str.w	sl, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8008306:	f884 a05c 	strb.w	sl, [r4, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800830a:	4642      	mov	r2, r8
 800830c:	4639      	mov	r1, r7
 800830e:	4630      	mov	r0, r6
 8008310:	f7ff f858 	bl	80073c4 <pxPortInitialiseStack>
 8008314:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8008316:	f1b9 0f00 	cmp.w	r9, #0
 800831a:	d001      	beq.n	8008320 <prvInitialiseNewTask.constprop.0+0x90>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800831c:	f8c9 4000 	str.w	r4, [r9]
}
 8008320:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8008324:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
 8008328:	e7d3      	b.n	80082d2 <prvInitialiseNewTask.constprop.0+0x42>

0800832a <xTaskCreateStatic>:
	{
 800832a:	b570      	push	{r4, r5, r6, lr}
 800832c:	b086      	sub	sp, #24
 800832e:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	@ 0x2c
		configASSERT( puxStackBuffer != NULL );
 8008332:	b945      	cbnz	r5, 8008346 <xTaskCreateStatic+0x1c>
 8008334:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008338:	f383 8811 	msr	BASEPRI, r3
 800833c:	f3bf 8f6f 	isb	sy
 8008340:	f3bf 8f4f 	dsb	sy
 8008344:	e7fe      	b.n	8008344 <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 8008346:	b944      	cbnz	r4, 800835a <xTaskCreateStatic+0x30>
 8008348:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800834c:	f383 8811 	msr	BASEPRI, r3
 8008350:	f3bf 8f6f 	isb	sy
 8008354:	f3bf 8f4f 	dsb	sy
 8008358:	e7fe      	b.n	8008358 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 800835a:	2660      	movs	r6, #96	@ 0x60
 800835c:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800835e:	9e05      	ldr	r6, [sp, #20]
 8008360:	2e60      	cmp	r6, #96	@ 0x60
 8008362:	d008      	beq.n	8008376 <xTaskCreateStatic+0x4c>
 8008364:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008368:	f383 8811 	msr	BASEPRI, r3
 800836c:	f3bf 8f6f 	isb	sy
 8008370:	f3bf 8f4f 	dsb	sy
 8008374:	e7fe      	b.n	8008374 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8008376:	6325      	str	r5, [r4, #48]	@ 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8008378:	2502      	movs	r5, #2
 800837a:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800837e:	ad04      	add	r5, sp, #16
 8008380:	9501      	str	r5, [sp, #4]
 8008382:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8008384:	9402      	str	r4, [sp, #8]
 8008386:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8008388:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800838a:	f7ff ff81 	bl	8008290 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800838e:	4620      	mov	r0, r4
 8008390:	f7ff fe68 	bl	8008064 <prvAddNewTaskToReadyList>
	}
 8008394:	9804      	ldr	r0, [sp, #16]
 8008396:	b006      	add	sp, #24
 8008398:	bd70      	pop	{r4, r5, r6, pc}

0800839a <xTaskCreate>:
	{
 800839a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800839e:	4607      	mov	r7, r0
 80083a0:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 80083a2:	0090      	lsls	r0, r2, #2
	{
 80083a4:	4688      	mov	r8, r1
 80083a6:	4616      	mov	r6, r2
 80083a8:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 80083aa:	f7fe feb7 	bl	800711c <pvPortMalloc>
			if( pxStack != NULL )
 80083ae:	4605      	mov	r5, r0
 80083b0:	b920      	cbnz	r0, 80083bc <xTaskCreate+0x22>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 80083b2:	f04f 30ff 	mov.w	r0, #4294967295
	}
 80083b6:	b005      	add	sp, #20
 80083b8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 80083bc:	2060      	movs	r0, #96	@ 0x60
 80083be:	f7fe fead 	bl	800711c <pvPortMalloc>
				if( pxNewTCB != NULL )
 80083c2:	4604      	mov	r4, r0
 80083c4:	b198      	cbz	r0, 80083ee <xTaskCreate+0x54>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 80083c6:	2300      	movs	r3, #0
 80083c8:	f880 305d 	strb.w	r3, [r0, #93]	@ 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 80083cc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
					pxNewTCB->pxStack = pxStack;
 80083ce:	6305      	str	r5, [r0, #48]	@ 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 80083d0:	9301      	str	r3, [sp, #4]
 80083d2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80083d4:	9002      	str	r0, [sp, #8]
 80083d6:	9300      	str	r3, [sp, #0]
 80083d8:	4632      	mov	r2, r6
 80083da:	464b      	mov	r3, r9
 80083dc:	4641      	mov	r1, r8
 80083de:	4638      	mov	r0, r7
 80083e0:	f7ff ff56 	bl	8008290 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 80083e4:	4620      	mov	r0, r4
 80083e6:	f7ff fe3d 	bl	8008064 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 80083ea:	2001      	movs	r0, #1
 80083ec:	e7e3      	b.n	80083b6 <xTaskCreate+0x1c>
					vPortFree( pxStack );
 80083ee:	4628      	mov	r0, r5
 80083f0:	f7fe ff2c 	bl	800724c <vPortFree>
		if( pxNewTCB != NULL )
 80083f4:	e7dd      	b.n	80083b2 <xTaskCreate+0x18>
	...

080083f8 <vTaskStartScheduler>:
{
 80083f8:	b510      	push	{r4, lr}
 80083fa:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 80083fc:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 80083fe:	aa07      	add	r2, sp, #28
 8008400:	a906      	add	r1, sp, #24
 8008402:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8008404:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8008408:	f7fe fe4a 	bl	80070a0 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800840c:	9b05      	ldr	r3, [sp, #20]
 800840e:	9302      	str	r3, [sp, #8]
 8008410:	9b06      	ldr	r3, [sp, #24]
 8008412:	9a07      	ldr	r2, [sp, #28]
 8008414:	4916      	ldr	r1, [pc, #88]	@ (8008470 <vTaskStartScheduler+0x78>)
 8008416:	4817      	ldr	r0, [pc, #92]	@ (8008474 <vTaskStartScheduler+0x7c>)
 8008418:	e9cd 4300 	strd	r4, r3, [sp]
 800841c:	4623      	mov	r3, r4
 800841e:	f7ff ff84 	bl	800832a <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 8008422:	b318      	cbz	r0, 800846c <vTaskStartScheduler+0x74>
			xReturn = xTimerCreateTimerTask();
 8008424:	f000 fba6 	bl	8008b74 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8008428:	2801      	cmp	r0, #1
 800842a:	d114      	bne.n	8008456 <vTaskStartScheduler+0x5e>
 800842c:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008430:	f383 8811 	msr	BASEPRI, r3
 8008434:	f3bf 8f6f 	isb	sy
 8008438:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 800843c:	4b0e      	ldr	r3, [pc, #56]	@ (8008478 <vTaskStartScheduler+0x80>)
 800843e:	f04f 32ff 	mov.w	r2, #4294967295
 8008442:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8008444:	4b0d      	ldr	r3, [pc, #52]	@ (800847c <vTaskStartScheduler+0x84>)
 8008446:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8008448:	4b0d      	ldr	r3, [pc, #52]	@ (8008480 <vTaskStartScheduler+0x88>)
 800844a:	601c      	str	r4, [r3, #0]
}
 800844c:	b008      	add	sp, #32
 800844e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 8008452:	f7ff b86f 	b.w	8007534 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8008456:	3001      	adds	r0, #1
 8008458:	d108      	bne.n	800846c <vTaskStartScheduler+0x74>
 800845a:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800845e:	f383 8811 	msr	BASEPRI, r3
 8008462:	f3bf 8f6f 	isb	sy
 8008466:	f3bf 8f4f 	dsb	sy
 800846a:	e7fe      	b.n	800846a <vTaskStartScheduler+0x72>
}
 800846c:	b008      	add	sp, #32
 800846e:	bd10      	pop	{r4, pc}
 8008470:	080231fa 	.word	0x080231fa
 8008474:	08008231 	.word	0x08008231
 8008478:	20012a5c 	.word	0x20012a5c
 800847c:	20012a70 	.word	0x20012a70
 8008480:	20012a78 	.word	0x20012a78

08008484 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8008484:	4a02      	ldr	r2, [pc, #8]	@ (8008490 <vTaskSuspendAll+0xc>)
 8008486:	6813      	ldr	r3, [r2, #0]
 8008488:	3301      	adds	r3, #1
 800848a:	6013      	str	r3, [r2, #0]
}
 800848c:	4770      	bx	lr
 800848e:	bf00      	nop
 8008490:	20012a58 	.word	0x20012a58

08008494 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8008494:	4b01      	ldr	r3, [pc, #4]	@ (800849c <xTaskGetTickCount+0x8>)
 8008496:	6818      	ldr	r0, [r3, #0]
}
 8008498:	4770      	bx	lr
 800849a:	bf00      	nop
 800849c:	20012a78 	.word	0x20012a78

080084a0 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80084a0:	4b3f      	ldr	r3, [pc, #252]	@ (80085a0 <xTaskIncrementTick+0x100>)
 80084a2:	681b      	ldr	r3, [r3, #0]
{
 80084a4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80084a8:	2b00      	cmp	r3, #0
 80084aa:	d172      	bne.n	8008592 <xTaskIncrementTick+0xf2>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 80084ac:	4b3d      	ldr	r3, [pc, #244]	@ (80085a4 <xTaskIncrementTick+0x104>)
 80084ae:	681c      	ldr	r4, [r3, #0]
 80084b0:	3401      	adds	r4, #1
		xTickCount = xConstTickCount;
 80084b2:	601c      	str	r4, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 80084b4:	b9bc      	cbnz	r4, 80084e6 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 80084b6:	4b3c      	ldr	r3, [pc, #240]	@ (80085a8 <xTaskIncrementTick+0x108>)
 80084b8:	681a      	ldr	r2, [r3, #0]
 80084ba:	6812      	ldr	r2, [r2, #0]
 80084bc:	b142      	cbz	r2, 80084d0 <xTaskIncrementTick+0x30>
 80084be:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80084c2:	f383 8811 	msr	BASEPRI, r3
 80084c6:	f3bf 8f6f 	isb	sy
 80084ca:	f3bf 8f4f 	dsb	sy
 80084ce:	e7fe      	b.n	80084ce <xTaskIncrementTick+0x2e>
 80084d0:	4a36      	ldr	r2, [pc, #216]	@ (80085ac <xTaskIncrementTick+0x10c>)
 80084d2:	6819      	ldr	r1, [r3, #0]
 80084d4:	6810      	ldr	r0, [r2, #0]
 80084d6:	6018      	str	r0, [r3, #0]
 80084d8:	6011      	str	r1, [r2, #0]
 80084da:	4a35      	ldr	r2, [pc, #212]	@ (80085b0 <xTaskIncrementTick+0x110>)
 80084dc:	6813      	ldr	r3, [r2, #0]
 80084de:	3301      	adds	r3, #1
 80084e0:	6013      	str	r3, [r2, #0]
 80084e2:	f7ff fe77 	bl	80081d4 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 80084e6:	4d33      	ldr	r5, [pc, #204]	@ (80085b4 <xTaskIncrementTick+0x114>)
 80084e8:	4e33      	ldr	r6, [pc, #204]	@ (80085b8 <xTaskIncrementTick+0x118>)
 80084ea:	682b      	ldr	r3, [r5, #0]
 80084ec:	4f33      	ldr	r7, [pc, #204]	@ (80085bc <xTaskIncrementTick+0x11c>)
 80084ee:	429c      	cmp	r4, r3
BaseType_t xSwitchRequired = pdFALSE;
 80084f0:	f04f 0b00 	mov.w	fp, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 80084f4:	d212      	bcs.n	800851c <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 80084f6:	683a      	ldr	r2, [r7, #0]
 80084f8:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 80084fa:	2114      	movs	r1, #20
 80084fc:	434a      	muls	r2, r1
 80084fe:	58b2      	ldr	r2, [r6, r2]
				xSwitchRequired = pdTRUE;
 8008500:	2a02      	cmp	r2, #2
			if( xYieldPending != pdFALSE )
 8008502:	4a2f      	ldr	r2, [pc, #188]	@ (80085c0 <xTaskIncrementTick+0x120>)
 8008504:	6812      	ldr	r2, [r2, #0]
				xSwitchRequired = pdTRUE;
 8008506:	bf28      	it	cs
 8008508:	f04f 0b01 	movcs.w	fp, #1
				xSwitchRequired = pdTRUE;
 800850c:	2a00      	cmp	r2, #0
 800850e:	bf18      	it	ne
 8008510:	f04f 0b01 	movne.w	fp, #1
}
 8008514:	4658      	mov	r0, fp
 8008516:	b003      	add	sp, #12
 8008518:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800851c:	f8df 9088 	ldr.w	r9, [pc, #136]	@ 80085a8 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 8008520:	f8df a0a4 	ldr.w	sl, [pc, #164]	@ 80085c8 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008524:	f8d9 2000 	ldr.w	r2, [r9]
 8008528:	6812      	ldr	r2, [r2, #0]
 800852a:	b91a      	cbnz	r2, 8008534 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800852c:	f04f 32ff 	mov.w	r2, #4294967295
 8008530:	602a      	str	r2, [r5, #0]
					break;
 8008532:	e7e0      	b.n	80084f6 <xTaskIncrementTick+0x56>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008534:	f8d9 2000 	ldr.w	r2, [r9]
 8008538:	68d2      	ldr	r2, [r2, #12]
 800853a:	f8d2 800c 	ldr.w	r8, [r2, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800853e:	f8d8 1004 	ldr.w	r1, [r8, #4]
					if( xConstTickCount < xItemValue )
 8008542:	428c      	cmp	r4, r1
 8008544:	d201      	bcs.n	800854a <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 8008546:	6029      	str	r1, [r5, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8008548:	e7d5      	b.n	80084f6 <xTaskIncrementTick+0x56>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800854a:	f108 0304 	add.w	r3, r8, #4
 800854e:	4618      	mov	r0, r3
 8008550:	9301      	str	r3, [sp, #4]
 8008552:	f7fe fee9 	bl	8007328 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8008556:	f8d8 1028 	ldr.w	r1, [r8, #40]	@ 0x28
 800855a:	b119      	cbz	r1, 8008564 <xTaskIncrementTick+0xc4>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800855c:	f108 0018 	add.w	r0, r8, #24
 8008560:	f7fe fee2 	bl	8007328 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8008564:	f8d8 002c 	ldr.w	r0, [r8, #44]	@ 0x2c
 8008568:	f8da 1000 	ldr.w	r1, [sl]
 800856c:	2314      	movs	r3, #20
 800856e:	4288      	cmp	r0, r1
 8008570:	bf88      	it	hi
 8008572:	f8ca 0000 	strhi.w	r0, [sl]
 8008576:	9901      	ldr	r1, [sp, #4]
 8008578:	fb03 6000 	mla	r0, r3, r0, r6
 800857c:	f7fe feb2 	bl	80072e4 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8008580:	6838      	ldr	r0, [r7, #0]
 8008582:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 8008586:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
							xSwitchRequired = pdTRUE;
 8008588:	4291      	cmp	r1, r2
 800858a:	bf28      	it	cs
 800858c:	f04f 0b01 	movcs.w	fp, #1
 8008590:	e7c8      	b.n	8008524 <xTaskIncrementTick+0x84>
		++xPendedTicks;
 8008592:	4a0c      	ldr	r2, [pc, #48]	@ (80085c4 <xTaskIncrementTick+0x124>)
 8008594:	6813      	ldr	r3, [r2, #0]
 8008596:	3301      	adds	r3, #1
 8008598:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 800859a:	f04f 0b00 	mov.w	fp, #0
 800859e:	e7b9      	b.n	8008514 <xTaskIncrementTick+0x74>
 80085a0:	20012a58 	.word	0x20012a58
 80085a4:	20012a78 	.word	0x20012a78
 80085a8:	20012ac4 	.word	0x20012ac4
 80085ac:	20012ac0 	.word	0x20012ac0
 80085b0:	20012a64 	.word	0x20012a64
 80085b4:	20012a5c 	.word	0x20012a5c
 80085b8:	20012af0 	.word	0x20012af0
 80085bc:	20012f50 	.word	0x20012f50
 80085c0:	20012a68 	.word	0x20012a68
 80085c4:	20012a6c 	.word	0x20012a6c
 80085c8:	20012a74 	.word	0x20012a74

080085cc <xTaskResumeAll>:
{
 80085cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	configASSERT( uxSchedulerSuspended );
 80085d0:	4c30      	ldr	r4, [pc, #192]	@ (8008694 <xTaskResumeAll+0xc8>)
 80085d2:	6823      	ldr	r3, [r4, #0]
 80085d4:	b943      	cbnz	r3, 80085e8 <xTaskResumeAll+0x1c>
 80085d6:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80085da:	f383 8811 	msr	BASEPRI, r3
 80085de:	f3bf 8f6f 	isb	sy
 80085e2:	f3bf 8f4f 	dsb	sy
 80085e6:	e7fe      	b.n	80085e6 <xTaskResumeAll+0x1a>
	taskENTER_CRITICAL();
 80085e8:	f7fe ff14 	bl	8007414 <vPortEnterCritical>
		--uxSchedulerSuspended;
 80085ec:	6823      	ldr	r3, [r4, #0]
 80085ee:	3b01      	subs	r3, #1
 80085f0:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80085f2:	6824      	ldr	r4, [r4, #0]
 80085f4:	b12c      	cbz	r4, 8008602 <xTaskResumeAll+0x36>
BaseType_t xAlreadyYielded = pdFALSE;
 80085f6:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 80085f8:	f7fe ff2c 	bl	8007454 <vPortExitCritical>
}
 80085fc:	4620      	mov	r0, r4
 80085fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8008602:	4b25      	ldr	r3, [pc, #148]	@ (8008698 <xTaskResumeAll+0xcc>)
 8008604:	681b      	ldr	r3, [r3, #0]
 8008606:	2b00      	cmp	r3, #0
 8008608:	d0f5      	beq.n	80085f6 <xTaskResumeAll+0x2a>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800860a:	4d24      	ldr	r5, [pc, #144]	@ (800869c <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 800860c:	4e24      	ldr	r6, [pc, #144]	@ (80086a0 <xTaskResumeAll+0xd4>)
 800860e:	f8df 80a0 	ldr.w	r8, [pc, #160]	@ 80086b0 <xTaskResumeAll+0xe4>
 8008612:	e01d      	b.n	8008650 <xTaskResumeAll+0x84>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008614:	68eb      	ldr	r3, [r5, #12]
 8008616:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008618:	1d27      	adds	r7, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800861a:	f104 0018 	add.w	r0, r4, #24
 800861e:	f7fe fe83 	bl	8007328 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008622:	4638      	mov	r0, r7
 8008624:	f7fe fe80 	bl	8007328 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8008628:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800862a:	6832      	ldr	r2, [r6, #0]
 800862c:	2014      	movs	r0, #20
 800862e:	4293      	cmp	r3, r2
 8008630:	fb00 8003 	mla	r0, r0, r3, r8
 8008634:	4639      	mov	r1, r7
 8008636:	bf88      	it	hi
 8008638:	6033      	strhi	r3, [r6, #0]
 800863a:	f7fe fe53 	bl	80072e4 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800863e:	4b19      	ldr	r3, [pc, #100]	@ (80086a4 <xTaskResumeAll+0xd8>)
 8008640:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8008642:	681b      	ldr	r3, [r3, #0]
 8008644:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008646:	429a      	cmp	r2, r3
 8008648:	d302      	bcc.n	8008650 <xTaskResumeAll+0x84>
						xYieldPending = pdTRUE;
 800864a:	4b17      	ldr	r3, [pc, #92]	@ (80086a8 <xTaskResumeAll+0xdc>)
 800864c:	2201      	movs	r2, #1
 800864e:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8008650:	682b      	ldr	r3, [r5, #0]
 8008652:	2b00      	cmp	r3, #0
 8008654:	d1de      	bne.n	8008614 <xTaskResumeAll+0x48>
				if( pxTCB != NULL )
 8008656:	b10c      	cbz	r4, 800865c <xTaskResumeAll+0x90>
					prvResetNextTaskUnblockTime();
 8008658:	f7ff fdbc 	bl	80081d4 <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800865c:	4d13      	ldr	r5, [pc, #76]	@ (80086ac <xTaskResumeAll+0xe0>)
 800865e:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 8008660:	b144      	cbz	r4, 8008674 <xTaskResumeAll+0xa8>
								xYieldPending = pdTRUE;
 8008662:	4e11      	ldr	r6, [pc, #68]	@ (80086a8 <xTaskResumeAll+0xdc>)
 8008664:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 8008666:	f7ff ff1b 	bl	80084a0 <xTaskIncrementTick>
 800866a:	b100      	cbz	r0, 800866e <xTaskResumeAll+0xa2>
								xYieldPending = pdTRUE;
 800866c:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800866e:	3c01      	subs	r4, #1
 8008670:	d1f9      	bne.n	8008666 <xTaskResumeAll+0x9a>
						xPendedTicks = 0;
 8008672:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 8008674:	4b0c      	ldr	r3, [pc, #48]	@ (80086a8 <xTaskResumeAll+0xdc>)
 8008676:	681b      	ldr	r3, [r3, #0]
 8008678:	2b00      	cmp	r3, #0
 800867a:	d0bc      	beq.n	80085f6 <xTaskResumeAll+0x2a>
					taskYIELD_IF_USING_PREEMPTION();
 800867c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008680:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008684:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008688:	f3bf 8f4f 	dsb	sy
 800868c:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8008690:	2401      	movs	r4, #1
 8008692:	e7b1      	b.n	80085f8 <xTaskResumeAll+0x2c>
 8008694:	20012a58 	.word	0x20012a58
 8008698:	20012a7c 	.word	0x20012a7c
 800869c:	20012aac 	.word	0x20012aac
 80086a0:	20012a74 	.word	0x20012a74
 80086a4:	20012f50 	.word	0x20012f50
 80086a8:	20012a68 	.word	0x20012a68
 80086ac:	20012a6c 	.word	0x20012a6c
 80086b0:	20012af0 	.word	0x20012af0

080086b4 <vTaskDelay>:
	{
 80086b4:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 80086b6:	b950      	cbnz	r0, 80086ce <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 80086b8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 80086bc:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 80086c0:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 80086c4:	f3bf 8f4f 	dsb	sy
 80086c8:	f3bf 8f6f 	isb	sy
	}
 80086cc:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 80086ce:	4b0a      	ldr	r3, [pc, #40]	@ (80086f8 <vTaskDelay+0x44>)
 80086d0:	6819      	ldr	r1, [r3, #0]
 80086d2:	b141      	cbz	r1, 80086e6 <vTaskDelay+0x32>
 80086d4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80086d8:	f383 8811 	msr	BASEPRI, r3
 80086dc:	f3bf 8f6f 	isb	sy
 80086e0:	f3bf 8f4f 	dsb	sy
 80086e4:	e7fe      	b.n	80086e4 <vTaskDelay+0x30>
			vTaskSuspendAll();
 80086e6:	f7ff fecd 	bl	8008484 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 80086ea:	f7ff fd3b 	bl	8008164 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 80086ee:	f7ff ff6d 	bl	80085cc <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 80086f2:	2800      	cmp	r0, #0
 80086f4:	d0e0      	beq.n	80086b8 <vTaskDelay+0x4>
 80086f6:	e7e9      	b.n	80086cc <vTaskDelay+0x18>
 80086f8:	20012a58 	.word	0x20012a58

080086fc <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 80086fc:	4b17      	ldr	r3, [pc, #92]	@ (800875c <vTaskSwitchContext+0x60>)
 80086fe:	681a      	ldr	r2, [r3, #0]
 8008700:	4b17      	ldr	r3, [pc, #92]	@ (8008760 <vTaskSwitchContext+0x64>)
{
 8008702:	b570      	push	{r4, r5, r6, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8008704:	b112      	cbz	r2, 800870c <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8008706:	2201      	movs	r2, #1
 8008708:	601a      	str	r2, [r3, #0]
}
 800870a:	bd70      	pop	{r4, r5, r6, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800870c:	4d15      	ldr	r5, [pc, #84]	@ (8008764 <vTaskSwitchContext+0x68>)
		xYieldPending = pdFALSE;
 800870e:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008710:	682a      	ldr	r2, [r5, #0]
 8008712:	4915      	ldr	r1, [pc, #84]	@ (8008768 <vTaskSwitchContext+0x6c>)
 8008714:	2614      	movs	r6, #20
 8008716:	fb06 f302 	mul.w	r3, r6, r2
 800871a:	18c8      	adds	r0, r1, r3
 800871c:	58cc      	ldr	r4, [r1, r3]
 800871e:	b18c      	cbz	r4, 8008744 <vTaskSwitchContext+0x48>
 8008720:	6844      	ldr	r4, [r0, #4]
 8008722:	3308      	adds	r3, #8
 8008724:	6864      	ldr	r4, [r4, #4]
 8008726:	6044      	str	r4, [r0, #4]
 8008728:	440b      	add	r3, r1
 800872a:	429c      	cmp	r4, r3
 800872c:	bf04      	itt	eq
 800872e:	6863      	ldreq	r3, [r4, #4]
 8008730:	6043      	streq	r3, [r0, #4]
 8008732:	2314      	movs	r3, #20
 8008734:	fb03 1102 	mla	r1, r3, r2, r1
 8008738:	684b      	ldr	r3, [r1, #4]
 800873a:	68d9      	ldr	r1, [r3, #12]
 800873c:	4b0b      	ldr	r3, [pc, #44]	@ (800876c <vTaskSwitchContext+0x70>)
 800873e:	6019      	str	r1, [r3, #0]
 8008740:	602a      	str	r2, [r5, #0]
}
 8008742:	e7e2      	b.n	800870a <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008744:	b942      	cbnz	r2, 8008758 <vTaskSwitchContext+0x5c>
 8008746:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800874a:	f383 8811 	msr	BASEPRI, r3
 800874e:	f3bf 8f6f 	isb	sy
 8008752:	f3bf 8f4f 	dsb	sy
 8008756:	e7fe      	b.n	8008756 <vTaskSwitchContext+0x5a>
 8008758:	3a01      	subs	r2, #1
 800875a:	e7dc      	b.n	8008716 <vTaskSwitchContext+0x1a>
 800875c:	20012a58 	.word	0x20012a58
 8008760:	20012a68 	.word	0x20012a68
 8008764:	20012a74 	.word	0x20012a74
 8008768:	20012af0 	.word	0x20012af0
 800876c:	20012f50 	.word	0x20012f50

08008770 <vTaskPlaceOnEventList>:
{
 8008770:	b510      	push	{r4, lr}
 8008772:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8008774:	b940      	cbnz	r0, 8008788 <vTaskPlaceOnEventList+0x18>
 8008776:	f04f 0350 	mov.w	r3, #80	@ 0x50
 800877a:	f383 8811 	msr	BASEPRI, r3
 800877e:	f3bf 8f6f 	isb	sy
 8008782:	f3bf 8f4f 	dsb	sy
 8008786:	e7fe      	b.n	8008786 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8008788:	4b05      	ldr	r3, [pc, #20]	@ (80087a0 <vTaskPlaceOnEventList+0x30>)
 800878a:	6819      	ldr	r1, [r3, #0]
 800878c:	3118      	adds	r1, #24
 800878e:	f7fe fdb4 	bl	80072fa <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8008792:	4620      	mov	r0, r4
 8008794:	2101      	movs	r1, #1
}
 8008796:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800879a:	f7ff bce3 	b.w	8008164 <prvAddCurrentTaskToDelayedList>
 800879e:	bf00      	nop
 80087a0:	20012f50 	.word	0x20012f50

080087a4 <vTaskPlaceOnEventListRestricted>:
	{
 80087a4:	b538      	push	{r3, r4, r5, lr}
 80087a6:	460d      	mov	r5, r1
 80087a8:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 80087aa:	b940      	cbnz	r0, 80087be <vTaskPlaceOnEventListRestricted+0x1a>
 80087ac:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80087b0:	f383 8811 	msr	BASEPRI, r3
 80087b4:	f3bf 8f6f 	isb	sy
 80087b8:	f3bf 8f4f 	dsb	sy
 80087bc:	e7fe      	b.n	80087bc <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 80087be:	4b07      	ldr	r3, [pc, #28]	@ (80087dc <vTaskPlaceOnEventListRestricted+0x38>)
 80087c0:	6819      	ldr	r1, [r3, #0]
 80087c2:	3118      	adds	r1, #24
 80087c4:	f7fe fd8e 	bl	80072e4 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 80087c8:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 80087ca:	4621      	mov	r1, r4
 80087cc:	bf0c      	ite	eq
 80087ce:	4628      	moveq	r0, r5
 80087d0:	f04f 30ff 	movne.w	r0, #4294967295
	}
 80087d4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 80087d8:	f7ff bcc4 	b.w	8008164 <prvAddCurrentTaskToDelayedList>
 80087dc:	20012f50 	.word	0x20012f50

080087e0 <xTaskRemoveFromEventList>:
{
 80087e0:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80087e2:	68c3      	ldr	r3, [r0, #12]
 80087e4:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 80087e6:	b944      	cbnz	r4, 80087fa <xTaskRemoveFromEventList+0x1a>
 80087e8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80087ec:	f383 8811 	msr	BASEPRI, r3
 80087f0:	f3bf 8f6f 	isb	sy
 80087f4:	f3bf 8f4f 	dsb	sy
 80087f8:	e7fe      	b.n	80087f8 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 80087fa:	f104 0518 	add.w	r5, r4, #24
 80087fe:	4628      	mov	r0, r5
 8008800:	f7fe fd92 	bl	8007328 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008804:	4b10      	ldr	r3, [pc, #64]	@ (8008848 <xTaskRemoveFromEventList+0x68>)
 8008806:	681b      	ldr	r3, [r3, #0]
 8008808:	b9db      	cbnz	r3, 8008842 <xTaskRemoveFromEventList+0x62>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800880a:	1d25      	adds	r5, r4, #4
 800880c:	4628      	mov	r0, r5
 800880e:	f7fe fd8b 	bl	8007328 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8008812:	4a0e      	ldr	r2, [pc, #56]	@ (800884c <xTaskRemoveFromEventList+0x6c>)
 8008814:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8008816:	6811      	ldr	r1, [r2, #0]
 8008818:	428b      	cmp	r3, r1
 800881a:	bf88      	it	hi
 800881c:	6013      	strhi	r3, [r2, #0]
 800881e:	4a0c      	ldr	r2, [pc, #48]	@ (8008850 <xTaskRemoveFromEventList+0x70>)
 8008820:	2014      	movs	r0, #20
 8008822:	4629      	mov	r1, r5
 8008824:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8008828:	f7fe fd5c 	bl	80072e4 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800882c:	4b09      	ldr	r3, [pc, #36]	@ (8008854 <xTaskRemoveFromEventList+0x74>)
 800882e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8008830:	681b      	ldr	r3, [r3, #0]
 8008832:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008834:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 8008836:	bf83      	ittte	hi
 8008838:	4b07      	ldrhi	r3, [pc, #28]	@ (8008858 <xTaskRemoveFromEventList+0x78>)
 800883a:	2001      	movhi	r0, #1
 800883c:	6018      	strhi	r0, [r3, #0]
		xReturn = pdFALSE;
 800883e:	2000      	movls	r0, #0
}
 8008840:	bd38      	pop	{r3, r4, r5, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8008842:	4806      	ldr	r0, [pc, #24]	@ (800885c <xTaskRemoveFromEventList+0x7c>)
 8008844:	4629      	mov	r1, r5
 8008846:	e7ef      	b.n	8008828 <xTaskRemoveFromEventList+0x48>
 8008848:	20012a58 	.word	0x20012a58
 800884c:	20012a74 	.word	0x20012a74
 8008850:	20012af0 	.word	0x20012af0
 8008854:	20012f50 	.word	0x20012f50
 8008858:	20012a68 	.word	0x20012a68
 800885c:	20012aac 	.word	0x20012aac

08008860 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8008860:	4b03      	ldr	r3, [pc, #12]	@ (8008870 <vTaskInternalSetTimeOutState+0x10>)
 8008862:	681b      	ldr	r3, [r3, #0]
 8008864:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8008866:	4b03      	ldr	r3, [pc, #12]	@ (8008874 <vTaskInternalSetTimeOutState+0x14>)
 8008868:	681b      	ldr	r3, [r3, #0]
 800886a:	6043      	str	r3, [r0, #4]
}
 800886c:	4770      	bx	lr
 800886e:	bf00      	nop
 8008870:	20012a64 	.word	0x20012a64
 8008874:	20012a78 	.word	0x20012a78

08008878 <xTaskCheckForTimeOut>:
{
 8008878:	b570      	push	{r4, r5, r6, lr}
 800887a:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 800887c:	4605      	mov	r5, r0
 800887e:	b940      	cbnz	r0, 8008892 <xTaskCheckForTimeOut+0x1a>
 8008880:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008884:	f383 8811 	msr	BASEPRI, r3
 8008888:	f3bf 8f6f 	isb	sy
 800888c:	f3bf 8f4f 	dsb	sy
 8008890:	e7fe      	b.n	8008890 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 8008892:	b941      	cbnz	r1, 80088a6 <xTaskCheckForTimeOut+0x2e>
 8008894:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008898:	f383 8811 	msr	BASEPRI, r3
 800889c:	f3bf 8f6f 	isb	sy
 80088a0:	f3bf 8f4f 	dsb	sy
 80088a4:	e7fe      	b.n	80088a4 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 80088a6:	f7fe fdb5 	bl	8007414 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 80088aa:	4b0f      	ldr	r3, [pc, #60]	@ (80088e8 <xTaskCheckForTimeOut+0x70>)
 80088ac:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 80088ae:	6823      	ldr	r3, [r4, #0]
 80088b0:	1c5a      	adds	r2, r3, #1
 80088b2:	d010      	beq.n	80088d6 <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 80088b4:	480d      	ldr	r0, [pc, #52]	@ (80088ec <xTaskCheckForTimeOut+0x74>)
 80088b6:	682e      	ldr	r6, [r5, #0]
 80088b8:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 80088ba:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 80088bc:	4286      	cmp	r6, r0
 80088be:	d001      	beq.n	80088c4 <xTaskCheckForTimeOut+0x4c>
 80088c0:	428a      	cmp	r2, r1
 80088c2:	d90f      	bls.n	80088e4 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 80088c4:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 80088c6:	4283      	cmp	r3, r0
 80088c8:	d90a      	bls.n	80088e0 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 80088ca:	1a5b      	subs	r3, r3, r1
 80088cc:	4413      	add	r3, r2
 80088ce:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 80088d0:	4628      	mov	r0, r5
 80088d2:	f7ff ffc5 	bl	8008860 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 80088d6:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 80088d8:	f7fe fdbc 	bl	8007454 <vPortExitCritical>
}
 80088dc:	4620      	mov	r0, r4
 80088de:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 80088e0:	2300      	movs	r3, #0
 80088e2:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 80088e4:	2401      	movs	r4, #1
 80088e6:	e7f7      	b.n	80088d8 <xTaskCheckForTimeOut+0x60>
 80088e8:	20012a78 	.word	0x20012a78
 80088ec:	20012a64 	.word	0x20012a64

080088f0 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 80088f0:	4b01      	ldr	r3, [pc, #4]	@ (80088f8 <vTaskMissedYield+0x8>)
 80088f2:	2201      	movs	r2, #1
 80088f4:	601a      	str	r2, [r3, #0]
}
 80088f6:	4770      	bx	lr
 80088f8:	20012a68 	.word	0x20012a68

080088fc <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 80088fc:	4b05      	ldr	r3, [pc, #20]	@ (8008914 <xTaskGetSchedulerState+0x18>)
 80088fe:	681b      	ldr	r3, [r3, #0]
 8008900:	b133      	cbz	r3, 8008910 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008902:	4b05      	ldr	r3, [pc, #20]	@ (8008918 <xTaskGetSchedulerState+0x1c>)
 8008904:	6818      	ldr	r0, [r3, #0]
 8008906:	fab0 f080 	clz	r0, r0
 800890a:	0940      	lsrs	r0, r0, #5
 800890c:	0040      	lsls	r0, r0, #1
 800890e:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8008910:	2001      	movs	r0, #1
	}
 8008912:	4770      	bx	lr
 8008914:	20012a70 	.word	0x20012a70
 8008918:	20012a58 	.word	0x20012a58

0800891c <xTaskPriorityInherit>:
	{
 800891c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
 800891e:	4604      	mov	r4, r0
 8008920:	b338      	cbz	r0, 8008972 <xTaskPriorityInherit+0x56>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 8008922:	4d1a      	ldr	r5, [pc, #104]	@ (800898c <xTaskPriorityInherit+0x70>)
 8008924:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8008926:	682a      	ldr	r2, [r5, #0]
 8008928:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800892a:	4293      	cmp	r3, r2
 800892c:	d226      	bcs.n	800897c <xTaskPriorityInherit+0x60>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800892e:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8008930:	4e17      	ldr	r6, [pc, #92]	@ (8008990 <xTaskPriorityInherit+0x74>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008932:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008934:	bfa1      	itttt	ge
 8008936:	682a      	ldrge	r2, [r5, #0]
 8008938:	6ad2      	ldrge	r2, [r2, #44]	@ 0x2c
 800893a:	f1c2 0238 	rsbge	r2, r2, #56	@ 0x38
 800893e:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8008940:	2214      	movs	r2, #20
 8008942:	fb02 6303 	mla	r3, r2, r3, r6
 8008946:	6942      	ldr	r2, [r0, #20]
 8008948:	429a      	cmp	r2, r3
 800894a:	d113      	bne.n	8008974 <xTaskPriorityInherit+0x58>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800894c:	1d07      	adds	r7, r0, #4
 800894e:	4638      	mov	r0, r7
 8008950:	f7fe fcea 	bl	8007328 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008954:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008956:	4a0f      	ldr	r2, [pc, #60]	@ (8008994 <xTaskPriorityInherit+0x78>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008958:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800895a:	6811      	ldr	r1, [r2, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800895c:	62e3      	str	r3, [r4, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800895e:	2014      	movs	r0, #20
 8008960:	428b      	cmp	r3, r1
 8008962:	fb00 6003 	mla	r0, r0, r3, r6
 8008966:	4639      	mov	r1, r7
 8008968:	bf88      	it	hi
 800896a:	6013      	strhi	r3, [r2, #0]
 800896c:	f7fe fcba 	bl	80072e4 <vListInsertEnd>
				xReturn = pdTRUE;
 8008970:	2001      	movs	r0, #1
	}
 8008972:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008974:	682b      	ldr	r3, [r5, #0]
 8008976:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008978:	62c3      	str	r3, [r0, #44]	@ 0x2c
 800897a:	e7f9      	b.n	8008970 <xTaskPriorityInherit+0x54>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800897c:	682b      	ldr	r3, [r5, #0]
 800897e:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
 8008980:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008982:	4298      	cmp	r0, r3
 8008984:	bf2c      	ite	cs
 8008986:	2000      	movcs	r0, #0
 8008988:	2001      	movcc	r0, #1
 800898a:	e7f2      	b.n	8008972 <xTaskPriorityInherit+0x56>
 800898c:	20012f50 	.word	0x20012f50
 8008990:	20012af0 	.word	0x20012af0
 8008994:	20012a74 	.word	0x20012a74

08008998 <xTaskPriorityDisinherit>:
	{
 8008998:	b538      	push	{r3, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800899a:	b908      	cbnz	r0, 80089a0 <xTaskPriorityDisinherit+0x8>
	BaseType_t xReturn = pdFALSE;
 800899c:	2000      	movs	r0, #0
	}
 800899e:	bd38      	pop	{r3, r4, r5, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 80089a0:	4b1b      	ldr	r3, [pc, #108]	@ (8008a10 <xTaskPriorityDisinherit+0x78>)
 80089a2:	681c      	ldr	r4, [r3, #0]
 80089a4:	4284      	cmp	r4, r0
 80089a6:	d008      	beq.n	80089ba <xTaskPriorityDisinherit+0x22>
 80089a8:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80089ac:	f383 8811 	msr	BASEPRI, r3
 80089b0:	f3bf 8f6f 	isb	sy
 80089b4:	f3bf 8f4f 	dsb	sy
 80089b8:	e7fe      	b.n	80089b8 <xTaskPriorityDisinherit+0x20>
			configASSERT( pxTCB->uxMutexesHeld );
 80089ba:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 80089bc:	b943      	cbnz	r3, 80089d0 <xTaskPriorityDisinherit+0x38>
 80089be:	f04f 0350 	mov.w	r3, #80	@ 0x50
 80089c2:	f383 8811 	msr	BASEPRI, r3
 80089c6:	f3bf 8f6f 	isb	sy
 80089ca:	f3bf 8f4f 	dsb	sy
 80089ce:	e7fe      	b.n	80089ce <xTaskPriorityDisinherit+0x36>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 80089d0:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 80089d2:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
			( pxTCB->uxMutexesHeld )--;
 80089d4:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 80089d6:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 80089d8:	6523      	str	r3, [r4, #80]	@ 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 80089da:	d0df      	beq.n	800899c <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 80089dc:	2b00      	cmp	r3, #0
 80089de:	d1dd      	bne.n	800899c <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80089e0:	1d25      	adds	r5, r4, #4
 80089e2:	4628      	mov	r0, r5
 80089e4:	f7fe fca0 	bl	8007328 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 80089e8:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 80089ea:	62e3      	str	r3, [r4, #44]	@ 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80089ec:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
 80089f0:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 80089f2:	4a08      	ldr	r2, [pc, #32]	@ (8008a14 <xTaskPriorityDisinherit+0x7c>)
 80089f4:	6811      	ldr	r1, [r2, #0]
 80089f6:	428b      	cmp	r3, r1
 80089f8:	bf88      	it	hi
 80089fa:	6013      	strhi	r3, [r2, #0]
 80089fc:	4a06      	ldr	r2, [pc, #24]	@ (8008a18 <xTaskPriorityDisinherit+0x80>)
 80089fe:	2014      	movs	r0, #20
 8008a00:	fb00 2003 	mla	r0, r0, r3, r2
 8008a04:	4629      	mov	r1, r5
 8008a06:	f7fe fc6d 	bl	80072e4 <vListInsertEnd>
					xReturn = pdTRUE;
 8008a0a:	2001      	movs	r0, #1
		return xReturn;
 8008a0c:	e7c7      	b.n	800899e <xTaskPriorityDisinherit+0x6>
 8008a0e:	bf00      	nop
 8008a10:	20012f50 	.word	0x20012f50
 8008a14:	20012a74 	.word	0x20012a74
 8008a18:	20012af0 	.word	0x20012af0

08008a1c <vTaskPriorityDisinheritAfterTimeout>:
	{
 8008a1c:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8008a1e:	4604      	mov	r4, r0
 8008a20:	2800      	cmp	r0, #0
 8008a22:	d041      	beq.n	8008aa8 <vTaskPriorityDisinheritAfterTimeout+0x8c>
			configASSERT( pxTCB->uxMutexesHeld );
 8008a24:	6d02      	ldr	r2, [r0, #80]	@ 0x50
 8008a26:	b942      	cbnz	r2, 8008a3a <vTaskPriorityDisinheritAfterTimeout+0x1e>
 8008a28:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008a2c:	f383 8811 	msr	BASEPRI, r3
 8008a30:	f3bf 8f6f 	isb	sy
 8008a34:	f3bf 8f4f 	dsb	sy
 8008a38:	e7fe      	b.n	8008a38 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 8008a3a:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 8008a3c:	4299      	cmp	r1, r3
 8008a3e:	bf38      	it	cc
 8008a40:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 8008a42:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8008a44:	428b      	cmp	r3, r1
 8008a46:	d02f      	beq.n	8008aa8 <vTaskPriorityDisinheritAfterTimeout+0x8c>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8008a48:	2a01      	cmp	r2, #1
 8008a4a:	d12d      	bne.n	8008aa8 <vTaskPriorityDisinheritAfterTimeout+0x8c>
					configASSERT( pxTCB != pxCurrentTCB );
 8008a4c:	4a17      	ldr	r2, [pc, #92]	@ (8008aac <vTaskPriorityDisinheritAfterTimeout+0x90>)
 8008a4e:	6812      	ldr	r2, [r2, #0]
 8008a50:	4282      	cmp	r2, r0
 8008a52:	d108      	bne.n	8008a66 <vTaskPriorityDisinheritAfterTimeout+0x4a>
 8008a54:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008a58:	f383 8811 	msr	BASEPRI, r3
 8008a5c:	f3bf 8f6f 	isb	sy
 8008a60:	f3bf 8f4f 	dsb	sy
 8008a64:	e7fe      	b.n	8008a64 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008a66:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008a68:	4d11      	ldr	r5, [pc, #68]	@ (8008ab0 <vTaskPriorityDisinheritAfterTimeout+0x94>)
					pxTCB->uxPriority = uxPriorityToUse;
 8008a6a:	62c1      	str	r1, [r0, #44]	@ 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008a6c:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008a6e:	f04f 0214 	mov.w	r2, #20
 8008a72:	fb02 5303 	mla	r3, r2, r3, r5
 8008a76:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008a78:	bfa4      	itt	ge
 8008a7a:	f1c1 0138 	rsbge	r1, r1, #56	@ 0x38
 8008a7e:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008a80:	429a      	cmp	r2, r3
 8008a82:	d111      	bne.n	8008aa8 <vTaskPriorityDisinheritAfterTimeout+0x8c>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008a84:	1d06      	adds	r6, r0, #4
 8008a86:	4630      	mov	r0, r6
 8008a88:	f7fe fc4e 	bl	8007328 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8008a8c:	4a09      	ldr	r2, [pc, #36]	@ (8008ab4 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 8008a8e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8008a90:	6811      	ldr	r1, [r2, #0]
 8008a92:	2014      	movs	r0, #20
 8008a94:	428b      	cmp	r3, r1
 8008a96:	fb00 5003 	mla	r0, r0, r3, r5
 8008a9a:	4631      	mov	r1, r6
	}
 8008a9c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
 8008aa0:	bf88      	it	hi
 8008aa2:	6013      	strhi	r3, [r2, #0]
 8008aa4:	f7fe bc1e 	b.w	80072e4 <vListInsertEnd>
	}
 8008aa8:	bd70      	pop	{r4, r5, r6, pc}
 8008aaa:	bf00      	nop
 8008aac:	20012f50 	.word	0x20012f50
 8008ab0:	20012af0 	.word	0x20012af0
 8008ab4:	20012a74 	.word	0x20012a74

08008ab8 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8008ab8:	4b04      	ldr	r3, [pc, #16]	@ (8008acc <pvTaskIncrementMutexHeldCount+0x14>)
 8008aba:	681a      	ldr	r2, [r3, #0]
 8008abc:	b11a      	cbz	r2, 8008ac6 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 8008abe:	6819      	ldr	r1, [r3, #0]
 8008ac0:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
 8008ac2:	3201      	adds	r2, #1
 8008ac4:	650a      	str	r2, [r1, #80]	@ 0x50
		return pxCurrentTCB;
 8008ac6:	6818      	ldr	r0, [r3, #0]
	}
 8008ac8:	4770      	bx	lr
 8008aca:	bf00      	nop
 8008acc:	20012f50 	.word	0x20012f50

08008ad0 <prvInsertTimerInActiveList>:
BaseType_t xProcessTimerNow = pdFALSE;

	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );

	if( xNextExpiryTime <= xTimeNow )
 8008ad0:	4291      	cmp	r1, r2
{
 8008ad2:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8008ad4:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8008ad6:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 8008ad8:	d80a      	bhi.n	8008af0 <prvInsertTimerInActiveList+0x20>
	{
		/* Has the expiry time elapsed between the command to start/reset a
		timer was issued, and the time the command was processed? */
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008ada:	1ad2      	subs	r2, r2, r3
 8008adc:	6983      	ldr	r3, [r0, #24]
 8008ade:	429a      	cmp	r2, r3
 8008ae0:	d20d      	bcs.n	8008afe <prvInsertTimerInActiveList+0x2e>
			processed actually exceeds the timers period.  */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8008ae2:	4b08      	ldr	r3, [pc, #32]	@ (8008b04 <prvInsertTimerInActiveList+0x34>)
 8008ae4:	1d01      	adds	r1, r0, #4
			its expiry time and should be processed immediately. */
			xProcessTimerNow = pdTRUE;
		}
		else
		{
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8008ae6:	6818      	ldr	r0, [r3, #0]
 8008ae8:	f7fe fc07 	bl	80072fa <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 8008aec:	2000      	movs	r0, #0
		}
	}

	return xProcessTimerNow;
}
 8008aee:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8008af0:	429a      	cmp	r2, r3
 8008af2:	d201      	bcs.n	8008af8 <prvInsertTimerInActiveList+0x28>
 8008af4:	4299      	cmp	r1, r3
 8008af6:	d202      	bcs.n	8008afe <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8008af8:	4b03      	ldr	r3, [pc, #12]	@ (8008b08 <prvInsertTimerInActiveList+0x38>)
 8008afa:	1d01      	adds	r1, r0, #4
 8008afc:	e7f3      	b.n	8008ae6 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 8008afe:	2001      	movs	r0, #1
	return xProcessTimerNow;
 8008b00:	e7f5      	b.n	8008aee <prvInsertTimerInActiveList+0x1e>
 8008b02:	bf00      	nop
 8008b04:	20013050 	.word	0x20013050
 8008b08:	20013054 	.word	0x20013054

08008b0c <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 8008b0c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 8008b0e:	4c11      	ldr	r4, [pc, #68]	@ (8008b54 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 8008b10:	f7fe fc80 	bl	8007414 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8008b14:	6825      	ldr	r5, [r4, #0]
 8008b16:	b9bd      	cbnz	r5, 8008b48 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 8008b18:	4f0f      	ldr	r7, [pc, #60]	@ (8008b58 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 8008b1a:	4e10      	ldr	r6, [pc, #64]	@ (8008b5c <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 8008b1c:	4638      	mov	r0, r7
 8008b1e:	f7fe fbd3 	bl	80072c8 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8008b22:	4630      	mov	r0, r6
 8008b24:	f7fe fbd0 	bl	80072c8 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8008b28:	4b0d      	ldr	r3, [pc, #52]	@ (8008b60 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8008b2a:	4a0e      	ldr	r2, [pc, #56]	@ (8008b64 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 8008b2c:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 8008b2e:	4b0e      	ldr	r3, [pc, #56]	@ (8008b68 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8008b30:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 8008b32:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8008b34:	200a      	movs	r0, #10
 8008b36:	4b0d      	ldr	r3, [pc, #52]	@ (8008b6c <prvCheckForValidListAndQueue+0x60>)
 8008b38:	9500      	str	r5, [sp, #0]
 8008b3a:	f7fe fe74 	bl	8007826 <xQueueGenericCreateStatic>
 8008b3e:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 8008b40:	b110      	cbz	r0, 8008b48 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8008b42:	490b      	ldr	r1, [pc, #44]	@ (8008b70 <prvCheckForValidListAndQueue+0x64>)
 8008b44:	f7ff fa2c 	bl	8007fa0 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 8008b48:	b003      	add	sp, #12
 8008b4a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 8008b4e:	f7fe bc81 	b.w	8007454 <vPortExitCritical>
 8008b52:	bf00      	nop
 8008b54:	2001304c 	.word	0x2001304c
 8008b58:	2001306c 	.word	0x2001306c
 8008b5c:	20013058 	.word	0x20013058
 8008b60:	20013054 	.word	0x20013054
 8008b64:	20012fa4 	.word	0x20012fa4
 8008b68:	20013050 	.word	0x20013050
 8008b6c:	20012f54 	.word	0x20012f54
 8008b70:	080231ff 	.word	0x080231ff

08008b74 <xTimerCreateTimerTask>:
{
 8008b74:	b510      	push	{r4, lr}
 8008b76:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 8008b78:	f7ff ffc8 	bl	8008b0c <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 8008b7c:	4b12      	ldr	r3, [pc, #72]	@ (8008bc8 <xTimerCreateTimerTask+0x54>)
 8008b7e:	681b      	ldr	r3, [r3, #0]
 8008b80:	b1b3      	cbz	r3, 8008bb0 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 8008b82:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8008b84:	aa07      	add	r2, sp, #28
 8008b86:	a906      	add	r1, sp, #24
 8008b88:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 8008b8a:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8008b8e:	f7fe fa93 	bl	80070b8 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 8008b92:	9b05      	ldr	r3, [sp, #20]
 8008b94:	9302      	str	r3, [sp, #8]
 8008b96:	9b06      	ldr	r3, [sp, #24]
 8008b98:	9301      	str	r3, [sp, #4]
 8008b9a:	2302      	movs	r3, #2
 8008b9c:	9300      	str	r3, [sp, #0]
 8008b9e:	9a07      	ldr	r2, [sp, #28]
 8008ba0:	490a      	ldr	r1, [pc, #40]	@ (8008bcc <xTimerCreateTimerTask+0x58>)
 8008ba2:	480b      	ldr	r0, [pc, #44]	@ (8008bd0 <xTimerCreateTimerTask+0x5c>)
 8008ba4:	4623      	mov	r3, r4
 8008ba6:	f7ff fbc0 	bl	800832a <xTaskCreateStatic>
 8008baa:	4b0a      	ldr	r3, [pc, #40]	@ (8008bd4 <xTimerCreateTimerTask+0x60>)
 8008bac:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 8008bae:	b940      	cbnz	r0, 8008bc2 <xTimerCreateTimerTask+0x4e>
 8008bb0:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008bb4:	f383 8811 	msr	BASEPRI, r3
 8008bb8:	f3bf 8f6f 	isb	sy
 8008bbc:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 8008bc0:	e7fe      	b.n	8008bc0 <xTimerCreateTimerTask+0x4c>
}
 8008bc2:	2001      	movs	r0, #1
 8008bc4:	b008      	add	sp, #32
 8008bc6:	bd10      	pop	{r4, pc}
 8008bc8:	2001304c 	.word	0x2001304c
 8008bcc:	08023204 	.word	0x08023204
 8008bd0:	08008cd5 	.word	0x08008cd5
 8008bd4:	20013048 	.word	0x20013048

08008bd8 <xTimerGenericCommand>:
{
 8008bd8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8008bda:	4616      	mov	r6, r2
	configASSERT( xTimer );
 8008bdc:	4604      	mov	r4, r0
{
 8008bde:	461a      	mov	r2, r3
	configASSERT( xTimer );
 8008be0:	b940      	cbnz	r0, 8008bf4 <xTimerGenericCommand+0x1c>
 8008be2:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008be6:	f383 8811 	msr	BASEPRI, r3
 8008bea:	f3bf 8f6f 	isb	sy
 8008bee:	f3bf 8f4f 	dsb	sy
 8008bf2:	e7fe      	b.n	8008bf2 <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 8008bf4:	4d0d      	ldr	r5, [pc, #52]	@ (8008c2c <xTimerGenericCommand+0x54>)
 8008bf6:	6828      	ldr	r0, [r5, #0]
 8008bf8:	b180      	cbz	r0, 8008c1c <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8008bfa:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 8008bfc:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8008c00:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8008c02:	dc0d      	bgt.n	8008c20 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8008c04:	f7ff fe7a 	bl	80088fc <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8008c08:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8008c0a:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8008c0c:	bf08      	it	eq
 8008c0e:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 8008c10:	6828      	ldr	r0, [r5, #0]
 8008c12:	bf18      	it	ne
 8008c14:	461a      	movne	r2, r3
 8008c16:	4669      	mov	r1, sp
 8008c18:	f7fe feba 	bl	8007990 <xQueueGenericSend>
}
 8008c1c:	b004      	add	sp, #16
 8008c1e:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 8008c20:	2300      	movs	r3, #0
 8008c22:	4669      	mov	r1, sp
 8008c24:	f7fe ff66 	bl	8007af4 <xQueueGenericSendFromISR>
 8008c28:	e7f8      	b.n	8008c1c <xTimerGenericCommand+0x44>
 8008c2a:	bf00      	nop
 8008c2c:	2001304c 	.word	0x2001304c

08008c30 <prvSampleTimeNow>:
{
 8008c30:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 8008c34:	f8df 8098 	ldr.w	r8, [pc, #152]	@ 8008cd0 <prvSampleTimeNow+0xa0>
{
 8008c38:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 8008c3a:	f7ff fc2b 	bl	8008494 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8008c3e:	f8d8 3000 	ldr.w	r3, [r8]
 8008c42:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 8008c44:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 8008c46:	d909      	bls.n	8008c5c <prvSampleTimeNow+0x2c>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8008c48:	4f1f      	ldr	r7, [pc, #124]	@ (8008cc8 <prvSampleTimeNow+0x98>)
 8008c4a:	683b      	ldr	r3, [r7, #0]
 8008c4c:	681a      	ldr	r2, [r3, #0]
 8008c4e:	b96a      	cbnz	r2, 8008c6c <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 8008c50:	4a1e      	ldr	r2, [pc, #120]	@ (8008ccc <prvSampleTimeNow+0x9c>)
 8008c52:	6811      	ldr	r1, [r2, #0]
 8008c54:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 8008c56:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 8008c58:	2301      	movs	r3, #1
 8008c5a:	e000      	b.n	8008c5e <prvSampleTimeNow+0x2e>
 8008c5c:	2300      	movs	r3, #0
}
 8008c5e:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdTRUE;
 8008c60:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 8008c62:	f8c8 5000 	str.w	r5, [r8]
}
 8008c66:	b002      	add	sp, #8
 8008c68:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8008c6c:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008c6e:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8008c70:	f8d3 9000 	ldr.w	r9, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8008c74:	f104 0a04 	add.w	sl, r4, #4
 8008c78:	4650      	mov	r0, sl
 8008c7a:	f7fe fb55 	bl	8007328 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8008c7e:	6a23      	ldr	r3, [r4, #32]
 8008c80:	4620      	mov	r0, r4
 8008c82:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8008c84:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 8008c88:	075b      	lsls	r3, r3, #29
 8008c8a:	d5de      	bpl.n	8008c4a <prvSampleTimeNow+0x1a>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 8008c8c:	69a3      	ldr	r3, [r4, #24]
 8008c8e:	444b      	add	r3, r9
			if( xReloadTime > xNextExpireTime )
 8008c90:	4599      	cmp	r9, r3
 8008c92:	d206      	bcs.n	8008ca2 <prvSampleTimeNow+0x72>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8008c94:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 8008c96:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8008c98:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8008c9a:	4651      	mov	r1, sl
 8008c9c:	f7fe fb2d 	bl	80072fa <vListInsert>
 8008ca0:	e7d3      	b.n	8008c4a <prvSampleTimeNow+0x1a>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8008ca2:	2300      	movs	r3, #0
 8008ca4:	9300      	str	r3, [sp, #0]
 8008ca6:	464a      	mov	r2, r9
 8008ca8:	4619      	mov	r1, r3
 8008caa:	4620      	mov	r0, r4
 8008cac:	f7ff ff94 	bl	8008bd8 <xTimerGenericCommand>
				configASSERT( xResult );
 8008cb0:	2800      	cmp	r0, #0
 8008cb2:	d1ca      	bne.n	8008c4a <prvSampleTimeNow+0x1a>
 8008cb4:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008cb8:	f383 8811 	msr	BASEPRI, r3
 8008cbc:	f3bf 8f6f 	isb	sy
 8008cc0:	f3bf 8f4f 	dsb	sy
 8008cc4:	e7fe      	b.n	8008cc4 <prvSampleTimeNow+0x94>
 8008cc6:	bf00      	nop
 8008cc8:	20013054 	.word	0x20013054
 8008ccc:	20013050 	.word	0x20013050
 8008cd0:	20013044 	.word	0x20013044

08008cd4 <prvTimerTask>:
{
 8008cd4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008cd8:	4d6e      	ldr	r5, [pc, #440]	@ (8008e94 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8008cda:	4e6f      	ldr	r6, [pc, #444]	@ (8008e98 <prvTimerTask+0x1c4>)
{
 8008cdc:	b089      	sub	sp, #36	@ 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008cde:	682b      	ldr	r3, [r5, #0]
 8008ce0:	f8d3 8000 	ldr.w	r8, [r3]
 8008ce4:	f1b8 0f00 	cmp.w	r8, #0
 8008ce8:	d035      	beq.n	8008d56 <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8008cea:	68db      	ldr	r3, [r3, #12]
 8008cec:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008cf0:	2400      	movs	r4, #0
	vTaskSuspendAll();
 8008cf2:	f7ff fbc7 	bl	8008484 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8008cf6:	a804      	add	r0, sp, #16
 8008cf8:	f7ff ff9a 	bl	8008c30 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 8008cfc:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8008cfe:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 8008d00:	2b00      	cmp	r3, #0
 8008d02:	d169      	bne.n	8008dd8 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8008d04:	2c00      	cmp	r4, #0
 8008d06:	d14c      	bne.n	8008da2 <prvTimerTask+0xce>
 8008d08:	4540      	cmp	r0, r8
 8008d0a:	d350      	bcc.n	8008dae <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 8008d0c:	f7ff fc5e 	bl	80085cc <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008d10:	682b      	ldr	r3, [r5, #0]
 8008d12:	68db      	ldr	r3, [r3, #12]
 8008d14:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8008d16:	1d38      	adds	r0, r7, #4
 8008d18:	f7fe fb06 	bl	8007328 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8008d1c:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 8008d20:	0758      	lsls	r0, r3, #29
 8008d22:	d51a      	bpl.n	8008d5a <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8008d24:	69b9      	ldr	r1, [r7, #24]
 8008d26:	4643      	mov	r3, r8
 8008d28:	464a      	mov	r2, r9
 8008d2a:	4441      	add	r1, r8
 8008d2c:	4638      	mov	r0, r7
 8008d2e:	f7ff fecf 	bl	8008ad0 <prvInsertTimerInActiveList>
 8008d32:	b1b0      	cbz	r0, 8008d62 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8008d34:	9400      	str	r4, [sp, #0]
 8008d36:	4623      	mov	r3, r4
 8008d38:	4642      	mov	r2, r8
 8008d3a:	4621      	mov	r1, r4
 8008d3c:	4638      	mov	r0, r7
 8008d3e:	f7ff ff4b 	bl	8008bd8 <xTimerGenericCommand>
			configASSERT( xResult );
 8008d42:	b970      	cbnz	r0, 8008d62 <prvTimerTask+0x8e>
 8008d44:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008d48:	f383 8811 	msr	BASEPRI, r3
 8008d4c:	f3bf 8f6f 	isb	sy
 8008d50:	f3bf 8f4f 	dsb	sy
 8008d54:	e7fe      	b.n	8008d54 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008d56:	2401      	movs	r4, #1
 8008d58:	e7cb      	b.n	8008cf2 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8008d5a:	f023 0301 	bic.w	r3, r3, #1
 8008d5e:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8008d62:	6a3b      	ldr	r3, [r7, #32]
 8008d64:	4638      	mov	r0, r7
 8008d66:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8008d68:	6830      	ldr	r0, [r6, #0]
 8008d6a:	2200      	movs	r2, #0
 8008d6c:	a904      	add	r1, sp, #16
 8008d6e:	f7fe ff6f 	bl	8007c50 <xQueueReceive>
 8008d72:	2800      	cmp	r0, #0
 8008d74:	d0b3      	beq.n	8008cde <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8008d76:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8008d78:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8008d7a:	2b00      	cmp	r3, #0
 8008d7c:	db2f      	blt.n	8008dde <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 8008d7e:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 8008d80:	6963      	ldr	r3, [r4, #20]
 8008d82:	2b00      	cmp	r3, #0
 8008d84:	d132      	bne.n	8008dec <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8008d86:	a803      	add	r0, sp, #12
 8008d88:	f7ff ff52 	bl	8008c30 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 8008d8c:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8008d8e:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 8008d90:	2b09      	cmp	r3, #9
 8008d92:	d8e9      	bhi.n	8008d68 <prvTimerTask+0x94>
 8008d94:	e8df f003 	tbb	[pc, r3]
 8008d98:	572e2e2e 	.word	0x572e2e2e
 8008d9c:	2e2e765e 	.word	0x2e2e765e
 8008da0:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8008da2:	4b3e      	ldr	r3, [pc, #248]	@ (8008e9c <prvTimerTask+0x1c8>)
 8008da4:	681b      	ldr	r3, [r3, #0]
 8008da6:	681c      	ldr	r4, [r3, #0]
 8008da8:	fab4 f484 	clz	r4, r4
 8008dac:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8008dae:	6830      	ldr	r0, [r6, #0]
 8008db0:	4622      	mov	r2, r4
 8008db2:	eba8 0109 	sub.w	r1, r8, r9
 8008db6:	f7ff f932 	bl	800801e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 8008dba:	f7ff fc07 	bl	80085cc <xTaskResumeAll>
 8008dbe:	2800      	cmp	r0, #0
 8008dc0:	d1d2      	bne.n	8008d68 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 8008dc2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
 8008dc6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
 8008dca:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
 8008dce:	f3bf 8f4f 	dsb	sy
 8008dd2:	f3bf 8f6f 	isb	sy
 8008dd6:	e7c7      	b.n	8008d68 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 8008dd8:	f7ff fbf8 	bl	80085cc <xTaskResumeAll>
}
 8008ddc:	e7c4      	b.n	8008d68 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8008dde:	9b05      	ldr	r3, [sp, #20]
 8008de0:	9907      	ldr	r1, [sp, #28]
 8008de2:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 8008de4:	9b04      	ldr	r3, [sp, #16]
 8008de6:	2b00      	cmp	r3, #0
 8008de8:	dbbe      	blt.n	8008d68 <prvTimerTask+0x94>
 8008dea:	e7c8      	b.n	8008d7e <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8008dec:	1d20      	adds	r0, r4, #4
 8008dee:	f7fe fa9b 	bl	8007328 <uxListRemove>
 8008df2:	e7c8      	b.n	8008d86 <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8008df4:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8008df8:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8008dfa:	f043 0301 	orr.w	r3, r3, #1
 8008dfe:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8008e02:	9b05      	ldr	r3, [sp, #20]
 8008e04:	4620      	mov	r0, r4
 8008e06:	4419      	add	r1, r3
 8008e08:	f7ff fe62 	bl	8008ad0 <prvInsertTimerInActiveList>
 8008e0c:	2800      	cmp	r0, #0
 8008e0e:	d0ab      	beq.n	8008d68 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8008e10:	6a23      	ldr	r3, [r4, #32]
 8008e12:	4620      	mov	r0, r4
 8008e14:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8008e16:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 8008e1a:	0759      	lsls	r1, r3, #29
 8008e1c:	d5a4      	bpl.n	8008d68 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8008e1e:	69a2      	ldr	r2, [r4, #24]
 8008e20:	9905      	ldr	r1, [sp, #20]
 8008e22:	2300      	movs	r3, #0
 8008e24:	440a      	add	r2, r1
 8008e26:	9300      	str	r3, [sp, #0]
 8008e28:	4619      	mov	r1, r3
 8008e2a:	4620      	mov	r0, r4
 8008e2c:	f7ff fed4 	bl	8008bd8 <xTimerGenericCommand>
							configASSERT( xResult );
 8008e30:	2800      	cmp	r0, #0
 8008e32:	d199      	bne.n	8008d68 <prvTimerTask+0x94>
 8008e34:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008e38:	f383 8811 	msr	BASEPRI, r3
 8008e3c:	f3bf 8f6f 	isb	sy
 8008e40:	f3bf 8f4f 	dsb	sy
 8008e44:	e7fe      	b.n	8008e44 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8008e46:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8008e4a:	f023 0301 	bic.w	r3, r3, #1
 8008e4e:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
 8008e52:	e789      	b.n	8008d68 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8008e54:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 8008e58:	f043 0301 	orr.w	r3, r3, #1
 8008e5c:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 8008e60:	9905      	ldr	r1, [sp, #20]
 8008e62:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8008e64:	b941      	cbnz	r1, 8008e78 <prvTimerTask+0x1a4>
 8008e66:	f04f 0350 	mov.w	r3, #80	@ 0x50
 8008e6a:	f383 8811 	msr	BASEPRI, r3
 8008e6e:	f3bf 8f6f 	isb	sy
 8008e72:	f3bf 8f4f 	dsb	sy
 8008e76:	e7fe      	b.n	8008e76 <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 8008e78:	4603      	mov	r3, r0
 8008e7a:	4401      	add	r1, r0
 8008e7c:	4620      	mov	r0, r4
 8008e7e:	f7ff fe27 	bl	8008ad0 <prvInsertTimerInActiveList>
					break;
 8008e82:	e771      	b.n	8008d68 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 8008e84:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
 8008e88:	079a      	lsls	r2, r3, #30
 8008e8a:	d4de      	bmi.n	8008e4a <prvTimerTask+0x176>
							vPortFree( pxTimer );
 8008e8c:	4620      	mov	r0, r4
 8008e8e:	f7fe f9dd 	bl	800724c <vPortFree>
 8008e92:	e769      	b.n	8008d68 <prvTimerTask+0x94>
 8008e94:	20013054 	.word	0x20013054
 8008e98:	2001304c 	.word	0x2001304c
 8008e9c:	20013050 	.word	0x20013050

08008ea0 <USBD_Init>:
                             USBD_DescriptorsTypeDef *pdesc, uint8_t id)
{
  USBD_StatusTypeDef ret;

  /* Check whether the USB Host handle is valid */
  if (pdev == NULL)
 8008ea0:	b178      	cbz	r0, 8008ec2 <USBD_Init+0x22>
    pdev->NumClasses = 0;
    pdev->classId = 0;
  }
#else
  /* Unlink previous class*/
  pdev->pClass[0] = NULL;
 8008ea2:	2300      	movs	r3, #0
 8008ea4:	f8c0 32b8 	str.w	r3, [r0, #696]	@ 0x2b8
  pdev->pUserData[0] = NULL;
 8008ea8:	f8c0 32c4 	str.w	r3, [r0, #708]	@ 0x2c4
#endif /* USE_USBD_COMPOSITE */

  pdev->pConfDesc = NULL;
 8008eac:	f8c0 32d0 	str.w	r3, [r0, #720]	@ 0x2d0

  /* Assign USBD Descriptors */
  if (pdesc != NULL)
 8008eb0:	b109      	cbz	r1, 8008eb6 <USBD_Init+0x16>
  {
    pdev->pDesc = pdesc;
 8008eb2:	f8c0 12b4 	str.w	r1, [r0, #692]	@ 0x2b4
  }

  /* Set Device initial State */
  pdev->dev_state = USBD_STATE_DEFAULT;
 8008eb6:	2301      	movs	r3, #1
 8008eb8:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c
  pdev->id = id;
 8008ebc:	7002      	strb	r2, [r0, #0]

  /* Initialize low level driver */
  ret = USBD_LL_Init(pdev);
 8008ebe:	f7f8 bd23 	b.w	8001908 <USBD_LL_Init>

  return ret;
}
 8008ec2:	2003      	movs	r0, #3
 8008ec4:	4770      	bx	lr

08008ec6 <USBD_RegisterClass>:
  * @param  pdev: Device Handle
  * @param  pclass: Class handle
  * @retval USBD Status
  */
USBD_StatusTypeDef USBD_RegisterClass(USBD_HandleTypeDef *pdev, USBD_ClassTypeDef *pclass)
{
 8008ec6:	b513      	push	{r0, r1, r4, lr}
  uint16_t len = 0U;
 8008ec8:	2300      	movs	r3, #0
{
 8008eca:	4604      	mov	r4, r0
  uint16_t len = 0U;
 8008ecc:	f8ad 3006 	strh.w	r3, [sp, #6]

  if (pclass == NULL)
 8008ed0:	b181      	cbz	r1, 8008ef4 <USBD_RegisterClass+0x2e>
  if (pdev->pClass[pdev->classId]->GetHSConfigDescriptor != NULL)
  {
    pdev->pConfDesc = (void *)pdev->pClass[pdev->classId]->GetHSConfigDescriptor(&len);
  }
#else /* Default USE_USB_FS */
  if (pdev->pClass[pdev->classId]->GetFSConfigDescriptor != NULL)
 8008ed2:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
  pdev->pClass[0] = pclass;
 8008ed4:	f8c0 12b8 	str.w	r1, [r0, #696]	@ 0x2b8
  if (pdev->pClass[pdev->classId]->GetFSConfigDescriptor != NULL)
 8008ed8:	b123      	cbz	r3, 8008ee4 <USBD_RegisterClass+0x1e>
  {
    pdev->pConfDesc = (void *)pdev->pClass[pdev->classId]->GetFSConfigDescriptor(&len);
 8008eda:	f10d 0006 	add.w	r0, sp, #6
 8008ede:	4798      	blx	r3
 8008ee0:	f8c4 02d0 	str.w	r0, [r4, #720]	@ 0x2d0
  }
#endif /* USE_USB_FS */

  /* Increment the NumClasses */
  pdev->NumClasses++;
 8008ee4:	f8d4 32d8 	ldr.w	r3, [r4, #728]	@ 0x2d8
 8008ee8:	3301      	adds	r3, #1
 8008eea:	f8c4 32d8 	str.w	r3, [r4, #728]	@ 0x2d8

  return USBD_OK;
 8008eee:	2000      	movs	r0, #0
}
 8008ef0:	b002      	add	sp, #8
 8008ef2:	bd10      	pop	{r4, pc}
    return USBD_FAIL;
 8008ef4:	2003      	movs	r0, #3
 8008ef6:	e7fb      	b.n	8008ef0 <USBD_RegisterClass+0x2a>

08008ef8 <USBD_Start>:
#ifdef USE_USBD_COMPOSITE
  pdev->classId = 0U;
#endif /* USE_USBD_COMPOSITE */

  /* Start the low level driver  */
  return USBD_LL_Start(pdev);
 8008ef8:	f7f8 bd57 	b.w	80019aa <USBD_LL_Start>

08008efc <USBD_SetClassConfig>:
        }
      }
    }
  }
#else
  if (pdev->pClass[0] != NULL)
 8008efc:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 8008f00:	b10b      	cbz	r3, 8008f06 <USBD_SetClassConfig+0xa>
  {
    /* Set configuration and Start the Class */
    ret = (USBD_StatusTypeDef)pdev->pClass[0]->Init(pdev, cfgidx);
 8008f02:	681b      	ldr	r3, [r3, #0]
 8008f04:	4718      	bx	r3
  }
#endif /* USE_USBD_COMPOSITE */

  return ret;
}
 8008f06:	4618      	mov	r0, r3
 8008f08:	4770      	bx	lr

08008f0a <USBD_ClrClassConfig>:
  * @param  pdev: device instance
  * @param  cfgidx: configuration index
  * @retval status
  */
USBD_StatusTypeDef USBD_ClrClassConfig(USBD_HandleTypeDef *pdev, uint8_t cfgidx)
{
 8008f0a:	b508      	push	{r3, lr}
      }
    }
  }
#else
  /* Clear configuration  and De-initialize the Class process */
  if (pdev->pClass[0]->DeInit(pdev, cfgidx) != 0U)
 8008f0c:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 8008f10:	685b      	ldr	r3, [r3, #4]
 8008f12:	4798      	blx	r3
  {
    ret = USBD_FAIL;
 8008f14:	2800      	cmp	r0, #0
  }
#endif /* USE_USBD_COMPOSITE */

  return ret;
}
 8008f16:	bf18      	it	ne
 8008f18:	2003      	movne	r0, #3
 8008f1a:	bd08      	pop	{r3, pc}

08008f1c <USBD_LL_SetupStage>:
  * @param  pdev: device instance
  * @param  psetup: setup packet buffer pointer
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_SetupStage(USBD_HandleTypeDef *pdev, uint8_t *psetup)
{
 8008f1c:	b538      	push	{r3, r4, r5, lr}
 8008f1e:	4604      	mov	r4, r0
  USBD_StatusTypeDef ret;

  USBD_ParseSetupRequest(&pdev->request, psetup);
 8008f20:	f200 25aa 	addw	r5, r0, #682	@ 0x2aa
 8008f24:	4628      	mov	r0, r5
 8008f26:	f000 fb97 	bl	8009658 <USBD_ParseSetupRequest>

  pdev->ep0_state = USBD_EP0_SETUP;
 8008f2a:	2301      	movs	r3, #1

  pdev->ep0_data_len = pdev->request.wLength;

  switch (pdev->request.bmRequest & 0x1FU)
 8008f2c:	f894 12aa 	ldrb.w	r1, [r4, #682]	@ 0x2aa
  pdev->ep0_state = USBD_EP0_SETUP;
 8008f30:	f8c4 3294 	str.w	r3, [r4, #660]	@ 0x294
  pdev->ep0_data_len = pdev->request.wLength;
 8008f34:	f8b4 32b0 	ldrh.w	r3, [r4, #688]	@ 0x2b0
 8008f38:	f8c4 3298 	str.w	r3, [r4, #664]	@ 0x298
  switch (pdev->request.bmRequest & 0x1FU)
 8008f3c:	f001 031f 	and.w	r3, r1, #31
 8008f40:	2b01      	cmp	r3, #1
 8008f42:	d008      	beq.n	8008f56 <USBD_LL_SetupStage+0x3a>
 8008f44:	2b02      	cmp	r3, #2
 8008f46:	d00c      	beq.n	8008f62 <USBD_LL_SetupStage+0x46>
 8008f48:	b98b      	cbnz	r3, 8008f6e <USBD_LL_SetupStage+0x52>
  {
    case USB_REQ_RECIPIENT_DEVICE:
      ret = USBD_StdDevReq(pdev, &pdev->request);
 8008f4a:	4629      	mov	r1, r5
 8008f4c:	4620      	mov	r0, r4
      ret = USBD_LL_StallEP(pdev, (pdev->request.bmRequest & 0x80U));
      break;
  }

  return ret;
}
 8008f4e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_StdDevReq(pdev, &pdev->request);
 8008f52:	f000 b94d 	b.w	80091f0 <USBD_StdDevReq>
      ret = USBD_StdItfReq(pdev, &pdev->request);
 8008f56:	4629      	mov	r1, r5
 8008f58:	4620      	mov	r0, r4
}
 8008f5a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_StdItfReq(pdev, &pdev->request);
 8008f5e:	f000 baab 	b.w	80094b8 <USBD_StdItfReq>
      ret = USBD_StdEPReq(pdev, &pdev->request);
 8008f62:	4629      	mov	r1, r5
 8008f64:	4620      	mov	r0, r4
}
 8008f66:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_StdEPReq(pdev, &pdev->request);
 8008f6a:	f000 bad4 	b.w	8009516 <USBD_StdEPReq>
      ret = USBD_LL_StallEP(pdev, (pdev->request.bmRequest & 0x80U));
 8008f6e:	4620      	mov	r0, r4
 8008f70:	f001 0180 	and.w	r1, r1, #128	@ 0x80
}
 8008f74:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_LL_StallEP(pdev, (pdev->request.bmRequest & 0x80U));
 8008f78:	f7f8 bd35 	b.w	80019e6 <USBD_LL_StallEP>

08008f7c <USBD_LL_DataOutStage>:
  * @param  pdata: data pointer
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DataOutStage(USBD_HandleTypeDef *pdev,
                                        uint8_t epnum, uint8_t *pdata)
{
 8008f7c:	b570      	push	{r4, r5, r6, lr}
 8008f7e:	4604      	mov	r4, r0
 8008f80:	4616      	mov	r6, r2
  USBD_EndpointTypeDef *pep;
  USBD_StatusTypeDef ret = USBD_OK;
  uint8_t idx;

  if (epnum == 0U)
 8008f82:	bb09      	cbnz	r1, 8008fc8 <USBD_LL_DataOutStage+0x4c>
  {
    pep = &pdev->ep_out[0];

    if (pdev->ep0_state == USBD_EP0_DATA_OUT)
 8008f84:	f8d0 3294 	ldr.w	r3, [r0, #660]	@ 0x294
 8008f88:	2b03      	cmp	r3, #3
 8008f8a:	d10c      	bne.n	8008fa6 <USBD_LL_DataOutStage+0x2a>
    {
      if (pep->rem_length > pep->maxpacket)
 8008f8c:	e9d0 3257 	ldrd	r3, r2, [r0, #348]	@ 0x15c
 8008f90:	4293      	cmp	r3, r2
 8008f92:	d90a      	bls.n	8008faa <USBD_LL_DataOutStage+0x2e>
      {
        pep->rem_length -= pep->maxpacket;
 8008f94:	1a9b      	subs	r3, r3, r2

        (void)USBD_CtlContinueRx(pdev, pdata, MIN(pep->rem_length, pep->maxpacket));
 8008f96:	429a      	cmp	r2, r3
        pep->rem_length -= pep->maxpacket;
 8008f98:	f8c0 315c 	str.w	r3, [r0, #348]	@ 0x15c
        (void)USBD_CtlContinueRx(pdev, pdata, MIN(pep->rem_length, pep->maxpacket));
 8008f9c:	bf28      	it	cs
 8008f9e:	461a      	movcs	r2, r3
 8008fa0:	4631      	mov	r1, r6
 8008fa2:	f000 fc85 	bl	80098b0 <USBD_CtlContinueRx>
      }
    }
  }

  return USBD_OK;
}
 8008fa6:	2000      	movs	r0, #0
 8008fa8:	bd70      	pop	{r4, r5, r6, pc}
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8008faa:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 8008fae:	2b03      	cmp	r3, #3
 8008fb0:	d106      	bne.n	8008fc0 <USBD_LL_DataOutStage+0x44>
            if (pdev->pClass[idx]->EP0_RxReady != NULL)
 8008fb2:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 8008fb6:	691b      	ldr	r3, [r3, #16]
 8008fb8:	b113      	cbz	r3, 8008fc0 <USBD_LL_DataOutStage+0x44>
              pdev->classId = idx;
 8008fba:	f8c0 12d4 	str.w	r1, [r0, #724]	@ 0x2d4
              pdev->pClass[idx]->EP0_RxReady(pdev);
 8008fbe:	4798      	blx	r3
        (void)USBD_CtlSendStatus(pdev);
 8008fc0:	4620      	mov	r0, r4
 8008fc2:	f000 fc7d 	bl	80098c0 <USBD_CtlSendStatus>
 8008fc6:	e7ee      	b.n	8008fa6 <USBD_LL_DataOutStage+0x2a>
      if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8008fc8:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 8008fcc:	2b03      	cmp	r3, #3
 8008fce:	d1ea      	bne.n	8008fa6 <USBD_LL_DataOutStage+0x2a>
        if (pdev->pClass[idx]->DataOut != NULL)
 8008fd0:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 8008fd4:	699b      	ldr	r3, [r3, #24]
 8008fd6:	2b00      	cmp	r3, #0
 8008fd8:	d0e5      	beq.n	8008fa6 <USBD_LL_DataOutStage+0x2a>
          pdev->classId = idx;
 8008fda:	2200      	movs	r2, #0
}
 8008fdc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
          pdev->classId = idx;
 8008fe0:	f8c0 22d4 	str.w	r2, [r0, #724]	@ 0x2d4
          ret = (USBD_StatusTypeDef)pdev->pClass[idx]->DataOut(pdev, epnum);
 8008fe4:	4718      	bx	r3

08008fe6 <USBD_LL_DataInStage>:
  * @param  pdata: data pointer
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DataInStage(USBD_HandleTypeDef *pdev,
                                       uint8_t epnum, uint8_t *pdata)
{
 8008fe6:	b570      	push	{r4, r5, r6, lr}
 8008fe8:	4604      	mov	r4, r0
 8008fea:	4616      	mov	r6, r2
  USBD_EndpointTypeDef *pep;
  USBD_StatusTypeDef ret;
  uint8_t idx;

  if (epnum == 0U)
 8008fec:	460d      	mov	r5, r1
 8008fee:	2900      	cmp	r1, #0
 8008ff0:	d13d      	bne.n	800906e <USBD_LL_DataInStage+0x88>
  {
    pep = &pdev->ep_in[0];

    if (pdev->ep0_state == USBD_EP0_DATA_IN)
 8008ff2:	f8d0 3294 	ldr.w	r3, [r0, #660]	@ 0x294
 8008ff6:	2b02      	cmp	r3, #2
 8008ff8:	d10e      	bne.n	8009018 <USBD_LL_DataInStage+0x32>
    {
      if (pep->rem_length > pep->maxpacket)
 8008ffa:	e9d0 3207 	ldrd	r3, r2, [r0, #28]
 8008ffe:	4293      	cmp	r3, r2
 8009000:	d912      	bls.n	8009028 <USBD_LL_DataInStage+0x42>
      {
        pep->rem_length -= pep->maxpacket;
 8009002:	1a9a      	subs	r2, r3, r2
 8009004:	61c2      	str	r2, [r0, #28]

        (void)USBD_CtlContinueSendData(pdev, pdata, pep->rem_length);
 8009006:	4631      	mov	r1, r6
 8009008:	f000 fc4a 	bl	80098a0 <USBD_CtlContinueSendData>
        {
          (void)USBD_CtlContinueSendData(pdev, NULL, 0U);
          pdev->ep0_data_len = 0U;

          /* Prepare endpoint for premature end of transfer */
          (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 800900c:	462b      	mov	r3, r5
 800900e:	462a      	mov	r2, r5
 8009010:	4629      	mov	r1, r5
 8009012:	4620      	mov	r0, r4
 8009014:	f7f8 fd0b 	bl	8001a2e <USBD_LL_PrepareReceive>
          (void)USBD_CtlReceiveStatus(pdev);
        }
      }
    }

    if (pdev->dev_test_mode != 0U)
 8009018:	f894 32a0 	ldrb.w	r3, [r4, #672]	@ 0x2a0
 800901c:	b113      	cbz	r3, 8009024 <USBD_LL_DataInStage+0x3e>
    {
      (void)USBD_RunTestMode(pdev);
      pdev->dev_test_mode = 0U;
 800901e:	2300      	movs	r3, #0
 8009020:	f884 32a0 	strb.w	r3, [r4, #672]	@ 0x2a0
      }
    }
  }

  return USBD_OK;
}
 8009024:	2000      	movs	r0, #0
 8009026:	bd70      	pop	{r4, r5, r6, pc}
        if ((pep->maxpacket == pep->rem_length) &&
 8009028:	d10c      	bne.n	8009044 <USBD_LL_DataInStage+0x5e>
            (pep->total_length >= pep->maxpacket) &&
 800902a:	6982      	ldr	r2, [r0, #24]
        if ((pep->maxpacket == pep->rem_length) &&
 800902c:	4293      	cmp	r3, r2
 800902e:	d809      	bhi.n	8009044 <USBD_LL_DataInStage+0x5e>
            (pep->total_length >= pep->maxpacket) &&
 8009030:	f8d0 3298 	ldr.w	r3, [r0, #664]	@ 0x298
 8009034:	429a      	cmp	r2, r3
 8009036:	d205      	bcs.n	8009044 <USBD_LL_DataInStage+0x5e>
          (void)USBD_CtlContinueSendData(pdev, NULL, 0U);
 8009038:	460a      	mov	r2, r1
 800903a:	f000 fc31 	bl	80098a0 <USBD_CtlContinueSendData>
          pdev->ep0_data_len = 0U;
 800903e:	f8c4 5298 	str.w	r5, [r4, #664]	@ 0x298
 8009042:	e7e3      	b.n	800900c <USBD_LL_DataInStage+0x26>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8009044:	f894 329c 	ldrb.w	r3, [r4, #668]	@ 0x29c
 8009048:	2b03      	cmp	r3, #3
 800904a:	d108      	bne.n	800905e <USBD_LL_DataInStage+0x78>
            if (pdev->pClass[0]->EP0_TxSent != NULL)
 800904c:	f8d4 32b8 	ldr.w	r3, [r4, #696]	@ 0x2b8
 8009050:	68db      	ldr	r3, [r3, #12]
 8009052:	b123      	cbz	r3, 800905e <USBD_LL_DataInStage+0x78>
              pdev->classId = 0U;
 8009054:	2200      	movs	r2, #0
 8009056:	f8c4 22d4 	str.w	r2, [r4, #724]	@ 0x2d4
              pdev->pClass[0]->EP0_TxSent(pdev);
 800905a:	4620      	mov	r0, r4
 800905c:	4798      	blx	r3
          (void)USBD_LL_StallEP(pdev, 0x80U);
 800905e:	2180      	movs	r1, #128	@ 0x80
 8009060:	4620      	mov	r0, r4
 8009062:	f7f8 fcc0 	bl	80019e6 <USBD_LL_StallEP>
          (void)USBD_CtlReceiveStatus(pdev);
 8009066:	4620      	mov	r0, r4
 8009068:	f000 fc35 	bl	80098d6 <USBD_CtlReceiveStatus>
 800906c:	e7d4      	b.n	8009018 <USBD_LL_DataInStage+0x32>
      if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800906e:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 8009072:	2b03      	cmp	r3, #3
 8009074:	d1d6      	bne.n	8009024 <USBD_LL_DataInStage+0x3e>
        if (pdev->pClass[idx]->DataIn != NULL)
 8009076:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 800907a:	695b      	ldr	r3, [r3, #20]
 800907c:	2b00      	cmp	r3, #0
 800907e:	d0d1      	beq.n	8009024 <USBD_LL_DataInStage+0x3e>
          pdev->classId = idx;
 8009080:	2200      	movs	r2, #0
}
 8009082:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
          pdev->classId = idx;
 8009086:	f8c0 22d4 	str.w	r2, [r0, #724]	@ 0x2d4
          ret = (USBD_StatusTypeDef)pdev->pClass[idx]->DataIn(pdev, epnum);
 800908a:	4718      	bx	r3

0800908c <USBD_LL_Reset>:
  *         Handle Reset event
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_Reset(USBD_HandleTypeDef *pdev)
{
 800908c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  USBD_StatusTypeDef ret = USBD_OK;

  /* Upon Reset call user call back */
  pdev->dev_state = USBD_STATE_DEFAULT;
 800908e:	2301      	movs	r3, #1
 8009090:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c
      }
    }
  }
#else

  if (pdev->pClass[0] != NULL)
 8009094:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
  pdev->ep0_state = USBD_EP0_IDLE;
 8009098:	2100      	movs	r1, #0
{
 800909a:	4604      	mov	r4, r0
  pdev->ep0_state = USBD_EP0_IDLE;
 800909c:	f8c0 1294 	str.w	r1, [r0, #660]	@ 0x294
  pdev->dev_config = 0U;
 80090a0:	6041      	str	r1, [r0, #4]
  pdev->dev_remote_wakeup = 0U;
 80090a2:	f8c0 12a4 	str.w	r1, [r0, #676]	@ 0x2a4
  pdev->dev_test_mode = 0U;
 80090a6:	f880 12a0 	strb.w	r1, [r0, #672]	@ 0x2a0
  if (pdev->pClass[0] != NULL)
 80090aa:	b9b3      	cbnz	r3, 80090da <USBD_LL_Reset+0x4e>
  USBD_StatusTypeDef ret = USBD_OK;
 80090ac:	2600      	movs	r6, #0
    }
  }
#endif /* USE_USBD_COMPOSITE */

  /* Open EP0 OUT */
  (void)USBD_LL_OpenEP(pdev, 0x00U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 80090ae:	2200      	movs	r2, #0
  pdev->ep_out[0x00U & 0xFU].is_used = 1U;

  pdev->ep_out[0].maxpacket = USB_MAX_EP0_SIZE;
 80090b0:	2540      	movs	r5, #64	@ 0x40
  (void)USBD_LL_OpenEP(pdev, 0x00U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 80090b2:	4611      	mov	r1, r2
  pdev->ep_out[0x00U & 0xFU].is_used = 1U;
 80090b4:	2701      	movs	r7, #1
  (void)USBD_LL_OpenEP(pdev, 0x00U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 80090b6:	2340      	movs	r3, #64	@ 0x40
 80090b8:	4620      	mov	r0, r4
 80090ba:	f7f8 fc7f 	bl	80019bc <USBD_LL_OpenEP>
  pdev->ep_out[0x00U & 0xFU].is_used = 1U;
 80090be:	f8a4 7164 	strh.w	r7, [r4, #356]	@ 0x164
  pdev->ep_out[0].maxpacket = USB_MAX_EP0_SIZE;
 80090c2:	f8c4 5160 	str.w	r5, [r4, #352]	@ 0x160

  /* Open EP0 IN */
  (void)USBD_LL_OpenEP(pdev, 0x80U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 80090c6:	462b      	mov	r3, r5
 80090c8:	2200      	movs	r2, #0
 80090ca:	2180      	movs	r1, #128	@ 0x80
 80090cc:	4620      	mov	r0, r4
 80090ce:	f7f8 fc75 	bl	80019bc <USBD_LL_OpenEP>
  pdev->ep_in[0x80U & 0xFU].is_used = 1U;
 80090d2:	84a7      	strh	r7, [r4, #36]	@ 0x24

  pdev->ep_in[0].maxpacket = USB_MAX_EP0_SIZE;
 80090d4:	6225      	str	r5, [r4, #32]

  return ret;
}
 80090d6:	4630      	mov	r0, r6
 80090d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if (pdev->pClass[0]->DeInit != NULL)
 80090da:	685b      	ldr	r3, [r3, #4]
 80090dc:	2b00      	cmp	r3, #0
 80090de:	d0e5      	beq.n	80090ac <USBD_LL_Reset+0x20>
      if (pdev->pClass[0]->DeInit(pdev, (uint8_t)pdev->dev_config) != USBD_OK)
 80090e0:	4798      	blx	r3
 80090e2:	2800      	cmp	r0, #0
 80090e4:	d0e2      	beq.n	80090ac <USBD_LL_Reset+0x20>
        ret = USBD_FAIL;
 80090e6:	2603      	movs	r6, #3
 80090e8:	e7e1      	b.n	80090ae <USBD_LL_Reset+0x22>

080090ea <USBD_LL_SetSpeed>:
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_SetSpeed(USBD_HandleTypeDef *pdev,
                                    USBD_SpeedTypeDef speed)
{
  pdev->dev_speed = speed;
 80090ea:	7401      	strb	r1, [r0, #16]

  return USBD_OK;
}
 80090ec:	2000      	movs	r0, #0
 80090ee:	4770      	bx	lr

080090f0 <USBD_LL_Suspend>:
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_Suspend(USBD_HandleTypeDef *pdev)
{
  if (pdev->dev_state != USBD_STATE_SUSPENDED)
 80090f0:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 80090f4:	2b04      	cmp	r3, #4
  {
    pdev->dev_old_state = pdev->dev_state;
 80090f6:	bf1e      	ittt	ne
 80090f8:	f890 329c 	ldrbne.w	r3, [r0, #668]	@ 0x29c
 80090fc:	b2db      	uxtbne	r3, r3
 80090fe:	f880 329d 	strbne.w	r3, [r0, #669]	@ 0x29d
  }

  pdev->dev_state = USBD_STATE_SUSPENDED;
 8009102:	2304      	movs	r3, #4
 8009104:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c

  return USBD_OK;
}
 8009108:	2000      	movs	r0, #0
 800910a:	4770      	bx	lr

0800910c <USBD_LL_Resume>:
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_Resume(USBD_HandleTypeDef *pdev)
{
  if (pdev->dev_state == USBD_STATE_SUSPENDED)
 800910c:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 8009110:	2b04      	cmp	r3, #4
  {
    pdev->dev_state = pdev->dev_old_state;
 8009112:	bf02      	ittt	eq
 8009114:	f890 329d 	ldrbeq.w	r3, [r0, #669]	@ 0x29d
 8009118:	b2db      	uxtbeq	r3, r3
 800911a:	f880 329c 	strbeq.w	r3, [r0, #668]	@ 0x29c
  }

  return USBD_OK;
}
 800911e:	2000      	movs	r0, #0
 8009120:	4770      	bx	lr

08009122 <USBD_LL_SOF>:
  *         Handle SOF event
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_SOF(USBD_HandleTypeDef *pdev)
{
 8009122:	b508      	push	{r3, lr}
  /* The SOF event can be distributed for all classes that support it */
  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8009124:	f890 229c 	ldrb.w	r2, [r0, #668]	@ 0x29c
 8009128:	2a03      	cmp	r2, #3
 800912a:	d105      	bne.n	8009138 <USBD_LL_SOF+0x16>
          }
        }
      }
    }
#else
    if (pdev->pClass[0] != NULL)
 800912c:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 8009130:	b113      	cbz	r3, 8009138 <USBD_LL_SOF+0x16>
    {
      if (pdev->pClass[0]->SOF != NULL)
 8009132:	69db      	ldr	r3, [r3, #28]
 8009134:	b103      	cbz	r3, 8009138 <USBD_LL_SOF+0x16>
      {
        (void)pdev->pClass[0]->SOF(pdev);
 8009136:	4798      	blx	r3
    }
#endif /* USE_USBD_COMPOSITE */
  }

  return USBD_OK;
}
 8009138:	2000      	movs	r0, #0
 800913a:	bd08      	pop	{r3, pc}

0800913c <USBD_LL_IsoINIncomplete>:
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_IsoINIncomplete(USBD_HandleTypeDef *pdev,
                                           uint8_t epnum)
{
  if (pdev->pClass[pdev->classId] == NULL)
 800913c:	f8d0 22d4 	ldr.w	r2, [r0, #724]	@ 0x2d4
 8009140:	32ae      	adds	r2, #174	@ 0xae
{
 8009142:	b508      	push	{r3, lr}
  if (pdev->pClass[pdev->classId] == NULL)
 8009144:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 8009148:	b14a      	cbz	r2, 800915e <USBD_LL_IsoINIncomplete+0x22>
  {
    return USBD_FAIL;
  }

  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800914a:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800914e:	2b03      	cmp	r3, #3
 8009150:	d101      	bne.n	8009156 <USBD_LL_IsoINIncomplete+0x1a>
  {
    if (pdev->pClass[pdev->classId]->IsoINIncomplete != NULL)
 8009152:	6a13      	ldr	r3, [r2, #32]
 8009154:	b90b      	cbnz	r3, 800915a <USBD_LL_IsoINIncomplete+0x1e>
    {
      (void)pdev->pClass[pdev->classId]->IsoINIncomplete(pdev, epnum);
    }
  }

  return USBD_OK;
 8009156:	2000      	movs	r0, #0
}
 8009158:	bd08      	pop	{r3, pc}
      (void)pdev->pClass[pdev->classId]->IsoINIncomplete(pdev, epnum);
 800915a:	4798      	blx	r3
 800915c:	e7fb      	b.n	8009156 <USBD_LL_IsoINIncomplete+0x1a>
    return USBD_FAIL;
 800915e:	2003      	movs	r0, #3
 8009160:	e7fa      	b.n	8009158 <USBD_LL_IsoINIncomplete+0x1c>

08009162 <USBD_LL_IsoOUTIncomplete>:
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_IsoOUTIncomplete(USBD_HandleTypeDef *pdev,
                                            uint8_t epnum)
{
  if (pdev->pClass[pdev->classId] == NULL)
 8009162:	f8d0 22d4 	ldr.w	r2, [r0, #724]	@ 0x2d4
 8009166:	32ae      	adds	r2, #174	@ 0xae
{
 8009168:	b508      	push	{r3, lr}
  if (pdev->pClass[pdev->classId] == NULL)
 800916a:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 800916e:	b14a      	cbz	r2, 8009184 <USBD_LL_IsoOUTIncomplete+0x22>
  {
    return USBD_FAIL;
  }

  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8009170:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 8009174:	2b03      	cmp	r3, #3
 8009176:	d101      	bne.n	800917c <USBD_LL_IsoOUTIncomplete+0x1a>
  {
    if (pdev->pClass[pdev->classId]->IsoOUTIncomplete != NULL)
 8009178:	6a53      	ldr	r3, [r2, #36]	@ 0x24
 800917a:	b90b      	cbnz	r3, 8009180 <USBD_LL_IsoOUTIncomplete+0x1e>
    {
      (void)pdev->pClass[pdev->classId]->IsoOUTIncomplete(pdev, epnum);
    }
  }

  return USBD_OK;
 800917c:	2000      	movs	r0, #0
}
 800917e:	bd08      	pop	{r3, pc}
      (void)pdev->pClass[pdev->classId]->IsoOUTIncomplete(pdev, epnum);
 8009180:	4798      	blx	r3
 8009182:	e7fb      	b.n	800917c <USBD_LL_IsoOUTIncomplete+0x1a>
    return USBD_FAIL;
 8009184:	2003      	movs	r0, #3
 8009186:	e7fa      	b.n	800917e <USBD_LL_IsoOUTIncomplete+0x1c>

08009188 <USBD_LL_DevConnected>:
  * @brief  USBD_LL_DevConnected
  *         Handle device connection event
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DevConnected(USBD_HandleTypeDef *pdev)
 8009188:	2000      	movs	r0, #0
 800918a:	4770      	bx	lr

0800918c <USBD_LL_DevDisconnected>:
USBD_StatusTypeDef USBD_LL_DevDisconnected(USBD_HandleTypeDef *pdev)
{
  USBD_StatusTypeDef   ret = USBD_OK;

  /* Free Class Resources */
  pdev->dev_state = USBD_STATE_DEFAULT;
 800918c:	2201      	movs	r2, #1
{
 800918e:	b508      	push	{r3, lr}
  pdev->dev_state = USBD_STATE_DEFAULT;
 8009190:	f880 229c 	strb.w	r2, [r0, #668]	@ 0x29c
        }
      }
    }
  }
#else
  if (pdev->pClass[0] != NULL)
 8009194:	f8d0 22b8 	ldr.w	r2, [r0, #696]	@ 0x2b8
 8009198:	b90a      	cbnz	r2, 800919e <USBD_LL_DevDisconnected+0x12>
  USBD_StatusTypeDef   ret = USBD_OK;
 800919a:	2000      	movs	r0, #0
    }
  }
#endif /* USE_USBD_COMPOSITE */

  return ret;
}
 800919c:	bd08      	pop	{r3, pc}
    if (pdev->pClass[0]->DeInit(pdev, (uint8_t)pdev->dev_config) != 0U)
 800919e:	6852      	ldr	r2, [r2, #4]
 80091a0:	7901      	ldrb	r1, [r0, #4]
 80091a2:	4790      	blx	r2
 80091a4:	2800      	cmp	r0, #0
 80091a6:	d0f8      	beq.n	800919a <USBD_LL_DevDisconnected+0xe>
      ret = USBD_FAIL;
 80091a8:	2003      	movs	r0, #3
 80091aa:	e7f7      	b.n	800919c <USBD_LL_DevDisconnected+0x10>

080091ac <USBD_CoreFindIF>:
  UNUSED(pdev);
  UNUSED(index);

  return 0x00U;
#endif /* USE_USBD_COMPOSITE */
}
 80091ac:	2000      	movs	r0, #0
 80091ae:	4770      	bx	lr

080091b0 <USBD_CoreFindEP>:
  *         return the class index relative to the selected endpoint
  * @param  pdev: device instance
  * @param  index : selected endpoint number
  * @retval index of the class using the selected endpoint number. 0xFF if no class found.
  */
uint8_t USBD_CoreFindEP(USBD_HandleTypeDef *pdev, uint8_t index)
 80091b0:	2000      	movs	r0, #0
 80091b2:	4770      	bx	lr

080091b4 <USBD_GetEpDesc>:
  * @param  pConfDesc:  pointer to Bos descriptor
  * @param  EpAddr:  endpoint address
  * @retval pointer to video endpoint descriptor
  */
void *USBD_GetEpDesc(uint8_t *pConfDesc, uint8_t EpAddr)
{
 80091b4:	b510      	push	{r4, lr}
  USBD_DescHeaderTypeDef *pdesc = (USBD_DescHeaderTypeDef *)(void *)pConfDesc;
  USBD_ConfigDescTypeDef *desc = (USBD_ConfigDescTypeDef *)(void *)pConfDesc;
  USBD_EpDescTypeDef *pEpDesc = NULL;
  uint16_t ptr;

  if (desc->wTotalLength > desc->bLength)
 80091b6:	8842      	ldrh	r2, [r0, #2]
 80091b8:	7803      	ldrb	r3, [r0, #0]
 80091ba:	429a      	cmp	r2, r3
 80091bc:	d801      	bhi.n	80091c2 <USBD_GetEpDesc+0xe>
  USBD_EpDescTypeDef *pEpDesc = NULL;
 80091be:	2000      	movs	r0, #0
      }
    }
  }

  return (void *)pEpDesc;
}
 80091c0:	bd10      	pop	{r4, pc}
  */
USBD_DescHeaderTypeDef *USBD_GetNextDesc(uint8_t *pbuf, uint16_t *ptr)
{
  USBD_DescHeaderTypeDef *pnext = (USBD_DescHeaderTypeDef *)(void *)pbuf;

  *ptr += pnext->bLength;
 80091c2:	7804      	ldrb	r4, [r0, #0]
  pnext = (USBD_DescHeaderTypeDef *)(void *)(pbuf + pnext->bLength);
 80091c4:	4420      	add	r0, r4
  *ptr += pnext->bLength;
 80091c6:	4423      	add	r3, r4
      if (pdesc->bDescriptorType == USB_DESC_TYPE_ENDPOINT)
 80091c8:	7844      	ldrb	r4, [r0, #1]
 80091ca:	2c05      	cmp	r4, #5
  *ptr += pnext->bLength;
 80091cc:	b29b      	uxth	r3, r3
      if (pdesc->bDescriptorType == USB_DESC_TYPE_ENDPOINT)
 80091ce:	d1f4      	bne.n	80091ba <USBD_GetEpDesc+0x6>
        if (pEpDesc->bEndpointAddress == EpAddr)
 80091d0:	7884      	ldrb	r4, [r0, #2]
 80091d2:	428c      	cmp	r4, r1
 80091d4:	d1f1      	bne.n	80091ba <USBD_GetEpDesc+0x6>
 80091d6:	e7f3      	b.n	80091c0 <USBD_GetEpDesc+0xc>

080091d8 <USBD_CtlError.constprop.0>:
  *         Handle USB low level Error
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval None
  */
void USBD_CtlError(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
 80091d8:	b510      	push	{r4, lr}
{
  UNUSED(req);

  (void)USBD_LL_StallEP(pdev, 0x80U);
 80091da:	2180      	movs	r1, #128	@ 0x80
void USBD_CtlError(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
 80091dc:	4604      	mov	r4, r0
  (void)USBD_LL_StallEP(pdev, 0x80U);
 80091de:	f7f8 fc02 	bl	80019e6 <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
 80091e2:	4620      	mov	r0, r4
 80091e4:	2100      	movs	r1, #0
}
 80091e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  (void)USBD_LL_StallEP(pdev, 0U);
 80091ea:	f7f8 bbfc 	b.w	80019e6 <USBD_LL_StallEP>
	...

080091f0 <USBD_StdDevReq>:
{
 80091f0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80091f2:	780b      	ldrb	r3, [r1, #0]
 80091f4:	f003 0360 	and.w	r3, r3, #96	@ 0x60
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 80091f8:	2b20      	cmp	r3, #32
{
 80091fa:	4604      	mov	r4, r0
 80091fc:	460d      	mov	r5, r1
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 80091fe:	d009      	beq.n	8009214 <USBD_StdDevReq+0x24>
 8009200:	2b40      	cmp	r3, #64	@ 0x40
 8009202:	d007      	beq.n	8009214 <USBD_StdDevReq+0x24>
 8009204:	b193      	cbz	r3, 800922c <USBD_StdDevReq+0x3c>
      USBD_CtlError(pdev, req);
 8009206:	4620      	mov	r0, r4
 8009208:	f7ff ffe6 	bl	80091d8 <USBD_CtlError.constprop.0>
  USBD_StatusTypeDef ret = USBD_OK;
 800920c:	2500      	movs	r5, #0
}
 800920e:	4628      	mov	r0, r5
 8009210:	b002      	add	sp, #8
 8009212:	bd70      	pop	{r4, r5, r6, pc}
      ret = (USBD_StatusTypeDef)pdev->pClass[pdev->classId]->Setup(pdev, req);
 8009214:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
 8009218:	33ae      	adds	r3, #174	@ 0xae
 800921a:	4629      	mov	r1, r5
 800921c:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 8009220:	689b      	ldr	r3, [r3, #8]
 8009222:	4620      	mov	r0, r4
}
 8009224:	b002      	add	sp, #8
 8009226:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      ret = (USBD_StatusTypeDef)pdev->pClass[pdev->classId]->Setup(pdev, req);
 800922a:	4718      	bx	r3
      switch (req->bRequest)
 800922c:	784b      	ldrb	r3, [r1, #1]
 800922e:	2b09      	cmp	r3, #9
 8009230:	d8e9      	bhi.n	8009206 <USBD_StdDevReq+0x16>
 8009232:	a201      	add	r2, pc, #4	@ (adr r2, 8009238 <USBD_StdDevReq+0x48>)
 8009234:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009238:	08009459 	.word	0x08009459
 800923c:	0800949d 	.word	0x0800949d
 8009240:	08009207 	.word	0x08009207
 8009244:	08009481 	.word	0x08009481
 8009248:	08009207 	.word	0x08009207
 800924c:	08009353 	.word	0x08009353
 8009250:	08009261 	.word	0x08009261
 8009254:	08009207 	.word	0x08009207
 8009258:	0800942d 	.word	0x0800942d
 800925c:	08009395 	.word	0x08009395
  uint16_t len = 0U;
 8009260:	2300      	movs	r3, #0
 8009262:	f8ad 3006 	strh.w	r3, [sp, #6]
  switch (req->wValue >> 8)
 8009266:	884b      	ldrh	r3, [r1, #2]
 8009268:	0a1a      	lsrs	r2, r3, #8
 800926a:	3a01      	subs	r2, #1
 800926c:	2a06      	cmp	r2, #6
 800926e:	d8ca      	bhi.n	8009206 <USBD_StdDevReq+0x16>
 8009270:	a101      	add	r1, pc, #4	@ (adr r1, 8009278 <USBD_StdDevReq+0x88>)
 8009272:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8009276:	bf00      	nop
 8009278:	08009295 	.word	0x08009295
 800927c:	080092c7 	.word	0x080092c7
 8009280:	080092e1 	.word	0x080092e1
 8009284:	08009207 	.word	0x08009207
 8009288:	08009207 	.word	0x08009207
 800928c:	08009325 	.word	0x08009325
 8009290:	0800933b 	.word	0x0800933b
      pbuf = pdev->pDesc->GetDeviceDescriptor(pdev->dev_speed, &len);
 8009294:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 8009298:	681b      	ldr	r3, [r3, #0]
            pbuf = pdev->pDesc->GetInterfaceStrDescriptor(pdev->dev_speed, &len);
 800929a:	7c20      	ldrb	r0, [r4, #16]
 800929c:	f10d 0106 	add.w	r1, sp, #6
 80092a0:	4798      	blx	r3
  if (req->wLength != 0U)
 80092a2:	88ea      	ldrh	r2, [r5, #6]
 80092a4:	2a00      	cmp	r2, #0
 80092a6:	f000 80a4 	beq.w	80093f2 <USBD_StdDevReq+0x202>
    if (len != 0U)
 80092aa:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80092ae:	2b00      	cmp	r3, #0
 80092b0:	d0a9      	beq.n	8009206 <USBD_StdDevReq+0x16>
      len = MIN(len, req->wLength);
 80092b2:	429a      	cmp	r2, r3
 80092b4:	bf28      	it	cs
 80092b6:	461a      	movcs	r2, r3
 80092b8:	f8ad 2006 	strh.w	r2, [sp, #6]
      (void)USBD_CtlSendData(pdev, pbuf, len);
 80092bc:	4601      	mov	r1, r0
      (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_config_status, 2U);
 80092be:	4620      	mov	r0, r4
 80092c0:	f000 fae1 	bl	8009886 <USBD_CtlSendData>
      break;
 80092c4:	e7a2      	b.n	800920c <USBD_StdDevReq+0x1c>
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 80092c6:	7c02      	ldrb	r2, [r0, #16]
          pbuf = (uint8_t *)pdev->pClass[0]->GetHSConfigDescriptor(&len);
 80092c8:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 80092cc:	b932      	cbnz	r2, 80092dc <USBD_StdDevReq+0xec>
          pbuf = (uint8_t *)pdev->pClass[0]->GetHSConfigDescriptor(&len);
 80092ce:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
          pbuf = (uint8_t *)pdev->pClass[0]->GetFSConfigDescriptor(&len);
 80092d0:	f10d 0006 	add.w	r0, sp, #6
 80092d4:	4798      	blx	r3
        pbuf[1] = USB_DESC_TYPE_CONFIGURATION;
 80092d6:	2302      	movs	r3, #2
        pbuf[1] = USB_DESC_TYPE_OTHER_SPEED_CONFIGURATION;
 80092d8:	7043      	strb	r3, [r0, #1]
  if (err != 0U)
 80092da:	e7e2      	b.n	80092a2 <USBD_StdDevReq+0xb2>
          pbuf = (uint8_t *)pdev->pClass[0]->GetFSConfigDescriptor(&len);
 80092dc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80092de:	e7f7      	b.n	80092d0 <USBD_StdDevReq+0xe0>
      switch ((uint8_t)(req->wValue))
 80092e0:	b2db      	uxtb	r3, r3
 80092e2:	2b05      	cmp	r3, #5
 80092e4:	d88f      	bhi.n	8009206 <USBD_StdDevReq+0x16>
 80092e6:	e8df f003 	tbb	[pc, r3]
 80092ea:	0903      	.short	0x0903
 80092ec:	1915110d 	.word	0x1915110d
          if (pdev->pDesc->GetLangIDStrDescriptor != NULL)
 80092f0:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 80092f4:	685b      	ldr	r3, [r3, #4]
          if (pdev->pDesc->GetInterfaceStrDescriptor != NULL)
 80092f6:	2b00      	cmp	r3, #0
 80092f8:	d1cf      	bne.n	800929a <USBD_StdDevReq+0xaa>
 80092fa:	e784      	b.n	8009206 <USBD_StdDevReq+0x16>
          if (pdev->pDesc->GetManufacturerStrDescriptor != NULL)
 80092fc:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 8009300:	689b      	ldr	r3, [r3, #8]
 8009302:	e7f8      	b.n	80092f6 <USBD_StdDevReq+0x106>
          if (pdev->pDesc->GetProductStrDescriptor != NULL)
 8009304:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 8009308:	68db      	ldr	r3, [r3, #12]
 800930a:	e7f4      	b.n	80092f6 <USBD_StdDevReq+0x106>
          if (pdev->pDesc->GetSerialStrDescriptor != NULL)
 800930c:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 8009310:	691b      	ldr	r3, [r3, #16]
 8009312:	e7f0      	b.n	80092f6 <USBD_StdDevReq+0x106>
          if (pdev->pDesc->GetConfigurationStrDescriptor != NULL)
 8009314:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 8009318:	695b      	ldr	r3, [r3, #20]
 800931a:	e7ec      	b.n	80092f6 <USBD_StdDevReq+0x106>
          if (pdev->pDesc->GetInterfaceStrDescriptor != NULL)
 800931c:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
 8009320:	699b      	ldr	r3, [r3, #24]
 8009322:	e7e8      	b.n	80092f6 <USBD_StdDevReq+0x106>
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 8009324:	7c03      	ldrb	r3, [r0, #16]
 8009326:	2b00      	cmp	r3, #0
 8009328:	f47f af6d 	bne.w	8009206 <USBD_StdDevReq+0x16>
          pbuf = (uint8_t *)pdev->pClass[0]->GetDeviceQualifierDescriptor(&len);
 800932c:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 8009330:	f10d 0006 	add.w	r0, sp, #6
 8009334:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8009336:	4798      	blx	r3
  if (err != 0U)
 8009338:	e7b3      	b.n	80092a2 <USBD_StdDevReq+0xb2>
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 800933a:	7c03      	ldrb	r3, [r0, #16]
 800933c:	2b00      	cmp	r3, #0
 800933e:	f47f af62 	bne.w	8009206 <USBD_StdDevReq+0x16>
          pbuf = (uint8_t *)pdev->pClass[0]->GetOtherSpeedConfigDescriptor(&len);
 8009342:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
 8009346:	f10d 0006 	add.w	r0, sp, #6
 800934a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800934c:	4798      	blx	r3
        pbuf[1] = USB_DESC_TYPE_OTHER_SPEED_CONFIGURATION;
 800934e:	2307      	movs	r3, #7
 8009350:	e7c2      	b.n	80092d8 <USBD_StdDevReq+0xe8>
  if ((req->wIndex == 0U) && (req->wLength == 0U) && (req->wValue < 128U))
 8009352:	888b      	ldrh	r3, [r1, #4]
 8009354:	2b00      	cmp	r3, #0
 8009356:	f47f af56 	bne.w	8009206 <USBD_StdDevReq+0x16>
 800935a:	88cb      	ldrh	r3, [r1, #6]
 800935c:	2b00      	cmp	r3, #0
 800935e:	f47f af52 	bne.w	8009206 <USBD_StdDevReq+0x16>
 8009362:	884d      	ldrh	r5, [r1, #2]
 8009364:	2d7f      	cmp	r5, #127	@ 0x7f
 8009366:	f63f af4e 	bhi.w	8009206 <USBD_StdDevReq+0x16>
    if (pdev->dev_state == USBD_STATE_CONFIGURED)
 800936a:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800936e:	2b03      	cmp	r3, #3
 8009370:	f43f af49 	beq.w	8009206 <USBD_StdDevReq+0x16>
    dev_addr = (uint8_t)(req->wValue) & 0x7FU;
 8009374:	b2ed      	uxtb	r5, r5
      pdev->dev_address = dev_addr;
 8009376:	f880 529e 	strb.w	r5, [r0, #670]	@ 0x29e
      (void)USBD_LL_SetUSBAddress(pdev, dev_addr);
 800937a:	4629      	mov	r1, r5
 800937c:	f7f8 fb45 	bl	8001a0a <USBD_LL_SetUSBAddress>
      (void)USBD_CtlSendStatus(pdev);
 8009380:	4620      	mov	r0, r4
 8009382:	f000 fa9d 	bl	80098c0 <USBD_CtlSendStatus>
      if (dev_addr != 0U)
 8009386:	b11d      	cbz	r5, 8009390 <USBD_StdDevReq+0x1a0>
        pdev->dev_state = USBD_STATE_ADDRESSED;
 8009388:	2302      	movs	r3, #2
          pdev->dev_state = USBD_STATE_CONFIGURED;
 800938a:	f884 329c 	strb.w	r3, [r4, #668]	@ 0x29c
 800938e:	e73d      	b.n	800920c <USBD_StdDevReq+0x1c>
        pdev->dev_state = USBD_STATE_DEFAULT;
 8009390:	2301      	movs	r3, #1
 8009392:	e7fa      	b.n	800938a <USBD_StdDevReq+0x19a>
  cfgidx = (uint8_t)(req->wValue);
 8009394:	7889      	ldrb	r1, [r1, #2]
 8009396:	4d47      	ldr	r5, [pc, #284]	@ (80094b4 <USBD_StdDevReq+0x2c4>)
  if (cfgidx > USBD_MAX_NUM_CONFIGURATION)
 8009398:	2901      	cmp	r1, #1
  cfgidx = (uint8_t)(req->wValue);
 800939a:	7029      	strb	r1, [r5, #0]
  if (cfgidx > USBD_MAX_NUM_CONFIGURATION)
 800939c:	d903      	bls.n	80093a6 <USBD_StdDevReq+0x1b6>
    USBD_CtlError(pdev, req);
 800939e:	f7ff ff1b 	bl	80091d8 <USBD_CtlError.constprop.0>
    return USBD_FAIL;
 80093a2:	2503      	movs	r5, #3
 80093a4:	e733      	b.n	800920e <USBD_StdDevReq+0x1e>
  switch (pdev->dev_state)
 80093a6:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 80093aa:	2b02      	cmp	r3, #2
 80093ac:	b2de      	uxtb	r6, r3
 80093ae:	d008      	beq.n	80093c2 <USBD_StdDevReq+0x1d2>
 80093b0:	2e03      	cmp	r6, #3
 80093b2:	d017      	beq.n	80093e4 <USBD_StdDevReq+0x1f4>
      USBD_CtlError(pdev, req);
 80093b4:	f7ff ff10 	bl	80091d8 <USBD_CtlError.constprop.0>
      (void)USBD_ClrClassConfig(pdev, cfgidx);
 80093b8:	7829      	ldrb	r1, [r5, #0]
 80093ba:	4620      	mov	r0, r4
 80093bc:	f7ff fda5 	bl	8008f0a <USBD_ClrClassConfig>
      break;
 80093c0:	e7ef      	b.n	80093a2 <USBD_StdDevReq+0x1b2>
      if (cfgidx != 0U)
 80093c2:	b1b1      	cbz	r1, 80093f2 <USBD_StdDevReq+0x202>
        pdev->dev_config = cfgidx;
 80093c4:	2101      	movs	r1, #1
 80093c6:	6041      	str	r1, [r0, #4]
        ret = USBD_SetClassConfig(pdev, cfgidx);
 80093c8:	f7ff fd98 	bl	8008efc <USBD_SetClassConfig>
        if (ret != USBD_OK)
 80093cc:	4605      	mov	r5, r0
          USBD_CtlError(pdev, req);
 80093ce:	4620      	mov	r0, r4
        if (ret != USBD_OK)
 80093d0:	b125      	cbz	r5, 80093dc <USBD_StdDevReq+0x1ec>
          USBD_CtlError(pdev, req);
 80093d2:	f7ff ff01 	bl	80091d8 <USBD_CtlError.constprop.0>
          pdev->dev_state = USBD_STATE_ADDRESSED;
 80093d6:	f884 629c 	strb.w	r6, [r4, #668]	@ 0x29c
 80093da:	e718      	b.n	800920e <USBD_StdDevReq+0x1e>
          (void)USBD_CtlSendStatus(pdev);
 80093dc:	f000 fa70 	bl	80098c0 <USBD_CtlSendStatus>
          pdev->dev_state = USBD_STATE_CONFIGURED;
 80093e0:	2303      	movs	r3, #3
 80093e2:	e7d2      	b.n	800938a <USBD_StdDevReq+0x19a>
      if (cfgidx == 0U)
 80093e4:	b949      	cbnz	r1, 80093fa <USBD_StdDevReq+0x20a>
        pdev->dev_state = USBD_STATE_ADDRESSED;
 80093e6:	2302      	movs	r3, #2
 80093e8:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c
        pdev->dev_config = cfgidx;
 80093ec:	6041      	str	r1, [r0, #4]
        (void)USBD_ClrClassConfig(pdev, cfgidx);
 80093ee:	f7ff fd8c 	bl	8008f0a <USBD_ClrClassConfig>
        (void)USBD_CtlSendStatus(pdev);
 80093f2:	4620      	mov	r0, r4
 80093f4:	f000 fa64 	bl	80098c0 <USBD_CtlSendStatus>
 80093f8:	e708      	b.n	800920c <USBD_StdDevReq+0x1c>
      else if (cfgidx != pdev->dev_config)
 80093fa:	6841      	ldr	r1, [r0, #4]
 80093fc:	2901      	cmp	r1, #1
 80093fe:	d0f8      	beq.n	80093f2 <USBD_StdDevReq+0x202>
        (void)USBD_ClrClassConfig(pdev, (uint8_t)pdev->dev_config);
 8009400:	b2c9      	uxtb	r1, r1
 8009402:	f7ff fd82 	bl	8008f0a <USBD_ClrClassConfig>
        pdev->dev_config = cfgidx;
 8009406:	7829      	ldrb	r1, [r5, #0]
 8009408:	6061      	str	r1, [r4, #4]
        ret = USBD_SetClassConfig(pdev, cfgidx);
 800940a:	4620      	mov	r0, r4
 800940c:	f7ff fd76 	bl	8008efc <USBD_SetClassConfig>
        if (ret != USBD_OK)
 8009410:	4605      	mov	r5, r0
 8009412:	2800      	cmp	r0, #0
 8009414:	d0ed      	beq.n	80093f2 <USBD_StdDevReq+0x202>
          USBD_CtlError(pdev, req);
 8009416:	4620      	mov	r0, r4
 8009418:	f7ff fede 	bl	80091d8 <USBD_CtlError.constprop.0>
          (void)USBD_ClrClassConfig(pdev, (uint8_t)pdev->dev_config);
 800941c:	7921      	ldrb	r1, [r4, #4]
 800941e:	4620      	mov	r0, r4
 8009420:	f7ff fd73 	bl	8008f0a <USBD_ClrClassConfig>
          pdev->dev_state = USBD_STATE_ADDRESSED;
 8009424:	2302      	movs	r3, #2
 8009426:	f884 329c 	strb.w	r3, [r4, #668]	@ 0x29c
 800942a:	e6f0      	b.n	800920e <USBD_StdDevReq+0x1e>
  if (req->wLength != 1U)
 800942c:	88ca      	ldrh	r2, [r1, #6]
 800942e:	2a01      	cmp	r2, #1
 8009430:	f47f aee9 	bne.w	8009206 <USBD_StdDevReq+0x16>
    switch (pdev->dev_state)
 8009434:	f890 129c 	ldrb.w	r1, [r0, #668]	@ 0x29c
 8009438:	2902      	cmp	r1, #2
 800943a:	b2cb      	uxtb	r3, r1
 800943c:	d807      	bhi.n	800944e <USBD_StdDevReq+0x25e>
 800943e:	2b00      	cmp	r3, #0
 8009440:	f43f aee1 	beq.w	8009206 <USBD_StdDevReq+0x16>
        pdev->dev_default_config = 0U;
 8009444:	4601      	mov	r1, r0
 8009446:	2300      	movs	r3, #0
 8009448:	f841 3f08 	str.w	r3, [r1, #8]!
        (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_default_config, 1U);
 800944c:	e737      	b.n	80092be <USBD_StdDevReq+0xce>
    switch (pdev->dev_state)
 800944e:	2b03      	cmp	r3, #3
 8009450:	f47f aed9 	bne.w	8009206 <USBD_StdDevReq+0x16>
        (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_config, 1U);
 8009454:	1d01      	adds	r1, r0, #4
 8009456:	e732      	b.n	80092be <USBD_StdDevReq+0xce>
  switch (pdev->dev_state)
 8009458:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800945c:	3b01      	subs	r3, #1
 800945e:	2b02      	cmp	r3, #2
 8009460:	f63f aed1 	bhi.w	8009206 <USBD_StdDevReq+0x16>
      if (req->wLength != 0x2U)
 8009464:	88ca      	ldrh	r2, [r1, #6]
 8009466:	2a02      	cmp	r2, #2
 8009468:	f47f aecd 	bne.w	8009206 <USBD_StdDevReq+0x16>
      if (pdev->dev_remote_wakeup != 0U)
 800946c:	f8d0 32a4 	ldr.w	r3, [r0, #676]	@ 0x2a4
 8009470:	4601      	mov	r1, r0
        pdev->dev_config_status |= USB_CONFIG_REMOTE_WAKEUP;
 8009472:	2b00      	cmp	r3, #0
 8009474:	bf0c      	ite	eq
 8009476:	2301      	moveq	r3, #1
 8009478:	2303      	movne	r3, #3
 800947a:	f841 3f0c 	str.w	r3, [r1, #12]!
 800947e:	e71e      	b.n	80092be <USBD_StdDevReq+0xce>
  if (req->wValue == USB_FEATURE_REMOTE_WAKEUP)
 8009480:	884b      	ldrh	r3, [r1, #2]
 8009482:	2b01      	cmp	r3, #1
 8009484:	d102      	bne.n	800948c <USBD_StdDevReq+0x29c>
        pdev->dev_remote_wakeup = 0U;
 8009486:	f8c4 32a4 	str.w	r3, [r4, #676]	@ 0x2a4
 800948a:	e7b2      	b.n	80093f2 <USBD_StdDevReq+0x202>
  else if (req->wValue == USB_FEATURE_TEST_MODE)
 800948c:	2b02      	cmp	r3, #2
 800948e:	f47f aeba 	bne.w	8009206 <USBD_StdDevReq+0x16>
    pdev->dev_test_mode = (uint8_t)(req->wIndex >> 8);
 8009492:	888b      	ldrh	r3, [r1, #4]
 8009494:	0a1b      	lsrs	r3, r3, #8
 8009496:	f880 32a0 	strb.w	r3, [r0, #672]	@ 0x2a0
    (void)USBD_CtlSendStatus(pdev);
 800949a:	e7aa      	b.n	80093f2 <USBD_StdDevReq+0x202>
  switch (pdev->dev_state)
 800949c:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 80094a0:	3b01      	subs	r3, #1
 80094a2:	2b02      	cmp	r3, #2
 80094a4:	f63f aeaf 	bhi.w	8009206 <USBD_StdDevReq+0x16>
      if (req->wValue == USB_FEATURE_REMOTE_WAKEUP)
 80094a8:	884b      	ldrh	r3, [r1, #2]
 80094aa:	2b01      	cmp	r3, #1
 80094ac:	f47f aeae 	bne.w	800920c <USBD_StdDevReq+0x1c>
        pdev->dev_remote_wakeup = 0U;
 80094b0:	2300      	movs	r3, #0
 80094b2:	e7e8      	b.n	8009486 <USBD_StdDevReq+0x296>
 80094b4:	20013080 	.word	0x20013080

080094b8 <USBD_StdItfReq>:
{
 80094b8:	b570      	push	{r4, r5, r6, lr}
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 80094ba:	780b      	ldrb	r3, [r1, #0]
 80094bc:	f003 0260 	and.w	r2, r3, #96	@ 0x60
 80094c0:	065b      	lsls	r3, r3, #25
{
 80094c2:	4604      	mov	r4, r0
 80094c4:	460e      	mov	r6, r1
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 80094c6:	d501      	bpl.n	80094cc <USBD_StdItfReq+0x14>
 80094c8:	2a40      	cmp	r2, #64	@ 0x40
 80094ca:	d11f      	bne.n	800950c <USBD_StdItfReq+0x54>
      switch (pdev->dev_state)
 80094cc:	f894 329c 	ldrb.w	r3, [r4, #668]	@ 0x29c
 80094d0:	3b01      	subs	r3, #1
 80094d2:	2b02      	cmp	r3, #2
 80094d4:	d81a      	bhi.n	800950c <USBD_StdItfReq+0x54>
          if (LOBYTE(req->wIndex) <= USBD_MAX_NUM_INTERFACES)
 80094d6:	7931      	ldrb	r1, [r6, #4]
 80094d8:	2901      	cmp	r1, #1
            idx = USBD_CoreFindIF(pdev, LOBYTE(req->wIndex));
 80094da:	4620      	mov	r0, r4
          if (LOBYTE(req->wIndex) <= USBD_MAX_NUM_INTERFACES)
 80094dc:	d817      	bhi.n	800950e <USBD_StdItfReq+0x56>
            idx = USBD_CoreFindIF(pdev, LOBYTE(req->wIndex));
 80094de:	f7ff fe65 	bl	80091ac <USBD_CoreFindIF>
            if (((uint8_t)idx != 0xFFU) && (idx < USBD_MAX_SUPPORTED_CLASS))
 80094e2:	b988      	cbnz	r0, 8009508 <USBD_StdItfReq+0x50>
              if (pdev->pClass[idx]->Setup != NULL)
 80094e4:	f8d4 32b8 	ldr.w	r3, [r4, #696]	@ 0x2b8
 80094e8:	689b      	ldr	r3, [r3, #8]
 80094ea:	b16b      	cbz	r3, 8009508 <USBD_StdItfReq+0x50>
                pdev->classId = idx;
 80094ec:	f8c4 02d4 	str.w	r0, [r4, #724]	@ 0x2d4
                ret = (USBD_StatusTypeDef)(pdev->pClass[idx]->Setup(pdev, req));
 80094f0:	4631      	mov	r1, r6
 80094f2:	4620      	mov	r0, r4
 80094f4:	4798      	blx	r3
 80094f6:	4605      	mov	r5, r0
            if ((req->wLength == 0U) && (ret == USBD_OK))
 80094f8:	88f3      	ldrh	r3, [r6, #6]
 80094fa:	b91b      	cbnz	r3, 8009504 <USBD_StdItfReq+0x4c>
 80094fc:	b915      	cbnz	r5, 8009504 <USBD_StdItfReq+0x4c>
              (void)USBD_CtlSendStatus(pdev);
 80094fe:	4620      	mov	r0, r4
 8009500:	f000 f9de 	bl	80098c0 <USBD_CtlSendStatus>
}
 8009504:	4628      	mov	r0, r5
 8009506:	bd70      	pop	{r4, r5, r6, pc}
                ret = USBD_FAIL;
 8009508:	2503      	movs	r5, #3
 800950a:	e7f5      	b.n	80094f8 <USBD_StdItfReq+0x40>
          USBD_CtlError(pdev, req);
 800950c:	4620      	mov	r0, r4
            USBD_CtlError(pdev, req);
 800950e:	f7ff fe63 	bl	80091d8 <USBD_CtlError.constprop.0>
  USBD_StatusTypeDef ret = USBD_OK;
 8009512:	2500      	movs	r5, #0
 8009514:	e7f6      	b.n	8009504 <USBD_StdItfReq+0x4c>

08009516 <USBD_StdEPReq>:
{
 8009516:	b570      	push	{r4, r5, r6, lr}
 8009518:	780b      	ldrb	r3, [r1, #0]
  ep_addr = LOBYTE(req->wIndex);
 800951a:	888a      	ldrh	r2, [r1, #4]
 800951c:	790d      	ldrb	r5, [r1, #4]
 800951e:	f003 0360 	and.w	r3, r3, #96	@ 0x60
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 8009522:	2b20      	cmp	r3, #32
{
 8009524:	4604      	mov	r4, r0
 8009526:	460e      	mov	r6, r1
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 8009528:	d058      	beq.n	80095dc <USBD_StdEPReq+0xc6>
 800952a:	2b40      	cmp	r3, #64	@ 0x40
 800952c:	d056      	beq.n	80095dc <USBD_StdEPReq+0xc6>
 800952e:	b11b      	cbz	r3, 8009538 <USBD_StdEPReq+0x22>
              USBD_CtlError(pdev, req);
 8009530:	4620      	mov	r0, r4
 8009532:	f7ff fe51 	bl	80091d8 <USBD_CtlError.constprop.0>
              break;
 8009536:	e03d      	b.n	80095b4 <USBD_StdEPReq+0x9e>
      switch (req->bRequest)
 8009538:	784b      	ldrb	r3, [r1, #1]
 800953a:	2b01      	cmp	r3, #1
 800953c:	d03c      	beq.n	80095b8 <USBD_StdEPReq+0xa2>
 800953e:	2b03      	cmp	r3, #3
 8009540:	d025      	beq.n	800958e <USBD_StdEPReq+0x78>
 8009542:	2b00      	cmp	r3, #0
 8009544:	d1f4      	bne.n	8009530 <USBD_StdEPReq+0x1a>
          switch (pdev->dev_state)
 8009546:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 800954a:	2b02      	cmp	r3, #2
 800954c:	b2d9      	uxtb	r1, r3
 800954e:	d061      	beq.n	8009614 <USBD_StdEPReq+0xfe>
 8009550:	2903      	cmp	r1, #3
 8009552:	d1ed      	bne.n	8009530 <USBD_StdEPReq+0x1a>
                if (pdev->ep_in[ep_addr & 0xFU].is_used == 0U)
 8009554:	f005 030f 	and.w	r3, r5, #15
              if ((ep_addr & 0x80U) == 0x80U)
 8009558:	f012 0f80 	tst.w	r2, #128	@ 0x80
 800955c:	f04f 0214 	mov.w	r2, #20
                if (pdev->ep_in[ep_addr & 0xFU].is_used == 0U)
 8009560:	fb02 0303 	mla	r3, r2, r3, r0
              if ((ep_addr & 0x80U) == 0x80U)
 8009564:	d065      	beq.n	8009632 <USBD_StdEPReq+0x11c>
                if (pdev->ep_in[ep_addr & 0xFU].is_used == 0U)
 8009566:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
 8009568:	2b00      	cmp	r3, #0
 800956a:	d0e1      	beq.n	8009530 <USBD_StdEPReq+0x1a>
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 800956c:	f005 067f 	and.w	r6, r5, #127	@ 0x7f
 8009570:	3601      	adds	r6, #1
 8009572:	eb06 0686 	add.w	r6, r6, r6, lsl #2
              if ((ep_addr == 0x00U) || (ep_addr == 0x80U))
 8009576:	2d80      	cmp	r5, #128	@ 0x80
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 8009578:	eb00 0686 	add.w	r6, r0, r6, lsl #2
              if ((ep_addr == 0x00U) || (ep_addr == 0x80U))
 800957c:	d065      	beq.n	800964a <USBD_StdEPReq+0x134>
              else if (USBD_LL_IsStallEP(pdev, ep_addr) != 0U)
 800957e:	4629      	mov	r1, r5
 8009580:	4620      	mov	r0, r4
 8009582:	f7f8 f9f5 	bl	8001970 <USBD_LL_IsStallEP>
 8009586:	2800      	cmp	r0, #0
 8009588:	d064      	beq.n	8009654 <USBD_StdEPReq+0x13e>
                pep->status = 0x0001U;
 800958a:	2301      	movs	r3, #1
 800958c:	e05e      	b.n	800964c <USBD_StdEPReq+0x136>
          switch (pdev->dev_state)
 800958e:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 8009592:	2b02      	cmp	r3, #2
 8009594:	b2da      	uxtb	r2, r3
 8009596:	d033      	beq.n	8009600 <USBD_StdEPReq+0xea>
 8009598:	2a03      	cmp	r2, #3
 800959a:	d1c9      	bne.n	8009530 <USBD_StdEPReq+0x1a>
              if (req->wValue == USB_FEATURE_EP_HALT)
 800959c:	884b      	ldrh	r3, [r1, #2]
 800959e:	b933      	cbnz	r3, 80095ae <USBD_StdEPReq+0x98>
                if ((ep_addr != 0x00U) && (ep_addr != 0x80U) && (req->wLength == 0x00U))
 80095a0:	0669      	lsls	r1, r5, #25
 80095a2:	d004      	beq.n	80095ae <USBD_StdEPReq+0x98>
 80095a4:	88f3      	ldrh	r3, [r6, #6]
 80095a6:	b913      	cbnz	r3, 80095ae <USBD_StdEPReq+0x98>
                  (void)USBD_LL_StallEP(pdev, ep_addr);
 80095a8:	4629      	mov	r1, r5
 80095aa:	f7f8 fa1c 	bl	80019e6 <USBD_LL_StallEP>
              (void)USBD_CtlSendStatus(pdev);
 80095ae:	4620      	mov	r0, r4
 80095b0:	f000 f986 	bl	80098c0 <USBD_CtlSendStatus>
}
 80095b4:	2000      	movs	r0, #0
 80095b6:	bd70      	pop	{r4, r5, r6, pc}
          switch (pdev->dev_state)
 80095b8:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 80095bc:	2b02      	cmp	r3, #2
 80095be:	b2da      	uxtb	r2, r3
 80095c0:	d01e      	beq.n	8009600 <USBD_StdEPReq+0xea>
 80095c2:	2a03      	cmp	r2, #3
 80095c4:	d1b4      	bne.n	8009530 <USBD_StdEPReq+0x1a>
              if (req->wValue == USB_FEATURE_EP_HALT)
 80095c6:	884b      	ldrh	r3, [r1, #2]
 80095c8:	2b00      	cmp	r3, #0
 80095ca:	d1f3      	bne.n	80095b4 <USBD_StdEPReq+0x9e>
                if ((ep_addr & 0x7FU) != 0x00U)
 80095cc:	066b      	lsls	r3, r5, #25
 80095ce:	d002      	beq.n	80095d6 <USBD_StdEPReq+0xc0>
                  (void)USBD_LL_ClearStallEP(pdev, ep_addr);
 80095d0:	4629      	mov	r1, r5
 80095d2:	f7f8 fa11 	bl	80019f8 <USBD_LL_ClearStallEP>
                (void)USBD_CtlSendStatus(pdev);
 80095d6:	4620      	mov	r0, r4
 80095d8:	f000 f972 	bl	80098c0 <USBD_CtlSendStatus>
                idx = USBD_CoreFindEP(pdev, ep_addr);
 80095dc:	4629      	mov	r1, r5
 80095de:	4620      	mov	r0, r4
 80095e0:	f7ff fde6 	bl	80091b0 <USBD_CoreFindEP>
                if (((uint8_t)idx != 0xFFU) && (idx < USBD_MAX_SUPPORTED_CLASS))
 80095e4:	2800      	cmp	r0, #0
 80095e6:	d1e5      	bne.n	80095b4 <USBD_StdEPReq+0x9e>
                  if (pdev->pClass[idx]->Setup != NULL)
 80095e8:	f8d4 32b8 	ldr.w	r3, [r4, #696]	@ 0x2b8
                  pdev->classId = idx;
 80095ec:	f8c4 02d4 	str.w	r0, [r4, #724]	@ 0x2d4
                  if (pdev->pClass[idx]->Setup != NULL)
 80095f0:	689b      	ldr	r3, [r3, #8]
 80095f2:	2b00      	cmp	r3, #0
 80095f4:	d0de      	beq.n	80095b4 <USBD_StdEPReq+0x9e>
                    ret = (USBD_StatusTypeDef)(pdev->pClass[idx]->Setup(pdev, req));
 80095f6:	4631      	mov	r1, r6
 80095f8:	4620      	mov	r0, r4
}
 80095fa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
                    ret = (USBD_StatusTypeDef)(pdev->pClass[idx]->Setup(pdev, req));
 80095fe:	4718      	bx	r3
              if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
 8009600:	066a      	lsls	r2, r5, #25
 8009602:	d095      	beq.n	8009530 <USBD_StdEPReq+0x1a>
                (void)USBD_LL_StallEP(pdev, ep_addr);
 8009604:	4629      	mov	r1, r5
 8009606:	f7f8 f9ee 	bl	80019e6 <USBD_LL_StallEP>
                (void)USBD_LL_StallEP(pdev, 0x80U);
 800960a:	2180      	movs	r1, #128	@ 0x80
 800960c:	4620      	mov	r0, r4
 800960e:	f7f8 f9ea 	bl	80019e6 <USBD_LL_StallEP>
 8009612:	e7cf      	b.n	80095b4 <USBD_StdEPReq+0x9e>
              if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
 8009614:	0669      	lsls	r1, r5, #25
 8009616:	d18b      	bne.n	8009530 <USBD_StdEPReq+0x1a>
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 8009618:	0613      	lsls	r3, r2, #24
 800961a:	bf4c      	ite	mi
 800961c:	f100 0114 	addmi.w	r1, r0, #20
 8009620:	f500 71aa 	addpl.w	r1, r0, #340	@ 0x154
              pep->status = 0x0000U;
 8009624:	2300      	movs	r3, #0
 8009626:	600b      	str	r3, [r1, #0]
              (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
 8009628:	2202      	movs	r2, #2
              (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
 800962a:	4620      	mov	r0, r4
 800962c:	f000 f92b 	bl	8009886 <USBD_CtlSendData>
              break;
 8009630:	e7c0      	b.n	80095b4 <USBD_StdEPReq+0x9e>
                if (pdev->ep_out[ep_addr & 0xFU].is_used == 0U)
 8009632:	f8b3 3164 	ldrh.w	r3, [r3, #356]	@ 0x164
 8009636:	2b00      	cmp	r3, #0
 8009638:	f43f af7a 	beq.w	8009530 <USBD_StdEPReq+0x1a>
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 800963c:	2614      	movs	r6, #20
 800963e:	fb06 0605 	mla	r6, r6, r5, r0
 8009642:	f506 76aa 	add.w	r6, r6, #340	@ 0x154
              if ((ep_addr == 0x00U) || (ep_addr == 0x80U))
 8009646:	2d00      	cmp	r5, #0
 8009648:	d199      	bne.n	800957e <USBD_StdEPReq+0x68>
                pep->status = 0x0000U;
 800964a:	2300      	movs	r3, #0
                pep->status = 0x0001U;
 800964c:	6033      	str	r3, [r6, #0]
              (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
 800964e:	2202      	movs	r2, #2
 8009650:	4631      	mov	r1, r6
 8009652:	e7ea      	b.n	800962a <USBD_StdEPReq+0x114>
                pep->status = 0x0000U;
 8009654:	6030      	str	r0, [r6, #0]
 8009656:	e7fa      	b.n	800964e <USBD_StdEPReq+0x138>

08009658 <USBD_ParseSetupRequest>:
  req->bmRequest = *(uint8_t *)(pbuff);
 8009658:	780b      	ldrb	r3, [r1, #0]
 800965a:	7003      	strb	r3, [r0, #0]
  req->bRequest = *(uint8_t *)(pbuff);
 800965c:	784b      	ldrb	r3, [r1, #1]
 800965e:	7043      	strb	r3, [r0, #1]
  req->wValue = SWAPBYTE(pbuff);
 8009660:	884b      	ldrh	r3, [r1, #2]
 8009662:	8043      	strh	r3, [r0, #2]
  req->wIndex = SWAPBYTE(pbuff);
 8009664:	888b      	ldrh	r3, [r1, #4]
 8009666:	8083      	strh	r3, [r0, #4]
  req->wLength = SWAPBYTE(pbuff);
 8009668:	88cb      	ldrh	r3, [r1, #6]
 800966a:	80c3      	strh	r3, [r0, #6]
}
 800966c:	4770      	bx	lr

0800966e <USBD_CtlError>:
{
 800966e:	b510      	push	{r4, lr}
  (void)USBD_LL_StallEP(pdev, 0x80U);
 8009670:	2180      	movs	r1, #128	@ 0x80
{
 8009672:	4604      	mov	r4, r0
  (void)USBD_LL_StallEP(pdev, 0x80U);
 8009674:	f7f8 f9b7 	bl	80019e6 <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
 8009678:	4620      	mov	r0, r4
 800967a:	2100      	movs	r1, #0
}
 800967c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  (void)USBD_LL_StallEP(pdev, 0U);
 8009680:	f7f8 b9b1 	b.w	80019e6 <USBD_LL_StallEP>

08009684 <USBD_GetString>:
  * @param  unicode : Formatted string buffer (unicode)
  * @param  len : descriptor length
  * @retval None
  */
void USBD_GetString(uint8_t *desc, uint8_t *unicode, uint16_t *len)
{
 8009684:	b570      	push	{r4, r5, r6, lr}
 8009686:	460d      	mov	r5, r1
 8009688:	4616      	mov	r6, r2
  uint8_t idx = 0U;
  uint8_t *pdesc;

  if (desc == NULL)
 800968a:	4604      	mov	r4, r0
 800968c:	b170      	cbz	r0, 80096ac <USBD_GetString+0x28>
static uint8_t USBD_GetLen(uint8_t *buf)
{
  uint8_t  len = 0U;
  uint8_t *pbuff = buf;

  while (*pbuff != (uint8_t)'\0')
 800968e:	f7f6 fdaf 	bl	80001f0 <strlen>
  *len = MIN(USBD_MAX_STR_DESC_SIZ, ((uint16_t)USBD_GetLen(pdesc) * 2U) + 2U);
 8009692:	b2c3      	uxtb	r3, r0
 8009694:	3301      	adds	r3, #1
 8009696:	005b      	lsls	r3, r3, #1
 8009698:	8033      	strh	r3, [r6, #0]
  unicode[idx] = *(uint8_t *)len;
 800969a:	702b      	strb	r3, [r5, #0]
  unicode[idx] = USB_DESC_TYPE_STRING;
 800969c:	2303      	movs	r3, #3
 800969e:	706b      	strb	r3, [r5, #1]
  while (*pdesc != (uint8_t)'\0')
 80096a0:	3c01      	subs	r4, #1
  idx++;
 80096a2:	2302      	movs	r3, #2
    unicode[idx] = 0U;
 80096a4:	2100      	movs	r1, #0
  while (*pdesc != (uint8_t)'\0')
 80096a6:	f814 2f01 	ldrb.w	r2, [r4, #1]!
 80096aa:	b902      	cbnz	r2, 80096ae <USBD_GetString+0x2a>
}
 80096ac:	bd70      	pop	{r4, r5, r6, pc}
    unicode[idx] = *pdesc;
 80096ae:	54ea      	strb	r2, [r5, r3]
    idx++;
 80096b0:	1c5a      	adds	r2, r3, #1
    unicode[idx] = 0U;
 80096b2:	b2d2      	uxtb	r2, r2
    idx++;
 80096b4:	3302      	adds	r3, #2
    unicode[idx] = 0U;
 80096b6:	54a9      	strb	r1, [r5, r2]
    idx++;
 80096b8:	b2db      	uxtb	r3, r3
 80096ba:	e7f4      	b.n	80096a6 <USBD_GetString+0x22>

080096bc <USBD_HID_DataIn>:
static uint8_t USBD_HID_DataIn(USBD_HandleTypeDef *pdev, uint8_t epnum)
{
  UNUSED(epnum);
  /* Ensure that the FIFO is empty before a new transfer, this condition could
  be caused by  a new transfer before the end of the previous transfer */
  ((USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId])->state = USBD_HID_IDLE;
 80096bc:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
 80096c0:	33b0      	adds	r3, #176	@ 0xb0
 80096c2:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 80096c6:	2000      	movs	r0, #0
 80096c8:	7318      	strb	r0, [r3, #12]

  return (uint8_t)USBD_OK;
}
 80096ca:	4770      	bx	lr

080096cc <USBD_HID_GetDeviceQualifierDesc>:
  * @param  length : pointer data length
  * @retval pointer to descriptor buffer
  */
static uint8_t *USBD_HID_GetDeviceQualifierDesc(uint16_t *length)
{
  *length = (uint16_t)sizeof(USBD_HID_DeviceQualifierDesc);
 80096cc:	230a      	movs	r3, #10
 80096ce:	8003      	strh	r3, [r0, #0]

  return USBD_HID_DeviceQualifierDesc;
}
 80096d0:	4800      	ldr	r0, [pc, #0]	@ (80096d4 <USBD_HID_GetDeviceQualifierDesc+0x8>)
 80096d2:	4770      	bx	lr
 80096d4:	20000120 	.word	0x20000120

080096d8 <USBD_HID_GetFSCfgDesc>:
{
 80096d8:	b510      	push	{r4, lr}
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDesc, HID_EPIN_ADDR);
 80096da:	2181      	movs	r1, #129	@ 0x81
{
 80096dc:	4604      	mov	r4, r0
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDesc, HID_EPIN_ADDR);
 80096de:	4805      	ldr	r0, [pc, #20]	@ (80096f4 <USBD_HID_GetFSCfgDesc+0x1c>)
 80096e0:	f7ff fd68 	bl	80091b4 <USBD_GetEpDesc>
  if (pEpDesc != NULL)
 80096e4:	b108      	cbz	r0, 80096ea <USBD_HID_GetFSCfgDesc+0x12>
    pEpDesc->bInterval = HID_FS_BINTERVAL;
 80096e6:	230a      	movs	r3, #10
 80096e8:	7183      	strb	r3, [r0, #6]
  *length = (uint16_t)sizeof(USBD_HID_CfgDesc);
 80096ea:	2322      	movs	r3, #34	@ 0x22
}
 80096ec:	4801      	ldr	r0, [pc, #4]	@ (80096f4 <USBD_HID_GetFSCfgDesc+0x1c>)
  *length = (uint16_t)sizeof(USBD_HID_CfgDesc);
 80096ee:	8023      	strh	r3, [r4, #0]
}
 80096f0:	bd10      	pop	{r4, pc}
 80096f2:	bf00      	nop
 80096f4:	20000138 	.word	0x20000138

080096f8 <USBD_HID_GetOtherSpeedCfgDesc>:
static uint8_t *USBD_HID_GetOtherSpeedCfgDesc(uint16_t *length)
 80096f8:	f7ff bfee 	b.w	80096d8 <USBD_HID_GetFSCfgDesc>

080096fc <USBD_HID_GetHSCfgDesc>:
{
 80096fc:	b510      	push	{r4, lr}
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDesc, HID_EPIN_ADDR);
 80096fe:	2181      	movs	r1, #129	@ 0x81
{
 8009700:	4604      	mov	r4, r0
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDesc, HID_EPIN_ADDR);
 8009702:	4805      	ldr	r0, [pc, #20]	@ (8009718 <USBD_HID_GetHSCfgDesc+0x1c>)
 8009704:	f7ff fd56 	bl	80091b4 <USBD_GetEpDesc>
  if (pEpDesc != NULL)
 8009708:	b108      	cbz	r0, 800970e <USBD_HID_GetHSCfgDesc+0x12>
    pEpDesc->bInterval = HID_HS_BINTERVAL;
 800970a:	2307      	movs	r3, #7
 800970c:	7183      	strb	r3, [r0, #6]
  *length = (uint16_t)sizeof(USBD_HID_CfgDesc);
 800970e:	2322      	movs	r3, #34	@ 0x22
}
 8009710:	4801      	ldr	r0, [pc, #4]	@ (8009718 <USBD_HID_GetHSCfgDesc+0x1c>)
  *length = (uint16_t)sizeof(USBD_HID_CfgDesc);
 8009712:	8023      	strh	r3, [r4, #0]
}
 8009714:	bd10      	pop	{r4, pc}
 8009716:	bf00      	nop
 8009718:	20000138 	.word	0x20000138

0800971c <USBD_HID_Setup>:
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 800971c:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
{
 8009720:	b513      	push	{r0, r1, r4, lr}
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 8009722:	33b0      	adds	r3, #176	@ 0xb0
  uint16_t status_info = 0U;
 8009724:	2200      	movs	r2, #0
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
 8009726:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
  uint16_t status_info = 0U;
 800972a:	f8ad 2006 	strh.w	r2, [sp, #6]
  if (hhid == NULL)
 800972e:	2b00      	cmp	r3, #0
 8009730:	d04a      	beq.n	80097c8 <USBD_HID_Setup+0xac>
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 8009732:	780a      	ldrb	r2, [r1, #0]
 8009734:	f012 0260 	ands.w	r2, r2, #96	@ 0x60
 8009738:	d01d      	beq.n	8009776 <USBD_HID_Setup+0x5a>
 800973a:	2a20      	cmp	r2, #32
 800973c:	d142      	bne.n	80097c4 <USBD_HID_Setup+0xa8>
      switch (req->bRequest)
 800973e:	784a      	ldrb	r2, [r1, #1]
 8009740:	3a02      	subs	r2, #2
 8009742:	2a09      	cmp	r2, #9
 8009744:	d83e      	bhi.n	80097c4 <USBD_HID_Setup+0xa8>
 8009746:	e8df f002 	tbb	[pc, r2]
 800974a:	0a13      	.short	0x0a13
 800974c:	3d3d3d3d 	.word	0x3d3d3d3d
 8009750:	050f3d3d 	.word	0x050f3d3d
          hhid->Protocol = (uint8_t)(req->wValue);
 8009754:	788a      	ldrb	r2, [r1, #2]
 8009756:	601a      	str	r2, [r3, #0]
  USBD_StatusTypeDef ret = USBD_OK;
 8009758:	2000      	movs	r0, #0
}
 800975a:	b002      	add	sp, #8
 800975c:	bd10      	pop	{r4, pc}
          (void)USBD_CtlSendData(pdev, (uint8_t *)&hhid->Protocol, 1U);
 800975e:	2201      	movs	r2, #1
 8009760:	4619      	mov	r1, r3
          (void)USBD_CtlSendData(pdev, pbuf, len);
 8009762:	f000 f890 	bl	8009886 <USBD_CtlSendData>
          break;
 8009766:	e7f7      	b.n	8009758 <USBD_HID_Setup+0x3c>
          hhid->IdleState = (uint8_t)(req->wValue >> 8);
 8009768:	884a      	ldrh	r2, [r1, #2]
 800976a:	0a12      	lsrs	r2, r2, #8
 800976c:	605a      	str	r2, [r3, #4]
          break;
 800976e:	e7f3      	b.n	8009758 <USBD_HID_Setup+0x3c>
          (void)USBD_CtlSendData(pdev, (uint8_t *)&hhid->IdleState, 1U);
 8009770:	2201      	movs	r2, #1
 8009772:	1d19      	adds	r1, r3, #4
 8009774:	e7f5      	b.n	8009762 <USBD_HID_Setup+0x46>
      switch (req->bRequest)
 8009776:	784a      	ldrb	r2, [r1, #1]
 8009778:	2a0b      	cmp	r2, #11
 800977a:	d823      	bhi.n	80097c4 <USBD_HID_Setup+0xa8>
 800977c:	a401      	add	r4, pc, #4	@ (adr r4, 8009784 <USBD_HID_Setup+0x68>)
 800977e:	f854 f022 	ldr.w	pc, [r4, r2, lsl #2]
 8009782:	bf00      	nop
 8009784:	080097b5 	.word	0x080097b5
 8009788:	08009759 	.word	0x08009759
 800978c:	080097c5 	.word	0x080097c5
 8009790:	080097c5 	.word	0x080097c5
 8009794:	080097c5 	.word	0x080097c5
 8009798:	080097c5 	.word	0x080097c5
 800979c:	080097cd 	.word	0x080097cd
 80097a0:	080097c5 	.word	0x080097c5
 80097a4:	080097c5 	.word	0x080097c5
 80097a8:	080097c5 	.word	0x080097c5
 80097ac:	080097f1 	.word	0x080097f1
 80097b0:	08009801 	.word	0x08009801
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 80097b4:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
 80097b8:	2b03      	cmp	r3, #3
 80097ba:	d103      	bne.n	80097c4 <USBD_HID_Setup+0xa8>
            (void)USBD_CtlSendData(pdev, (uint8_t *)&status_info, 2U);
 80097bc:	2202      	movs	r2, #2
 80097be:	f10d 0106 	add.w	r1, sp, #6
 80097c2:	e7ce      	b.n	8009762 <USBD_HID_Setup+0x46>
            USBD_CtlError(pdev, req);
 80097c4:	f7ff ff53 	bl	800966e <USBD_CtlError>
    return (uint8_t)USBD_FAIL;
 80097c8:	2003      	movs	r0, #3
 80097ca:	e7c6      	b.n	800975a <USBD_HID_Setup+0x3e>
          if ((req->wValue >> 8) == HID_REPORT_DESC)
 80097cc:	884b      	ldrh	r3, [r1, #2]
 80097ce:	0a1b      	lsrs	r3, r3, #8
 80097d0:	2b22      	cmp	r3, #34	@ 0x22
 80097d2:	d105      	bne.n	80097e0 <USBD_HID_Setup+0xc4>
            len = MIN(HID_MOUSE_REPORT_DESC_SIZE, req->wLength);
 80097d4:	88ca      	ldrh	r2, [r1, #6]
            pbuf = HID_MOUSE_ReportDesc;
 80097d6:	490e      	ldr	r1, [pc, #56]	@ (8009810 <USBD_HID_Setup+0xf4>)
            len = MIN(HID_MOUSE_REPORT_DESC_SIZE, req->wLength);
 80097d8:	2a4a      	cmp	r2, #74	@ 0x4a
 80097da:	bf28      	it	cs
 80097dc:	224a      	movcs	r2, #74	@ 0x4a
            pbuf = HID_MOUSE_ReportDesc;
 80097de:	e7c0      	b.n	8009762 <USBD_HID_Setup+0x46>
          else if ((req->wValue >> 8) == HID_DESCRIPTOR_TYPE)
 80097e0:	2b21      	cmp	r3, #33	@ 0x21
 80097e2:	d1ef      	bne.n	80097c4 <USBD_HID_Setup+0xa8>
            len = MIN(USB_HID_DESC_SIZ, req->wLength);
 80097e4:	88ca      	ldrh	r2, [r1, #6]
            pbuf = USBD_HID_Desc;
 80097e6:	490b      	ldr	r1, [pc, #44]	@ (8009814 <USBD_HID_Setup+0xf8>)
            len = MIN(USB_HID_DESC_SIZ, req->wLength);
 80097e8:	2a09      	cmp	r2, #9
 80097ea:	bf28      	it	cs
 80097ec:	2209      	movcs	r2, #9
 80097ee:	e7b8      	b.n	8009762 <USBD_HID_Setup+0x46>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 80097f0:	f890 229c 	ldrb.w	r2, [r0, #668]	@ 0x29c
 80097f4:	2a03      	cmp	r2, #3
 80097f6:	d1e5      	bne.n	80097c4 <USBD_HID_Setup+0xa8>
            (void)USBD_CtlSendData(pdev, (uint8_t *)&hhid->AltSetting, 1U);
 80097f8:	2201      	movs	r2, #1
 80097fa:	f103 0108 	add.w	r1, r3, #8
 80097fe:	e7b0      	b.n	8009762 <USBD_HID_Setup+0x46>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8009800:	f890 229c 	ldrb.w	r2, [r0, #668]	@ 0x29c
 8009804:	2a03      	cmp	r2, #3
 8009806:	d1dd      	bne.n	80097c4 <USBD_HID_Setup+0xa8>
            hhid->AltSetting = (uint8_t)(req->wValue);
 8009808:	788a      	ldrb	r2, [r1, #2]
 800980a:	609a      	str	r2, [r3, #8]
 800980c:	e7a4      	b.n	8009758 <USBD_HID_Setup+0x3c>
 800980e:	bf00      	nop
 8009810:	200000d4 	.word	0x200000d4
 8009814:	2000012c 	.word	0x2000012c

08009818 <USBD_HID_DeInit>:
{
 8009818:	b538      	push	{r3, r4, r5, lr}
 800981a:	4604      	mov	r4, r0
  (void)USBD_LL_CloseEP(pdev, HIDInEpAdd);
 800981c:	2181      	movs	r1, #129	@ 0x81
 800981e:	f7f8 f8d9 	bl	80019d4 <USBD_LL_CloseEP>
  if (pdev->pClassDataCmsit[pdev->classId] != NULL)
 8009822:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
 8009826:	33b0      	adds	r3, #176	@ 0xb0
  pdev->ep_in[HIDInEpAdd & 0xFU].is_used = 0U;
 8009828:	2500      	movs	r5, #0
  if (pdev->pClassDataCmsit[pdev->classId] != NULL)
 800982a:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
  pdev->ep_in[HIDInEpAdd & 0xFU].is_used = 0U;
 800982e:	63a5      	str	r5, [r4, #56]	@ 0x38
  if (pdev->pClassDataCmsit[pdev->classId] != NULL)
 8009830:	b130      	cbz	r0, 8009840 <USBD_HID_DeInit+0x28>
    (void)USBD_free(pdev->pClassDataCmsit[pdev->classId]);
 8009832:	f7f8 f8b3 	bl	800199c <USBD_static_free>
    pdev->pClassDataCmsit[pdev->classId] = NULL;
 8009836:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
 800983a:	33b0      	adds	r3, #176	@ 0xb0
 800983c:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
}
 8009840:	2000      	movs	r0, #0
 8009842:	bd38      	pop	{r3, r4, r5, pc}

08009844 <USBD_HID_Init>:
{
 8009844:	b538      	push	{r3, r4, r5, lr}
 8009846:	4604      	mov	r4, r0
  hhid = (USBD_HID_HandleTypeDef *)USBD_malloc(sizeof(USBD_HID_HandleTypeDef));
 8009848:	2010      	movs	r0, #16
 800984a:	f7f8 f8a3 	bl	8001994 <USBD_static_malloc>
  if (hhid == NULL)
 800984e:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
    pdev->pClassDataCmsit[pdev->classId] = NULL;
 8009852:	33b0      	adds	r3, #176	@ 0xb0
  if (hhid == NULL)
 8009854:	4605      	mov	r5, r0
    pdev->pClassDataCmsit[pdev->classId] = NULL;
 8009856:	f844 0023 	str.w	r0, [r4, r3, lsl #2]
  if (hhid == NULL)
 800985a:	b908      	cbnz	r0, 8009860 <USBD_HID_Init+0x1c>
    return (uint8_t)USBD_EMEM;
 800985c:	2002      	movs	r0, #2
}
 800985e:	bd38      	pop	{r3, r4, r5, pc}
  if (pdev->dev_speed == USBD_SPEED_HIGH)
 8009860:	7c23      	ldrb	r3, [r4, #16]
  pdev->pClassData = pdev->pClassDataCmsit[pdev->classId];
 8009862:	f8c4 02bc 	str.w	r0, [r4, #700]	@ 0x2bc
    pdev->ep_in[HIDInEpAdd & 0xFU].bInterval = HID_HS_BINTERVAL;
 8009866:	2b00      	cmp	r3, #0
 8009868:	bf14      	ite	ne
 800986a:	230a      	movne	r3, #10
 800986c:	2307      	moveq	r3, #7
 800986e:	8763      	strh	r3, [r4, #58]	@ 0x3a
  (void)USBD_LL_OpenEP(pdev, HIDInEpAdd, USBD_EP_TYPE_INTR, HID_EPIN_SIZE);
 8009870:	2203      	movs	r2, #3
 8009872:	2304      	movs	r3, #4
 8009874:	2181      	movs	r1, #129	@ 0x81
 8009876:	4620      	mov	r0, r4
 8009878:	f7f8 f8a0 	bl	80019bc <USBD_LL_OpenEP>
  pdev->ep_in[HIDInEpAdd & 0xFU].is_used = 1U;
 800987c:	2301      	movs	r3, #1
  hhid->state = USBD_HID_IDLE;
 800987e:	2000      	movs	r0, #0
  pdev->ep_in[HIDInEpAdd & 0xFU].is_used = 1U;
 8009880:	8723      	strh	r3, [r4, #56]	@ 0x38
  hhid->state = USBD_HID_IDLE;
 8009882:	7328      	strb	r0, [r5, #12]
  return (uint8_t)USBD_OK;
 8009884:	e7eb      	b.n	800985e <USBD_HID_Init+0x1a>

08009886 <USBD_CtlSendData>:
  * @param  len: length of data to be sent
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlSendData(USBD_HandleTypeDef *pdev,
                                    uint8_t *pbuf, uint32_t len)
{
 8009886:	b510      	push	{r4, lr}
 8009888:	4613      	mov	r3, r2
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_DATA_IN;
 800988a:	2202      	movs	r2, #2
  pdev->ep_in[0].total_length = len;

#ifdef USBD_AVOID_PACKET_SPLIT_MPS
  pdev->ep_in[0].rem_length = 0U;
#else
  pdev->ep_in[0].rem_length = len;
 800988c:	e9c0 3306 	strd	r3, r3, [r0, #24]
  pdev->ep0_state = USBD_EP0_DATA_IN;
 8009890:	f8c0 2294 	str.w	r2, [r0, #660]	@ 0x294
#endif /* USBD_AVOID_PACKET_SPLIT_MPS */

  /* Start the transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
 8009894:	460a      	mov	r2, r1
 8009896:	2100      	movs	r1, #0
 8009898:	f7f8 f8c0 	bl	8001a1c <USBD_LL_Transmit>

  return USBD_OK;
}
 800989c:	2000      	movs	r0, #0
 800989e:	bd10      	pop	{r4, pc}

080098a0 <USBD_CtlContinueSendData>:
  * @param  len: length of data to be sent
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlContinueSendData(USBD_HandleTypeDef *pdev,
                                            uint8_t *pbuf, uint32_t len)
{
 80098a0:	b508      	push	{r3, lr}
 80098a2:	4613      	mov	r3, r2
  /* Start the next transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
 80098a4:	460a      	mov	r2, r1
 80098a6:	2100      	movs	r1, #0
 80098a8:	f7f8 f8b8 	bl	8001a1c <USBD_LL_Transmit>

  return USBD_OK;
}
 80098ac:	2000      	movs	r0, #0
 80098ae:	bd08      	pop	{r3, pc}

080098b0 <USBD_CtlContinueRx>:
  * @param  len: length of data to be received
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlContinueRx(USBD_HandleTypeDef *pdev,
                                      uint8_t *pbuf, uint32_t len)
{
 80098b0:	b508      	push	{r3, lr}
 80098b2:	4613      	mov	r3, r2
  (void)USBD_LL_PrepareReceive(pdev, 0U, pbuf, len);
 80098b4:	460a      	mov	r2, r1
 80098b6:	2100      	movs	r1, #0
 80098b8:	f7f8 f8b9 	bl	8001a2e <USBD_LL_PrepareReceive>

  return USBD_OK;
}
 80098bc:	2000      	movs	r0, #0
 80098be:	bd08      	pop	{r3, pc}

080098c0 <USBD_CtlSendStatus>:
  *         send zero lzngth packet on the ctl pipe
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlSendStatus(USBD_HandleTypeDef *pdev)
{
 80098c0:	b508      	push	{r3, lr}
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_STATUS_IN;
 80098c2:	2204      	movs	r2, #4

  /* Start the transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, NULL, 0U);
 80098c4:	2300      	movs	r3, #0
  pdev->ep0_state = USBD_EP0_STATUS_IN;
 80098c6:	f8c0 2294 	str.w	r2, [r0, #660]	@ 0x294
  (void)USBD_LL_Transmit(pdev, 0x00U, NULL, 0U);
 80098ca:	4619      	mov	r1, r3
 80098cc:	461a      	mov	r2, r3
 80098ce:	f7f8 f8a5 	bl	8001a1c <USBD_LL_Transmit>

  return USBD_OK;
}
 80098d2:	2000      	movs	r0, #0
 80098d4:	bd08      	pop	{r3, pc}

080098d6 <USBD_CtlReceiveStatus>:
  *         receive zero lzngth packet on the ctl pipe
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlReceiveStatus(USBD_HandleTypeDef *pdev)
{
 80098d6:	b508      	push	{r3, lr}
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_STATUS_OUT;
 80098d8:	2205      	movs	r2, #5

  /* Start the transfer */
  (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 80098da:	2300      	movs	r3, #0
  pdev->ep0_state = USBD_EP0_STATUS_OUT;
 80098dc:	f8c0 2294 	str.w	r2, [r0, #660]	@ 0x294
  (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 80098e0:	4619      	mov	r1, r3
 80098e2:	461a      	mov	r2, r3
 80098e4:	f7f8 f8a3 	bl	8001a2e <USBD_LL_PrepareReceive>

  return USBD_OK;
}
 80098e8:	2000      	movs	r0, #0
 80098ea:	bd08      	pop	{r3, pc}

080098ec <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 80098ec:	8880      	ldrh	r0, [r0, #4]
 80098ee:	4770      	bx	lr

080098f0 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 80098f0:	b570      	push	{r4, r5, r6, lr}
 80098f2:	6803      	ldr	r3, [r0, #0]
 80098f4:	4605      	mov	r5, r0
 80098f6:	460c      	mov	r4, r1
 80098f8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80098fa:	2100      	movs	r1, #0
 80098fc:	4798      	blx	r3
 80098fe:	682b      	ldr	r3, [r5, #0]
 8009900:	4606      	mov	r6, r0
 8009902:	6a1b      	ldr	r3, [r3, #32]
 8009904:	4628      	mov	r0, r5
 8009906:	4798      	blx	r3
 8009908:	1ba4      	subs	r4, r4, r6
 800990a:	b2a4      	uxth	r4, r4
 800990c:	fbb4 f0f0 	udiv	r0, r4, r0
 8009910:	bd70      	pop	{r4, r5, r6, pc}

08009912 <_ZN8touchgfx17AbstractPartition5clearEv>:
 8009912:	2300      	movs	r3, #0
 8009914:	8083      	strh	r3, [r0, #4]
 8009916:	4770      	bx	lr

08009918 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8009918:	b510      	push	{r4, lr}
 800991a:	6803      	ldr	r3, [r0, #0]
 800991c:	8881      	ldrh	r1, [r0, #4]
 800991e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8009920:	4604      	mov	r4, r0
 8009922:	4798      	blx	r3
 8009924:	88a3      	ldrh	r3, [r4, #4]
 8009926:	3301      	adds	r3, #1
 8009928:	80a3      	strh	r3, [r4, #4]
 800992a:	bd10      	pop	{r4, pc}

0800992c <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800992c:	6803      	ldr	r3, [r0, #0]
 800992e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8009930:	4718      	bx	r3

08009932 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 8009932:	4770      	bx	lr

08009934 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8009934:	4a02      	ldr	r2, [pc, #8]	@ (8009940 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8009936:	6002      	str	r2, [r0, #0]
 8009938:	2200      	movs	r2, #0
 800993a:	8082      	strh	r2, [r0, #4]
 800993c:	4770      	bx	lr
 800993e:	bf00      	nop
 8009940:	080237c0 	.word	0x080237c0

08009944 <_ZN8touchgfx9Container13getFirstChildEv>:
 8009944:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 8009946:	4770      	bx	lr

08009948 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 8009948:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800994a:	2000      	movs	r0, #0
 800994c:	b12b      	cbz	r3, 800995a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800994e:	b920      	cbnz	r0, 800995a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8009950:	1a5a      	subs	r2, r3, r1
 8009952:	4250      	negs	r0, r2
 8009954:	4150      	adcs	r0, r2
 8009956:	699b      	ldr	r3, [r3, #24]
 8009958:	e7f8      	b.n	800994c <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800995a:	4770      	bx	lr

0800995c <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800995c:	2300      	movs	r3, #0
 800995e:	6148      	str	r0, [r1, #20]
 8009960:	618b      	str	r3, [r1, #24]
 8009962:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8009964:	b913      	cbnz	r3, 800996c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 8009966:	6281      	str	r1, [r0, #40]	@ 0x28
 8009968:	4770      	bx	lr
 800996a:	4613      	mov	r3, r2
 800996c:	699a      	ldr	r2, [r3, #24]
 800996e:	2a00      	cmp	r2, #0
 8009970:	d1fb      	bne.n	800996a <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 8009972:	6199      	str	r1, [r3, #24]
 8009974:	4770      	bx	lr

08009976 <_ZN8touchgfx9Container9removeAllEv>:
 8009976:	2200      	movs	r2, #0
 8009978:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800997a:	b123      	cbz	r3, 8009986 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800997c:	6999      	ldr	r1, [r3, #24]
 800997e:	6281      	str	r1, [r0, #40]	@ 0x28
 8009980:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8009984:	e7f8      	b.n	8009978 <_ZN8touchgfx9Container9removeAllEv+0x2>
 8009986:	4770      	bx	lr

08009988 <_ZN8touchgfx9Container6unlinkEv>:
 8009988:	2300      	movs	r3, #0
 800998a:	6283      	str	r3, [r0, #40]	@ 0x28
 800998c:	4770      	bx	lr

0800998e <_ZNK8touchgfx9Container12getSolidRectEv>:
 800998e:	2200      	movs	r2, #0
 8009990:	8002      	strh	r2, [r0, #0]
 8009992:	8042      	strh	r2, [r0, #2]
 8009994:	8082      	strh	r2, [r0, #4]
 8009996:	80c2      	strh	r2, [r0, #6]
 8009998:	4770      	bx	lr

0800999a <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800999a:	b570      	push	{r4, r5, r6, lr}
 800999c:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800999e:	460d      	mov	r5, r1
 80099a0:	4616      	mov	r6, r2
 80099a2:	b13c      	cbz	r4, 80099b4 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 80099a4:	6823      	ldr	r3, [r4, #0]
 80099a6:	4620      	mov	r0, r4
 80099a8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80099aa:	4632      	mov	r2, r6
 80099ac:	4629      	mov	r1, r5
 80099ae:	4798      	blx	r3
 80099b0:	69a4      	ldr	r4, [r4, #24]
 80099b2:	e7f6      	b.n	80099a2 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 80099b4:	bd70      	pop	{r4, r5, r6, pc}

080099b6 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 80099b6:	b538      	push	{r3, r4, r5, lr}
 80099b8:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 80099ba:	460d      	mov	r5, r1
 80099bc:	b134      	cbz	r4, 80099cc <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 80099be:	682b      	ldr	r3, [r5, #0]
 80099c0:	4621      	mov	r1, r4
 80099c2:	689b      	ldr	r3, [r3, #8]
 80099c4:	4628      	mov	r0, r5
 80099c6:	4798      	blx	r3
 80099c8:	69a4      	ldr	r4, [r4, #24]
 80099ca:	e7f7      	b.n	80099bc <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 80099cc:	bd38      	pop	{r3, r4, r5, pc}

080099ce <_ZN8touchgfx9ContainerD1Ev>:
 80099ce:	4770      	bx	lr

080099d0 <_ZN8touchgfx9ContainerD0Ev>:
 80099d0:	b510      	push	{r4, lr}
 80099d2:	212c      	movs	r1, #44	@ 0x2c
 80099d4:	4604      	mov	r4, r0
 80099d6:	f016 ff7a 	bl	80208ce <_ZdlPvj>
 80099da:	4620      	mov	r0, r4
 80099dc:	bd10      	pop	{r4, pc}

080099de <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 80099de:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 80099e0:	b19b      	cbz	r3, 8009a0a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 80099e2:	428b      	cmp	r3, r1
 80099e4:	d109      	bne.n	80099fa <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 80099e6:	699a      	ldr	r2, [r3, #24]
 80099e8:	2100      	movs	r1, #0
 80099ea:	6159      	str	r1, [r3, #20]
 80099ec:	6282      	str	r2, [r0, #40]	@ 0x28
 80099ee:	b902      	cbnz	r2, 80099f2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 80099f0:	4770      	bx	lr
 80099f2:	6199      	str	r1, [r3, #24]
 80099f4:	4770      	bx	lr
 80099f6:	4613      	mov	r3, r2
 80099f8:	b13a      	cbz	r2, 8009a0a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 80099fa:	699a      	ldr	r2, [r3, #24]
 80099fc:	428a      	cmp	r2, r1
 80099fe:	d1fa      	bne.n	80099f6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8009a00:	698a      	ldr	r2, [r1, #24]
 8009a02:	619a      	str	r2, [r3, #24]
 8009a04:	2300      	movs	r3, #0
 8009a06:	e9c1 3305 	strd	r3, r3, [r1, #20]
 8009a0a:	4770      	bx	lr

08009a0c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8009a0c:	b410      	push	{r4}
 8009a0e:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8009a10:	4604      	mov	r4, r0
 8009a12:	b92b      	cbnz	r3, 8009a20 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8009a14:	6803      	ldr	r3, [r0, #0]
 8009a16:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009a1a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8009a1c:	4611      	mov	r1, r2
 8009a1e:	4718      	bx	r3
 8009a20:	b941      	cbnz	r1, 8009a34 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8009a22:	6193      	str	r3, [r2, #24]
 8009a24:	6282      	str	r2, [r0, #40]	@ 0x28
 8009a26:	6154      	str	r4, [r2, #20]
 8009a28:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009a2c:	4770      	bx	lr
 8009a2e:	4603      	mov	r3, r0
 8009a30:	2800      	cmp	r0, #0
 8009a32:	d0f9      	beq.n	8009a28 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8009a34:	4299      	cmp	r1, r3
 8009a36:	6998      	ldr	r0, [r3, #24]
 8009a38:	d1f9      	bne.n	8009a2e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 8009a3a:	6190      	str	r0, [r2, #24]
 8009a3c:	618a      	str	r2, [r1, #24]
 8009a3e:	e7f2      	b.n	8009a26 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

08009a40 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8009a40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009a44:	461f      	mov	r7, r3
 8009a46:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 8009a4a:	460d      	mov	r5, r1
 8009a4c:	4616      	mov	r6, r2
 8009a4e:	b103      	cbz	r3, 8009a52 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8009a50:	6038      	str	r0, [r7, #0]
 8009a52:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8009a54:	b314      	cbz	r4, 8009a9c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 8009a56:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 8009a5a:	b1eb      	cbz	r3, 8009a98 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009a5c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8009a60:	428d      	cmp	r5, r1
 8009a62:	db19      	blt.n	8009a98 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009a64:	8923      	ldrh	r3, [r4, #8]
 8009a66:	b289      	uxth	r1, r1
 8009a68:	440b      	add	r3, r1
 8009a6a:	b21b      	sxth	r3, r3
 8009a6c:	429d      	cmp	r5, r3
 8009a6e:	da13      	bge.n	8009a98 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009a70:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8009a74:	4296      	cmp	r6, r2
 8009a76:	db0f      	blt.n	8009a98 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009a78:	8963      	ldrh	r3, [r4, #10]
 8009a7a:	b292      	uxth	r2, r2
 8009a7c:	4413      	add	r3, r2
 8009a7e:	b21b      	sxth	r3, r3
 8009a80:	429e      	cmp	r6, r3
 8009a82:	da09      	bge.n	8009a98 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009a84:	6823      	ldr	r3, [r4, #0]
 8009a86:	1ab2      	subs	r2, r6, r2
 8009a88:	1a69      	subs	r1, r5, r1
 8009a8a:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 8009a8e:	b212      	sxth	r2, r2
 8009a90:	463b      	mov	r3, r7
 8009a92:	b209      	sxth	r1, r1
 8009a94:	4620      	mov	r0, r4
 8009a96:	47c0      	blx	r8
 8009a98:	69a4      	ldr	r4, [r4, #24]
 8009a9a:	e7db      	b.n	8009a54 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8009a9c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009aa0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8009aa0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009aa4:	4c6e      	ldr	r4, [pc, #440]	@ (8009c60 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 8009aa6:	b0a1      	sub	sp, #132	@ 0x84
 8009aa8:	6824      	ldr	r4, [r4, #0]
 8009aaa:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 8009aac:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 8009ab0:	9303      	str	r3, [sp, #12]
 8009ab2:	2400      	movs	r4, #0
 8009ab4:	802c      	strh	r4, [r5, #0]
 8009ab6:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 8009ab8:	802c      	strh	r4, [r5, #0]
 8009aba:	601c      	str	r4, [r3, #0]
 8009abc:	4606      	mov	r6, r0
 8009abe:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8009ac2:	f7ff ffbd 	bl	8009a40 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8009ac6:	f1b9 0f03 	cmp.w	r9, #3
 8009aca:	f340 80c2 	ble.w	8009c52 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 8009ace:	4631      	mov	r1, r6
 8009ad0:	a80c      	add	r0, sp, #48	@ 0x30
 8009ad2:	f005 ff41 	bl	800f958 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8009ad6:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 8009ada:	9306      	str	r3, [sp, #24]
 8009adc:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8009ae0:	9307      	str	r3, [sp, #28]
 8009ae2:	9b03      	ldr	r3, [sp, #12]
 8009ae4:	f8d3 a000 	ldr.w	sl, [r3]
 8009ae8:	f1ba 0f00 	cmp.w	sl, #0
 8009aec:	f000 80b4 	beq.w	8009c58 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 8009af0:	4651      	mov	r1, sl
 8009af2:	a810      	add	r0, sp, #64	@ 0x40
 8009af4:	f005 ff30 	bl	800f958 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8009af8:	9b01      	ldr	r3, [sp, #4]
 8009afa:	9a06      	ldr	r2, [sp, #24]
 8009afc:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 8009b00:	189d      	adds	r5, r3, r2
 8009b02:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 8009b06:	9a07      	ldr	r2, [sp, #28]
 8009b08:	2002      	movs	r0, #2
 8009b0a:	fb91 f1f0 	sdiv	r1, r1, r0
 8009b0e:	4419      	add	r1, r3
 8009b10:	1a6d      	subs	r5, r5, r1
 8009b12:	9b02      	ldr	r3, [sp, #8]
 8009b14:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 8009b18:	4413      	add	r3, r2
 8009b1a:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 8009b1e:	fb92 f2f0 	sdiv	r2, r2, r0
 8009b22:	440a      	add	r2, r1
 8009b24:	1a9b      	subs	r3, r3, r2
 8009b26:	435b      	muls	r3, r3
 8009b28:	fb05 3505 	mla	r5, r5, r5, r3
 8009b2c:	4f4d      	ldr	r7, [pc, #308]	@ (8009c64 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 8009b2e:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8009b30:	ac10      	add	r4, sp, #64	@ 0x40
 8009b32:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8009b34:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8009b36:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8009b38:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8009b3a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8009b3c:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8009b40:	f1b9 0f0c 	cmp.w	r9, #12
 8009b44:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8009b48:	f04f 0303 	mov.w	r3, #3
 8009b4c:	bfc8      	it	gt
 8009b4e:	4698      	movgt	r8, r3
 8009b50:	f8cd 9000 	str.w	r9, [sp]
 8009b54:	f04f 0400 	mov.w	r4, #0
 8009b58:	bfdc      	itt	le
 8009b5a:	f109 32ff 	addle.w	r2, r9, #4294967295
 8009b5e:	fb92 f8f3 	sdivle	r8, r2, r3
 8009b62:	1c63      	adds	r3, r4, #1
 8009b64:	aa10      	add	r2, sp, #64	@ 0x40
 8009b66:	f004 0401 	and.w	r4, r4, #1
 8009b6a:	9308      	str	r3, [sp, #32]
 8009b6c:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 8009b70:	9b00      	ldr	r3, [sp, #0]
 8009b72:	fb93 f3f8 	sdiv	r3, r3, r8
 8009b76:	b29b      	uxth	r3, r3
 8009b78:	3404      	adds	r4, #4
 8009b7a:	f04f 0b00 	mov.w	fp, #0
 8009b7e:	9304      	str	r3, [sp, #16]
 8009b80:	9a04      	ldr	r2, [sp, #16]
 8009b82:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8009b86:	fb13 f302 	smulbb	r3, r3, r2
 8009b8a:	9a01      	ldr	r2, [sp, #4]
 8009b8c:	b29b      	uxth	r3, r3
 8009b8e:	1899      	adds	r1, r3, r2
 8009b90:	9305      	str	r3, [sp, #20]
 8009b92:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8009b96:	b209      	sxth	r1, r1
 8009b98:	4299      	cmp	r1, r3
 8009b9a:	db4d      	blt.n	8009c38 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009b9c:	8932      	ldrh	r2, [r6, #8]
 8009b9e:	4413      	add	r3, r2
 8009ba0:	b21b      	sxth	r3, r3
 8009ba2:	4299      	cmp	r1, r3
 8009ba4:	da48      	bge.n	8009c38 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009ba6:	9b04      	ldr	r3, [sp, #16]
 8009ba8:	6827      	ldr	r7, [r4, #0]
 8009baa:	fb17 f703 	smulbb	r7, r7, r3
 8009bae:	9b02      	ldr	r3, [sp, #8]
 8009bb0:	b2bf      	uxth	r7, r7
 8009bb2:	18fa      	adds	r2, r7, r3
 8009bb4:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8009bb8:	b212      	sxth	r2, r2
 8009bba:	429a      	cmp	r2, r3
 8009bbc:	db3c      	blt.n	8009c38 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009bbe:	8970      	ldrh	r0, [r6, #10]
 8009bc0:	4403      	add	r3, r0
 8009bc2:	b21b      	sxth	r3, r3
 8009bc4:	429a      	cmp	r2, r3
 8009bc6:	da37      	bge.n	8009c38 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009bc8:	2300      	movs	r3, #0
 8009bca:	930b      	str	r3, [sp, #44]	@ 0x2c
 8009bcc:	4630      	mov	r0, r6
 8009bce:	ab0b      	add	r3, sp, #44	@ 0x2c
 8009bd0:	f7ff ff36 	bl	8009a40 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8009bd4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8009bd6:	b37a      	cbz	r2, 8009c38 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009bd8:	4552      	cmp	r2, sl
 8009bda:	d02d      	beq.n	8009c38 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009bdc:	4611      	mov	r1, r2
 8009bde:	a80e      	add	r0, sp, #56	@ 0x38
 8009be0:	9209      	str	r2, [sp, #36]	@ 0x24
 8009be2:	f005 feb9 	bl	800f958 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8009be6:	9a06      	ldr	r2, [sp, #24]
 8009be8:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 8009bec:	9b01      	ldr	r3, [sp, #4]
 8009bee:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 8009bf2:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 8009bf6:	4413      	add	r3, r2
 8009bf8:	f04f 0e02 	mov.w	lr, #2
 8009bfc:	fb91 f1fe 	sdiv	r1, r1, lr
 8009c00:	4401      	add	r1, r0
 8009c02:	1a58      	subs	r0, r3, r1
 8009c04:	9a07      	ldr	r2, [sp, #28]
 8009c06:	9b02      	ldr	r3, [sp, #8]
 8009c08:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 8009c0c:	fb9c fcfe 	sdiv	ip, ip, lr
 8009c10:	4413      	add	r3, r2
 8009c12:	448c      	add	ip, r1
 8009c14:	eba3 030c 	sub.w	r3, r3, ip
 8009c18:	435b      	muls	r3, r3
 8009c1a:	fb00 3300 	mla	r3, r0, r0, r3
 8009c1e:	42ab      	cmp	r3, r5
 8009c20:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8009c22:	d208      	bcs.n	8009c36 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8009c24:	9803      	ldr	r0, [sp, #12]
 8009c26:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8009c28:	6001      	str	r1, [r0, #0]
 8009c2a:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 8009c2c:	9805      	ldr	r0, [sp, #20]
 8009c2e:	8008      	strh	r0, [r1, #0]
 8009c30:	992b      	ldr	r1, [sp, #172]	@ 0xac
 8009c32:	461d      	mov	r5, r3
 8009c34:	800f      	strh	r7, [r1, #0]
 8009c36:	4692      	mov	sl, r2
 8009c38:	f10b 0b01 	add.w	fp, fp, #1
 8009c3c:	f1bb 0f04 	cmp.w	fp, #4
 8009c40:	f104 0408 	add.w	r4, r4, #8
 8009c44:	d19c      	bne.n	8009b80 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 8009c46:	9b00      	ldr	r3, [sp, #0]
 8009c48:	9c08      	ldr	r4, [sp, #32]
 8009c4a:	444b      	add	r3, r9
 8009c4c:	4544      	cmp	r4, r8
 8009c4e:	9300      	str	r3, [sp, #0]
 8009c50:	d187      	bne.n	8009b62 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 8009c52:	b021      	add	sp, #132	@ 0x84
 8009c54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009c58:	f04f 35ff 	mov.w	r5, #4294967295
 8009c5c:	e766      	b.n	8009b2c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 8009c5e:	bf00      	nop
 8009c60:	20013090 	.word	0x20013090
 8009c64:	0802279c 	.word	0x0802279c

08009c68 <_ZN8touchgfx4RectaNERKS0_>:
 8009c68:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009c6c:	f9b1 7000 	ldrsh.w	r7, [r1]
 8009c70:	888c      	ldrh	r4, [r1, #4]
 8009c72:	f9b0 9000 	ldrsh.w	r9, [r0]
 8009c76:	443c      	add	r4, r7
 8009c78:	b2a4      	uxth	r4, r4
 8009c7a:	fa0f f884 	sxth.w	r8, r4
 8009c7e:	45c1      	cmp	r9, r8
 8009c80:	da2f      	bge.n	8009ce2 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8009c82:	8882      	ldrh	r2, [r0, #4]
 8009c84:	444a      	add	r2, r9
 8009c86:	b292      	uxth	r2, r2
 8009c88:	fa0f fe82 	sxth.w	lr, r2
 8009c8c:	4577      	cmp	r7, lr
 8009c8e:	da28      	bge.n	8009ce2 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8009c90:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8009c94:	88cb      	ldrh	r3, [r1, #6]
 8009c96:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8009c9a:	442b      	add	r3, r5
 8009c9c:	b21b      	sxth	r3, r3
 8009c9e:	429e      	cmp	r6, r3
 8009ca0:	da1f      	bge.n	8009ce2 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8009ca2:	88c3      	ldrh	r3, [r0, #6]
 8009ca4:	4433      	add	r3, r6
 8009ca6:	b29b      	uxth	r3, r3
 8009ca8:	fa0f fc83 	sxth.w	ip, r3
 8009cac:	4565      	cmp	r5, ip
 8009cae:	da18      	bge.n	8009ce2 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8009cb0:	454f      	cmp	r7, r9
 8009cb2:	bfb8      	it	lt
 8009cb4:	464f      	movlt	r7, r9
 8009cb6:	42b5      	cmp	r5, r6
 8009cb8:	bfb8      	it	lt
 8009cba:	4635      	movlt	r5, r6
 8009cbc:	45f0      	cmp	r8, lr
 8009cbe:	bfd8      	it	le
 8009cc0:	4622      	movle	r2, r4
 8009cc2:	1bd2      	subs	r2, r2, r7
 8009cc4:	8082      	strh	r2, [r0, #4]
 8009cc6:	884a      	ldrh	r2, [r1, #2]
 8009cc8:	88c9      	ldrh	r1, [r1, #6]
 8009cca:	8007      	strh	r7, [r0, #0]
 8009ccc:	440a      	add	r2, r1
 8009cce:	b292      	uxth	r2, r2
 8009cd0:	b211      	sxth	r1, r2
 8009cd2:	458c      	cmp	ip, r1
 8009cd4:	bfa8      	it	ge
 8009cd6:	4613      	movge	r3, r2
 8009cd8:	1b5b      	subs	r3, r3, r5
 8009cda:	80c3      	strh	r3, [r0, #6]
 8009cdc:	8045      	strh	r5, [r0, #2]
 8009cde:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009ce2:	2300      	movs	r3, #0
 8009ce4:	8003      	strh	r3, [r0, #0]
 8009ce6:	8043      	strh	r3, [r0, #2]
 8009ce8:	8083      	strh	r3, [r0, #4]
 8009cea:	80c3      	strh	r3, [r0, #6]
 8009cec:	e7f7      	b.n	8009cde <_ZN8touchgfx4RectaNERKS0_+0x76>

08009cee <_ZNK8touchgfx4Rect7isEmptyEv>:
 8009cee:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8009cf2:	2b00      	cmp	r3, #0
 8009cf4:	dd06      	ble.n	8009d04 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8009cf6:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8009cfa:	2800      	cmp	r0, #0
 8009cfc:	bfcc      	ite	gt
 8009cfe:	2000      	movgt	r0, #0
 8009d00:	2001      	movle	r0, #1
 8009d02:	4770      	bx	lr
 8009d04:	2001      	movs	r0, #1
 8009d06:	4770      	bx	lr

08009d08 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8009d08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009d0c:	2300      	movs	r3, #0
 8009d0e:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 8009d10:	8003      	strh	r3, [r0, #0]
 8009d12:	4604      	mov	r4, r0
 8009d14:	8043      	strh	r3, [r0, #2]
 8009d16:	8083      	strh	r3, [r0, #4]
 8009d18:	80c3      	strh	r3, [r0, #6]
 8009d1a:	2d00      	cmp	r5, #0
 8009d1c:	d040      	beq.n	8009da0 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8009d1e:	1d28      	adds	r0, r5, #4
 8009d20:	f7ff ffe5 	bl	8009cee <_ZNK8touchgfx4Rect7isEmptyEv>
 8009d24:	b988      	cbnz	r0, 8009d4a <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8009d26:	4620      	mov	r0, r4
 8009d28:	f7ff ffe1 	bl	8009cee <_ZNK8touchgfx4Rect7isEmptyEv>
 8009d2c:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8009d30:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8009d34:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8009d38:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8009d3c:	b138      	cbz	r0, 8009d4e <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8009d3e:	8022      	strh	r2, [r4, #0]
 8009d40:	8063      	strh	r3, [r4, #2]
 8009d42:	f8a4 e004 	strh.w	lr, [r4, #4]
 8009d46:	f8a4 c006 	strh.w	ip, [r4, #6]
 8009d4a:	69ad      	ldr	r5, [r5, #24]
 8009d4c:	e7e5      	b.n	8009d1a <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8009d4e:	f9b4 0000 	ldrsh.w	r0, [r4]
 8009d52:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8009d56:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8009d5a:	4290      	cmp	r0, r2
 8009d5c:	4607      	mov	r7, r0
 8009d5e:	bfa8      	it	ge
 8009d60:	4617      	movge	r7, r2
 8009d62:	4472      	add	r2, lr
 8009d64:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8009d68:	8027      	strh	r7, [r4, #0]
 8009d6a:	4299      	cmp	r1, r3
 8009d6c:	460e      	mov	r6, r1
 8009d6e:	4440      	add	r0, r8
 8009d70:	bfa8      	it	ge
 8009d72:	461e      	movge	r6, r3
 8009d74:	4471      	add	r1, lr
 8009d76:	4463      	add	r3, ip
 8009d78:	b200      	sxth	r0, r0
 8009d7a:	b212      	sxth	r2, r2
 8009d7c:	b209      	sxth	r1, r1
 8009d7e:	b21b      	sxth	r3, r3
 8009d80:	4290      	cmp	r0, r2
 8009d82:	bfac      	ite	ge
 8009d84:	ebc7 0200 	rsbge	r2, r7, r0
 8009d88:	ebc7 0202 	rsblt	r2, r7, r2
 8009d8c:	4299      	cmp	r1, r3
 8009d8e:	bfac      	ite	ge
 8009d90:	ebc6 0301 	rsbge	r3, r6, r1
 8009d94:	ebc6 0303 	rsblt	r3, r6, r3
 8009d98:	8066      	strh	r6, [r4, #2]
 8009d9a:	80a2      	strh	r2, [r4, #4]
 8009d9c:	80e3      	strh	r3, [r4, #6]
 8009d9e:	e7d4      	b.n	8009d4a <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8009da0:	4620      	mov	r0, r4
 8009da2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009da6 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8009da6:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8009daa:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 8009dae:	b383      	cbz	r3, 8009e12 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8009db0:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8009db2:	b374      	cbz	r4, 8009e12 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8009db4:	f9b1 5000 	ldrsh.w	r5, [r1]
 8009db8:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8009dbc:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8009dc0:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8009dc4:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 8009dc8:	b303      	cbz	r3, 8009e0c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8009dca:	4668      	mov	r0, sp
 8009dcc:	1d21      	adds	r1, r4, #4
 8009dce:	f8ad 5000 	strh.w	r5, [sp]
 8009dd2:	f8ad 6002 	strh.w	r6, [sp, #2]
 8009dd6:	f8ad 7004 	strh.w	r7, [sp, #4]
 8009dda:	f8ad 8006 	strh.w	r8, [sp, #6]
 8009dde:	f7ff ff43 	bl	8009c68 <_ZN8touchgfx4RectaNERKS0_>
 8009de2:	4668      	mov	r0, sp
 8009de4:	f7ff ff83 	bl	8009cee <_ZNK8touchgfx4Rect7isEmptyEv>
 8009de8:	b980      	cbnz	r0, 8009e0c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8009dea:	f8bd 3000 	ldrh.w	r3, [sp]
 8009dee:	88a2      	ldrh	r2, [r4, #4]
 8009df0:	1a9b      	subs	r3, r3, r2
 8009df2:	f8ad 3000 	strh.w	r3, [sp]
 8009df6:	88e2      	ldrh	r2, [r4, #6]
 8009df8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8009dfc:	1a9b      	subs	r3, r3, r2
 8009dfe:	f8ad 3002 	strh.w	r3, [sp, #2]
 8009e02:	6823      	ldr	r3, [r4, #0]
 8009e04:	4669      	mov	r1, sp
 8009e06:	689b      	ldr	r3, [r3, #8]
 8009e08:	4620      	mov	r0, r4
 8009e0a:	4798      	blx	r3
 8009e0c:	69a4      	ldr	r4, [r4, #24]
 8009e0e:	2c00      	cmp	r4, #0
 8009e10:	d1d8      	bne.n	8009dc4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8009e12:	b002      	add	sp, #8
 8009e14:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009e18 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8009e18:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009e1a:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 8009e1e:	460d      	mov	r5, r1
 8009e20:	4616      	mov	r6, r2
 8009e22:	b323      	cbz	r3, 8009e6e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8009e24:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8009e26:	b314      	cbz	r4, 8009e6e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8009e28:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 8009e2c:	b1eb      	cbz	r3, 8009e6a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8009e2e:	6828      	ldr	r0, [r5, #0]
 8009e30:	6869      	ldr	r1, [r5, #4]
 8009e32:	466b      	mov	r3, sp
 8009e34:	c303      	stmia	r3!, {r0, r1}
 8009e36:	4668      	mov	r0, sp
 8009e38:	1d21      	adds	r1, r4, #4
 8009e3a:	f7ff ff15 	bl	8009c68 <_ZN8touchgfx4RectaNERKS0_>
 8009e3e:	4668      	mov	r0, sp
 8009e40:	f7ff ff55 	bl	8009cee <_ZNK8touchgfx4Rect7isEmptyEv>
 8009e44:	b988      	cbnz	r0, 8009e6a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8009e46:	f8bd 3000 	ldrh.w	r3, [sp]
 8009e4a:	88a2      	ldrh	r2, [r4, #4]
 8009e4c:	1a9b      	subs	r3, r3, r2
 8009e4e:	f8ad 3000 	strh.w	r3, [sp]
 8009e52:	88e2      	ldrh	r2, [r4, #6]
 8009e54:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8009e58:	1a9b      	subs	r3, r3, r2
 8009e5a:	f8ad 3002 	strh.w	r3, [sp, #2]
 8009e5e:	6823      	ldr	r3, [r4, #0]
 8009e60:	4632      	mov	r2, r6
 8009e62:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8009e64:	4669      	mov	r1, sp
 8009e66:	4620      	mov	r0, r4
 8009e68:	4798      	blx	r3
 8009e6a:	69a4      	ldr	r4, [r4, #24]
 8009e6c:	e7db      	b.n	8009e26 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8009e6e:	b002      	add	sp, #8
 8009e70:	bd70      	pop	{r4, r5, r6, pc}

08009e72 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 8009e72:	b513      	push	{r0, r1, r4, lr}
 8009e74:	6803      	ldr	r3, [r0, #0]
 8009e76:	f8d3 40b4 	ldr.w	r4, [r3, #180]	@ 0xb4
 8009e7a:	2300      	movs	r3, #0
 8009e7c:	e9cd 3300 	strd	r3, r3, [sp]
 8009e80:	466b      	mov	r3, sp
 8009e82:	47a0      	blx	r4
 8009e84:	b002      	add	sp, #8
 8009e86:	bd10      	pop	{r4, pc}

08009e88 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8009e88:	2301      	movs	r3, #1
 8009e8a:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 8009e8e:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 8009e92:	4770      	bx	lr

08009e94 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8009e94:	2301      	movs	r3, #1
 8009e96:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 8009e9a:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 8009e9e:	4770      	bx	lr

08009ea0 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8009ea0:	6843      	ldr	r3, [r0, #4]
 8009ea2:	2201      	movs	r2, #1
 8009ea4:	725a      	strb	r2, [r3, #9]
 8009ea6:	6840      	ldr	r0, [r0, #4]
 8009ea8:	6803      	ldr	r3, [r0, #0]
 8009eaa:	691b      	ldr	r3, [r3, #16]
 8009eac:	4718      	bx	r3

08009eae <_ZN8touchgfx3HAL8flushDMAEv>:
 8009eae:	6840      	ldr	r0, [r0, #4]
 8009eb0:	6803      	ldr	r3, [r0, #0]
 8009eb2:	689b      	ldr	r3, [r3, #8]
 8009eb4:	4718      	bx	r3

08009eb6 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8009eb6:	b530      	push	{r4, r5, lr}
 8009eb8:	b08b      	sub	sp, #44	@ 0x2c
 8009eba:	6804      	ldr	r4, [r0, #0]
 8009ebc:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 8009ec0:	9509      	str	r5, [sp, #36]	@ 0x24
 8009ec2:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 8009ec6:	9508      	str	r5, [sp, #32]
 8009ec8:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 8009ecc:	9507      	str	r5, [sp, #28]
 8009ece:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 8009ed2:	9506      	str	r5, [sp, #24]
 8009ed4:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 8009ed8:	9505      	str	r5, [sp, #20]
 8009eda:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 8009ede:	9504      	str	r5, [sp, #16]
 8009ee0:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 8009ee4:	9503      	str	r5, [sp, #12]
 8009ee6:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 8009eea:	9502      	str	r5, [sp, #8]
 8009eec:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8009ef0:	e9cd 3500 	strd	r3, r5, [sp]
 8009ef4:	4613      	mov	r3, r2
 8009ef6:	6c24      	ldr	r4, [r4, #64]	@ 0x40
 8009ef8:	2200      	movs	r2, #0
 8009efa:	47a0      	blx	r4
 8009efc:	b00b      	add	sp, #44	@ 0x2c
 8009efe:	bd30      	pop	{r4, r5, pc}

08009f00 <_ZN8touchgfx3HAL10beginFrameEv>:
 8009f00:	4b04      	ldr	r3, [pc, #16]	@ (8009f14 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 8009f02:	781b      	ldrb	r3, [r3, #0]
 8009f04:	b123      	cbz	r3, 8009f10 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8009f06:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 8009f0a:	f080 0001 	eor.w	r0, r0, #1
 8009f0e:	4770      	bx	lr
 8009f10:	2001      	movs	r0, #1
 8009f12:	4770      	bx	lr
 8009f14:	2001308c 	.word	0x2001308c

08009f18 <_ZN8touchgfx3HAL8endFrameEv>:
 8009f18:	b510      	push	{r4, lr}
 8009f1a:	4604      	mov	r4, r0
 8009f1c:	6840      	ldr	r0, [r0, #4]
 8009f1e:	6803      	ldr	r3, [r0, #0]
 8009f20:	689b      	ldr	r3, [r3, #8]
 8009f22:	4798      	blx	r3
 8009f24:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 8009f28:	b113      	cbz	r3, 8009f30 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8009f2a:	2301      	movs	r3, #1
 8009f2c:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 8009f30:	bd10      	pop	{r4, pc}

08009f32 <_ZN8touchgfx3HAL10initializeEv>:
 8009f32:	b510      	push	{r4, lr}
 8009f34:	4604      	mov	r4, r0
 8009f36:	f7f6 fe07 	bl	8000b48 <_ZN8touchgfx10OSWrappers10initializeEv>
 8009f3a:	f7f6 fd0f 	bl	800095c <_ZN8touchgfx4GPIO4initEv>
 8009f3e:	6860      	ldr	r0, [r4, #4]
 8009f40:	6803      	ldr	r3, [r0, #0]
 8009f42:	68db      	ldr	r3, [r3, #12]
 8009f44:	4798      	blx	r3
 8009f46:	68e0      	ldr	r0, [r4, #12]
 8009f48:	6803      	ldr	r3, [r0, #0]
 8009f4a:	689b      	ldr	r3, [r3, #8]
 8009f4c:	4798      	blx	r3
 8009f4e:	6823      	ldr	r3, [r4, #0]
 8009f50:	4620      	mov	r0, r4
 8009f52:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8009f54:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009f58:	4718      	bx	r3
	...

08009f5c <_ZN8touchgfx3HAL4tickEv>:
 8009f5c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8009f5e:	6803      	ldr	r3, [r0, #0]
 8009f60:	4d62      	ldr	r5, [pc, #392]	@ (800a0ec <_ZN8touchgfx3HAL4tickEv+0x190>)
 8009f62:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 8009f66:	4604      	mov	r4, r0
 8009f68:	4798      	blx	r3
 8009f6a:	2800      	cmp	r0, #0
 8009f6c:	f000 809e 	beq.w	800a0ac <_ZN8touchgfx3HAL4tickEv+0x150>
 8009f70:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
 8009f74:	2b02      	cmp	r3, #2
 8009f76:	d002      	beq.n	8009f7e <_ZN8touchgfx3HAL4tickEv+0x22>
 8009f78:	2001      	movs	r0, #1
 8009f7a:	f7f6 fc6d 	bl	8000858 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8009f7e:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 8009f82:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 8009f86:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 8009f8a:	2600      	movs	r6, #0
 8009f8c:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 8009f90:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 8009f94:	b133      	cbz	r3, 8009fa4 <_ZN8touchgfx3HAL4tickEv+0x48>
 8009f96:	6823      	ldr	r3, [r4, #0]
 8009f98:	4620      	mov	r0, r4
 8009f9a:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 8009f9e:	4798      	blx	r3
 8009fa0:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 8009fa4:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 8009fa8:	6862      	ldr	r2, [r4, #4]
 8009faa:	f083 0301 	eor.w	r3, r3, #1
 8009fae:	7253      	strb	r3, [r2, #9]
 8009fb0:	2601      	movs	r6, #1
 8009fb2:	702e      	strb	r6, [r5, #0]
 8009fb4:	f004 fa82 	bl	800e4bc <_ZN8touchgfx11Application11getInstanceEv>
 8009fb8:	6803      	ldr	r3, [r0, #0]
 8009fba:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8009fbc:	4798      	blx	r3
 8009fbe:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 8009fc2:	b90b      	cbnz	r3, 8009fc8 <_ZN8touchgfx3HAL4tickEv+0x6c>
 8009fc4:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 8009fc8:	f004 fa78 	bl	800e4bc <_ZN8touchgfx11Application11getInstanceEv>
 8009fcc:	6803      	ldr	r3, [r0, #0]
 8009fce:	695b      	ldr	r3, [r3, #20]
 8009fd0:	4798      	blx	r3
 8009fd2:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 8009fd4:	6803      	ldr	r3, [r0, #0]
 8009fd6:	691b      	ldr	r3, [r3, #16]
 8009fd8:	4798      	blx	r3
 8009fda:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 8009fde:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 8009fe2:	3b01      	subs	r3, #1
 8009fe4:	b2db      	uxtb	r3, r3
 8009fe6:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 8009fea:	b10a      	cbz	r2, 8009ff0 <_ZN8touchgfx3HAL4tickEv+0x94>
 8009fec:	2b00      	cmp	r3, #0
 8009fee:	d1eb      	bne.n	8009fc8 <_ZN8touchgfx3HAL4tickEv+0x6c>
 8009ff0:	4a3f      	ldr	r2, [pc, #252]	@ (800a0f0 <_ZN8touchgfx3HAL4tickEv+0x194>)
 8009ff2:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 8009ff6:	7813      	ldrb	r3, [r2, #0]
 8009ff8:	3301      	adds	r3, #1
 8009ffa:	b25b      	sxtb	r3, r3
 8009ffc:	4299      	cmp	r1, r3
 8009ffe:	7013      	strb	r3, [r2, #0]
 800a000:	dc10      	bgt.n	800a024 <_ZN8touchgfx3HAL4tickEv+0xc8>
 800a002:	68e0      	ldr	r0, [r4, #12]
 800a004:	2300      	movs	r3, #0
 800a006:	7013      	strb	r3, [r2, #0]
 800a008:	6803      	ldr	r3, [r0, #0]
 800a00a:	aa03      	add	r2, sp, #12
 800a00c:	68db      	ldr	r3, [r3, #12]
 800a00e:	a902      	add	r1, sp, #8
 800a010:	4798      	blx	r3
 800a012:	6823      	ldr	r3, [r4, #0]
 800a014:	2800      	cmp	r0, #0
 800a016:	d059      	beq.n	800a0cc <_ZN8touchgfx3HAL4tickEv+0x170>
 800a018:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 800a01c:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800a020:	4620      	mov	r0, r4
 800a022:	4798      	blx	r3
 800a024:	6960      	ldr	r0, [r4, #20]
 800a026:	2300      	movs	r3, #0
 800a028:	f88d 3007 	strb.w	r3, [sp, #7]
 800a02c:	b158      	cbz	r0, 800a046 <_ZN8touchgfx3HAL4tickEv+0xea>
 800a02e:	6803      	ldr	r3, [r0, #0]
 800a030:	f10d 0107 	add.w	r1, sp, #7
 800a034:	68db      	ldr	r3, [r3, #12]
 800a036:	4798      	blx	r3
 800a038:	b128      	cbz	r0, 800a046 <_ZN8touchgfx3HAL4tickEv+0xea>
 800a03a:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800a03c:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800a040:	6803      	ldr	r3, [r0, #0]
 800a042:	68db      	ldr	r3, [r3, #12]
 800a044:	4798      	blx	r3
 800a046:	f104 001c 	add.w	r0, r4, #28
 800a04a:	f015 fe3f 	bl	801fccc <_ZN8touchgfx8Gestures4tickEv>
 800a04e:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 800a052:	b30b      	cbz	r3, 800a098 <_ZN8touchgfx3HAL4tickEv+0x13c>
 800a054:	6920      	ldr	r0, [r4, #16]
 800a056:	6803      	ldr	r3, [r0, #0]
 800a058:	691b      	ldr	r3, [r3, #16]
 800a05a:	4798      	blx	r3
 800a05c:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800a05e:	4606      	mov	r6, r0
 800a060:	b903      	cbnz	r3, 800a064 <_ZN8touchgfx3HAL4tickEv+0x108>
 800a062:	6760      	str	r0, [r4, #116]	@ 0x74
 800a064:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800a066:	4a23      	ldr	r2, [pc, #140]	@ (800a0f4 <_ZN8touchgfx3HAL4tickEv+0x198>)
 800a068:	1af3      	subs	r3, r6, r3
 800a06a:	4293      	cmp	r3, r2
 800a06c:	d914      	bls.n	800a098 <_ZN8touchgfx3HAL4tickEv+0x13c>
 800a06e:	6920      	ldr	r0, [r4, #16]
 800a070:	6803      	ldr	r3, [r0, #0]
 800a072:	699b      	ldr	r3, [r3, #24]
 800a074:	4798      	blx	r3
 800a076:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800a078:	2264      	movs	r2, #100	@ 0x64
 800a07a:	1af3      	subs	r3, r6, r3
 800a07c:	fbb3 f3f2 	udiv	r3, r3, r2
 800a080:	fbb0 f0f3 	udiv	r0, r0, r3
 800a084:	2800      	cmp	r0, #0
 800a086:	dc26      	bgt.n	800a0d6 <_ZN8touchgfx3HAL4tickEv+0x17a>
 800a088:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 800a08c:	6920      	ldr	r0, [r4, #16]
 800a08e:	6803      	ldr	r3, [r0, #0]
 800a090:	2100      	movs	r1, #0
 800a092:	69db      	ldr	r3, [r3, #28]
 800a094:	4798      	blx	r3
 800a096:	6766      	str	r6, [r4, #116]	@ 0x74
 800a098:	6823      	ldr	r3, [r4, #0]
 800a09a:	4620      	mov	r0, r4
 800a09c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800a0a0:	4798      	blx	r3
 800a0a2:	f004 fa0b 	bl	800e4bc <_ZN8touchgfx11Application11getInstanceEv>
 800a0a6:	6803      	ldr	r3, [r0, #0]
 800a0a8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a0aa:	4798      	blx	r3
 800a0ac:	6823      	ldr	r3, [r4, #0]
 800a0ae:	4620      	mov	r0, r4
 800a0b0:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 800a0b4:	4798      	blx	r3
 800a0b6:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
 800a0ba:	2b02      	cmp	r3, #2
 800a0bc:	d002      	beq.n	800a0c4 <_ZN8touchgfx3HAL4tickEv+0x168>
 800a0be:	2001      	movs	r0, #1
 800a0c0:	f7f6 fbf4 	bl	80008ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800a0c4:	2300      	movs	r3, #0
 800a0c6:	702b      	strb	r3, [r5, #0]
 800a0c8:	b004      	add	sp, #16
 800a0ca:	bd70      	pop	{r4, r5, r6, pc}
 800a0cc:	f8d3 30d0 	ldr.w	r3, [r3, #208]	@ 0xd0
 800a0d0:	4620      	mov	r0, r4
 800a0d2:	4798      	blx	r3
 800a0d4:	e7a6      	b.n	800a024 <_ZN8touchgfx3HAL4tickEv+0xc8>
 800a0d6:	2863      	cmp	r0, #99	@ 0x63
 800a0d8:	bfcb      	itete	gt
 800a0da:	2300      	movgt	r3, #0
 800a0dc:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 800a0e0:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 800a0e4:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 800a0e8:	e7d0      	b.n	800a08c <_ZN8touchgfx3HAL4tickEv+0x130>
 800a0ea:	bf00      	nop
 800a0ec:	20013094 	.word	0x20013094
 800a0f0:	20013095 	.word	0x20013095
 800a0f4:	05f5e100 	.word	0x05f5e100

0800a0f8 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800a0f8:	b510      	push	{r4, lr}
 800a0fa:	4604      	mov	r4, r0
 800a0fc:	f7f6 fd54 	bl	8000ba8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800a100:	6863      	ldr	r3, [r4, #4]
 800a102:	2200      	movs	r2, #0
 800a104:	729a      	strb	r2, [r3, #10]
 800a106:	bd10      	pop	{r4, pc}

0800a108 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800a108:	65c1      	str	r1, [r0, #92]	@ 0x5c
 800a10a:	301c      	adds	r0, #28
 800a10c:	f015 bddc 	b.w	801fcc8 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800a110 <_ZN8touchgfx3HAL5touchEll>:
 800a110:	b530      	push	{r4, r5, lr}
 800a112:	b087      	sub	sp, #28
 800a114:	4604      	mov	r4, r0
 800a116:	a804      	add	r0, sp, #16
 800a118:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800a11c:	f003 ffb6 	bl	800e08c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800a120:	9b04      	ldr	r3, [sp, #16]
 800a122:	f8ad 300c 	strh.w	r3, [sp, #12]
 800a126:	a906      	add	r1, sp, #24
 800a128:	9b05      	ldr	r3, [sp, #20]
 800a12a:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800a12e:	a803      	add	r0, sp, #12
 800a130:	f003 fffe 	bl	800e130 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800a134:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 800a138:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800a13c:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800a140:	f104 001c 	add.w	r0, r4, #28
 800a144:	b189      	cbz	r1, 800a16a <_ZN8touchgfx3HAL5touchEll+0x5a>
 800a146:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 800a14a:	9300      	str	r3, [sp, #0]
 800a14c:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 800a150:	4613      	mov	r3, r2
 800a152:	462a      	mov	r2, r5
 800a154:	f015 fdc8 	bl	801fce8 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800a158:	b128      	cbz	r0, 800a166 <_ZN8touchgfx3HAL5touchEll+0x56>
 800a15a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800a15e:	6623      	str	r3, [r4, #96]	@ 0x60
 800a160:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800a164:	6663      	str	r3, [r4, #100]	@ 0x64
 800a166:	b007      	add	sp, #28
 800a168:	bd30      	pop	{r4, r5, pc}
 800a16a:	f015 fdfd 	bl	801fd68 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800a16e:	2301      	movs	r3, #1
 800a170:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800a174:	e7f1      	b.n	800a15a <_ZN8touchgfx3HAL5touchEll+0x4a>

0800a176 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800a176:	b510      	push	{r4, lr}
 800a178:	2b00      	cmp	r3, #0
 800a17a:	d046      	beq.n	800a20a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800a17c:	ea81 0002 	eor.w	r0, r1, r2
 800a180:	07c4      	lsls	r4, r0, #31
 800a182:	d508      	bpl.n	800a196 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800a184:	440b      	add	r3, r1
 800a186:	3a01      	subs	r2, #1
 800a188:	428b      	cmp	r3, r1
 800a18a:	d93e      	bls.n	800a20a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800a18c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800a190:	f801 0b01 	strb.w	r0, [r1], #1
 800a194:	e7f8      	b.n	800a188 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800a196:	07d0      	lsls	r0, r2, #31
 800a198:	bf42      	ittt	mi
 800a19a:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800a19e:	f801 0b01 	strbmi.w	r0, [r1], #1
 800a1a2:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800a1a6:	2b01      	cmp	r3, #1
 800a1a8:	d911      	bls.n	800a1ce <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800a1aa:	ea81 0402 	eor.w	r4, r1, r2
 800a1ae:	07a4      	lsls	r4, r4, #30
 800a1b0:	4610      	mov	r0, r2
 800a1b2:	d022      	beq.n	800a1fa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800a1b4:	f023 0401 	bic.w	r4, r3, #1
 800a1b8:	440c      	add	r4, r1
 800a1ba:	428c      	cmp	r4, r1
 800a1bc:	4602      	mov	r2, r0
 800a1be:	d904      	bls.n	800a1ca <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800a1c0:	8812      	ldrh	r2, [r2, #0]
 800a1c2:	f821 2b02 	strh.w	r2, [r1], #2
 800a1c6:	3002      	adds	r0, #2
 800a1c8:	e7f7      	b.n	800a1ba <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800a1ca:	f003 0301 	and.w	r3, r3, #1
 800a1ce:	f023 0003 	bic.w	r0, r3, #3
 800a1d2:	4408      	add	r0, r1
 800a1d4:	4288      	cmp	r0, r1
 800a1d6:	4614      	mov	r4, r2
 800a1d8:	d904      	bls.n	800a1e4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800a1da:	6824      	ldr	r4, [r4, #0]
 800a1dc:	f841 4b04 	str.w	r4, [r1], #4
 800a1e0:	3204      	adds	r2, #4
 800a1e2:	e7f7      	b.n	800a1d4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800a1e4:	f003 0303 	and.w	r3, r3, #3
 800a1e8:	440b      	add	r3, r1
 800a1ea:	3a01      	subs	r2, #1
 800a1ec:	428b      	cmp	r3, r1
 800a1ee:	d90c      	bls.n	800a20a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800a1f0:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800a1f4:	f801 0b01 	strb.w	r0, [r1], #1
 800a1f8:	e7f8      	b.n	800a1ec <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800a1fa:	0790      	lsls	r0, r2, #30
 800a1fc:	d0e7      	beq.n	800a1ce <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800a1fe:	f832 0b02 	ldrh.w	r0, [r2], #2
 800a202:	f821 0b02 	strh.w	r0, [r1], #2
 800a206:	3b02      	subs	r3, #2
 800a208:	e7e1      	b.n	800a1ce <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800a20a:	2001      	movs	r0, #1
 800a20c:	bd10      	pop	{r4, pc}

0800a20e <_ZN8touchgfx3HAL7noTouchEv>:
 800a20e:	b510      	push	{r4, lr}
 800a210:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 800a214:	4604      	mov	r4, r0
 800a216:	b153      	cbz	r3, 800a22e <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800a218:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 800a21c:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 800a220:	2101      	movs	r1, #1
 800a222:	301c      	adds	r0, #28
 800a224:	f015 fda0 	bl	801fd68 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800a228:	2300      	movs	r3, #0
 800a22a:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800a22e:	bd10      	pop	{r4, pc}

0800a230 <_ZN8touchgfx8Drawable5setXYEss>:
 800a230:	b570      	push	{r4, r5, r6, lr}
 800a232:	6803      	ldr	r3, [r0, #0]
 800a234:	4604      	mov	r4, r0
 800a236:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800a238:	4615      	mov	r5, r2
 800a23a:	4798      	blx	r3
 800a23c:	6823      	ldr	r3, [r4, #0]
 800a23e:	4629      	mov	r1, r5
 800a240:	4620      	mov	r0, r4
 800a242:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800a244:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a248:	4718      	bx	r3
	...

0800a24c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800a24c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a250:	b085      	sub	sp, #20
 800a252:	ad04      	add	r5, sp, #16
 800a254:	4604      	mov	r4, r0
 800a256:	2000      	movs	r0, #0
 800a258:	f845 0d04 	str.w	r0, [r5, #-4]!
 800a25c:	69a0      	ldr	r0, [r4, #24]
 800a25e:	6806      	ldr	r6, [r0, #0]
 800a260:	9501      	str	r5, [sp, #4]
 800a262:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 800a266:	9500      	str	r5, [sp, #0]
 800a268:	6835      	ldr	r5, [r6, #0]
 800a26a:	4699      	mov	r9, r3
 800a26c:	460f      	mov	r7, r1
 800a26e:	4690      	mov	r8, r2
 800a270:	47a8      	blx	r5
 800a272:	4d10      	ldr	r5, [pc, #64]	@ (800a2b4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800a274:	4606      	mov	r6, r0
 800a276:	f8a5 9000 	strh.w	r9, [r5]
 800a27a:	f7f8 fb61 	bl	8002940 <_ZN8touchgfx3HAL3lcdEv>
 800a27e:	6803      	ldr	r3, [r0, #0]
 800a280:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a282:	4798      	blx	r3
 800a284:	b128      	cbz	r0, 800a292 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800a286:	2801      	cmp	r0, #1
 800a288:	d00b      	beq.n	800a2a2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800a28a:	4630      	mov	r0, r6
 800a28c:	b005      	add	sp, #20
 800a28e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a292:	882b      	ldrh	r3, [r5, #0]
 800a294:	fb08 7203 	mla	r2, r8, r3, r7
 800a298:	9b03      	ldr	r3, [sp, #12]
 800a29a:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800a29e:	63e3      	str	r3, [r4, #60]	@ 0x3c
 800a2a0:	e7f3      	b.n	800a28a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800a2a2:	882a      	ldrh	r2, [r5, #0]
 800a2a4:	9b03      	ldr	r3, [sp, #12]
 800a2a6:	fb08 7202 	mla	r2, r8, r2, r7
 800a2aa:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800a2ae:	1a9a      	subs	r2, r3, r2
 800a2b0:	63e2      	str	r2, [r4, #60]	@ 0x3c
 800a2b2:	e7ea      	b.n	800a28a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800a2b4:	20013088 	.word	0x20013088

0800a2b8 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs>:
 800a2b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a2ba:	4b15      	ldr	r3, [pc, #84]	@ (800a310 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x58>)
 800a2bc:	f890 407d 	ldrb.w	r4, [r0, #125]	@ 0x7d
 800a2c0:	881b      	ldrh	r3, [r3, #0]
 800a2c2:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
 800a2c4:	fb93 f4f4 	sdiv	r4, r3, r4
 800a2c8:	460f      	mov	r7, r1
 800a2ca:	4606      	mov	r6, r0
 800a2cc:	f7f8 fb38 	bl	8002940 <_ZN8touchgfx3HAL3lcdEv>
 800a2d0:	6803      	ldr	r3, [r0, #0]
 800a2d2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a2d4:	4798      	blx	r3
 800a2d6:	2801      	cmp	r0, #1
 800a2d8:	d00b      	beq.n	800a2f2 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x3a>
 800a2da:	d303      	bcc.n	800a2e4 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x2c>
 800a2dc:	2802      	cmp	r0, #2
 800a2de:	d010      	beq.n	800a302 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x4a>
 800a2e0:	63f5      	str	r5, [r6, #60]	@ 0x3c
 800a2e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a2e4:	4b0b      	ldr	r3, [pc, #44]	@ (800a314 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 800a2e6:	8819      	ldrh	r1, [r3, #0]
 800a2e8:	437c      	muls	r4, r7
 800a2ea:	434c      	muls	r4, r1
 800a2ec:	eba5 0544 	sub.w	r5, r5, r4, lsl #1
 800a2f0:	e7f6      	b.n	800a2e0 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 800a2f2:	4b08      	ldr	r3, [pc, #32]	@ (800a314 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 800a2f4:	8819      	ldrh	r1, [r3, #0]
 800a2f6:	437c      	muls	r4, r7
 800a2f8:	434c      	muls	r4, r1
 800a2fa:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 800a2fe:	1b2d      	subs	r5, r5, r4
 800a300:	e7ee      	b.n	800a2e0 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 800a302:	4b04      	ldr	r3, [pc, #16]	@ (800a314 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
 800a304:	8819      	ldrh	r1, [r3, #0]
 800a306:	437c      	muls	r4, r7
 800a308:	434c      	muls	r4, r1
 800a30a:	eba5 0584 	sub.w	r5, r5, r4, lsl #2
 800a30e:	e7e7      	b.n	800a2e0 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
 800a310:	2001308a 	.word	0x2001308a
 800a314:	20013088 	.word	0x20013088

0800a318 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800a318:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a31a:	b08b      	sub	sp, #44	@ 0x2c
 800a31c:	4617      	mov	r7, r2
 800a31e:	4604      	mov	r4, r0
 800a320:	460e      	mov	r6, r1
 800a322:	461d      	mov	r5, r3
 800a324:	f7f8 fb0c 	bl	8002940 <_ZN8touchgfx3HAL3lcdEv>
 800a328:	6803      	ldr	r3, [r0, #0]
 800a32a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a32c:	4798      	blx	r3
 800a32e:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800a332:	9007      	str	r0, [sp, #28]
 800a334:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800a338:	4b0d      	ldr	r3, [pc, #52]	@ (800a370 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800a33a:	6822      	ldr	r2, [r4, #0]
 800a33c:	881b      	ldrh	r3, [r3, #0]
 800a33e:	9306      	str	r3, [sp, #24]
 800a340:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800a344:	9305      	str	r3, [sp, #20]
 800a346:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 800a34a:	9304      	str	r3, [sp, #16]
 800a34c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800a350:	9303      	str	r3, [sp, #12]
 800a352:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800a356:	9302      	str	r3, [sp, #8]
 800a358:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800a35c:	e9cd 5300 	strd	r5, r3, [sp]
 800a360:	4631      	mov	r1, r6
 800a362:	6c15      	ldr	r5, [r2, #64]	@ 0x40
 800a364:	463b      	mov	r3, r7
 800a366:	2200      	movs	r2, #0
 800a368:	4620      	mov	r0, r4
 800a36a:	47a8      	blx	r5
 800a36c:	b00b      	add	sp, #44	@ 0x2c
 800a36e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a370:	20013088 	.word	0x20013088

0800a374 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800a374:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a378:	4698      	mov	r8, r3
 800a37a:	6803      	ldr	r3, [r0, #0]
 800a37c:	6c1d      	ldr	r5, [r3, #64]	@ 0x40
 800a37e:	4b15      	ldr	r3, [pc, #84]	@ (800a3d4 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800a380:	b08b      	sub	sp, #44	@ 0x2c
 800a382:	4617      	mov	r7, r2
 800a384:	f8b3 9000 	ldrh.w	r9, [r3]
 800a388:	460e      	mov	r6, r1
 800a38a:	4604      	mov	r4, r0
 800a38c:	f7f8 fad8 	bl	8002940 <_ZN8touchgfx3HAL3lcdEv>
 800a390:	6803      	ldr	r3, [r0, #0]
 800a392:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a394:	4798      	blx	r3
 800a396:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800a39a:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800a39e:	2302      	movs	r3, #2
 800a3a0:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800a3a4:	2301      	movs	r3, #1
 800a3a6:	9305      	str	r3, [sp, #20]
 800a3a8:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800a3ac:	9304      	str	r3, [sp, #16]
 800a3ae:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800a3b2:	9303      	str	r3, [sp, #12]
 800a3b4:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800a3b8:	9302      	str	r3, [sp, #8]
 800a3ba:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800a3be:	2200      	movs	r2, #0
 800a3c0:	e9cd 8300 	strd	r8, r3, [sp]
 800a3c4:	4631      	mov	r1, r6
 800a3c6:	463b      	mov	r3, r7
 800a3c8:	4620      	mov	r0, r4
 800a3ca:	47a8      	blx	r5
 800a3cc:	b00b      	add	sp, #44	@ 0x2c
 800a3ce:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a3d2:	bf00      	nop
 800a3d4:	20013088 	.word	0x20013088

0800a3d8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800a3d8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a3dc:	4698      	mov	r8, r3
 800a3de:	6803      	ldr	r3, [r0, #0]
 800a3e0:	6ddd      	ldr	r5, [r3, #92]	@ 0x5c
 800a3e2:	4b11      	ldr	r3, [pc, #68]	@ (800a428 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800a3e4:	b087      	sub	sp, #28
 800a3e6:	f8b3 9000 	ldrh.w	r9, [r3]
 800a3ea:	460e      	mov	r6, r1
 800a3ec:	4617      	mov	r7, r2
 800a3ee:	4604      	mov	r4, r0
 800a3f0:	f7f8 faa6 	bl	8002940 <_ZN8touchgfx3HAL3lcdEv>
 800a3f4:	6803      	ldr	r3, [r0, #0]
 800a3f6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a3f8:	4798      	blx	r3
 800a3fa:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 800a3fe:	f8cd 900c 	str.w	r9, [sp, #12]
 800a402:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800a406:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 800a40a:	9302      	str	r3, [sp, #8]
 800a40c:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 800a410:	9301      	str	r3, [sp, #4]
 800a412:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800a416:	9300      	str	r3, [sp, #0]
 800a418:	463a      	mov	r2, r7
 800a41a:	4643      	mov	r3, r8
 800a41c:	4631      	mov	r1, r6
 800a41e:	4620      	mov	r0, r4
 800a420:	47a8      	blx	r5
 800a422:	b007      	add	sp, #28
 800a424:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a428:	20013088 	.word	0x20013088

0800a42c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800a42c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a430:	4604      	mov	r4, r0
 800a432:	b08f      	sub	sp, #60	@ 0x3c
 800a434:	4610      	mov	r0, r2
 800a436:	460d      	mov	r5, r1
 800a438:	4691      	mov	r9, r2
 800a43a:	461e      	mov	r6, r3
 800a43c:	f007 f934 	bl	80116a8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800a440:	2800      	cmp	r0, #0
 800a442:	f000 809d 	beq.w	800a580 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800a446:	6823      	ldr	r3, [r4, #0]
 800a448:	f8df b198 	ldr.w	fp, [pc, #408]	@ 800a5e4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800a44c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a44e:	f8df a198 	ldr.w	sl, [pc, #408]	@ 800a5e8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800a452:	4f61      	ldr	r7, [pc, #388]	@ (800a5d8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800a454:	4620      	mov	r0, r4
 800a456:	4798      	blx	r3
 800a458:	6823      	ldr	r3, [r4, #0]
 800a45a:	4620      	mov	r0, r4
 800a45c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800a45e:	4798      	blx	r3
 800a460:	f8bb 3000 	ldrh.w	r3, [fp]
 800a464:	9301      	str	r3, [sp, #4]
 800a466:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 800a46a:	f8ba 3000 	ldrh.w	r3, [sl]
 800a46e:	9302      	str	r3, [sp, #8]
 800a470:	883b      	ldrh	r3, [r7, #0]
 800a472:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800a476:	9303      	str	r3, [sp, #12]
 800a478:	4b58      	ldr	r3, [pc, #352]	@ (800a5dc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800a47a:	9305      	str	r3, [sp, #20]
 800a47c:	881a      	ldrh	r2, [r3, #0]
 800a47e:	9204      	str	r2, [sp, #16]
 800a480:	4640      	mov	r0, r8
 800a482:	f007 f9a5 	bl	80117d0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800a486:	8038      	strh	r0, [r7, #0]
 800a488:	4640      	mov	r0, r8
 800a48a:	f007 f9d5 	bl	8011838 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800a48e:	9b05      	ldr	r3, [sp, #20]
 800a490:	b280      	uxth	r0, r0
 800a492:	8018      	strh	r0, [r3, #0]
 800a494:	4b52      	ldr	r3, [pc, #328]	@ (800a5e0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800a496:	781b      	ldrb	r3, [r3, #0]
 800a498:	2b00      	cmp	r3, #0
 800a49a:	d174      	bne.n	800a586 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800a49c:	883b      	ldrh	r3, [r7, #0]
 800a49e:	f8ab 3000 	strh.w	r3, [fp]
 800a4a2:	f8aa 0000 	strh.w	r0, [sl]
 800a4a6:	4648      	mov	r0, r9
 800a4a8:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 800a4ac:	f007 f8fc 	bl	80116a8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800a4b0:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 800a4b4:	2200      	movs	r2, #0
 800a4b6:	4611      	mov	r1, r2
 800a4b8:	4628      	mov	r0, r5
 800a4ba:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800a4be:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800a4c2:	f7ff feb5 	bl	800a230 <_ZN8touchgfx8Drawable5setXYEss>
 800a4c6:	2301      	movs	r3, #1
 800a4c8:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 800a4cc:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 800a4d0:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800a4d4:	2b00      	cmp	r3, #0
 800a4d6:	dd5c      	ble.n	800a592 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800a4d8:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800a4dc:	2b00      	cmp	r3, #0
 800a4de:	dd58      	ble.n	800a592 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800a4e0:	462a      	mov	r2, r5
 800a4e2:	ab0a      	add	r3, sp, #40	@ 0x28
 800a4e4:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800a4e8:	6851      	ldr	r1, [r2, #4]
 800a4ea:	c303      	stmia	r3!, {r0, r1}
 800a4ec:	4631      	mov	r1, r6
 800a4ee:	a80a      	add	r0, sp, #40	@ 0x28
 800a4f0:	f7ff fbba 	bl	8009c68 <_ZN8touchgfx4RectaNERKS0_>
 800a4f4:	4b38      	ldr	r3, [pc, #224]	@ (800a5d8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800a4f6:	f9b3 2000 	ldrsh.w	r2, [r3]
 800a4fa:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800a4fe:	2100      	movs	r1, #0
 800a500:	aa0a      	add	r2, sp, #40	@ 0x28
 800a502:	4b36      	ldr	r3, [pc, #216]	@ (800a5dc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800a504:	910c      	str	r1, [sp, #48]	@ 0x30
 800a506:	e892 0003 	ldmia.w	r2, {r0, r1}
 800a50a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800a50e:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800a512:	ab08      	add	r3, sp, #32
 800a514:	e883 0003 	stmia.w	r3, {r0, r1}
 800a518:	4618      	mov	r0, r3
 800a51a:	a90c      	add	r1, sp, #48	@ 0x30
 800a51c:	f7ff fba4 	bl	8009c68 <_ZN8touchgfx4RectaNERKS0_>
 800a520:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800a522:	2b00      	cmp	r3, #0
 800a524:	d13c      	bne.n	800a5a0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800a526:	2000      	movs	r0, #0
 800a528:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 800a52c:	2600      	movs	r6, #0
 800a52e:	682a      	ldr	r2, [r5, #0]
 800a530:	696b      	ldr	r3, [r5, #20]
 800a532:	616e      	str	r6, [r5, #20]
 800a534:	9305      	str	r3, [sp, #20]
 800a536:	6892      	ldr	r2, [r2, #8]
 800a538:	a908      	add	r1, sp, #32
 800a53a:	4628      	mov	r0, r5
 800a53c:	4790      	blx	r2
 800a53e:	9b05      	ldr	r3, [sp, #20]
 800a540:	616b      	str	r3, [r5, #20]
 800a542:	4652      	mov	r2, sl
 800a544:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 800a548:	4649      	mov	r1, r9
 800a54a:	4628      	mov	r0, r5
 800a54c:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 800a550:	f7ff fe6e 	bl	800a230 <_ZN8touchgfx8Drawable5setXYEss>
 800a554:	4b23      	ldr	r3, [pc, #140]	@ (800a5e4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800a556:	9a01      	ldr	r2, [sp, #4]
 800a558:	801a      	strh	r2, [r3, #0]
 800a55a:	4b23      	ldr	r3, [pc, #140]	@ (800a5e8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800a55c:	9a02      	ldr	r2, [sp, #8]
 800a55e:	801a      	strh	r2, [r3, #0]
 800a560:	4b1d      	ldr	r3, [pc, #116]	@ (800a5d8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800a562:	9a03      	ldr	r2, [sp, #12]
 800a564:	801a      	strh	r2, [r3, #0]
 800a566:	4b1d      	ldr	r3, [pc, #116]	@ (800a5dc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800a568:	9a04      	ldr	r2, [sp, #16]
 800a56a:	801a      	strh	r2, [r3, #0]
 800a56c:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 800a570:	6823      	ldr	r3, [r4, #0]
 800a572:	4620      	mov	r0, r4
 800a574:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a576:	4798      	blx	r3
 800a578:	6823      	ldr	r3, [r4, #0]
 800a57a:	4620      	mov	r0, r4
 800a57c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800a57e:	4798      	blx	r3
 800a580:	b00f      	add	sp, #60	@ 0x3c
 800a582:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a586:	883b      	ldrh	r3, [r7, #0]
 800a588:	f8ab 0000 	strh.w	r0, [fp]
 800a58c:	f8aa 3000 	strh.w	r3, [sl]
 800a590:	e789      	b.n	800a4a6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800a592:	462a      	mov	r2, r5
 800a594:	ab0a      	add	r3, sp, #40	@ 0x28
 800a596:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800a59a:	6851      	ldr	r1, [r2, #4]
 800a59c:	c303      	stmia	r3!, {r0, r1}
 800a59e:	e7a9      	b.n	800a4f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800a5a0:	a807      	add	r0, sp, #28
 800a5a2:	f007 fa8b 	bl	8011abc <_ZNK8touchgfx6Bitmap9getFormatEv>
 800a5a6:	4606      	mov	r6, r0
 800a5a8:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 800a5aa:	6803      	ldr	r3, [r0, #0]
 800a5ac:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a5ae:	4798      	blx	r3
 800a5b0:	4286      	cmp	r6, r0
 800a5b2:	d1b8      	bne.n	800a526 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800a5b4:	f7f8 f9c4 	bl	8002940 <_ZN8touchgfx3HAL3lcdEv>
 800a5b8:	6803      	ldr	r3, [r0, #0]
 800a5ba:	4606      	mov	r6, r0
 800a5bc:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800a5be:	9305      	str	r3, [sp, #20]
 800a5c0:	a807      	add	r0, sp, #28
 800a5c2:	f007 fa7b 	bl	8011abc <_ZNK8touchgfx6Bitmap9getFormatEv>
 800a5c6:	9b05      	ldr	r3, [sp, #20]
 800a5c8:	4601      	mov	r1, r0
 800a5ca:	4630      	mov	r0, r6
 800a5cc:	4798      	blx	r3
 800a5ce:	f080 0001 	eor.w	r0, r0, #1
 800a5d2:	b2c0      	uxtb	r0, r0
 800a5d4:	e7a8      	b.n	800a528 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800a5d6:	bf00      	nop
 800a5d8:	20013082 	.word	0x20013082
 800a5dc:	20013084 	.word	0x20013084
 800a5e0:	20013086 	.word	0x20013086
 800a5e4:	20013088 	.word	0x20013088
 800a5e8:	2001308a 	.word	0x2001308a

0800a5ec <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800a5ec:	b510      	push	{r4, lr}
 800a5ee:	4b07      	ldr	r3, [pc, #28]	@ (800a60c <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800a5f0:	781b      	ldrb	r3, [r3, #0]
 800a5f2:	4604      	mov	r4, r0
 800a5f4:	b13b      	cbz	r3, 800a606 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800a5f6:	6803      	ldr	r3, [r0, #0]
 800a5f8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800a5fa:	4798      	blx	r3
 800a5fc:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800a5fe:	4283      	cmp	r3, r0
 800a600:	d101      	bne.n	800a606 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800a602:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 800a604:	bd10      	pop	{r4, pc}
 800a606:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 800a608:	e7fc      	b.n	800a604 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800a60a:	bf00      	nop
 800a60c:	2001308c 	.word	0x2001308c

0800a610 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800a610:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a614:	b08a      	sub	sp, #40	@ 0x28
 800a616:	461d      	mov	r5, r3
 800a618:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800a61c:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800a620:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800a624:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a628:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800a62c:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a630:	2400      	movs	r4, #0
 800a632:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800a636:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 800a63a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a63e:	4690      	mov	r8, r2
 800a640:	4607      	mov	r7, r0
 800a642:	9404      	str	r4, [sp, #16]
 800a644:	f88d 4020 	strb.w	r4, [sp, #32]
 800a648:	f7ff ffd0 	bl	800a5ec <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a64c:	fb06 8505 	mla	r5, r6, r5, r8
 800a650:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800a654:	6878      	ldr	r0, [r7, #4]
 800a656:	9505      	str	r5, [sp, #20]
 800a658:	f8ad 601e 	strh.w	r6, [sp, #30]
 800a65c:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800a660:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 800a664:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800a668:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800a66c:	6803      	ldr	r3, [r0, #0]
 800a66e:	a901      	add	r1, sp, #4
 800a670:	685b      	ldr	r3, [r3, #4]
 800a672:	4798      	blx	r3
 800a674:	b00a      	add	sp, #40	@ 0x28
 800a676:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a67a <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800a67a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a67e:	b08b      	sub	sp, #44	@ 0x2c
 800a680:	2400      	movs	r4, #0
 800a682:	461d      	mov	r5, r3
 800a684:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800a688:	4688      	mov	r8, r1
 800a68a:	4691      	mov	r9, r2
 800a68c:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 800a690:	9404      	str	r4, [sp, #16]
 800a692:	4607      	mov	r7, r0
 800a694:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800a698:	f7ff ffa8 	bl	800a5ec <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a69c:	fb06 9505 	mla	r5, r6, r5, r9
 800a6a0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800a6a4:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a6a8:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800a6ac:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800a6b0:	6878      	ldr	r0, [r7, #4]
 800a6b2:	9505      	str	r5, [sp, #20]
 800a6b4:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a6b8:	f8ad 401c 	strh.w	r4, [sp, #28]
 800a6bc:	f8ad 601e 	strh.w	r6, [sp, #30]
 800a6c0:	f8cd 8010 	str.w	r8, [sp, #16]
 800a6c4:	f8ad 4020 	strh.w	r4, [sp, #32]
 800a6c8:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800a6cc:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800a6d0:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800a6d4:	6803      	ldr	r3, [r0, #0]
 800a6d6:	a901      	add	r1, sp, #4
 800a6d8:	685b      	ldr	r3, [r3, #4]
 800a6da:	4798      	blx	r3
 800a6dc:	b00b      	add	sp, #44	@ 0x2c
 800a6de:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800a6e4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800a6e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a6e8:	b08a      	sub	sp, #40	@ 0x28
 800a6ea:	4698      	mov	r8, r3
 800a6ec:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 800a6f0:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 800a6f4:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 800a6f8:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 800a6fc:	2300      	movs	r3, #0
 800a6fe:	2d0b      	cmp	r5, #11
 800a700:	4606      	mov	r6, r0
 800a702:	9304      	str	r3, [sp, #16]
 800a704:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 800a708:	d138      	bne.n	800a77c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800a70a:	2380      	movs	r3, #128	@ 0x80
 800a70c:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800a710:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800a714:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a718:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800a71c:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a720:	f88d 0020 	strb.w	r0, [sp, #32]
 800a724:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800a728:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a72c:	4630      	mov	r0, r6
 800a72e:	9203      	str	r2, [sp, #12]
 800a730:	f7ff ff5c 	bl	800a5ec <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a734:	2c0b      	cmp	r4, #11
 800a736:	bf98      	it	ls
 800a738:	4b1b      	ldrls	r3, [pc, #108]	@ (800a7a8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800a73a:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 800a73e:	bf98      	it	ls
 800a740:	5d19      	ldrbls	r1, [r3, r4]
 800a742:	f8ad 701e 	strh.w	r7, [sp, #30]
 800a746:	bf88      	it	hi
 800a748:	2100      	movhi	r1, #0
 800a74a:	fb02 8307 	mla	r3, r2, r7, r8
 800a74e:	10c9      	asrs	r1, r1, #3
 800a750:	fb01 0003 	mla	r0, r1, r3, r0
 800a754:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 800a758:	9005      	str	r0, [sp, #20]
 800a75a:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800a75e:	6870      	ldr	r0, [r6, #4]
 800a760:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 800a764:	2300      	movs	r3, #0
 800a766:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800a76a:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800a76e:	6803      	ldr	r3, [r0, #0]
 800a770:	a901      	add	r1, sp, #4
 800a772:	685b      	ldr	r3, [r3, #4]
 800a774:	4798      	blx	r3
 800a776:	b00a      	add	sp, #40	@ 0x28
 800a778:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a77c:	2d02      	cmp	r5, #2
 800a77e:	d109      	bne.n	800a794 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800a780:	28ff      	cmp	r0, #255	@ 0xff
 800a782:	d105      	bne.n	800a790 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800a784:	f1bc 0f00 	cmp.w	ip, #0
 800a788:	bf14      	ite	ne
 800a78a:	2340      	movne	r3, #64	@ 0x40
 800a78c:	2320      	moveq	r3, #32
 800a78e:	e7bd      	b.n	800a70c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800a790:	2340      	movs	r3, #64	@ 0x40
 800a792:	e7bb      	b.n	800a70c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800a794:	28ff      	cmp	r0, #255	@ 0xff
 800a796:	d105      	bne.n	800a7a4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800a798:	f1bc 0f00 	cmp.w	ip, #0
 800a79c:	bf14      	ite	ne
 800a79e:	2304      	movne	r3, #4
 800a7a0:	2301      	moveq	r3, #1
 800a7a2:	e7b3      	b.n	800a70c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800a7a4:	2304      	movs	r3, #4
 800a7a6:	e7b1      	b.n	800a70c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800a7a8:	0802387c 	.word	0x0802387c

0800a7ac <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800a7ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a7b0:	b08b      	sub	sp, #44	@ 0x2c
 800a7b2:	461d      	mov	r5, r3
 800a7b4:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 800a7b8:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800a7bc:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 800a7c0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 800a7c4:	bf14      	ite	ne
 800a7c6:	2308      	movne	r3, #8
 800a7c8:	2302      	moveq	r3, #2
 800a7ca:	2400      	movs	r4, #0
 800a7cc:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800a7d0:	4688      	mov	r8, r1
 800a7d2:	4693      	mov	fp, r2
 800a7d4:	9404      	str	r4, [sp, #16]
 800a7d6:	4607      	mov	r7, r0
 800a7d8:	f7ff ff08 	bl	800a5ec <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a7dc:	2e0b      	cmp	r6, #11
 800a7de:	bf98      	it	ls
 800a7e0:	4b15      	ldrls	r3, [pc, #84]	@ (800a838 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800a7e2:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 800a7e6:	bf98      	it	ls
 800a7e8:	5d9c      	ldrbls	r4, [r3, r6]
 800a7ea:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800a7ee:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a7f2:	fb05 b50a 	mla	r5, r5, sl, fp
 800a7f6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800a7fa:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a7fe:	10e4      	asrs	r4, r4, #3
 800a800:	fb04 0405 	mla	r4, r4, r5, r0
 800a804:	2300      	movs	r3, #0
 800a806:	6878      	ldr	r0, [r7, #4]
 800a808:	9405      	str	r4, [sp, #20]
 800a80a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a80e:	f8ad a01e 	strh.w	sl, [sp, #30]
 800a812:	f8cd 8010 	str.w	r8, [sp, #16]
 800a816:	f88d 9020 	strb.w	r9, [sp, #32]
 800a81a:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 800a81e:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800a822:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 800a826:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 800a82a:	6803      	ldr	r3, [r0, #0]
 800a82c:	a901      	add	r1, sp, #4
 800a82e:	685b      	ldr	r3, [r3, #4]
 800a830:	4798      	blx	r3
 800a832:	b00b      	add	sp, #44	@ 0x2c
 800a834:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a838:	0802387c 	.word	0x0802387c

0800a83c <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800a83c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a840:	461e      	mov	r6, r3
 800a842:	4b0a      	ldr	r3, [pc, #40]	@ (800a86c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800a844:	460f      	mov	r7, r1
 800a846:	881d      	ldrh	r5, [r3, #0]
 800a848:	4690      	mov	r8, r2
 800a84a:	f7f8 f879 	bl	8002940 <_ZN8touchgfx3HAL3lcdEv>
 800a84e:	6803      	ldr	r3, [r0, #0]
 800a850:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a852:	4798      	blx	r3
 800a854:	280b      	cmp	r0, #11
 800a856:	bf9a      	itte	ls
 800a858:	4b05      	ldrls	r3, [pc, #20]	@ (800a870 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800a85a:	5c1c      	ldrbls	r4, [r3, r0]
 800a85c:	2400      	movhi	r4, #0
 800a85e:	fb08 7005 	mla	r0, r8, r5, r7
 800a862:	10e4      	asrs	r4, r4, #3
 800a864:	fb04 6000 	mla	r0, r4, r0, r6
 800a868:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a86c:	20013088 	.word	0x20013088
 800a870:	0802387c 	.word	0x0802387c

0800a874 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800a874:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a876:	b08b      	sub	sp, #44	@ 0x2c
 800a878:	461f      	mov	r7, r3
 800a87a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800a87e:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800a882:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800a886:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a88a:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800a88e:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a892:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800a896:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a89a:	2500      	movs	r5, #0
 800a89c:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800a8a0:	f88d 3020 	strb.w	r3, [sp, #32]
 800a8a4:	4604      	mov	r4, r0
 800a8a6:	4616      	mov	r6, r2
 800a8a8:	9504      	str	r5, [sp, #16]
 800a8aa:	f7ff fe9f 	bl	800a5ec <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a8ae:	463a      	mov	r2, r7
 800a8b0:	4631      	mov	r1, r6
 800a8b2:	4603      	mov	r3, r0
 800a8b4:	4620      	mov	r0, r4
 800a8b6:	f7ff ffc1 	bl	800a83c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a8ba:	4b0e      	ldr	r3, [pc, #56]	@ (800a8f4 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800a8bc:	9005      	str	r0, [sp, #20]
 800a8be:	881b      	ldrh	r3, [r3, #0]
 800a8c0:	f8ad 301e 	strh.w	r3, [sp, #30]
 800a8c4:	f7f8 f83c 	bl	8002940 <_ZN8touchgfx3HAL3lcdEv>
 800a8c8:	6803      	ldr	r3, [r0, #0]
 800a8ca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a8cc:	4798      	blx	r3
 800a8ce:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800a8d0:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 800a8d4:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800a8d8:	9304      	str	r3, [sp, #16]
 800a8da:	6860      	ldr	r0, [r4, #4]
 800a8dc:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800a8e0:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800a8e4:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 800a8e8:	6803      	ldr	r3, [r0, #0]
 800a8ea:	a901      	add	r1, sp, #4
 800a8ec:	685b      	ldr	r3, [r3, #4]
 800a8ee:	4798      	blx	r3
 800a8f0:	b00b      	add	sp, #44	@ 0x2c
 800a8f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a8f4:	20013088 	.word	0x20013088

0800a8f8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800a8f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a8fa:	b08d      	sub	sp, #52	@ 0x34
 800a8fc:	466b      	mov	r3, sp
 800a8fe:	e883 0006 	stmia.w	r3, {r1, r2}
 800a902:	2300      	movs	r3, #0
 800a904:	9306      	str	r3, [sp, #24]
 800a906:	6803      	ldr	r3, [r0, #0]
 800a908:	f8bd 6000 	ldrh.w	r6, [sp]
 800a90c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800a90e:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800a912:	2501      	movs	r5, #1
 800a914:	9503      	str	r5, [sp, #12]
 800a916:	4604      	mov	r4, r0
 800a918:	4798      	blx	r3
 800a91a:	463a      	mov	r2, r7
 800a91c:	4631      	mov	r1, r6
 800a91e:	4603      	mov	r3, r0
 800a920:	4620      	mov	r0, r4
 800a922:	f7ff ff8b 	bl	800a83c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a926:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800a928:	9307      	str	r3, [sp, #28]
 800a92a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800a92e:	f8ad 3020 	strh.w	r3, [sp, #32]
 800a932:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a936:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800a93a:	4b0f      	ldr	r3, [pc, #60]	@ (800a978 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800a93c:	9004      	str	r0, [sp, #16]
 800a93e:	881b      	ldrh	r3, [r3, #0]
 800a940:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800a944:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800a948:	f7f7 fffa 	bl	8002940 <_ZN8touchgfx3HAL3lcdEv>
 800a94c:	6803      	ldr	r3, [r0, #0]
 800a94e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a950:	4798      	blx	r3
 800a952:	23ff      	movs	r3, #255	@ 0xff
 800a954:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800a958:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800a95c:	6860      	ldr	r0, [r4, #4]
 800a95e:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800a962:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800a966:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800a96a:	6803      	ldr	r3, [r0, #0]
 800a96c:	a903      	add	r1, sp, #12
 800a96e:	685b      	ldr	r3, [r3, #4]
 800a970:	4798      	blx	r3
 800a972:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 800a974:	b00d      	add	sp, #52	@ 0x34
 800a976:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a978:	20013088 	.word	0x20013088

0800a97c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800a97c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a980:	b08c      	sub	sp, #48	@ 0x30
 800a982:	461e      	mov	r6, r3
 800a984:	466d      	mov	r5, sp
 800a986:	2300      	movs	r3, #0
 800a988:	e885 0006 	stmia.w	r5, {r1, r2}
 800a98c:	9306      	str	r3, [sp, #24]
 800a98e:	6803      	ldr	r3, [r0, #0]
 800a990:	f8bd 7000 	ldrh.w	r7, [sp]
 800a994:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800a996:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800a99a:	2501      	movs	r5, #1
 800a99c:	9503      	str	r5, [sp, #12]
 800a99e:	4604      	mov	r4, r0
 800a9a0:	4798      	blx	r3
 800a9a2:	4642      	mov	r2, r8
 800a9a4:	4639      	mov	r1, r7
 800a9a6:	4603      	mov	r3, r0
 800a9a8:	4620      	mov	r0, r4
 800a9aa:	f7ff ff47 	bl	800a83c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a9ae:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800a9b2:	f8ad 3020 	strh.w	r3, [sp, #32]
 800a9b6:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a9ba:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800a9be:	4b11      	ldr	r3, [pc, #68]	@ (800aa04 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800a9c0:	9004      	str	r0, [sp, #16]
 800a9c2:	881b      	ldrh	r3, [r3, #0]
 800a9c4:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800a9c8:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800a9ca:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800a9ce:	9607      	str	r6, [sp, #28]
 800a9d0:	f7f7 ffb6 	bl	8002940 <_ZN8touchgfx3HAL3lcdEv>
 800a9d4:	6803      	ldr	r3, [r0, #0]
 800a9d6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a9d8:	4798      	blx	r3
 800a9da:	23ff      	movs	r3, #255	@ 0xff
 800a9dc:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800a9e0:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800a9e4:	6860      	ldr	r0, [r4, #4]
 800a9e6:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800a9ea:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800a9ee:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800a9f2:	6803      	ldr	r3, [r0, #0]
 800a9f4:	a903      	add	r1, sp, #12
 800a9f6:	685b      	ldr	r3, [r3, #4]
 800a9f8:	4798      	blx	r3
 800a9fa:	4630      	mov	r0, r6
 800a9fc:	b00c      	add	sp, #48	@ 0x30
 800a9fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800aa02:	bf00      	nop
 800aa04:	20013088 	.word	0x20013088

0800aa08 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800aa08:	b5f0      	push	{r4, r5, r6, r7, lr}
 800aa0a:	b085      	sub	sp, #20
 800aa0c:	ac02      	add	r4, sp, #8
 800aa0e:	e884 0006 	stmia.w	r4, {r1, r2}
 800aa12:	4605      	mov	r5, r0
 800aa14:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800aa18:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800aa1c:	f7ff fde6 	bl	800a5ec <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800aa20:	463a      	mov	r2, r7
 800aa22:	4603      	mov	r3, r0
 800aa24:	4631      	mov	r1, r6
 800aa26:	4628      	mov	r0, r5
 800aa28:	f7ff ff08 	bl	800a83c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800aa2c:	4a05      	ldr	r2, [pc, #20]	@ (800aa44 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800aa2e:	682b      	ldr	r3, [r5, #0]
 800aa30:	8812      	ldrh	r2, [r2, #0]
 800aa32:	9200      	str	r2, [sp, #0]
 800aa34:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
 800aa36:	e894 0006 	ldmia.w	r4, {r1, r2}
 800aa3a:	4603      	mov	r3, r0
 800aa3c:	4628      	mov	r0, r5
 800aa3e:	47b0      	blx	r6
 800aa40:	b005      	add	sp, #20
 800aa42:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800aa44:	20013088 	.word	0x20013088

0800aa48 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800aa48:	b570      	push	{r4, r5, r6, lr}
 800aa4a:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 800aa4e:	4604      	mov	r4, r0
 800aa50:	b19b      	cbz	r3, 800aa7a <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800aa52:	2002      	movs	r0, #2
 800aa54:	f7f5 ff54 	bl	8000900 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800aa58:	2300      	movs	r3, #0
 800aa5a:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800aa5e:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 800aa62:	6823      	ldr	r3, [r4, #0]
 800aa64:	4620      	mov	r0, r4
 800aa66:	f8d3 50c8 	ldr.w	r5, [r3, #200]	@ 0xc8
 800aa6a:	f7ff fdbf 	bl	800a5ec <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800aa6e:	462b      	mov	r3, r5
 800aa70:	4601      	mov	r1, r0
 800aa72:	4620      	mov	r0, r4
 800aa74:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800aa78:	4718      	bx	r3
 800aa7a:	bd70      	pop	{r4, r5, r6, pc}

0800aa7c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800aa7c:	b538      	push	{r3, r4, r5, lr}
 800aa7e:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 800aa82:	428b      	cmp	r3, r1
 800aa84:	4604      	mov	r4, r0
 800aa86:	460d      	mov	r5, r1
 800aa88:	d006      	beq.n	800aa98 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800aa8a:	6803      	ldr	r3, [r0, #0]
 800aa8c:	b929      	cbnz	r1, 800aa9a <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800aa8e:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 800aa92:	4798      	blx	r3
 800aa94:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 800aa98:	bd38      	pop	{r3, r4, r5, pc}
 800aa9a:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
 800aa9e:	e7f8      	b.n	800aa92 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800aaa0 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800aaa0:	b510      	push	{r4, lr}
 800aaa2:	4b0c      	ldr	r3, [pc, #48]	@ (800aad4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x34>)
 800aaa4:	781b      	ldrb	r3, [r3, #0]
 800aaa6:	4604      	mov	r4, r0
 800aaa8:	b953      	cbnz	r3, 800aac0 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 800aaaa:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 800aaae:	b93b      	cbnz	r3, 800aac0 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 800aab0:	6840      	ldr	r0, [r0, #4]
 800aab2:	f000 f92b 	bl	800ad0c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800aab6:	b118      	cbz	r0, 800aac0 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
 800aab8:	6862      	ldr	r2, [r4, #4]
 800aaba:	7a53      	ldrb	r3, [r2, #9]
 800aabc:	2b00      	cmp	r3, #0
 800aabe:	d0fc      	beq.n	800aaba <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1a>
 800aac0:	f7f6 f86a 	bl	8000b98 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800aac4:	4620      	mov	r0, r4
 800aac6:	2100      	movs	r1, #0
 800aac8:	f7ff ffd8 	bl	800aa7c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800aacc:	4620      	mov	r0, r4
 800aace:	f7ff fd8d 	bl	800a5ec <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800aad2:	bd10      	pop	{r4, pc}
 800aad4:	2001308c 	.word	0x2001308c

0800aad8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 800aad8:	b570      	push	{r4, r5, r6, lr}
 800aada:	4604      	mov	r4, r0
 800aadc:	6803      	ldr	r3, [r0, #0]
 800aade:	b919      	cbnz	r1, 800aae8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 800aae0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800aae2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800aae6:	4718      	bx	r3
 800aae8:	2200      	movs	r2, #0
 800aaea:	f890 607b 	ldrb.w	r6, [r0, #123]	@ 0x7b
 800aaee:	f880 207b 	strb.w	r2, [r0, #123]	@ 0x7b
 800aaf2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800aaf4:	4798      	blx	r3
 800aaf6:	6863      	ldr	r3, [r4, #4]
 800aaf8:	2101      	movs	r1, #1
 800aafa:	4605      	mov	r5, r0
 800aafc:	7299      	strb	r1, [r3, #10]
 800aafe:	4620      	mov	r0, r4
 800ab00:	f884 607b 	strb.w	r6, [r4, #123]	@ 0x7b
 800ab04:	f7ff ffba 	bl	800aa7c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800ab08:	4628      	mov	r0, r5
 800ab0a:	bd70      	pop	{r4, r5, r6, pc}

0800ab0c <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800ab0c:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800ab10:	1a13      	subs	r3, r2, r0
 800ab12:	4258      	negs	r0, r3
 800ab14:	4158      	adcs	r0, r3
 800ab16:	4770      	bx	lr

0800ab18 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800ab18:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800ab1c:	1a9b      	subs	r3, r3, r2
 800ab1e:	2b00      	cmp	r3, #0
 800ab20:	bfdc      	itt	le
 800ab22:	6882      	ldrle	r2, [r0, #8]
 800ab24:	189b      	addle	r3, r3, r2
 800ab26:	2b01      	cmp	r3, #1
 800ab28:	bfcc      	ite	gt
 800ab2a:	2000      	movgt	r0, #0
 800ab2c:	2001      	movle	r0, #1
 800ab2e:	4770      	bx	lr

0800ab30 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800ab30:	6902      	ldr	r2, [r0, #16]
 800ab32:	6843      	ldr	r3, [r0, #4]
 800ab34:	2024      	movs	r0, #36	@ 0x24
 800ab36:	fb00 3002 	mla	r0, r0, r2, r3
 800ab3a:	4770      	bx	lr

0800ab3c <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800ab3c:	6803      	ldr	r3, [r0, #0]
 800ab3e:	691b      	ldr	r3, [r3, #16]
 800ab40:	4718      	bx	r3

0800ab42 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800ab42:	b570      	push	{r4, r5, r6, lr}
 800ab44:	2301      	movs	r3, #1
 800ab46:	7203      	strb	r3, [r0, #8]
 800ab48:	4604      	mov	r4, r0
 800ab4a:	6840      	ldr	r0, [r0, #4]
 800ab4c:	6803      	ldr	r3, [r0, #0]
 800ab4e:	699b      	ldr	r3, [r3, #24]
 800ab50:	4798      	blx	r3
 800ab52:	6803      	ldr	r3, [r0, #0]
 800ab54:	2b40      	cmp	r3, #64	@ 0x40
 800ab56:	4605      	mov	r5, r0
 800ab58:	d00c      	beq.n	800ab74 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800ab5a:	d810      	bhi.n	800ab7e <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800ab5c:	2b04      	cmp	r3, #4
 800ab5e:	d01d      	beq.n	800ab9c <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800ab60:	d804      	bhi.n	800ab6c <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800ab62:	2b01      	cmp	r3, #1
 800ab64:	d006      	beq.n	800ab74 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800ab66:	2b02      	cmp	r3, #2
 800ab68:	d02c      	beq.n	800abc4 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800ab6a:	bd70      	pop	{r4, r5, r6, pc}
 800ab6c:	2b08      	cmp	r3, #8
 800ab6e:	d01d      	beq.n	800abac <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800ab70:	2b20      	cmp	r3, #32
 800ab72:	d1fa      	bne.n	800ab6a <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800ab74:	6823      	ldr	r3, [r4, #0]
 800ab76:	4620      	mov	r0, r4
 800ab78:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800ab7a:	4798      	blx	r3
 800ab7c:	e013      	b.n	800aba6 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800ab7e:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800ab82:	d0f7      	beq.n	800ab74 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800ab84:	d804      	bhi.n	800ab90 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800ab86:	2b80      	cmp	r3, #128	@ 0x80
 800ab88:	d0f4      	beq.n	800ab74 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800ab8a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800ab8e:	e7f0      	b.n	800ab72 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800ab90:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800ab94:	d0ee      	beq.n	800ab74 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800ab96:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800ab9a:	e7e5      	b.n	800ab68 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800ab9c:	6823      	ldr	r3, [r4, #0]
 800ab9e:	7f01      	ldrb	r1, [r0, #28]
 800aba0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800aba2:	4620      	mov	r0, r4
 800aba4:	4798      	blx	r3
 800aba6:	6823      	ldr	r3, [r4, #0]
 800aba8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800abaa:	e006      	b.n	800abba <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800abac:	6823      	ldr	r3, [r4, #0]
 800abae:	7f01      	ldrb	r1, [r0, #28]
 800abb0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800abb2:	4620      	mov	r0, r4
 800abb4:	4798      	blx	r3
 800abb6:	6823      	ldr	r3, [r4, #0]
 800abb8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800abba:	4629      	mov	r1, r5
 800abbc:	4620      	mov	r0, r4
 800abbe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800abc2:	4718      	bx	r3
 800abc4:	6823      	ldr	r3, [r4, #0]
 800abc6:	4620      	mov	r0, r4
 800abc8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800abca:	4798      	blx	r3
 800abcc:	e7f3      	b.n	800abb6 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800abce <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800abce:	4770      	bx	lr

0800abd0 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800abd0:	4770      	bx	lr

0800abd2 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800abd2:	4770      	bx	lr

0800abd4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800abd4:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800abd8:	1ad2      	subs	r2, r2, r3
 800abda:	2a00      	cmp	r2, #0
 800abdc:	b510      	push	{r4, lr}
 800abde:	bfdc      	itt	le
 800abe0:	6884      	ldrle	r4, [r0, #8]
 800abe2:	1912      	addle	r2, r2, r4
 800abe4:	2a01      	cmp	r2, #1
 800abe6:	dd16      	ble.n	800ac16 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800abe8:	6842      	ldr	r2, [r0, #4]
 800abea:	2424      	movs	r4, #36	@ 0x24
 800abec:	fb04 2303 	mla	r3, r4, r3, r2
 800abf0:	f101 0220 	add.w	r2, r1, #32
 800abf4:	f851 4b04 	ldr.w	r4, [r1], #4
 800abf8:	f843 4b04 	str.w	r4, [r3], #4
 800abfc:	4291      	cmp	r1, r2
 800abfe:	d1f9      	bne.n	800abf4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800ac00:	780a      	ldrb	r2, [r1, #0]
 800ac02:	701a      	strb	r2, [r3, #0]
 800ac04:	68c3      	ldr	r3, [r0, #12]
 800ac06:	6882      	ldr	r2, [r0, #8]
 800ac08:	f3bf 8f5b 	dmb	ish
 800ac0c:	3301      	adds	r3, #1
 800ac0e:	429a      	cmp	r2, r3
 800ac10:	bfd8      	it	le
 800ac12:	1a9b      	suble	r3, r3, r2
 800ac14:	60c3      	str	r3, [r0, #12]
 800ac16:	bd10      	pop	{r4, pc}

0800ac18 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800ac18:	6903      	ldr	r3, [r0, #16]
 800ac1a:	6882      	ldr	r2, [r0, #8]
 800ac1c:	f3bf 8f5b 	dmb	ish
 800ac20:	3301      	adds	r3, #1
 800ac22:	429a      	cmp	r2, r3
 800ac24:	bfd8      	it	le
 800ac26:	1a9b      	suble	r3, r3, r2
 800ac28:	6103      	str	r3, [r0, #16]
 800ac2a:	4770      	bx	lr

0800ac2c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800ac2c:	b570      	push	{r4, r5, r6, lr}
 800ac2e:	4604      	mov	r4, r0
 800ac30:	460e      	mov	r6, r1
 800ac32:	6860      	ldr	r0, [r4, #4]
 800ac34:	6803      	ldr	r3, [r0, #0]
 800ac36:	685b      	ldr	r3, [r3, #4]
 800ac38:	4798      	blx	r3
 800ac3a:	2800      	cmp	r0, #0
 800ac3c:	d1f9      	bne.n	800ac32 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800ac3e:	4d0d      	ldr	r5, [pc, #52]	@ (800ac74 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800ac40:	6828      	ldr	r0, [r5, #0]
 800ac42:	6803      	ldr	r3, [r0, #0]
 800ac44:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800ac48:	4798      	blx	r3
 800ac4a:	f7f5 ffb3 	bl	8000bb4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800ac4e:	6828      	ldr	r0, [r5, #0]
 800ac50:	2101      	movs	r1, #1
 800ac52:	f7ff ff13 	bl	800aa7c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800ac56:	6860      	ldr	r0, [r4, #4]
 800ac58:	6803      	ldr	r3, [r0, #0]
 800ac5a:	4631      	mov	r1, r6
 800ac5c:	689b      	ldr	r3, [r3, #8]
 800ac5e:	4798      	blx	r3
 800ac60:	6823      	ldr	r3, [r4, #0]
 800ac62:	4620      	mov	r0, r4
 800ac64:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ac66:	4798      	blx	r3
 800ac68:	6828      	ldr	r0, [r5, #0]
 800ac6a:	6803      	ldr	r3, [r0, #0]
 800ac6c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ac70:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800ac72:	4718      	bx	r3
 800ac74:	20013090 	.word	0x20013090

0800ac78 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800ac78:	b508      	push	{r3, lr}
 800ac7a:	f7f5 ff8d 	bl	8000b98 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800ac7e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800ac82:	f7f5 bf91 	b.w	8000ba8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800ac86 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800ac86:	b510      	push	{r4, lr}
 800ac88:	2114      	movs	r1, #20
 800ac8a:	4604      	mov	r4, r0
 800ac8c:	f015 fe1f 	bl	80208ce <_ZdlPvj>
 800ac90:	4620      	mov	r0, r4
 800ac92:	bd10      	pop	{r4, pc}

0800ac94 <_ZN8touchgfx13DMA_Interface5startEv>:
 800ac94:	b510      	push	{r4, lr}
 800ac96:	4604      	mov	r4, r0
 800ac98:	6840      	ldr	r0, [r0, #4]
 800ac9a:	6803      	ldr	r3, [r0, #0]
 800ac9c:	681b      	ldr	r3, [r3, #0]
 800ac9e:	4798      	blx	r3
 800aca0:	b948      	cbnz	r0, 800acb6 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800aca2:	7a63      	ldrb	r3, [r4, #9]
 800aca4:	b13b      	cbz	r3, 800acb6 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800aca6:	7a23      	ldrb	r3, [r4, #8]
 800aca8:	b92b      	cbnz	r3, 800acb6 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800acaa:	6823      	ldr	r3, [r4, #0]
 800acac:	4620      	mov	r0, r4
 800acae:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800acb0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800acb4:	4718      	bx	r3
 800acb6:	bd10      	pop	{r4, pc}

0800acb8 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800acb8:	b570      	push	{r4, r5, r6, lr}
 800acba:	4604      	mov	r4, r0
 800acbc:	6840      	ldr	r0, [r0, #4]
 800acbe:	6803      	ldr	r3, [r0, #0]
 800acc0:	681b      	ldr	r3, [r3, #0]
 800acc2:	4798      	blx	r3
 800acc4:	4605      	mov	r5, r0
 800acc6:	b930      	cbnz	r0, 800acd6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800acc8:	7a23      	ldrb	r3, [r4, #8]
 800acca:	b123      	cbz	r3, 800acd6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800accc:	6860      	ldr	r0, [r4, #4]
 800acce:	6803      	ldr	r3, [r0, #0]
 800acd0:	695b      	ldr	r3, [r3, #20]
 800acd2:	4798      	blx	r3
 800acd4:	7225      	strb	r5, [r4, #8]
 800acd6:	6860      	ldr	r0, [r4, #4]
 800acd8:	6803      	ldr	r3, [r0, #0]
 800acda:	681b      	ldr	r3, [r3, #0]
 800acdc:	4798      	blx	r3
 800acde:	b928      	cbnz	r0, 800acec <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800ace0:	6823      	ldr	r3, [r4, #0]
 800ace2:	4620      	mov	r0, r4
 800ace4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800ace6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800acea:	4718      	bx	r3
 800acec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800acf0:	f7f5 bf68 	b.w	8000bc4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800acf4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800acf4:	b510      	push	{r4, lr}
 800acf6:	4c04      	ldr	r4, [pc, #16]	@ (800ad08 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800acf8:	6082      	str	r2, [r0, #8]
 800acfa:	2200      	movs	r2, #0
 800acfc:	e9c0 4100 	strd	r4, r1, [r0]
 800ad00:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800ad04:	bd10      	pop	{r4, pc}
 800ad06:	bf00      	nop
 800ad08:	08023890 	.word	0x08023890

0800ad0c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800ad0c:	6840      	ldr	r0, [r0, #4]
 800ad0e:	6803      	ldr	r3, [r0, #0]
 800ad10:	681b      	ldr	r3, [r3, #0]
 800ad12:	4718      	bx	r3
 800ad14:	0000      	movs	r0, r0
	...

0800ad18 <_ZN8touchgfxL10applyNoiseEiihhh>:
 800ad18:	e92d 48f0 	stmdb	sp!, {r4, r5, r6, r7, fp, lr}
 800ad1c:	4f20      	ldr	r7, [pc, #128]	@ (800ada0 <_ZN8touchgfxL10applyNoiseEiihhh+0x88>)
 800ad1e:	f89d 5018 	ldrb.w	r5, [sp, #24]
 800ad22:	fb80 0101 	smull	r0, r1, r0, r1
 800ad26:	fba0 bc07 	umull	fp, ip, r0, r7
 800ad2a:	fb07 cc01 	mla	ip, r7, r1, ip
 800ad2e:	fb0b f70c 	mul.w	r7, fp, ip
 800ad32:	fbab 010b 	umull	r0, r1, fp, fp
 800ad36:	461c      	mov	r4, r3
 800ad38:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 800ad3c:	fb00 f30c 	mul.w	r3, r0, ip
 800ad40:	fb0b 3301 	mla	r3, fp, r1, r3
 800ad44:	fba0 010b 	umull	r0, r1, r0, fp
 800ad48:	4616      	mov	r6, r2
 800ad4a:	4419      	add	r1, r3
 800ad4c:	a312      	add	r3, pc, #72	@ (adr r3, 800ad98 <_ZN8touchgfxL10applyNoiseEiihhh+0x80>)
 800ad4e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ad52:	f7f5 faa5 	bl	80002a0 <__aeabi_ldivmod>
 800ad56:	2ef7      	cmp	r6, #247	@ 0xf7
 800ad58:	b290      	uxth	r0, r2
 800ad5a:	bf9e      	ittt	ls
 800ad5c:	f002 0207 	andls.w	r2, r2, #7
 800ad60:	18b6      	addls	r6, r6, r2
 800ad62:	b2f6      	uxtbls	r6, r6
 800ad64:	2cfb      	cmp	r4, #251	@ 0xfb
 800ad66:	bf9e      	ittt	ls
 800ad68:	f3c0 03c1 	ubfxls	r3, r0, #3, #2
 800ad6c:	18e4      	addls	r4, r4, r3
 800ad6e:	b2e4      	uxtbls	r4, r4
 800ad70:	2df7      	cmp	r5, #247	@ 0xf7
 800ad72:	bf9c      	itt	ls
 800ad74:	f3c0 1042 	ubfxls	r0, r0, #5, #3
 800ad78:	182d      	addls	r5, r5, r0
 800ad7a:	480a      	ldr	r0, [pc, #40]	@ (800ada4 <_ZN8touchgfxL10applyNoiseEiihhh+0x8c>)
 800ad7c:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800ad80:	ea00 2006 	and.w	r0, r0, r6, lsl #8
 800ad84:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 800ad88:	bf98      	it	ls
 800ad8a:	b2ed      	uxtbls	r5, r5
 800ad8c:	4304      	orrs	r4, r0
 800ad8e:	ea44 00d5 	orr.w	r0, r4, r5, lsr #3
 800ad92:	b280      	uxth	r0, r0
 800ad94:	e8bd 88f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, pc}
 800ad98:	797a8d77 	.word	0x797a8d77
 800ad9c:	00000000 	.word	0x00000000
 800ada0:	00ec4ba7 	.word	0x00ec4ba7
 800ada4:	fffff800 	.word	0xfffff800

0800ada8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh>:
 800ada8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800adac:	ed2d 8b02 	vpush	{d8}
 800adb0:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800adb4:	b087      	sub	sp, #28
 800adb6:	7c41      	ldrb	r1, [r0, #17]
 800adb8:	f9bd 9048 	ldrsh.w	r9, [sp, #72]	@ 0x48
 800adbc:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
 800adc0:	f89d a050 	ldrb.w	sl, [sp, #80]	@ 0x50
 800adc4:	4605      	mov	r5, r0
 800adc6:	2900      	cmp	r1, #0
 800adc8:	f000 809a 	beq.w	800af00 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x158>
 800adcc:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800add0:	ed90 7a08 	vldr	s14, [r0, #32]
 800add4:	68c0      	ldr	r0, [r0, #12]
 800add6:	454a      	cmp	r2, r9
 800add8:	db25      	blt.n	800ae26 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x7e>
 800adda:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800adde:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ade2:	f640 72fc 	movw	r2, #4092	@ 0xffc
 800ade6:	bfc8      	it	gt
 800ade8:	2200      	movgt	r2, #0
 800adea:	5882      	ldr	r2, [r0, r2]
 800adec:	2100      	movs	r1, #0
 800adee:	7c2d      	ldrb	r5, [r5, #16]
 800adf0:	ea4f 2812 	mov.w	r8, r2, lsr #8
 800adf4:	0950      	lsrs	r0, r2, #5
 800adf6:	f408 4e78 	and.w	lr, r8, #63488	@ 0xf800
 800adfa:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 800adfe:	f3c2 0cc4 	ubfx	ip, r2, #3, #5
 800ae02:	eb04 0746 	add.w	r7, r4, r6, lsl #1
 800ae06:	2d00      	cmp	r5, #0
 800ae08:	d044      	beq.n	800ae94 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
 800ae0a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800ae0e:	d141      	bne.n	800ae94 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
 800ae10:	bb61      	cbnz	r1, 800ae6c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xc4>
 800ae12:	ea4e 0000 	orr.w	r0, lr, r0
 800ae16:	ea4c 0500 	orr.w	r5, ip, r0
 800ae1a:	42bc      	cmp	r4, r7
 800ae1c:	f080 8217 	bcs.w	800b24e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800ae20:	f824 5b02 	strh.w	r5, [r4], #2
 800ae24:	e7f9      	b.n	800ae1a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x72>
 800ae26:	f9b5 700a 	ldrsh.w	r7, [r5, #10]
 800ae2a:	454f      	cmp	r7, r9
 800ae2c:	dc08      	bgt.n	800ae40 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x98>
 800ae2e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800ae32:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ae36:	f640 72fc 	movw	r2, #4092	@ 0xffc
 800ae3a:	bfd8      	it	le
 800ae3c:	2200      	movle	r2, #0
 800ae3e:	e7d4      	b.n	800adea <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42>
 800ae40:	eba9 0202 	sub.w	r2, r9, r2
 800ae44:	ee07 2a90 	vmov	s15, r2
 800ae48:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800ae4c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800ae50:	ee67 7a87 	vmul.f32	s15, s15, s14
 800ae54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ae58:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ae5c:	ee17 2a90 	vmov	r2, s15
 800ae60:	bfd8      	it	le
 800ae62:	f202 32ff 	addwle	r2, r2, #1023	@ 0x3ff
 800ae66:	0092      	lsls	r2, r2, #2
 800ae68:	5882      	ldr	r2, [r0, r2]
 800ae6a:	e7c0      	b.n	800adee <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x46>
 800ae6c:	b2d5      	uxtb	r5, r2
 800ae6e:	fa5f f888 	uxtb.w	r8, r8
 800ae72:	f3c2 4a07 	ubfx	sl, r2, #16, #8
 800ae76:	461e      	mov	r6, r3
 800ae78:	42bc      	cmp	r4, r7
 800ae7a:	f080 81e8 	bcs.w	800b24e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800ae7e:	4630      	mov	r0, r6
 800ae80:	9500      	str	r5, [sp, #0]
 800ae82:	4643      	mov	r3, r8
 800ae84:	4652      	mov	r2, sl
 800ae86:	4649      	mov	r1, r9
 800ae88:	f7ff ff46 	bl	800ad18 <_ZN8touchgfxL10applyNoiseEiihhh>
 800ae8c:	3601      	adds	r6, #1
 800ae8e:	f824 0b02 	strh.w	r0, [r4], #2
 800ae92:	e7f1      	b.n	800ae78 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xd0>
 800ae94:	0e12      	lsrs	r2, r2, #24
 800ae96:	fb02 f20a 	mul.w	r2, r2, sl
 800ae9a:	1c53      	adds	r3, r2, #1
 800ae9c:	eb03 2222 	add.w	r2, r3, r2, asr #8
 800aea0:	1212      	asrs	r2, r2, #8
 800aea2:	fb02 f50c 	mul.w	r5, r2, ip
 800aea6:	fb02 f10e 	mul.w	r1, r2, lr
 800aeaa:	4350      	muls	r0, r2
 800aeac:	f8df c3b0 	ldr.w	ip, [pc, #944]	@ 800b260 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800aeb0:	43d2      	mvns	r2, r2
 800aeb2:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 800aeb6:	26ff      	movs	r6, #255	@ 0xff
 800aeb8:	42bc      	cmp	r4, r7
 800aeba:	f080 81c8 	bcs.w	800b24e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800aebe:	f8b4 e000 	ldrh.w	lr, [r4]
 800aec2:	ea0e 030c 	and.w	r3, lr, ip
 800aec6:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
 800aeca:	fb02 1303 	mla	r3, r2, r3, r1
 800aece:	fb02 0808 	mla	r8, r2, r8, r0
 800aed2:	fb93 f3f6 	sdiv	r3, r3, r6
 800aed6:	fb98 f8f6 	sdiv	r8, r8, r6
 800aeda:	ea03 030c 	and.w	r3, r3, ip
 800aede:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 800aee2:	f00e 0e1f 	and.w	lr, lr, #31
 800aee6:	ea43 0308 	orr.w	r3, r3, r8
 800aeea:	fb02 5e0e 	mla	lr, r2, lr, r5
 800aeee:	fb9e fef6 	sdiv	lr, lr, r6
 800aef2:	f00e 0e1f 	and.w	lr, lr, #31
 800aef6:	ea43 030e 	orr.w	r3, r3, lr
 800aefa:	f824 3b02 	strh.w	r3, [r4], #2
 800aefe:	e7db      	b.n	800aeb8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x110>
 800af00:	7c82      	ldrb	r2, [r0, #18]
 800af02:	2a00      	cmp	r2, #0
 800af04:	d04f      	beq.n	800afa6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1fe>
 800af06:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800af0a:	ee07 2a90 	vmov	s15, r2
 800af0e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800af12:	ee07 3a10 	vmov	s14, r3
 800af16:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800af1a:	461f      	mov	r7, r3
 800af1c:	eef4 6ae7 	vcmpe.f32	s13, s15
 800af20:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800af24:	f200 8095 	bhi.w	800b052 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2aa>
 800af28:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800af2c:	ee37 7a87 	vadd.f32	s14, s15, s14
 800af30:	f640 71fc 	movw	r1, #4092	@ 0xffc
 800af34:	ee37 7a66 	vsub.f32	s14, s14, s13
 800af38:	ee06 6a90 	vmov	s13, r6
 800af3c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800af40:	68ea      	ldr	r2, [r5, #12]
 800af42:	f895 c010 	ldrb.w	ip, [r5, #16]
 800af46:	eeb4 7ae6 	vcmpe.f32	s14, s13
 800af4a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800af4e:	bf4a      	itet	mi
 800af50:	eebd 7ac7 	vcvtmi.s32.f32	s14, s14
 800af54:	9602      	strpl	r6, [sp, #8]
 800af56:	ed8d 7a02 	vstrmi	s14, [sp, #8]
 800af5a:	ed95 7a08 	vldr	s14, [r5, #32]
 800af5e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800af62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800af66:	bfc8      	it	gt
 800af68:	2100      	movgt	r1, #0
 800af6a:	5852      	ldr	r2, [r2, r1]
 800af6c:	9902      	ldr	r1, [sp, #8]
 800af6e:	ea4f 2b12 	mov.w	fp, r2, lsr #8
 800af72:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800af76:	0950      	lsrs	r0, r2, #5
 800af78:	9103      	str	r1, [sp, #12]
 800af7a:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 800af7e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 800af82:	f3c2 01c4 	ubfx	r1, r2, #3, #5
 800af86:	f1bc 0f00 	cmp.w	ip, #0
 800af8a:	d024      	beq.n	800afd6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
 800af8c:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800af90:	d121      	bne.n	800afd6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
 800af92:	ea4b 0b00 	orr.w	fp, fp, r0
 800af96:	ea41 010b 	orr.w	r1, r1, fp
 800af9a:	9a03      	ldr	r2, [sp, #12]
 800af9c:	4294      	cmp	r4, r2
 800af9e:	d255      	bcs.n	800b04c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
 800afa0:	f824 1b02 	strh.w	r1, [r4], #2
 800afa4:	e7f9      	b.n	800af9a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1f2>
 800afa6:	ee07 9a10 	vmov	s14, r9
 800afaa:	edd0 7a06 	vldr	s15, [r0, #24]
 800afae:	edd0 6a05 	vldr	s13, [r0, #20]
 800afb2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800afb6:	ee37 7a67 	vsub.f32	s14, s14, s15
 800afba:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800afbe:	ed90 7a08 	vldr	s14, [r0, #32]
 800afc2:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800afc6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800afca:	bf44      	itt	mi
 800afcc:	ed90 7a07 	vldrmi	s14, [r0, #28]
 800afd0:	ee77 7ac7 	vsubmi.f32	s15, s15, s14
 800afd4:	e79d      	b.n	800af12 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x16a>
 800afd6:	0e12      	lsrs	r2, r2, #24
 800afd8:	fb02 f20a 	mul.w	r2, r2, sl
 800afdc:	f102 0c01 	add.w	ip, r2, #1
 800afe0:	eb0c 2222 	add.w	r2, ip, r2, asr #8
 800afe4:	1212      	asrs	r2, r2, #8
 800afe6:	4350      	muls	r0, r2
 800afe8:	4351      	muls	r1, r2
 800afea:	fb02 fb0b 	mul.w	fp, r2, fp
 800afee:	f8df 8270 	ldr.w	r8, [pc, #624]	@ 800b260 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800aff2:	9004      	str	r0, [sp, #16]
 800aff4:	43d2      	mvns	r2, r2
 800aff6:	9105      	str	r1, [sp, #20]
 800aff8:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 800affc:	f04f 0eff 	mov.w	lr, #255	@ 0xff
 800b000:	9903      	ldr	r1, [sp, #12]
 800b002:	428c      	cmp	r4, r1
 800b004:	d222      	bcs.n	800b04c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
 800b006:	8820      	ldrh	r0, [r4, #0]
 800b008:	f400 61fc 	and.w	r1, r0, #2016	@ 0x7e0
 800b00c:	460f      	mov	r7, r1
 800b00e:	9904      	ldr	r1, [sp, #16]
 800b010:	ea00 0c08 	and.w	ip, r0, r8
 800b014:	fb02 bc0c 	mla	ip, r2, ip, fp
 800b018:	fb02 1107 	mla	r1, r2, r7, r1
 800b01c:	fb9c fcfe 	sdiv	ip, ip, lr
 800b020:	fb91 f1fe 	sdiv	r1, r1, lr
 800b024:	ea0c 0c08 	and.w	ip, ip, r8
 800b028:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 800b02c:	ea4c 0101 	orr.w	r1, ip, r1
 800b030:	f000 0c1f 	and.w	ip, r0, #31
 800b034:	9805      	ldr	r0, [sp, #20]
 800b036:	fb02 0c0c 	mla	ip, r2, ip, r0
 800b03a:	fb9c fcfe 	sdiv	ip, ip, lr
 800b03e:	f00c 0c1f 	and.w	ip, ip, #31
 800b042:	ea41 010c 	orr.w	r1, r1, ip
 800b046:	f824 1b02 	strh.w	r1, [r4], #2
 800b04a:	e7d9      	b.n	800b000 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x258>
 800b04c:	9a02      	ldr	r2, [sp, #8]
 800b04e:	441a      	add	r2, r3
 800b050:	4617      	mov	r7, r2
 800b052:	441e      	add	r6, r3
 800b054:	b236      	sxth	r6, r6
 800b056:	42be      	cmp	r6, r7
 800b058:	f340 80f9 	ble.w	800b24e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800b05c:	ed95 7a07 	vldr	s14, [r5, #28]
 800b060:	ee06 7a90 	vmov	s13, r7
 800b064:	ee37 7a87 	vadd.f32	s14, s15, s14
 800b068:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800b06c:	eeb4 7ae6 	vcmpe.f32	s14, s13
 800b070:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b074:	f340 80b5 	ble.w	800b1e2 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43a>
 800b078:	ee06 6a10 	vmov	s12, r6
 800b07c:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 800b080:	ed9f 8a75 	vldr	s16, [pc, #468]	@ 800b258 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b0>
 800b084:	7c2b      	ldrb	r3, [r5, #16]
 800b086:	eeb4 7ac6 	vcmpe.f32	s14, s12
 800b08a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b08e:	bfd8      	it	le
 800b090:	eebd 7ac7 	vcvtle.s32.f32	s14, s14
 800b094:	ed9f 6a71 	vldr	s12, [pc, #452]	@ 800b25c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
 800b098:	bfd8      	it	le
 800b09a:	ee17 8a10 	vmovle	r8, s14
 800b09e:	ed95 7a08 	vldr	s14, [r5, #32]
 800b0a2:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800b0a6:	bfc8      	it	gt
 800b0a8:	46b0      	movgt	r8, r6
 800b0aa:	ee76 7ae7 	vsub.f32	s15, s13, s15
 800b0ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b0b2:	eba8 0707 	sub.w	r7, r8, r7
 800b0b6:	bfd8      	it	le
 800b0b8:	eeb0 8a46 	vmovle.f32	s16, s12
 800b0bc:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 800b0c0:	eea7 8a27 	vfma.f32	s16, s14, s15
 800b0c4:	b1db      	cbz	r3, 800b0fe <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x356>
 800b0c6:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800b0ca:	d118      	bne.n	800b0fe <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x356>
 800b0cc:	42bc      	cmp	r4, r7
 800b0ce:	d262      	bcs.n	800b196 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ee>
 800b0d0:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800b0d4:	68eb      	ldr	r3, [r5, #12]
 800b0d6:	ee17 0a90 	vmov	r0, s15
 800b0da:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
 800b0de:	b2d3      	uxtb	r3, r2
 800b0e0:	9300      	str	r3, [sp, #0]
 800b0e2:	4649      	mov	r1, r9
 800b0e4:	f3c2 2307 	ubfx	r3, r2, #8, #8
 800b0e8:	f3c2 4207 	ubfx	r2, r2, #16, #8
 800b0ec:	f7ff fe14 	bl	800ad18 <_ZN8touchgfxL10applyNoiseEiihhh>
 800b0f0:	f824 0b02 	strh.w	r0, [r4], #2
 800b0f4:	edd5 7a08 	vldr	s15, [r5, #32]
 800b0f8:	ee38 8a27 	vadd.f32	s16, s16, s15
 800b0fc:	e7e6      	b.n	800b0cc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x324>
 800b0fe:	f8df b160 	ldr.w	fp, [pc, #352]	@ 800b260 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800b102:	f04f 09ff 	mov.w	r9, #255	@ 0xff
 800b106:	42bc      	cmp	r4, r7
 800b108:	d245      	bcs.n	800b196 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ee>
 800b10a:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800b10e:	68eb      	ldr	r3, [r5, #12]
 800b110:	f8b4 e000 	ldrh.w	lr, [r4]
 800b114:	ee17 2a90 	vmov	r2, s15
 800b118:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800b11c:	0e13      	lsrs	r3, r2, #24
 800b11e:	fb03 f30a 	mul.w	r3, r3, sl
 800b122:	1c58      	adds	r0, r3, #1
 800b124:	eb00 2023 	add.w	r0, r0, r3, asr #8
 800b128:	1200      	asrs	r0, r0, #8
 800b12a:	ea6f 0c00 	mvn.w	ip, r0
 800b12e:	fa5f fc8c 	uxtb.w	ip, ip
 800b132:	ea0b 2112 	and.w	r1, fp, r2, lsr #8
 800b136:	ea0e 030b 	and.w	r3, lr, fp
 800b13a:	fb0c f303 	mul.w	r3, ip, r3
 800b13e:	b289      	uxth	r1, r1
 800b140:	fb00 3101 	mla	r1, r0, r1, r3
 800b144:	fb91 f1f9 	sdiv	r1, r1, r9
 800b148:	ea01 030b 	and.w	r3, r1, fp
 800b14c:	9302      	str	r3, [sp, #8]
 800b14e:	0953      	lsrs	r3, r2, #5
 800b150:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800b154:	4619      	mov	r1, r3
 800b156:	f40e 63fc 	and.w	r3, lr, #2016	@ 0x7e0
 800b15a:	fb0c f303 	mul.w	r3, ip, r3
 800b15e:	fb00 3301 	mla	r3, r0, r1, r3
 800b162:	f00e 0e1f 	and.w	lr, lr, #31
 800b166:	9902      	ldr	r1, [sp, #8]
 800b168:	fb93 f3f9 	sdiv	r3, r3, r9
 800b16c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 800b170:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800b174:	fb0c fc0e 	mul.w	ip, ip, lr
 800b178:	4319      	orrs	r1, r3
 800b17a:	fb00 c002 	mla	r0, r0, r2, ip
 800b17e:	fb90 f0f9 	sdiv	r0, r0, r9
 800b182:	f000 001f 	and.w	r0, r0, #31
 800b186:	4301      	orrs	r1, r0
 800b188:	f824 1b02 	strh.w	r1, [r4], #2
 800b18c:	edd5 7a08 	vldr	s15, [r5, #32]
 800b190:	ee38 8a27 	vadd.f32	s16, s16, s15
 800b194:	e7b7      	b.n	800b106 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x35e>
 800b196:	4546      	cmp	r6, r8
 800b198:	dd59      	ble.n	800b24e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800b19a:	edd5 7a08 	vldr	s15, [r5, #32]
 800b19e:	68ea      	ldr	r2, [r5, #12]
 800b1a0:	7c29      	ldrb	r1, [r5, #16]
 800b1a2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b1a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b1aa:	f640 73fc 	movw	r3, #4092	@ 0xffc
 800b1ae:	bfd8      	it	le
 800b1b0:	2300      	movle	r3, #0
 800b1b2:	eba6 0608 	sub.w	r6, r6, r8
 800b1b6:	58d2      	ldr	r2, [r2, r3]
 800b1b8:	0a10      	lsrs	r0, r2, #8
 800b1ba:	0953      	lsrs	r3, r2, #5
 800b1bc:	eb04 0646 	add.w	r6, r4, r6, lsl #1
 800b1c0:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 800b1c4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800b1c8:	f3c2 07c4 	ubfx	r7, r2, #3, #5
 800b1cc:	b159      	cbz	r1, 800b1e6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43e>
 800b1ce:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 800b1d2:	d108      	bne.n	800b1e6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x43e>
 800b1d4:	4318      	orrs	r0, r3
 800b1d6:	4338      	orrs	r0, r7
 800b1d8:	42b4      	cmp	r4, r6
 800b1da:	d238      	bcs.n	800b24e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800b1dc:	f824 0b02 	strh.w	r0, [r4], #2
 800b1e0:	e7fa      	b.n	800b1d8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x430>
 800b1e2:	46b8      	mov	r8, r7
 800b1e4:	e7d9      	b.n	800b19a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3f2>
 800b1e6:	0e12      	lsrs	r2, r2, #24
 800b1e8:	fb02 f10a 	mul.w	r1, r2, sl
 800b1ec:	1c4a      	adds	r2, r1, #1
 800b1ee:	eb02 2221 	add.w	r2, r2, r1, asr #8
 800b1f2:	1212      	asrs	r2, r2, #8
 800b1f4:	fb02 f507 	mul.w	r5, r2, r7
 800b1f8:	4350      	muls	r0, r2
 800b1fa:	4353      	muls	r3, r2
 800b1fc:	f8df c060 	ldr.w	ip, [pc, #96]	@ 800b260 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b8>
 800b200:	43d2      	mvns	r2, r2
 800b202:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 800b206:	27ff      	movs	r7, #255	@ 0xff
 800b208:	42b4      	cmp	r4, r6
 800b20a:	d220      	bcs.n	800b24e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a6>
 800b20c:	f8b4 e000 	ldrh.w	lr, [r4]
 800b210:	ea0e 010c 	and.w	r1, lr, ip
 800b214:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
 800b218:	fb02 0101 	mla	r1, r2, r1, r0
 800b21c:	fb02 3808 	mla	r8, r2, r8, r3
 800b220:	fb91 f1f7 	sdiv	r1, r1, r7
 800b224:	fb98 f8f7 	sdiv	r8, r8, r7
 800b228:	ea01 010c 	and.w	r1, r1, ip
 800b22c:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 800b230:	f00e 0e1f 	and.w	lr, lr, #31
 800b234:	ea41 0108 	orr.w	r1, r1, r8
 800b238:	fb02 5e0e 	mla	lr, r2, lr, r5
 800b23c:	fb9e fef7 	sdiv	lr, lr, r7
 800b240:	f00e 0e1f 	and.w	lr, lr, #31
 800b244:	ea41 010e 	orr.w	r1, r1, lr
 800b248:	f824 1b02 	strh.w	r1, [r4], #2
 800b24c:	e7dc      	b.n	800b208 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x460>
 800b24e:	b007      	add	sp, #28
 800b250:	ecbd 8b02 	vpop	{d8}
 800b254:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b258:	00000000 	.word	0x00000000
 800b25c:	447ffffe 	.word	0x447ffffe
 800b260:	fffff800 	.word	0xfffff800

0800b264 <_ZNK8touchgfx27PainterRGB565LinearGradient8tearDownEv>:
 800b264:	4770      	bx	lr

0800b266 <_ZN8touchgfx27PainterRGB565LinearGradientD1Ev>:
 800b266:	4770      	bx	lr

0800b268 <_ZN8touchgfx27PainterRGB565LinearGradientD0Ev>:
 800b268:	b510      	push	{r4, lr}
 800b26a:	2124      	movs	r1, #36	@ 0x24
 800b26c:	4604      	mov	r4, r0
 800b26e:	f015 fb2e 	bl	80208ce <_ZdlPvj>
 800b272:	4620      	mov	r0, r4
 800b274:	bd10      	pop	{r4, pc}
	...

0800b278 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800b278:	4b06      	ldr	r3, [pc, #24]	@ (800b294 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 800b27a:	60c1      	str	r1, [r0, #12]
 800b27c:	094a      	lsrs	r2, r1, #5
 800b27e:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 800b282:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 800b286:	4313      	orrs	r3, r2
 800b288:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 800b28c:	4319      	orrs	r1, r3
 800b28e:	8201      	strh	r1, [r0, #16]
 800b290:	4770      	bx	lr
 800b292:	bf00      	nop
 800b294:	fffff800 	.word	0xfffff800

0800b298 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800b298:	f1a0 0008 	sub.w	r0, r0, #8
 800b29c:	e7ec      	b.n	800b278 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 800b29e:	bf00      	nop

0800b2a0 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 800b2a0:	b508      	push	{r3, lr}
 800b2a2:	4b05      	ldr	r3, [pc, #20]	@ (800b2b8 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 800b2a4:	6818      	ldr	r0, [r3, #0]
 800b2a6:	6803      	ldr	r3, [r0, #0]
 800b2a8:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800b2ac:	4798      	blx	r3
 800b2ae:	1e43      	subs	r3, r0, #1
 800b2b0:	4258      	negs	r0, r3
 800b2b2:	4158      	adcs	r0, r3
 800b2b4:	bd08      	pop	{r3, pc}
 800b2b6:	bf00      	nop
 800b2b8:	20013090 	.word	0x20013090

0800b2bc <_ZN8touchgfx13PainterRGB565D1Ev>:
 800b2bc:	4770      	bx	lr

0800b2be <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 800b2be:	3808      	subs	r0, #8
 800b2c0:	4770      	bx	lr

0800b2c2 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 800b2c2:	b430      	push	{r4, r5}
 800b2c4:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800b2c8:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 800b2cc:	8a02      	ldrh	r2, [r0, #16]
 800b2ce:	9202      	str	r2, [sp, #8]
 800b2d0:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800b2d4:	68c2      	ldr	r2, [r0, #12]
 800b2d6:	4629      	mov	r1, r5
 800b2d8:	4620      	mov	r0, r4
 800b2da:	bc30      	pop	{r4, r5}
 800b2dc:	f7f5 be3a 	b.w	8000f54 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

0800b2e0 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 800b2e0:	f7f5 be2c 	b.w	8000f3c <_ZN8touchgfx5paint8tearDownEv>

0800b2e4 <_ZN8touchgfx13PainterRGB565D0Ev>:
 800b2e4:	b510      	push	{r4, lr}
 800b2e6:	2114      	movs	r1, #20
 800b2e8:	4604      	mov	r4, r0
 800b2ea:	f015 faf0 	bl	80208ce <_ZdlPvj>
 800b2ee:	4620      	mov	r0, r4
 800b2f0:	bd10      	pop	{r4, pc}

0800b2f2 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 800b2f2:	f1a0 0008 	sub.w	r0, r0, #8
 800b2f6:	e7f5      	b.n	800b2e4 <_ZN8touchgfx13PainterRGB565D0Ev>

0800b2f8 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv>:
 800b2f8:	2300      	movs	r3, #0
 800b2fa:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800b2fc:	8503      	strh	r3, [r0, #40]	@ 0x28
 800b2fe:	8543      	strh	r3, [r0, #42]	@ 0x2a
 800b300:	8583      	strh	r3, [r0, #44]	@ 0x2c
 800b302:	6980      	ldr	r0, [r0, #24]
 800b304:	b110      	cbz	r0, 800b30c <_ZN8touchgfx17CWRVectorRenderer8tearDownEv+0x14>
 800b306:	6803      	ldr	r3, [r0, #0]
 800b308:	691b      	ldr	r3, [r3, #16]
 800b30a:	4718      	bx	r3
 800b30c:	4770      	bx	lr

0800b30e <_ZN8touchgfx17CWRVectorRenderer14setStrokeWidthEf>:
 800b30e:	ed80 0a0c 	vstr	s0, [r0, #48]	@ 0x30
 800b312:	4770      	bx	lr

0800b314 <_ZN8touchgfx17CWRVectorRenderer8setColorENS_9colortypeE>:
 800b314:	b538      	push	{r3, r4, r5, lr}
 800b316:	0e0b      	lsrs	r3, r1, #24
 800b318:	7783      	strb	r3, [r0, #30]
 800b31a:	6803      	ldr	r3, [r0, #0]
 800b31c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800b31e:	4604      	mov	r4, r0
 800b320:	460d      	mov	r5, r1
 800b322:	4798      	blx	r3
 800b324:	6803      	ldr	r3, [r0, #0]
 800b326:	4629      	mov	r1, r5
 800b328:	689b      	ldr	r3, [r3, #8]
 800b32a:	4798      	blx	r3
 800b32c:	6823      	ldr	r3, [r4, #0]
 800b32e:	4620      	mov	r0, r4
 800b330:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800b332:	4798      	blx	r3
 800b334:	61a0      	str	r0, [r4, #24]
 800b336:	bd38      	pop	{r3, r4, r5, pc}

0800b338 <_ZN8touchgfx17CWRVectorRenderer8setAlphaEh>:
 800b338:	7741      	strb	r1, [r0, #29]
 800b33a:	4770      	bx	lr

0800b33c <_ZN8touchgfx17CWRVectorRenderer23setTransformationMatrixERKNS_9Matrix3x3E>:
 800b33c:	b530      	push	{r4, r5, lr}
 800b33e:	460d      	mov	r5, r1
 800b340:	f100 0434 	add.w	r4, r0, #52	@ 0x34
 800b344:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800b346:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800b348:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800b34a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800b34c:	682b      	ldr	r3, [r5, #0]
 800b34e:	6023      	str	r3, [r4, #0]
 800b350:	bd30      	pop	{r4, r5, pc}

0800b352 <_ZN8touchgfx17CWRVectorRenderer5setupERKNS_4RectES3_>:
 800b352:	b538      	push	{r3, r4, r5, lr}
 800b354:	4604      	mov	r4, r0
 800b356:	1d03      	adds	r3, r0, #4
 800b358:	6808      	ldr	r0, [r1, #0]
 800b35a:	6849      	ldr	r1, [r1, #4]
 800b35c:	c303      	stmia	r3!, {r0, r1}
 800b35e:	6813      	ldr	r3, [r2, #0]
 800b360:	f8c4 3026 	str.w	r3, [r4, #38]	@ 0x26
 800b364:	6853      	ldr	r3, [r2, #4]
 800b366:	f8c4 302a 	str.w	r3, [r4, #42]	@ 0x2a
 800b36a:	2500      	movs	r5, #0
 800b36c:	61a5      	str	r5, [r4, #24]
 800b36e:	f104 0034 	add.w	r0, r4, #52	@ 0x34
 800b372:	f004 fde3 	bl	800ff3c <_ZN8touchgfx9Matrix3x35resetEv>
 800b376:	23ff      	movs	r3, #255	@ 0xff
 800b378:	7763      	strb	r3, [r4, #29]
 800b37a:	77a3      	strb	r3, [r4, #30]
 800b37c:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 800b380:	6323      	str	r3, [r4, #48]	@ 0x30
 800b382:	2301      	movs	r3, #1
 800b384:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
 800b388:	f884 5025 	strb.w	r5, [r4, #37]	@ 0x25
 800b38c:	bd38      	pop	{r3, r4, r5, pc}
	...

0800b390 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_>:
 800b390:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b394:	ed2d 8b0a 	vpush	{d8-d12}
 800b398:	ee70 7a41 	vsub.f32	s15, s0, s2
 800b39c:	b087      	sub	sp, #28
 800b39e:	eef5 7a40 	vcmp.f32	s15, #0.0
 800b3a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b3a6:	4605      	mov	r5, r0
 800b3a8:	eef0 9a40 	vmov.f32	s19, s0
 800b3ac:	eeb0 aa60 	vmov.f32	s20, s1
 800b3b0:	eeb0 9a41 	vmov.f32	s18, s2
 800b3b4:	eef0 8a61 	vmov.f32	s17, s3
 800b3b8:	eeb0 ca42 	vmov.f32	s24, s4
 800b3bc:	eef0 ca62 	vmov.f32	s25, s5
 800b3c0:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800b3c4:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 800b3c6:	6802      	ldr	r2, [r0, #0]
 800b3c8:	d112      	bne.n	800b3f0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
 800b3ca:	ee70 7ae1 	vsub.f32	s15, s1, s3
 800b3ce:	eef5 7a40 	vcmp.f32	s15, #0.0
 800b3d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b3d6:	d10b      	bne.n	800b3f0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
 800b3d8:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 800b3dc:	3901      	subs	r1, #1
 800b3de:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 800b3e0:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
 800b3e4:	b007      	add	sp, #28
 800b3e6:	ecbd 8b0a 	vpop	{d8-d12}
 800b3ea:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b3ee:	4710      	bx	r2
 800b3f0:	23ff      	movs	r3, #255	@ 0xff
 800b3f2:	77ab      	strb	r3, [r5, #30]
 800b3f4:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 800b3f6:	f8df 92c4 	ldr.w	r9, [pc, #708]	@ 800b6bc <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x32c>
 800b3fa:	4628      	mov	r0, r5
 800b3fc:	4798      	blx	r3
 800b3fe:	f105 0834 	add.w	r8, r5, #52	@ 0x34
 800b402:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 800b406:	80c3      	strh	r3, [r0, #6]
 800b408:	eef0 0a4a 	vmov.f32	s1, s20
 800b40c:	eeb0 0a69 	vmov.f32	s0, s19
 800b410:	4604      	mov	r4, r0
 800b412:	4640      	mov	r0, r8
 800b414:	f004 fe41 	bl	801009a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800b418:	4640      	mov	r0, r8
 800b41a:	eeb0 ba40 	vmov.f32	s22, s0
 800b41e:	eef0 ba60 	vmov.f32	s23, s1
 800b422:	ed8d 0a00 	vstr	s0, [sp]
 800b426:	edcd 0a01 	vstr	s1, [sp, #4]
 800b42a:	eeb0 0a49 	vmov.f32	s0, s18
 800b42e:	eef0 0a68 	vmov.f32	s1, s17
 800b432:	f004 fe32 	bl	801009a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800b436:	eeb4 ba40 	vcmp.f32	s22, s0
 800b43a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b43e:	eef4 ba60 	vcmp.f32	s23, s1
 800b442:	bf0c      	ite	eq
 800b444:	2301      	moveq	r3, #1
 800b446:	2300      	movne	r3, #0
 800b448:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b44c:	eeb4 ba40 	vcmp.f32	s22, s0
 800b450:	7463      	strb	r3, [r4, #17]
 800b452:	bf0c      	ite	eq
 800b454:	2301      	moveq	r3, #1
 800b456:	2300      	movne	r3, #0
 800b458:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b45c:	eeb0 8a40 	vmov.f32	s16, s0
 800b460:	eef0 aa60 	vmov.f32	s21, s1
 800b464:	ed8d 0a02 	vstr	s0, [sp, #8]
 800b468:	edcd 0a03 	vstr	s1, [sp, #12]
 800b46c:	74a3      	strb	r3, [r4, #18]
 800b46e:	d030      	beq.n	800b4d2 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x142>
 800b470:	eef4 ba60 	vcmp.f32	s23, s1
 800b474:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b478:	d02b      	beq.n	800b4d2 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x142>
 800b47a:	ee39 9a69 	vsub.f32	s18, s18, s19
 800b47e:	ee78 8aca 	vsub.f32	s17, s17, s20
 800b482:	ee89 7a0c 	vdiv.f32	s14, s18, s24
 800b486:	4640      	mov	r0, r8
 800b488:	eec8 7aac 	vdiv.f32	s15, s17, s25
 800b48c:	eef0 0a4a 	vmov.f32	s1, s20
 800b490:	eeb0 0a69 	vmov.f32	s0, s19
 800b494:	eea7 0acc 	vfms.f32	s0, s15, s24
 800b498:	eeec 0a87 	vfma.f32	s1, s25, s14
 800b49c:	f004 fdfd 	bl	801009a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800b4a0:	f899 3000 	ldrb.w	r3, [r9]
 800b4a4:	edcd 0a05 	vstr	s1, [sp, #20]
 800b4a8:	ee70 0aeb 	vsub.f32	s1, s1, s23
 800b4ac:	2b01      	cmp	r3, #1
 800b4ae:	ed8d 0a04 	vstr	s0, [sp, #16]
 800b4b2:	ee30 0a4b 	vsub.f32	s0, s0, s22
 800b4b6:	bf02      	ittt	eq
 800b4b8:	eef1 7a60 	vnegeq.f32	s15, s1
 800b4bc:	eef0 0a40 	vmoveq.f32	s1, s0
 800b4c0:	eeb0 0a67 	vmoveq.f32	s0, s15
 800b4c4:	eeb5 0a40 	vcmp.f32	s0, #0.0
 800b4c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b4cc:	d134      	bne.n	800b538 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1a8>
 800b4ce:	2301      	movs	r3, #1
 800b4d0:	74a3      	strb	r3, [r4, #18]
 800b4d2:	f899 2000 	ldrb.w	r2, [r9]
 800b4d6:	7c63      	ldrb	r3, [r4, #17]
 800b4d8:	2a01      	cmp	r2, #1
 800b4da:	f040 80a3 	bne.w	800b624 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x294>
 800b4de:	2b00      	cmp	r3, #0
 800b4e0:	d072      	beq.n	800b5c8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x238>
 800b4e2:	ee3a 7aeb 	vsub.f32	s14, s21, s23
 800b4e6:	eddf 6a73 	vldr	s13, [pc, #460]	@ 800b6b4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 800b4ea:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800b4ee:	eef4 baea 	vcmpe.f32	s23, s21
 800b4f2:	edc4 7a08 	vstr	s15, [r4, #32]
 800b4f6:	eefd 7aea 	vcvt.s32.f32	s15, s21
 800b4fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b4fe:	ee17 3a90 	vmov	r3, s15
 800b502:	eefd 7aeb 	vcvt.s32.f32	s15, s23
 800b506:	b21a      	sxth	r2, r3
 800b508:	ee17 3a90 	vmov	r3, s15
 800b50c:	b21b      	sxth	r3, r3
 800b50e:	bf47      	ittee	mi
 800b510:	8123      	strhmi	r3, [r4, #8]
 800b512:	8162      	strhmi	r2, [r4, #10]
 800b514:	8122      	strhpl	r2, [r4, #8]
 800b516:	8163      	strhpl	r3, [r4, #10]
 800b518:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800b51c:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800b520:	1a9b      	subs	r3, r3, r2
 800b522:	ee07 3a90 	vmov	s15, r3
 800b526:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b52a:	2300      	movs	r3, #0
 800b52c:	7463      	strb	r3, [r4, #17]
 800b52e:	edc4 7a07 	vstr	s15, [r4, #28]
 800b532:	2301      	movs	r3, #1
 800b534:	74a3      	strb	r3, [r4, #18]
 800b536:	e03f      	b.n	800b5b8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800b538:	ee80 7a80 	vdiv.f32	s14, s1, s0
 800b53c:	eeb5 7a40 	vcmp.f32	s14, #0.0
 800b540:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b544:	ed84 7a05 	vstr	s14, [r4, #20]
 800b548:	d102      	bne.n	800b550 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1c0>
 800b54a:	2301      	movs	r3, #1
 800b54c:	7463      	strb	r3, [r4, #17]
 800b54e:	e7c0      	b.n	800b4d2 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x142>
 800b550:	2b01      	cmp	r3, #1
 800b552:	bf03      	ittte	eq
 800b554:	f9b4 2006 	ldrsheq.w	r2, [r4, #6]
 800b558:	ee07 2a90 	vmoveq	s15, r2
 800b55c:	eef8 7ae7 	vcvteq.f32.s32	s15, s15
 800b560:	eef0 7a6b 	vmovne.f32	s15, s23
 800b564:	bf0a      	itet	eq
 800b566:	ee77 7acb 	vsubeq.f32	s15, s15, s22
 800b56a:	eeeb 7a47 	vfmsne.f32	s15, s22, s14
 800b56e:	eeeb 7ac7 	vfmseq.f32	s15, s23, s14
 800b572:	2b01      	cmp	r3, #1
 800b574:	ee38 8a4b 	vsub.f32	s16, s16, s22
 800b578:	ee7a aaeb 	vsub.f32	s21, s21, s23
 800b57c:	edc4 7a06 	vstr	s15, [r4, #24]
 800b580:	bf02      	ittt	eq
 800b582:	eef1 7a48 	vnegeq.f32	s15, s16
 800b586:	eeb0 8a6a 	vmoveq.f32	s16, s21
 800b58a:	eef0 aa67 	vmoveq.f32	s21, s15
 800b58e:	eeca 7a87 	vdiv.f32	s15, s21, s14
 800b592:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 800b6b8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x328>
 800b596:	ee38 8a67 	vsub.f32	s16, s16, s15
 800b59a:	eec7 7a08 	vdiv.f32	s15, s14, s16
 800b59e:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 800b5a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b5a6:	ed84 8a07 	vstr	s16, [r4, #28]
 800b5aa:	edc4 7a08 	vstr	s15, [r4, #32]
 800b5ae:	d503      	bpl.n	800b5b8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800b5b0:	eeb1 8a48 	vneg.f32	s16, s16
 800b5b4:	ed84 8a07 	vstr	s16, [r4, #28]
 800b5b8:	60e7      	str	r7, [r4, #12]
 800b5ba:	7426      	strb	r6, [r4, #16]
 800b5bc:	61ac      	str	r4, [r5, #24]
 800b5be:	b007      	add	sp, #28
 800b5c0:	ecbd 8b0a 	vpop	{d8-d12}
 800b5c4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b5c8:	7ca3      	ldrb	r3, [r4, #18]
 800b5ca:	2b00      	cmp	r3, #0
 800b5cc:	d0f4      	beq.n	800b5b8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800b5ce:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800b5d2:	eddf 6a38 	vldr	s13, [pc, #224]	@ 800b6b4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 800b5d6:	ee00 3a10 	vmov	s0, r3
 800b5da:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 800b5de:	ee30 8a48 	vsub.f32	s16, s0, s16
 800b5e2:	ee30 0a4b 	vsub.f32	s0, s0, s22
 800b5e6:	ee38 7a40 	vsub.f32	s14, s16, s0
 800b5ea:	eeb4 8ac0 	vcmpe.f32	s16, s0
 800b5ee:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800b5f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b5f6:	edc4 7a08 	vstr	s15, [r4, #32]
 800b5fa:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800b5fe:	ee17 3a90 	vmov	r3, s15
 800b602:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800b606:	b21a      	sxth	r2, r3
 800b608:	ee17 3a90 	vmov	r3, s15
 800b60c:	b21b      	sxth	r3, r3
 800b60e:	bfcc      	ite	gt
 800b610:	8123      	strhgt	r3, [r4, #8]
 800b612:	8163      	strhle	r3, [r4, #10]
 800b614:	f04f 0301 	mov.w	r3, #1
 800b618:	7463      	strb	r3, [r4, #17]
 800b61a:	bfcc      	ite	gt
 800b61c:	8162      	strhgt	r2, [r4, #10]
 800b61e:	8122      	strhle	r2, [r4, #8]
 800b620:	2300      	movs	r3, #0
 800b622:	e787      	b.n	800b534 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1a4>
 800b624:	b1db      	cbz	r3, 800b65e <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2ce>
 800b626:	ee3a 7aeb 	vsub.f32	s14, s21, s23
 800b62a:	eddf 6a22 	vldr	s13, [pc, #136]	@ 800b6b4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 800b62e:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800b632:	eef4 baea 	vcmpe.f32	s23, s21
 800b636:	edc4 7a08 	vstr	s15, [r4, #32]
 800b63a:	eefd 7aea 	vcvt.s32.f32	s15, s21
 800b63e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b642:	ee17 3a90 	vmov	r3, s15
 800b646:	eefd 7aeb 	vcvt.s32.f32	s15, s23
 800b64a:	b21a      	sxth	r2, r3
 800b64c:	ee17 3a90 	vmov	r3, s15
 800b650:	b21b      	sxth	r3, r3
 800b652:	bf47      	ittee	mi
 800b654:	8123      	strhmi	r3, [r4, #8]
 800b656:	8162      	strhmi	r2, [r4, #10]
 800b658:	8122      	strhpl	r2, [r4, #8]
 800b65a:	8163      	strhpl	r3, [r4, #10]
 800b65c:	e7ac      	b.n	800b5b8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800b65e:	7ca3      	ldrb	r3, [r4, #18]
 800b660:	2b00      	cmp	r3, #0
 800b662:	d0a9      	beq.n	800b5b8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800b664:	ee38 7a4b 	vsub.f32	s14, s16, s22
 800b668:	eddf 6a12 	vldr	s13, [pc, #72]	@ 800b6b4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x324>
 800b66c:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800b670:	eeb4 bac8 	vcmpe.f32	s22, s16
 800b674:	edc4 7a08 	vstr	s15, [r4, #32]
 800b678:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 800b67c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b680:	ee17 3a90 	vmov	r3, s15
 800b684:	eefd 7acb 	vcvt.s32.f32	s15, s22
 800b688:	b21a      	sxth	r2, r3
 800b68a:	ee17 3a90 	vmov	r3, s15
 800b68e:	b21b      	sxth	r3, r3
 800b690:	bf47      	ittee	mi
 800b692:	8123      	strhmi	r3, [r4, #8]
 800b694:	8162      	strhmi	r2, [r4, #10]
 800b696:	8122      	strhpl	r2, [r4, #8]
 800b698:	8163      	strhpl	r3, [r4, #10]
 800b69a:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800b69e:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800b6a2:	1a9b      	subs	r3, r3, r2
 800b6a4:	ee07 3a90 	vmov	s15, r3
 800b6a8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b6ac:	edc4 7a07 	vstr	s15, [r4, #28]
 800b6b0:	e782      	b.n	800b5b8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x228>
 800b6b2:	bf00      	nop
 800b6b4:	447ffffe 	.word	0x447ffffe
 800b6b8:	44800000 	.word	0x44800000
 800b6bc:	20013086 	.word	0x20013086

0800b6c0 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>:
 800b6c0:	b510      	push	{r4, lr}
 800b6c2:	2100      	movs	r1, #0
 800b6c4:	ed2d 8b02 	vpush	{d8}
 800b6c8:	eef0 8a62 	vmov.f32	s17, s5
 800b6cc:	4604      	mov	r4, r0
 800b6ce:	eeb0 8a42 	vmov.f32	s16, s4
 800b6d2:	f014 fe8b 	bl	80203ec <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
 800b6d6:	eef0 7a68 	vmov.f32	s15, s17
 800b6da:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800b6de:	6823      	ldr	r3, [r4, #0]
 800b6e0:	ee17 2a90 	vmov	r2, s15
 800b6e4:	eef0 7a48 	vmov.f32	s15, s16
 800b6e8:	ecbd 8b02 	vpop	{d8}
 800b6ec:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800b6f0:	4620      	mov	r0, r4
 800b6f2:	689b      	ldr	r3, [r3, #8]
 800b6f4:	ee17 1a90 	vmov	r1, s15
 800b6f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b6fc:	4718      	bx	r3

0800b6fe <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>:
 800b6fe:	b510      	push	{r4, lr}
 800b700:	2100      	movs	r1, #0
 800b702:	ed2d 8b02 	vpush	{d8}
 800b706:	eef0 8a63 	vmov.f32	s17, s7
 800b70a:	4604      	mov	r4, r0
 800b70c:	eeb0 8a43 	vmov.f32	s16, s6
 800b710:	f014 ff2e 	bl	8020570 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
 800b714:	eef0 7a68 	vmov.f32	s15, s17
 800b718:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800b71c:	6823      	ldr	r3, [r4, #0]
 800b71e:	ee17 2a90 	vmov	r2, s15
 800b722:	eef0 7a48 	vmov.f32	s15, s16
 800b726:	ecbd 8b02 	vpop	{d8}
 800b72a:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800b72e:	4620      	mov	r0, r4
 800b730:	689b      	ldr	r3, [r3, #8]
 800b732:	ee17 1a90 	vmov	r1, s15
 800b736:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b73a:	4718      	bx	r3

0800b73c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>:
 800b73c:	b513      	push	{r0, r1, r4, lr}
 800b73e:	4604      	mov	r4, r0
 800b740:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 800b742:	f004 fcaa 	bl	801009a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800b746:	eef0 7a60 	vmov.f32	s15, s1
 800b74a:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800b74e:	4620      	mov	r0, r4
 800b750:	ee17 2a90 	vmov	r2, s15
 800b754:	eef0 7a40 	vmov.f32	s15, s0
 800b758:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800b75c:	ee17 1a90 	vmov	r1, s15
 800b760:	b002      	add	sp, #8
 800b762:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b766:	f014 bd9b 	b.w	80202a0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>

0800b76a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>:
 800b76a:	b513      	push	{r0, r1, r4, lr}
 800b76c:	4604      	mov	r4, r0
 800b76e:	6f40      	ldr	r0, [r0, #116]	@ 0x74
 800b770:	f004 fc93 	bl	801009a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800b774:	eef0 7a60 	vmov.f32	s15, s1
 800b778:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800b77c:	4620      	mov	r0, r4
 800b77e:	ee17 2a90 	vmov	r2, s15
 800b782:	eef0 7a40 	vmov.f32	s15, s0
 800b786:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800b78a:	ee17 1a90 	vmov	r1, s15
 800b78e:	b002      	add	sp, #8
 800b790:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b794:	f014 bdd1 	b.w	802033a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>

0800b798 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>:
 800b798:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b79a:	e9dd 0c05 	ldrd	r0, ip, [sp, #20]
 800b79e:	2400      	movs	r4, #0
 800b7a0:	9f07      	ldr	r7, [sp, #28]
 800b7a2:	4463      	add	r3, ip
 800b7a4:	4626      	mov	r6, r4
 800b7a6:	f04f 0e01 	mov.w	lr, #1
 800b7aa:	4563      	cmp	r3, ip
 800b7ac:	d02d      	beq.n	800b80a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x72>
 800b7ae:	f813 5d01 	ldrb.w	r5, [r3, #-1]!
 800b7b2:	2d06      	cmp	r5, #6
 800b7b4:	d8f9      	bhi.n	800b7aa <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800b7b6:	fa0e f505 	lsl.w	r5, lr, r5
 800b7ba:	f015 0f66 	tst.w	r5, #102	@ 0x66
 800b7be:	d10d      	bne.n	800b7dc <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x44>
 800b7c0:	f015 0f10 	tst.w	r5, #16
 800b7c4:	d117      	bne.n	800b7f6 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5e>
 800b7c6:	072d      	lsls	r5, r5, #28
 800b7c8:	d5ef      	bpl.n	800b7aa <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800b7ca:	3801      	subs	r0, #1
 800b7cc:	b91e      	cbnz	r6, 800b7d6 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x3e>
 800b7ce:	eb07 0580 	add.w	r5, r7, r0, lsl #2
 800b7d2:	682d      	ldr	r5, [r5, #0]
 800b7d4:	600d      	str	r5, [r1, #0]
 800b7d6:	b96c      	cbnz	r4, 800b7f4 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800b7d8:	2601      	movs	r6, #1
 800b7da:	e7e6      	b.n	800b7aa <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800b7dc:	b926      	cbnz	r6, 800b7e8 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x50>
 800b7de:	eb07 0380 	add.w	r3, r7, r0, lsl #2
 800b7e2:	f853 3c08 	ldr.w	r3, [r3, #-8]
 800b7e6:	600b      	str	r3, [r1, #0]
 800b7e8:	b924      	cbnz	r4, 800b7f4 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800b7ea:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800b7ee:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800b7f2:	6013      	str	r3, [r2, #0]
 800b7f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b7f6:	3801      	subs	r0, #1
 800b7f8:	b91c      	cbnz	r4, 800b802 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x6a>
 800b7fa:	eb07 0480 	add.w	r4, r7, r0, lsl #2
 800b7fe:	6824      	ldr	r4, [r4, #0]
 800b800:	6014      	str	r4, [r2, #0]
 800b802:	2e00      	cmp	r6, #0
 800b804:	d1f6      	bne.n	800b7f4 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800b806:	2401      	movs	r4, #1
 800b808:	e7cf      	b.n	800b7aa <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
 800b80a:	b90e      	cbnz	r6, 800b810 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x78>
 800b80c:	2300      	movs	r3, #0
 800b80e:	600b      	str	r3, [r1, #0]
 800b810:	2c00      	cmp	r4, #0
 800b812:	d1ef      	bne.n	800b7f4 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
 800b814:	2300      	movs	r3, #0
 800b816:	e7ec      	b.n	800b7f2 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5a>

0800b818 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>:
 800b818:	b538      	push	{r3, r4, r5, lr}
 800b81a:	4604      	mov	r4, r0
 800b81c:	ed2d 8b0a 	vpush	{d8-d12}
 800b820:	460d      	mov	r5, r1
 800b822:	eef0 ba40 	vmov.f32	s23, s0
 800b826:	eeb0 ca60 	vmov.f32	s24, s1
 800b82a:	eef0 aa41 	vmov.f32	s21, s2
 800b82e:	eeb0 ba61 	vmov.f32	s22, s3
 800b832:	eeb0 9a42 	vmov.f32	s18, s4
 800b836:	eef0 9a62 	vmov.f32	s19, s5
 800b83a:	eeb6 aa00 	vmov.f32	s20, #96	@ 0x3f000000  0.5
 800b83e:	ee7b 8a29 	vadd.f32	s17, s22, s19
 800b842:	ee3a 8a89 	vadd.f32	s16, s21, s18
 800b846:	ee68 8a8a 	vmul.f32	s17, s17, s20
 800b84a:	ee28 8a0a 	vmul.f32	s16, s16, s20
 800b84e:	ee3c 0a68 	vsub.f32	s0, s24, s17
 800b852:	ee7b 7ac8 	vsub.f32	s15, s23, s16
 800b856:	ee20 0a00 	vmul.f32	s0, s0, s0
 800b85a:	eea7 0aa7 	vfma.f32	s0, s15, s15
 800b85e:	f015 f861 	bl	8020924 <sqrtf>
 800b862:	eeb5 0a40 	vcmp.f32	s0, #0.0
 800b866:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b86a:	d12e      	bne.n	800b8ca <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xb2>
 800b86c:	ee79 7a6a 	vsub.f32	s15, s18, s21
 800b870:	ee39 7acb 	vsub.f32	s14, s19, s22
 800b874:	eeb0 8a6a 	vmov.f32	s16, s21
 800b878:	eef0 8a4b 	vmov.f32	s17, s22
 800b87c:	eea7 8a8a 	vfma.f32	s16, s15, s20
 800b880:	eee7 8a0a 	vfma.f32	s17, s14, s20
 800b884:	eea7 8a0a 	vfma.f32	s16, s14, s20
 800b888:	eee7 8aca 	vfms.f32	s17, s15, s20
 800b88c:	2d02      	cmp	r5, #2
 800b88e:	dc2f      	bgt.n	800b8f0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xd8>
 800b890:	3501      	adds	r5, #1
 800b892:	eef0 1a4b 	vmov.f32	s3, s22
 800b896:	eeb0 1a6a 	vmov.f32	s2, s21
 800b89a:	4629      	mov	r1, r5
 800b89c:	eef0 2a68 	vmov.f32	s5, s17
 800b8a0:	eeb0 2a48 	vmov.f32	s4, s16
 800b8a4:	eef0 0a4c 	vmov.f32	s1, s24
 800b8a8:	eeb0 0a6b 	vmov.f32	s0, s23
 800b8ac:	4620      	mov	r0, r4
 800b8ae:	f7ff ffb3 	bl	800b818 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
 800b8b2:	eef0 0a68 	vmov.f32	s1, s17
 800b8b6:	eeb0 0a48 	vmov.f32	s0, s16
 800b8ba:	4620      	mov	r0, r4
 800b8bc:	f7ff ff55 	bl	800b76a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800b8c0:	eeb0 ba68 	vmov.f32	s22, s17
 800b8c4:	eef0 aa48 	vmov.f32	s21, s16
 800b8c8:	e7b9      	b.n	800b83e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x26>
 800b8ca:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
 800b8ce:	ee38 8a6b 	vsub.f32	s16, s16, s23
 800b8d2:	ee78 8acc 	vsub.f32	s17, s17, s24
 800b8d6:	ee28 7a27 	vmul.f32	s14, s16, s15
 800b8da:	ee68 7aa7 	vmul.f32	s15, s17, s15
 800b8de:	ee87 8a00 	vdiv.f32	s16, s14, s0
 800b8e2:	eec7 8a80 	vdiv.f32	s17, s15, s0
 800b8e6:	ee3b 8a88 	vadd.f32	s16, s23, s16
 800b8ea:	ee7c 8a28 	vadd.f32	s17, s24, s17
 800b8ee:	e7cd      	b.n	800b88c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x74>
 800b8f0:	eef0 0a68 	vmov.f32	s1, s17
 800b8f4:	eeb0 0a48 	vmov.f32	s0, s16
 800b8f8:	4620      	mov	r0, r4
 800b8fa:	f7ff ff36 	bl	800b76a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800b8fe:	ecbd 8b0a 	vpop	{d8-d12}
 800b902:	bd38      	pop	{r3, r4, r5, pc}

0800b904 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>:
 800b904:	b510      	push	{r4, lr}
 800b906:	ed2d 8b0a 	vpush	{d8-d12}
 800b90a:	f890 3084 	ldrb.w	r3, [r0, #132]	@ 0x84
 800b90e:	2b02      	cmp	r3, #2
 800b910:	4604      	mov	r4, r0
 800b912:	eeb0 ca40 	vmov.f32	s24, s0
 800b916:	eeb0 9a60 	vmov.f32	s18, s1
 800b91a:	eef0 9a41 	vmov.f32	s19, s2
 800b91e:	eef0 8a61 	vmov.f32	s17, s3
 800b922:	eeb0 ba42 	vmov.f32	s22, s4
 800b926:	eef0 ba62 	vmov.f32	s23, s5
 800b92a:	eeb0 aa43 	vmov.f32	s20, s6
 800b92e:	eef0 aa63 	vmov.f32	s21, s7
 800b932:	eeb0 8a44 	vmov.f32	s16, s8
 800b936:	eef0 ca64 	vmov.f32	s25, s9
 800b93a:	d12c      	bne.n	800b996 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x92>
 800b93c:	eef0 0a62 	vmov.f32	s1, s5
 800b940:	eeb0 0a42 	vmov.f32	s0, s4
 800b944:	f7ff ff11 	bl	800b76a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800b948:	ee79 9acb 	vsub.f32	s19, s19, s22
 800b94c:	ee7a caec 	vsub.f32	s25, s21, s25
 800b950:	ee78 8aeb 	vsub.f32	s17, s17, s23
 800b954:	ee3a 8a48 	vsub.f32	s16, s20, s16
 800b958:	ee69 9aac 	vmul.f32	s19, s19, s25
 800b95c:	ee28 8a88 	vmul.f32	s16, s17, s16
 800b960:	eef4 9ac8 	vcmpe.f32	s19, s16
 800b964:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b968:	db0f      	blt.n	800b98a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>
 800b96a:	2101      	movs	r1, #1
 800b96c:	eef0 2a6a 	vmov.f32	s5, s21
 800b970:	eeb0 2a4a 	vmov.f32	s4, s20
 800b974:	eef0 1a6b 	vmov.f32	s3, s23
 800b978:	eeb0 1a4b 	vmov.f32	s2, s22
 800b97c:	eef0 0a49 	vmov.f32	s1, s18
 800b980:	eeb0 0a4c 	vmov.f32	s0, s24
 800b984:	4620      	mov	r0, r4
 800b986:	f7ff ff47 	bl	800b818 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
 800b98a:	eef0 0a6a 	vmov.f32	s1, s21
 800b98e:	eeb0 0a4a 	vmov.f32	s0, s20
 800b992:	4620      	mov	r0, r4
 800b994:	e035      	b.n	800ba02 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0xfe>
 800b996:	2b01      	cmp	r3, #1
 800b998:	d138      	bne.n	800ba0c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 800b99a:	ee31 4ae2 	vsub.f32	s8, s3, s5
 800b99e:	ee33 6a48 	vsub.f32	s12, s6, s16
 800b9a2:	ee71 7a42 	vsub.f32	s15, s2, s4
 800b9a6:	ee73 6ae4 	vsub.f32	s13, s7, s9
 800b9aa:	ee26 7a44 	vnmul.f32	s14, s12, s8
 800b9ae:	eea7 7aa6 	vfma.f32	s14, s15, s13
 800b9b2:	eeb5 7a40 	vcmp.f32	s14, #0.0
 800b9b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b9ba:	d027      	beq.n	800ba0c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 800b9bc:	ee28 8a63 	vnmul.f32	s16, s16, s7
 800b9c0:	ee61 8ac2 	vnmul.f32	s17, s3, s4
 800b9c4:	eea4 8a83 	vfma.f32	s16, s9, s6
 800b9c8:	eee1 8a22 	vfma.f32	s17, s2, s5
 800b9cc:	ee68 7a67 	vnmul.f32	s15, s16, s15
 800b9d0:	ee28 8a44 	vnmul.f32	s16, s16, s8
 800b9d4:	eee6 7a28 	vfma.f32	s15, s12, s17
 800b9d8:	eea6 8aa8 	vfma.f32	s16, s13, s17
 800b9dc:	ee87 0a87 	vdiv.f32	s0, s15, s14
 800b9e0:	eec8 0a07 	vdiv.f32	s1, s16, s14
 800b9e4:	ee3c ca40 	vsub.f32	s24, s24, s0
 800b9e8:	ee39 9a60 	vsub.f32	s18, s18, s1
 800b9ec:	edd0 7a20 	vldr	s15, [r0, #128]	@ 0x80
 800b9f0:	ee29 9a09 	vmul.f32	s18, s18, s18
 800b9f4:	eeac 9a0c 	vfma.f32	s18, s24, s24
 800b9f8:	eef4 7ac9 	vcmpe.f32	s15, s18
 800b9fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ba00:	db04      	blt.n	800ba0c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
 800ba02:	f7ff feb2 	bl	800b76a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800ba06:	ecbd 8b0a 	vpop	{d8-d12}
 800ba0a:	bd10      	pop	{r4, pc}
 800ba0c:	eef0 0a6b 	vmov.f32	s1, s23
 800ba10:	eeb0 0a4b 	vmov.f32	s0, s22
 800ba14:	4620      	mov	r0, r4
 800ba16:	f7ff fea8 	bl	800b76a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800ba1a:	e7b6      	b.n	800b98a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>

0800ba1c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>:
 800ba1c:	b510      	push	{r4, lr}
 800ba1e:	ed2d 8b0c 	vpush	{d8-d13}
 800ba22:	f890 3085 	ldrb.w	r3, [r0, #133]	@ 0x85
 800ba26:	4604      	mov	r4, r0
 800ba28:	eeb0 9a40 	vmov.f32	s18, s0
 800ba2c:	eef0 9a60 	vmov.f32	s19, s1
 800ba30:	eef0 aa41 	vmov.f32	s21, s2
 800ba34:	eeb0 ba61 	vmov.f32	s22, s3
 800ba38:	b933      	cbnz	r3, 800ba48 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x2c>
 800ba3a:	f7ff fe96 	bl	800b76a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800ba3e:	eef0 0a4b 	vmov.f32	s1, s22
 800ba42:	eeb0 0a6a 	vmov.f32	s0, s21
 800ba46:	e015      	b.n	800ba74 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x58>
 800ba48:	ee71 8a40 	vsub.f32	s17, s2, s0
 800ba4c:	ee31 8ae0 	vsub.f32	s16, s3, s1
 800ba50:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 800ba54:	2b02      	cmp	r3, #2
 800ba56:	ee68 8aa7 	vmul.f32	s17, s17, s15
 800ba5a:	ee28 8a27 	vmul.f32	s16, s16, s15
 800ba5e:	d10f      	bne.n	800ba80 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x64>
 800ba60:	ee70 0ae8 	vsub.f32	s1, s1, s17
 800ba64:	ee30 0a08 	vadd.f32	s0, s0, s16
 800ba68:	f7ff fe7f 	bl	800b76a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800ba6c:	ee7b 0a68 	vsub.f32	s1, s22, s17
 800ba70:	ee3a 0a88 	vadd.f32	s0, s21, s16
 800ba74:	4620      	mov	r0, r4
 800ba76:	f7ff fe78 	bl	800b76a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800ba7a:	ecbd 8b0c 	vpop	{d8-d13}
 800ba7e:	bd10      	pop	{r4, pc}
 800ba80:	f7ff fe73 	bl	800b76a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800ba84:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 800bbbc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a0>
 800ba88:	eddf ba4d 	vldr	s23, [pc, #308]	@ 800bbc0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a4>
 800ba8c:	ed9f ca4d 	vldr	s24, [pc, #308]	@ 800bbc4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a8>
 800ba90:	eddf ca4d 	vldr	s25, [pc, #308]	@ 800bbc8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1ac>
 800ba94:	ed9f da4d 	vldr	s26, [pc, #308]	@ 800bbcc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b0>
 800ba98:	eef0 0a69 	vmov.f32	s1, s19
 800ba9c:	eeb0 0a49 	vmov.f32	s0, s18
 800baa0:	eee8 0a27 	vfma.f32	s1, s16, s15
 800baa4:	4620      	mov	r0, r4
 800baa6:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800baaa:	eeb1 aa68 	vneg.f32	s20, s17
 800baae:	eeea 0a2b 	vfma.f32	s1, s20, s23
 800bab2:	eea8 0a2b 	vfma.f32	s0, s16, s23
 800bab6:	f7ff fe58 	bl	800b76a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800baba:	eddf 7a45 	vldr	s15, [pc, #276]	@ 800bbd0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b4>
 800babe:	eef0 0a69 	vmov.f32	s1, s19
 800bac2:	eeb0 0a49 	vmov.f32	s0, s18
 800bac6:	eee8 0a27 	vfma.f32	s1, s16, s15
 800baca:	4620      	mov	r0, r4
 800bacc:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800bad0:	eeea 0a0c 	vfma.f32	s1, s20, s24
 800bad4:	eea8 0a0c 	vfma.f32	s0, s16, s24
 800bad8:	f7ff fe47 	bl	800b76a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800badc:	eddf 7a3d 	vldr	s15, [pc, #244]	@ 800bbd4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b8>
 800bae0:	eef0 0a69 	vmov.f32	s1, s19
 800bae4:	eeb0 0a49 	vmov.f32	s0, s18
 800bae8:	eee8 0a27 	vfma.f32	s1, s16, s15
 800baec:	4620      	mov	r0, r4
 800baee:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800baf2:	eeea 0a2c 	vfma.f32	s1, s20, s25
 800baf6:	eea8 0a2c 	vfma.f32	s0, s16, s25
 800bafa:	f7ff fe36 	bl	800b76a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800bafe:	eddf 7a36 	vldr	s15, [pc, #216]	@ 800bbd8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1bc>
 800bb02:	eef0 0a69 	vmov.f32	s1, s19
 800bb06:	eeb0 0a49 	vmov.f32	s0, s18
 800bb0a:	eee8 0a27 	vfma.f32	s1, s16, s15
 800bb0e:	4620      	mov	r0, r4
 800bb10:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800bb14:	eeea 0a0d 	vfma.f32	s1, s20, s26
 800bb18:	eea8 0a0d 	vfma.f32	s0, s16, s26
 800bb1c:	f7ff fe25 	bl	800b76a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800bb20:	ee79 0a88 	vadd.f32	s1, s19, s16
 800bb24:	ee39 0a28 	vadd.f32	s0, s18, s17
 800bb28:	ee70 0ae8 	vsub.f32	s1, s1, s17
 800bb2c:	ee30 0a08 	vadd.f32	s0, s0, s16
 800bb30:	4620      	mov	r0, r4
 800bb32:	f7ff fe1a 	bl	800b76a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800bb36:	eddf 7a29 	vldr	s15, [pc, #164]	@ 800bbdc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c0>
 800bb3a:	eef0 0a69 	vmov.f32	s1, s19
 800bb3e:	eeb0 0a49 	vmov.f32	s0, s18
 800bb42:	eee8 0a27 	vfma.f32	s1, s16, s15
 800bb46:	4620      	mov	r0, r4
 800bb48:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800bb4c:	eeea 0a0d 	vfma.f32	s1, s20, s26
 800bb50:	eea8 0a0d 	vfma.f32	s0, s16, s26
 800bb54:	f7ff fe09 	bl	800b76a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800bb58:	eddf 7a21 	vldr	s15, [pc, #132]	@ 800bbe0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c4>
 800bb5c:	eef0 0a69 	vmov.f32	s1, s19
 800bb60:	eeb0 0a49 	vmov.f32	s0, s18
 800bb64:	eee8 0a27 	vfma.f32	s1, s16, s15
 800bb68:	4620      	mov	r0, r4
 800bb6a:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800bb6e:	eeea 0a2c 	vfma.f32	s1, s20, s25
 800bb72:	eea8 0a2c 	vfma.f32	s0, s16, s25
 800bb76:	f7ff fdf8 	bl	800b76a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800bb7a:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 800bbe4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c8>
 800bb7e:	eef0 0a69 	vmov.f32	s1, s19
 800bb82:	eeb0 0a49 	vmov.f32	s0, s18
 800bb86:	eee8 0a27 	vfma.f32	s1, s16, s15
 800bb8a:	4620      	mov	r0, r4
 800bb8c:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800bb90:	eeea 0a0c 	vfma.f32	s1, s20, s24
 800bb94:	eea8 0a0c 	vfma.f32	s0, s16, s24
 800bb98:	f7ff fde7 	bl	800b76a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
 800bb9c:	eddf 7a12 	vldr	s15, [pc, #72]	@ 800bbe8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1cc>
 800bba0:	eef0 0a69 	vmov.f32	s1, s19
 800bba4:	eeb0 0a49 	vmov.f32	s0, s18
 800bba8:	eee8 0a27 	vfma.f32	s1, s16, s15
 800bbac:	4620      	mov	r0, r4
 800bbae:	eea8 0aa7 	vfma.f32	s0, s17, s15
 800bbb2:	eeea 0a2b 	vfma.f32	s1, s20, s23
 800bbb6:	eea8 0a2b 	vfma.f32	s0, s16, s23
 800bbba:	e73e      	b.n	800ba3a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1e>
 800bbbc:	3d23d70a 	.word	0x3d23d70a
 800bbc0:	3e8f5c29 	.word	0x3e8f5c29
 800bbc4:	3f19999a 	.word	0x3f19999a
 800bbc8:	3f4ccccd 	.word	0x3f4ccccd
 800bbcc:	3f75c28f 	.word	0x3f75c28f
 800bbd0:	3e4ccccd 	.word	0x3e4ccccd
 800bbd4:	3ecccccd 	.word	0x3ecccccd
 800bbd8:	3f3851ec 	.word	0x3f3851ec
 800bbdc:	3fa3d70a 	.word	0x3fa3d70a
 800bbe0:	3fcccccd 	.word	0x3fcccccd
 800bbe4:	3fe66666 	.word	0x3fe66666
 800bbe8:	3ffae148 	.word	0x3ffae148

0800bbec <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>:
 800bbec:	b570      	push	{r4, r5, r6, lr}
 800bbee:	ed2d 8b06 	vpush	{d8-d10}
 800bbf2:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
 800bbf6:	ed90 9a22 	vldr	s18, [r0, #136]	@ 0x88
 800bbfa:	ee30 8ac8 	vsub.f32	s16, s1, s16
 800bbfe:	ee30 9a49 	vsub.f32	s18, s0, s18
 800bc02:	eef0 aa40 	vmov.f32	s21, s0
 800bc06:	ee28 0a08 	vmul.f32	s0, s16, s16
 800bc0a:	4604      	mov	r4, r0
 800bc0c:	eea9 0a09 	vfma.f32	s0, s18, s18
 800bc10:	eeb0 aa60 	vmov.f32	s20, s1
 800bc14:	f014 fe86 	bl	8020924 <sqrtf>
 800bc18:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800bc1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bc20:	dd36      	ble.n	800bc90 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xa4>
 800bc22:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
 800bc26:	edd4 0a23 	vldr	s1, [r4, #140]	@ 0x8c
 800bc2a:	f894 5078 	ldrb.w	r5, [r4, #120]	@ 0x78
 800bc2e:	eec0 6a27 	vdiv.f32	s13, s0, s15
 800bc32:	2600      	movs	r6, #0
 800bc34:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 800bc38:	ed94 0a22 	vldr	s0, [r4, #136]	@ 0x88
 800bc3c:	eec8 8a26 	vdiv.f32	s17, s16, s13
 800bc40:	ee89 8a26 	vdiv.f32	s16, s18, s13
 800bc44:	ee70 9a28 	vadd.f32	s19, s0, s17
 800bc48:	ee30 9ac8 	vsub.f32	s18, s1, s16
 800bc4c:	ee78 8aaa 	vadd.f32	s17, s17, s21
 800bc50:	ee3a 8a48 	vsub.f32	s16, s20, s16
 800bc54:	b1fd      	cbz	r5, 800bc96 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xaa>
 800bc56:	edc4 9a24 	vstr	s19, [r4, #144]	@ 0x90
 800bc5a:	ed84 9a25 	vstr	s18, [r4, #148]	@ 0x94
 800bc5e:	edc4 8a26 	vstr	s17, [r4, #152]	@ 0x98
 800bc62:	ed84 8a27 	vstr	s16, [r4, #156]	@ 0x9c
 800bc66:	eef0 0a49 	vmov.f32	s1, s18
 800bc6a:	eeb0 0a69 	vmov.f32	s0, s19
 800bc6e:	4620      	mov	r0, r4
 800bc70:	f7ff fd64 	bl	800b73c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
 800bc74:	f884 6078 	strb.w	r6, [r4, #120]	@ 0x78
 800bc78:	edc4 9a28 	vstr	s19, [r4, #160]	@ 0xa0
 800bc7c:	ed84 9a29 	vstr	s18, [r4, #164]	@ 0xa4
 800bc80:	edc4 8a2a 	vstr	s17, [r4, #168]	@ 0xa8
 800bc84:	ed84 8a2b 	vstr	s16, [r4, #172]	@ 0xac
 800bc88:	edc4 aa22 	vstr	s21, [r4, #136]	@ 0x88
 800bc8c:	ed84 aa23 	vstr	s20, [r4, #140]	@ 0x8c
 800bc90:	ecbd 8b06 	vpop	{d8-d10}
 800bc94:	bd70      	pop	{r4, r5, r6, pc}
 800bc96:	f894 307a 	ldrb.w	r3, [r4, #122]	@ 0x7a
 800bc9a:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
 800bc9e:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
 800bca2:	b16b      	cbz	r3, 800bcc0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xd4>
 800bca4:	eef0 1a49 	vmov.f32	s3, s18
 800bca8:	eeb0 1a69 	vmov.f32	s2, s19
 800bcac:	eef0 0a62 	vmov.f32	s1, s5
 800bcb0:	eeb0 0a42 	vmov.f32	s0, s4
 800bcb4:	4620      	mov	r0, r4
 800bcb6:	f7ff feb1 	bl	800ba1c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 800bcba:	f884 507a 	strb.w	r5, [r4, #122]	@ 0x7a
 800bcbe:	e7db      	b.n	800bc78 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>
 800bcc0:	eef0 4a48 	vmov.f32	s9, s16
 800bcc4:	eeb0 4a68 	vmov.f32	s8, s17
 800bcc8:	eef0 3a49 	vmov.f32	s7, s18
 800bccc:	eeb0 3a69 	vmov.f32	s6, s19
 800bcd0:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
 800bcd4:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
 800bcd8:	4620      	mov	r0, r4
 800bcda:	f7ff fe13 	bl	800b904 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
 800bcde:	e7cb      	b.n	800bc78 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>

0800bce0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_>:
 800bce0:	ee07 2a90 	vmov	s15, r2
 800bce4:	ee07 1a10 	vmov	s14, r1
 800bce8:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 800bcec:	eeb8 0ac7 	vcvt.f32.s32	s0, s14
 800bcf0:	eddf 7a03 	vldr	s15, [pc, #12]	@ 800bd00 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_+0x20>
 800bcf4:	ee60 0aa7 	vmul.f32	s1, s1, s15
 800bcf8:	ee20 0a27 	vmul.f32	s0, s0, s15
 800bcfc:	f7ff bf76 	b.w	800bbec <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800bd00:	3d000000 	.word	0x3d000000

0800bd04 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>:
 800bd04:	b538      	push	{r3, r4, r5, lr}
 800bd06:	ed2d 8b02 	vpush	{d8}
 800bd0a:	f890 5079 	ldrb.w	r5, [r0, #121]	@ 0x79
 800bd0e:	4604      	mov	r4, r0
 800bd10:	b31d      	cbz	r5, 800bd5a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv+0x56>
 800bd12:	edd0 7a1f 	vldr	s15, [r0, #124]	@ 0x7c
 800bd16:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
 800bd1a:	ed90 0a22 	vldr	s0, [r0, #136]	@ 0x88
 800bd1e:	ee78 8a67 	vsub.f32	s17, s16, s15
 800bd22:	ee38 8a27 	vadd.f32	s16, s16, s15
 800bd26:	eef0 0a68 	vmov.f32	s1, s17
 800bd2a:	f7ff fd07 	bl	800b73c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
 800bd2e:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
 800bd32:	eef0 1a48 	vmov.f32	s3, s16
 800bd36:	eeb0 0a41 	vmov.f32	s0, s2
 800bd3a:	eef0 0a68 	vmov.f32	s1, s17
 800bd3e:	4620      	mov	r0, r4
 800bd40:	f7ff fe6c 	bl	800ba1c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 800bd44:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
 800bd48:	eef0 1a68 	vmov.f32	s3, s17
 800bd4c:	eef0 0a48 	vmov.f32	s1, s16
 800bd50:	eeb0 0a41 	vmov.f32	s0, s2
 800bd54:	4620      	mov	r0, r4
 800bd56:	f7ff fe61 	bl	800ba1c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
 800bd5a:	ecbd 8b02 	vpop	{d8}
 800bd5e:	4628      	mov	r0, r5
 800bd60:	bd38      	pop	{r3, r4, r5, pc}

0800bd62 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>:
 800bd62:	b510      	push	{r4, lr}
 800bd64:	ed2d 8b02 	vpush	{d8}
 800bd68:	4604      	mov	r4, r0
 800bd6a:	eeb0 8a40 	vmov.f32	s16, s0
 800bd6e:	eef0 8a60 	vmov.f32	s17, s1
 800bd72:	f7ff ffc7 	bl	800bd04 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800bd76:	b9d0      	cbnz	r0, 800bdae <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x4c>
 800bd78:	4620      	mov	r0, r4
 800bd7a:	edd4 4a27 	vldr	s9, [r4, #156]	@ 0x9c
 800bd7e:	ed94 4a26 	vldr	s8, [r4, #152]	@ 0x98
 800bd82:	edd4 3a25 	vldr	s7, [r4, #148]	@ 0x94
 800bd86:	ed94 3a24 	vldr	s6, [r4, #144]	@ 0x90
 800bd8a:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
 800bd8e:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
 800bd92:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
 800bd96:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
 800bd9a:	eef0 0a68 	vmov.f32	s1, s17
 800bd9e:	eeb0 0a48 	vmov.f32	s0, s16
 800bda2:	f7ff fdaf 	bl	800b904 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
 800bda6:	2001      	movs	r0, #1
 800bda8:	ecbd 8b02 	vpop	{d8}
 800bdac:	bd10      	pop	{r4, pc}
 800bdae:	2000      	movs	r0, #0
 800bdb0:	e7fa      	b.n	800bda8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x46>

0800bdb2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>:
 800bdb2:	edd0 1a25 	vldr	s3, [r0, #148]	@ 0x94
 800bdb6:	ed90 1a24 	vldr	s2, [r0, #144]	@ 0x90
 800bdba:	edd0 0a2b 	vldr	s1, [r0, #172]	@ 0xac
 800bdbe:	ed90 0a2a 	vldr	s0, [r0, #168]	@ 0xa8
 800bdc2:	f7ff be2b 	b.w	800ba1c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
	...

0800bdc8 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>:
 800bdc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bdcc:	b089      	sub	sp, #36	@ 0x24
 800bdce:	461c      	mov	r4, r3
 800bdd0:	f10d 0820 	add.w	r8, sp, #32
 800bdd4:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800bdd8:	9304      	str	r3, [sp, #16]
 800bdda:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 800bddc:	9105      	str	r1, [sp, #20]
 800bdde:	2300      	movs	r3, #0
 800bde0:	e9dd 9712 	ldrd	r9, r7, [sp, #72]	@ 0x48
 800bde4:	9306      	str	r3, [sp, #24]
 800bde6:	f848 3d04 	str.w	r3, [r8, #-4]!
 800bdea:	9b04      	ldr	r3, [sp, #16]
 800bdec:	f886 307a 	strb.w	r3, [r6, #122]	@ 0x7a
 800bdf0:	4682      	mov	sl, r0
 800bdf2:	4615      	mov	r5, r2
 800bdf4:	9b05      	ldr	r3, [sp, #20]
 800bdf6:	429d      	cmp	r5, r3
 800bdf8:	d96d      	bls.n	800bed6 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x10e>
 800bdfa:	3d01      	subs	r5, #1
 800bdfc:	f819 3005 	ldrb.w	r3, [r9, r5]
 800be00:	2b06      	cmp	r3, #6
 800be02:	d8f7      	bhi.n	800bdf4 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 800be04:	a201      	add	r2, pc, #4	@ (adr r2, 800be0c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x44>)
 800be06:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800be0a:	bf00      	nop
 800be0c:	0800be2b 	.word	0x0800be2b
 800be10:	0800bdf5 	.word	0x0800bdf5
 800be14:	0800be29 	.word	0x0800be29
 800be18:	0800be4d 	.word	0x0800be4d
 800be1c:	0800be4d 	.word	0x0800be4d
 800be20:	0800be51 	.word	0x0800be51
 800be24:	0800be91 	.word	0x0800be91
 800be28:	3c02      	subs	r4, #2
 800be2a:	4650      	mov	r0, sl
 800be2c:	e9cd 9701 	strd	r9, r7, [sp, #4]
 800be30:	9400      	str	r4, [sp, #0]
 800be32:	462b      	mov	r3, r5
 800be34:	4642      	mov	r2, r8
 800be36:	a906      	add	r1, sp, #24
 800be38:	f7ff fcae 	bl	800b798 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 800be3c:	eddd 0a07 	vldr	s1, [sp, #28]
 800be40:	ed9d 0a06 	vldr	s0, [sp, #24]
 800be44:	4630      	mov	r0, r6
 800be46:	f7ff fed1 	bl	800bbec <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800be4a:	e7d3      	b.n	800bdf4 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 800be4c:	3c01      	subs	r4, #1
 800be4e:	e7ec      	b.n	800be2a <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x62>
 800be50:	f1a4 0b04 	sub.w	fp, r4, #4
 800be54:	3c02      	subs	r4, #2
 800be56:	eb07 0484 	add.w	r4, r7, r4, lsl #2
 800be5a:	4650      	mov	r0, sl
 800be5c:	e9cd 9701 	strd	r9, r7, [sp, #4]
 800be60:	f8cd b000 	str.w	fp, [sp]
 800be64:	462b      	mov	r3, r5
 800be66:	4642      	mov	r2, r8
 800be68:	a906      	add	r1, sp, #24
 800be6a:	f7ff fc95 	bl	800b798 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 800be6e:	eddd 2a07 	vldr	s5, [sp, #28]
 800be72:	ed9d 2a06 	vldr	s4, [sp, #24]
 800be76:	ed54 1a01 	vldr	s3, [r4, #-4]
 800be7a:	ed14 1a02 	vldr	s2, [r4, #-8]
 800be7e:	edd4 0a01 	vldr	s1, [r4, #4]
 800be82:	ed94 0a00 	vldr	s0, [r4]
 800be86:	4630      	mov	r0, r6
 800be88:	f7ff fc1a 	bl	800b6c0 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 800be8c:	465c      	mov	r4, fp
 800be8e:	e7b1      	b.n	800bdf4 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
 800be90:	f1a4 0b06 	sub.w	fp, r4, #6
 800be94:	3c02      	subs	r4, #2
 800be96:	eb07 0484 	add.w	r4, r7, r4, lsl #2
 800be9a:	4650      	mov	r0, sl
 800be9c:	e9cd 9701 	strd	r9, r7, [sp, #4]
 800bea0:	f8cd b000 	str.w	fp, [sp]
 800bea4:	462b      	mov	r3, r5
 800bea6:	4642      	mov	r2, r8
 800bea8:	a906      	add	r1, sp, #24
 800beaa:	f7ff fc75 	bl	800b798 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
 800beae:	eddd 3a07 	vldr	s7, [sp, #28]
 800beb2:	ed9d 3a06 	vldr	s6, [sp, #24]
 800beb6:	ed54 2a03 	vldr	s5, [r4, #-12]
 800beba:	ed14 2a04 	vldr	s4, [r4, #-16]
 800bebe:	ed54 1a01 	vldr	s3, [r4, #-4]
 800bec2:	ed14 1a02 	vldr	s2, [r4, #-8]
 800bec6:	edd4 0a01 	vldr	s1, [r4, #4]
 800beca:	ed94 0a00 	vldr	s0, [r4]
 800bece:	4630      	mov	r0, r6
 800bed0:	f7ff fc15 	bl	800b6fe <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 800bed4:	e7da      	b.n	800be8c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0xc4>
 800bed6:	9b04      	ldr	r3, [sp, #16]
 800bed8:	b113      	cbz	r3, 800bee0 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x118>
 800beda:	4630      	mov	r0, r6
 800bedc:	f7ff ff69 	bl	800bdb2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>
 800bee0:	b009      	add	sp, #36	@ 0x24
 800bee2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bee6:	bf00      	nop

0800bee8 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>:
 800bee8:	eef0 7a60 	vmov.f32	s15, s1
 800beec:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800bef0:	6803      	ldr	r3, [r0, #0]
 800bef2:	ee17 2a90 	vmov	r2, s15
 800bef6:	eef0 7a40 	vmov.f32	s15, s0
 800befa:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800befe:	689b      	ldr	r3, [r3, #8]
 800bf00:	ee17 1a90 	vmov	r1, s15
 800bf04:	4718      	bx	r3
	...

0800bf08 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>:
 800bf08:	b510      	push	{r4, lr}
 800bf0a:	4b04      	ldr	r3, [pc, #16]	@ (800bf1c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev+0x14>)
 800bf0c:	4604      	mov	r4, r0
 800bf0e:	f840 3b14 	str.w	r3, [r0], #20
 800bf12:	f000 fbff 	bl	800c714 <_ZN8touchgfx7OutlineD1Ev>
 800bf16:	4620      	mov	r0, r4
 800bf18:	bd10      	pop	{r4, pc}
 800bf1a:	bf00      	nop
 800bf1c:	08023e90 	.word	0x08023e90

0800bf20 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>:
 800bf20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bf24:	ed2d 8b04 	vpush	{d8-d9}
 800bf28:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
 800bf2c:	b0b5      	sub	sp, #212	@ 0xd4
 800bf2e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800bf32:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bf36:	4605      	mov	r5, r0
 800bf38:	468b      	mov	fp, r1
 800bf3a:	9206      	str	r2, [sp, #24]
 800bf3c:	461e      	mov	r6, r3
 800bf3e:	f04f 0400 	mov.w	r4, #0
 800bf42:	f240 814e 	bls.w	800c1e2 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c2>
 800bf46:	23ff      	movs	r3, #255	@ 0xff
 800bf48:	9300      	str	r3, [sp, #0]
 800bf4a:	1d02      	adds	r2, r0, #4
 800bf4c:	6981      	ldr	r1, [r0, #24]
 800bf4e:	9b43      	ldr	r3, [sp, #268]	@ 0x10c
 800bf50:	ed9f 9aa5 	vldr	s18, [pc, #660]	@ 800c1e8 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c8>
 800bf54:	a808      	add	r0, sp, #32
 800bf56:	f014 f857 	bl	8020008 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 800bf5a:	edd5 7a0c 	vldr	s15, [r5, #48]	@ 0x30
 800bf5e:	4ba3      	ldr	r3, [pc, #652]	@ (800c1ec <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2cc>)
 800bf60:	edd5 6a08 	vldr	s13, [r5, #32]
 800bf64:	9308      	str	r3, [sp, #32]
 800bf66:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800bf6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bf6e:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 800bf72:	bf48      	it	mi
 800bf74:	eef1 7a67 	vnegmi.f32	s15, s15
 800bf78:	ee67 7a87 	vmul.f32	s15, s15, s14
 800bf7c:	f105 0334 	add.w	r3, r5, #52	@ 0x34
 800bf80:	2201      	movs	r2, #1
 800bf82:	9325      	str	r3, [sp, #148]	@ 0x94
 800bf84:	2300      	movs	r3, #0
 800bf86:	ee26 7aa7 	vmul.f32	s14, s13, s15
 800bf8a:	f88d 3098 	strb.w	r3, [sp, #152]	@ 0x98
 800bf8e:	f88d 2099 	strb.w	r2, [sp, #153]	@ 0x99
 800bf92:	f88d 309a 	strb.w	r3, [sp, #154]	@ 0x9a
 800bf96:	f88d 3064 	strb.w	r3, [sp, #100]	@ 0x64
 800bf9a:	7f6a      	ldrb	r2, [r5, #29]
 800bf9c:	7fab      	ldrb	r3, [r5, #30]
 800bf9e:	edcd 7a27 	vstr	s15, [sp, #156]	@ 0x9c
 800bfa2:	435a      	muls	r2, r3
 800bfa4:	ee27 7a26 	vmul.f32	s14, s14, s13
 800bfa8:	1c53      	adds	r3, r2, #1
 800bfaa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 800bfae:	ee67 7a27 	vmul.f32	s15, s14, s15
 800bfb2:	f04f 0800 	mov.w	r8, #0
 800bfb6:	f895 0024 	ldrb.w	r0, [r5, #36]	@ 0x24
 800bfba:	f895 1025 	ldrb.w	r1, [r5, #37]	@ 0x25
 800bfbe:	942a      	str	r4, [sp, #168]	@ 0xa8
 800bfc0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 800bfc4:	942b      	str	r4, [sp, #172]	@ 0xac
 800bfc6:	942c      	str	r4, [sp, #176]	@ 0xb0
 800bfc8:	942d      	str	r4, [sp, #180]	@ 0xb4
 800bfca:	942e      	str	r4, [sp, #184]	@ 0xb8
 800bfcc:	942f      	str	r4, [sp, #188]	@ 0xbc
 800bfce:	9430      	str	r4, [sp, #192]	@ 0xc0
 800bfd0:	9431      	str	r4, [sp, #196]	@ 0xc4
 800bfd2:	9432      	str	r4, [sp, #200]	@ 0xc8
 800bfd4:	9433      	str	r4, [sp, #204]	@ 0xcc
 800bfd6:	edcd 7a28 	vstr	s15, [sp, #160]	@ 0xa0
 800bfda:	f88d 00a4 	strb.w	r0, [sp, #164]	@ 0xa4
 800bfde:	f88d 10a5 	strb.w	r1, [sp, #165]	@ 0xa5
 800bfe2:	f88d 30a6 	strb.w	r3, [sp, #166]	@ 0xa6
 800bfe6:	eef0 9a49 	vmov.f32	s19, s18
 800bfea:	eeb0 8a49 	vmov.f32	s16, s18
 800bfee:	eef0 8a49 	vmov.f32	s17, s18
 800bff2:	4644      	mov	r4, r8
 800bff4:	46c1      	mov	r9, r8
 800bff6:	af08      	add	r7, sp, #32
 800bff8:	f04f 0a01 	mov.w	sl, #1
 800bffc:	9b06      	ldr	r3, [sp, #24]
 800bffe:	454b      	cmp	r3, r9
 800c000:	f000 80cc 	beq.w	800c19c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x27c>
 800c004:	f109 0301 	add.w	r3, r9, #1
 800c008:	9305      	str	r3, [sp, #20]
 800c00a:	f81b 3009 	ldrb.w	r3, [fp, r9]
 800c00e:	2b06      	cmp	r3, #6
 800c010:	d839      	bhi.n	800c086 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800c012:	e8df f003 	tbb	[pc, r3]
 800c016:	3b04      	.short	0x3b04
 800c018:	817c6f60 	.word	0x817c6f60
 800c01c:	a0          	.byte	0xa0
 800c01d:	00          	.byte	0x00
 800c01e:	45c1      	cmp	r9, r8
 800c020:	d92b      	bls.n	800c07a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
 800c022:	eef0 0a49 	vmov.f32	s1, s18
 800c026:	eeb0 0a69 	vmov.f32	s0, s19
 800c02a:	4638      	mov	r0, r7
 800c02c:	f7ff fdde 	bl	800bbec <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800c030:	4638      	mov	r0, r7
 800c032:	f7ff fe67 	bl	800bd04 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800c036:	4681      	mov	r9, r0
 800c038:	b9f8      	cbnz	r0, 800c07a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
 800c03a:	eef0 0a49 	vmov.f32	s1, s18
 800c03e:	eeb0 0a69 	vmov.f32	s0, s19
 800c042:	4638      	mov	r0, r7
 800c044:	f7ff fe8d 	bl	800bd62 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
 800c048:	4628      	mov	r0, r5
 800c04a:	e9cd 9702 	strd	r9, r7, [sp, #8]
 800c04e:	e9cd b600 	strd	fp, r6, [sp]
 800c052:	4623      	mov	r3, r4
 800c054:	9a05      	ldr	r2, [sp, #20]
 800c056:	edcd 9a2a 	vstr	s19, [sp, #168]	@ 0xa8
 800c05a:	4641      	mov	r1, r8
 800c05c:	ed8d 9a2b 	vstr	s18, [sp, #172]	@ 0xac
 800c060:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
 800c064:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
 800c068:	f7ff feae 	bl	800bdc8 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 800c06c:	eef0 0a49 	vmov.f32	s1, s18
 800c070:	eeb0 0a69 	vmov.f32	s0, s19
 800c074:	4638      	mov	r0, r7
 800c076:	f7ff fe74 	bl	800bd62 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
 800c07a:	f8dd 8014 	ldr.w	r8, [sp, #20]
 800c07e:	eeb0 8a49 	vmov.f32	s16, s18
 800c082:	eef0 8a69 	vmov.f32	s17, s19
 800c086:	f8dd 9014 	ldr.w	r9, [sp, #20]
 800c08a:	e7b7      	b.n	800bffc <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0xdc>
 800c08c:	45c1      	cmp	r9, r8
 800c08e:	d90d      	bls.n	800c0ac <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
 800c090:	4638      	mov	r0, r7
 800c092:	f7ff fe37 	bl	800bd04 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800c096:	b948      	cbnz	r0, 800c0ac <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
 800c098:	e9cd a702 	strd	sl, r7, [sp, #8]
 800c09c:	e9cd b600 	strd	fp, r6, [sp]
 800c0a0:	4623      	mov	r3, r4
 800c0a2:	464a      	mov	r2, r9
 800c0a4:	4641      	mov	r1, r8
 800c0a6:	4628      	mov	r0, r5
 800c0a8:	f7ff fe8e 	bl	800bdc8 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 800c0ac:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800c0b0:	edd3 8a00 	vldr	s17, [r3]
 800c0b4:	ed93 8a01 	vldr	s16, [r3, #4]
 800c0b8:	edcd 8a2a 	vstr	s17, [sp, #168]	@ 0xa8
 800c0bc:	ed8d 8a2b 	vstr	s16, [sp, #172]	@ 0xac
 800c0c0:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
 800c0c4:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
 800c0c8:	3402      	adds	r4, #2
 800c0ca:	46c8      	mov	r8, r9
 800c0cc:	eeb0 9a48 	vmov.f32	s18, s16
 800c0d0:	eef0 9a68 	vmov.f32	s19, s17
 800c0d4:	e7d7      	b.n	800c086 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800c0d6:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800c0da:	edd3 8a00 	vldr	s17, [r3]
 800c0de:	ed93 8a01 	vldr	s16, [r3, #4]
 800c0e2:	eeb0 0a68 	vmov.f32	s0, s17
 800c0e6:	eef0 0a48 	vmov.f32	s1, s16
 800c0ea:	4638      	mov	r0, r7
 800c0ec:	f7ff fd7e 	bl	800bbec <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800c0f0:	3402      	adds	r4, #2
 800c0f2:	e7c8      	b.n	800c086 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800c0f4:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800c0f8:	edd3 8a00 	vldr	s17, [r3]
 800c0fc:	eef0 0a48 	vmov.f32	s1, s16
 800c100:	eeb0 0a68 	vmov.f32	s0, s17
 800c104:	4638      	mov	r0, r7
 800c106:	f7ff fd71 	bl	800bbec <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
 800c10a:	3401      	adds	r4, #1
 800c10c:	e7bb      	b.n	800c086 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800c10e:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800c112:	ed93 8a00 	vldr	s16, [r3]
 800c116:	e7f1      	b.n	800c0fc <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x1dc>
 800c118:	00a3      	lsls	r3, r4, #2
 800c11a:	f103 0208 	add.w	r2, r3, #8
 800c11e:	f103 090c 	add.w	r9, r3, #12
 800c122:	4432      	add	r2, r6
 800c124:	4433      	add	r3, r6
 800c126:	44b1      	add	r9, r6
 800c128:	ed92 2a00 	vldr	s4, [r2]
 800c12c:	edd9 2a00 	vldr	s5, [r9]
 800c130:	edd3 1a01 	vldr	s3, [r3, #4]
 800c134:	ed93 1a00 	vldr	s2, [r3]
 800c138:	9207      	str	r2, [sp, #28]
 800c13a:	eef0 0a48 	vmov.f32	s1, s16
 800c13e:	eeb0 0a68 	vmov.f32	s0, s17
 800c142:	4638      	mov	r0, r7
 800c144:	f7ff fabc 	bl	800b6c0 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 800c148:	9a07      	ldr	r2, [sp, #28]
 800c14a:	ed99 8a00 	vldr	s16, [r9]
 800c14e:	edd2 8a00 	vldr	s17, [r2]
 800c152:	3404      	adds	r4, #4
 800c154:	e797      	b.n	800c086 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800c156:	00a3      	lsls	r3, r4, #2
 800c158:	f103 0210 	add.w	r2, r3, #16
 800c15c:	f103 0914 	add.w	r9, r3, #20
 800c160:	4432      	add	r2, r6
 800c162:	4433      	add	r3, r6
 800c164:	44b1      	add	r9, r6
 800c166:	ed92 3a00 	vldr	s6, [r2]
 800c16a:	edd9 3a00 	vldr	s7, [r9]
 800c16e:	edd3 2a03 	vldr	s5, [r3, #12]
 800c172:	ed93 2a02 	vldr	s4, [r3, #8]
 800c176:	edd3 1a01 	vldr	s3, [r3, #4]
 800c17a:	ed93 1a00 	vldr	s2, [r3]
 800c17e:	9207      	str	r2, [sp, #28]
 800c180:	eef0 0a48 	vmov.f32	s1, s16
 800c184:	eeb0 0a68 	vmov.f32	s0, s17
 800c188:	4638      	mov	r0, r7
 800c18a:	f7ff fab8 	bl	800b6fe <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 800c18e:	9a07      	ldr	r2, [sp, #28]
 800c190:	ed99 8a00 	vldr	s16, [r9]
 800c194:	edd2 8a00 	vldr	s17, [r2]
 800c198:	3406      	adds	r4, #6
 800c19a:	e774      	b.n	800c086 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
 800c19c:	9b06      	ldr	r3, [sp, #24]
 800c19e:	4543      	cmp	r3, r8
 800c1a0:	af08      	add	r7, sp, #32
 800c1a2:	d90f      	bls.n	800c1c4 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
 800c1a4:	4638      	mov	r0, r7
 800c1a6:	f7ff fdad 	bl	800bd04 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
 800c1aa:	b958      	cbnz	r0, 800c1c4 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
 800c1ac:	2301      	movs	r3, #1
 800c1ae:	e9cd 6301 	strd	r6, r3, [sp, #4]
 800c1b2:	9703      	str	r7, [sp, #12]
 800c1b4:	f8cd b000 	str.w	fp, [sp]
 800c1b8:	4623      	mov	r3, r4
 800c1ba:	9a06      	ldr	r2, [sp, #24]
 800c1bc:	4641      	mov	r1, r8
 800c1be:	4628      	mov	r0, r5
 800c1c0:	f7ff fe02 	bl	800bdc8 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
 800c1c4:	f89d 10a6 	ldrb.w	r1, [sp, #166]	@ 0xa6
 800c1c8:	4638      	mov	r0, r7
 800c1ca:	f013 ffb1 	bl	8020130 <_ZN8touchgfx6Canvas6renderEh>
 800c1ce:	4604      	mov	r4, r0
 800c1d0:	4638      	mov	r0, r7
 800c1d2:	f7ff fe99 	bl	800bf08 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
 800c1d6:	4620      	mov	r0, r4
 800c1d8:	b035      	add	sp, #212	@ 0xd4
 800c1da:	ecbd 8b04 	vpop	{d8-d9}
 800c1de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c1e2:	2401      	movs	r4, #1
 800c1e4:	e7f7      	b.n	800c1d6 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2b6>
 800c1e6:	bf00      	nop
 800c1e8:	00000000 	.word	0x00000000
 800c1ec:	0802390c 	.word	0x0802390c

0800c1f0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD0Ev>:
 800c1f0:	b510      	push	{r4, lr}
 800c1f2:	4604      	mov	r4, r0
 800c1f4:	f7ff fe88 	bl	800bf08 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
 800c1f8:	4620      	mov	r0, r4
 800c1fa:	21b0      	movs	r1, #176	@ 0xb0
 800c1fc:	f014 fb67 	bl	80208ce <_ZdlPvj>
 800c200:	4620      	mov	r0, r4
 800c202:	bd10      	pop	{r4, pc}

0800c204 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>:
 800c204:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c208:	ed2d 8b06 	vpush	{d8-d10}
 800c20c:	b0aa      	sub	sp, #168	@ 0xa8
 800c20e:	4698      	mov	r8, r3
 800c210:	23ff      	movs	r3, #255	@ 0xff
 800c212:	4607      	mov	r7, r0
 800c214:	9300      	str	r3, [sp, #0]
 800c216:	4689      	mov	r9, r1
 800c218:	4692      	mov	sl, r2
 800c21a:	6981      	ldr	r1, [r0, #24]
 800c21c:	9b39      	ldr	r3, [sp, #228]	@ 0xe4
 800c21e:	ed9f 8a82 	vldr	s16, [pc, #520]	@ 800c428 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
 800c222:	1d02      	adds	r2, r0, #4
 800c224:	a80d      	add	r0, sp, #52	@ 0x34
 800c226:	f013 feef 	bl	8020008 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 800c22a:	7f3b      	ldrb	r3, [r7, #28]
 800c22c:	eddf 0a7e 	vldr	s1, [pc, #504]	@ 800c428 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
 800c230:	1e5a      	subs	r2, r3, #1
 800c232:	4253      	negs	r3, r2
 800c234:	f107 0534 	add.w	r5, r7, #52	@ 0x34
 800c238:	4153      	adcs	r3, r2
 800c23a:	eeb0 0a60 	vmov.f32	s0, s1
 800c23e:	4628      	mov	r0, r5
 800c240:	f88d 3078 	strb.w	r3, [sp, #120]	@ 0x78
 800c244:	f003 ff29 	bl	801009a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800c248:	44ca      	add	sl, r9
 800c24a:	eeb0 9a40 	vmov.f32	s18, s0
 800c24e:	eef0 9a60 	vmov.f32	s19, s1
 800c252:	eef0 8a48 	vmov.f32	s17, s16
 800c256:	2400      	movs	r4, #0
 800c258:	45ca      	cmp	sl, r9
 800c25a:	f000 80cd 	beq.w	800c3f8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x1f4>
 800c25e:	f819 3b01 	ldrb.w	r3, [r9], #1
 800c262:	2b06      	cmp	r3, #6
 800c264:	d8f8      	bhi.n	800c258 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800c266:	e8df f003 	tbb	[pc, r3]
 800c26a:	0804      	.short	0x0804
 800c26c:	58533f2a 	.word	0x58533f2a
 800c270:	8a          	.byte	0x8a
 800c271:	00          	.byte	0x00
 800c272:	a80d      	add	r0, sp, #52	@ 0x34
 800c274:	f013 ff3a 	bl	80200ec <_ZN8touchgfx6Canvas5closeEv>
 800c278:	e7ee      	b.n	800c258 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800c27a:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 800c27e:	edd3 8a00 	vldr	s17, [r3]
 800c282:	ed93 8a01 	vldr	s16, [r3, #4]
 800c286:	eeb0 0a68 	vmov.f32	s0, s17
 800c28a:	eef0 0a48 	vmov.f32	s1, s16
 800c28e:	4628      	mov	r0, r5
 800c290:	f003 ff03 	bl	801009a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800c294:	eef0 7a60 	vmov.f32	s15, s1
 800c298:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800c29c:	a80d      	add	r0, sp, #52	@ 0x34
 800c29e:	ee17 2a90 	vmov	r2, s15
 800c2a2:	eef0 7a40 	vmov.f32	s15, s0
 800c2a6:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
 800c2aa:	eeb0 9a40 	vmov.f32	s18, s0
 800c2ae:	ee17 1a90 	vmov	r1, s15
 800c2b2:	eef0 9a60 	vmov.f32	s19, s1
 800c2b6:	f013 fff3 	bl	80202a0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800c2ba:	3402      	adds	r4, #2
 800c2bc:	e7cc      	b.n	800c258 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800c2be:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 800c2c2:	edd3 8a00 	vldr	s17, [r3]
 800c2c6:	ed93 8a01 	vldr	s16, [r3, #4]
 800c2ca:	eeb0 0a68 	vmov.f32	s0, s17
 800c2ce:	eef0 0a48 	vmov.f32	s1, s16
 800c2d2:	4628      	mov	r0, r5
 800c2d4:	f003 fee1 	bl	801009a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800c2d8:	a80d      	add	r0, sp, #52	@ 0x34
 800c2da:	eeb0 9a40 	vmov.f32	s18, s0
 800c2de:	eef0 9a60 	vmov.f32	s19, s1
 800c2e2:	f7ff fe01 	bl	800bee8 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 800c2e6:	e7e8      	b.n	800c2ba <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xb6>
 800c2e8:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 800c2ec:	edd3 8a00 	vldr	s17, [r3]
 800c2f0:	eef0 0a48 	vmov.f32	s1, s16
 800c2f4:	eeb0 0a68 	vmov.f32	s0, s17
 800c2f8:	4628      	mov	r0, r5
 800c2fa:	f003 fece 	bl	801009a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800c2fe:	a80d      	add	r0, sp, #52	@ 0x34
 800c300:	eeb0 9a40 	vmov.f32	s18, s0
 800c304:	eef0 9a60 	vmov.f32	s19, s1
 800c308:	3401      	adds	r4, #1
 800c30a:	f7ff fded 	bl	800bee8 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 800c30e:	e7a3      	b.n	800c258 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800c310:	eb08 0384 	add.w	r3, r8, r4, lsl #2
 800c314:	ed93 8a00 	vldr	s16, [r3]
 800c318:	e7ea      	b.n	800c2f0 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xec>
 800c31a:	1ca3      	adds	r3, r4, #2
 800c31c:	eb08 0383 	add.w	r3, r8, r3, lsl #2
 800c320:	ed53 0a01 	vldr	s1, [r3, #-4]
 800c324:	ed13 0a02 	vldr	s0, [r3, #-8]
 800c328:	edd3 8a00 	vldr	s17, [r3]
 800c32c:	ed93 8a01 	vldr	s16, [r3, #4]
 800c330:	4628      	mov	r0, r5
 800c332:	f003 feb2 	bl	801009a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800c336:	4628      	mov	r0, r5
 800c338:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
 800c33c:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
 800c340:	eeb0 0a68 	vmov.f32	s0, s17
 800c344:	eef0 0a48 	vmov.f32	s1, s16
 800c348:	f003 fea7 	bl	801009a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800c34c:	eddd 1a0a 	vldr	s3, [sp, #40]	@ 0x28
 800c350:	ed9d 1a09 	vldr	s2, [sp, #36]	@ 0x24
 800c354:	eef0 2a60 	vmov.f32	s5, s1
 800c358:	eeb0 2a40 	vmov.f32	s4, s0
 800c35c:	eeb0 aa40 	vmov.f32	s20, s0
 800c360:	eef0 aa60 	vmov.f32	s21, s1
 800c364:	eeb0 0a49 	vmov.f32	s0, s18
 800c368:	eef0 0a69 	vmov.f32	s1, s19
 800c36c:	a80d      	add	r0, sp, #52	@ 0x34
 800c36e:	f7ff f9a7 	bl	800b6c0 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
 800c372:	3404      	adds	r4, #4
 800c374:	eef0 9a6a 	vmov.f32	s19, s21
 800c378:	eeb0 9a4a 	vmov.f32	s18, s20
 800c37c:	e76c      	b.n	800c258 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
 800c37e:	1d26      	adds	r6, r4, #4
 800c380:	eb08 0686 	add.w	r6, r8, r6, lsl #2
 800c384:	ed56 0a03 	vldr	s1, [r6, #-12]
 800c388:	ed16 0a04 	vldr	s0, [r6, #-16]
 800c38c:	edd6 8a00 	vldr	s17, [r6]
 800c390:	ed96 8a01 	vldr	s16, [r6, #4]
 800c394:	4628      	mov	r0, r5
 800c396:	f003 fe80 	bl	801009a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800c39a:	4628      	mov	r0, r5
 800c39c:	ed8d 0a07 	vstr	s0, [sp, #28]
 800c3a0:	edcd 0a08 	vstr	s1, [sp, #32]
 800c3a4:	ed16 0a02 	vldr	s0, [r6, #-8]
 800c3a8:	ed56 0a01 	vldr	s1, [r6, #-4]
 800c3ac:	f003 fe75 	bl	801009a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800c3b0:	4628      	mov	r0, r5
 800c3b2:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
 800c3b6:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
 800c3ba:	eeb0 0a68 	vmov.f32	s0, s17
 800c3be:	eef0 0a48 	vmov.f32	s1, s16
 800c3c2:	f003 fe6a 	bl	801009a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
 800c3c6:	eddd 2a0a 	vldr	s5, [sp, #40]	@ 0x28
 800c3ca:	ed9d 2a09 	vldr	s4, [sp, #36]	@ 0x24
 800c3ce:	eddd 1a08 	vldr	s3, [sp, #32]
 800c3d2:	ed9d 1a07 	vldr	s2, [sp, #28]
 800c3d6:	eef0 3a60 	vmov.f32	s7, s1
 800c3da:	eeb0 3a40 	vmov.f32	s6, s0
 800c3de:	eeb0 aa40 	vmov.f32	s20, s0
 800c3e2:	eef0 aa60 	vmov.f32	s21, s1
 800c3e6:	eeb0 0a49 	vmov.f32	s0, s18
 800c3ea:	eef0 0a69 	vmov.f32	s1, s19
 800c3ee:	a80d      	add	r0, sp, #52	@ 0x34
 800c3f0:	f7ff f985 	bl	800b6fe <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
 800c3f4:	3406      	adds	r4, #6
 800c3f6:	e7bd      	b.n	800c374 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x170>
 800c3f8:	7f7b      	ldrb	r3, [r7, #29]
 800c3fa:	7fb9      	ldrb	r1, [r7, #30]
 800c3fc:	4359      	muls	r1, r3
 800c3fe:	1c4b      	adds	r3, r1, #1
 800c400:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 800c404:	f3c1 2107 	ubfx	r1, r1, #8, #8
 800c408:	a80d      	add	r0, sp, #52	@ 0x34
 800c40a:	f013 fe91 	bl	8020130 <_ZN8touchgfx6Canvas6renderEh>
 800c40e:	4b07      	ldr	r3, [pc, #28]	@ (800c42c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x228>)
 800c410:	930d      	str	r3, [sp, #52]	@ 0x34
 800c412:	4604      	mov	r4, r0
 800c414:	a812      	add	r0, sp, #72	@ 0x48
 800c416:	f000 f97d 	bl	800c714 <_ZN8touchgfx7OutlineD1Ev>
 800c41a:	4620      	mov	r0, r4
 800c41c:	b02a      	add	sp, #168	@ 0xa8
 800c41e:	ecbd 8b06 	vpop	{d8-d10}
 800c422:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c426:	bf00      	nop
 800c428:	00000000 	.word	0x00000000
 800c42c:	08023e90 	.word	0x08023e90

0800c430 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>:
 800c430:	b410      	push	{r4}
 800c432:	7f04      	ldrb	r4, [r0, #28]
 800c434:	b11c      	cbz	r4, 800c43e <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE+0xe>
 800c436:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c43a:	f7ff bee3 	b.w	800c204 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>
 800c43e:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c442:	f7ff bd6d 	b.w	800bf20 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>
	...

0800c448 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_>:
 800c448:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c44c:	4691      	mov	r9, r2
 800c44e:	4602      	mov	r2, r0
 800c450:	4605      	mov	r5, r0
 800c452:	f852 0f26 	ldr.w	r0, [r2, #38]!
 800c456:	b085      	sub	sp, #20
 800c458:	4688      	mov	r8, r1
 800c45a:	6851      	ldr	r1, [r2, #4]
 800c45c:	f8dd b038 	ldr.w	fp, [sp, #56]	@ 0x38
 800c460:	469a      	mov	sl, r3
 800c462:	ab02      	add	r3, sp, #8
 800c464:	c303      	stmia	r3!, {r0, r1}
 800c466:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800c46a:	2b00      	cmp	r3, #0
 800c46c:	af02      	add	r7, sp, #8
 800c46e:	dd08      	ble.n	800c482 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 800c470:	f9bd 400e 	ldrsh.w	r4, [sp, #14]
 800c474:	2c00      	cmp	r4, #0
 800c476:	dd04      	ble.n	800c482 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 800c478:	4a2e      	ldr	r2, [pc, #184]	@ (800c534 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xec>)
 800c47a:	7812      	ldrb	r2, [r2, #0]
 800c47c:	b122      	cbz	r2, 800c488 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x40>
 800c47e:	2a01      	cmp	r2, #1
 800c480:	d02d      	beq.n	800c4de <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x96>
 800c482:	b005      	add	sp, #20
 800c484:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c488:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800c48c:	441c      	add	r4, r3
 800c48e:	b2a4      	uxth	r4, r4
 800c490:	b226      	sxth	r6, r4
 800c492:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 800c496:	42b3      	cmp	r3, r6
 800c498:	daf3      	bge.n	800c482 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 800c49a:	e9cd b700 	strd	fp, r7, [sp]
 800c49e:	4653      	mov	r3, sl
 800c4a0:	464a      	mov	r2, r9
 800c4a2:	4641      	mov	r1, r8
 800c4a4:	4628      	mov	r0, r5
 800c4a6:	f7ff ffc3 	bl	800c430 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
 800c4aa:	b940      	cbnz	r0, 800c4be <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x76>
 800c4ac:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800c4b0:	2b01      	cmp	r3, #1
 800c4b2:	d004      	beq.n	800c4be <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x76>
 800c4b4:	3301      	adds	r3, #1
 800c4b6:	105b      	asrs	r3, r3, #1
 800c4b8:	f8ad 300e 	strh.w	r3, [sp, #14]
 800c4bc:	e7ed      	b.n	800c49a <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x52>
 800c4be:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800c4c2:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800c4c6:	4413      	add	r3, r2
 800c4c8:	b29b      	uxth	r3, r3
 800c4ca:	441a      	add	r2, r3
 800c4cc:	b212      	sxth	r2, r2
 800c4ce:	4296      	cmp	r6, r2
 800c4d0:	f8ad 300a 	strh.w	r3, [sp, #10]
 800c4d4:	dadd      	bge.n	800c492 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x4a>
 800c4d6:	1ae3      	subs	r3, r4, r3
 800c4d8:	f8ad 300e 	strh.w	r3, [sp, #14]
 800c4dc:	e7d9      	b.n	800c492 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x4a>
 800c4de:	f8bd 4008 	ldrh.w	r4, [sp, #8]
 800c4e2:	441c      	add	r4, r3
 800c4e4:	b2a4      	uxth	r4, r4
 800c4e6:	b226      	sxth	r6, r4
 800c4e8:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 800c4ec:	42b3      	cmp	r3, r6
 800c4ee:	dac8      	bge.n	800c482 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
 800c4f0:	e9cd b700 	strd	fp, r7, [sp]
 800c4f4:	4653      	mov	r3, sl
 800c4f6:	464a      	mov	r2, r9
 800c4f8:	4641      	mov	r1, r8
 800c4fa:	4628      	mov	r0, r5
 800c4fc:	f7ff ff98 	bl	800c430 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
 800c500:	b940      	cbnz	r0, 800c514 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xcc>
 800c502:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800c506:	2b01      	cmp	r3, #1
 800c508:	d004      	beq.n	800c514 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xcc>
 800c50a:	3301      	adds	r3, #1
 800c50c:	105b      	asrs	r3, r3, #1
 800c50e:	f8ad 300c 	strh.w	r3, [sp, #12]
 800c512:	e7ed      	b.n	800c4f0 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa8>
 800c514:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800c518:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800c51c:	4413      	add	r3, r2
 800c51e:	b29b      	uxth	r3, r3
 800c520:	441a      	add	r2, r3
 800c522:	b212      	sxth	r2, r2
 800c524:	4296      	cmp	r6, r2
 800c526:	f8ad 3008 	strh.w	r3, [sp, #8]
 800c52a:	dadd      	bge.n	800c4e8 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa0>
 800c52c:	1ae3      	subs	r3, r4, r3
 800c52e:	f8ad 300c 	strh.w	r3, [sp, #12]
 800c532:	e7d9      	b.n	800c4e8 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa0>
 800c534:	20013086 	.word	0x20013086

0800c538 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 800c538:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800c53a:	6803      	ldr	r3, [r0, #0]
 800c53c:	460d      	mov	r5, r1
 800c53e:	4604      	mov	r4, r0
 800c540:	4601      	mov	r1, r0
 800c542:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 800c544:	a802      	add	r0, sp, #8
 800c546:	4798      	blx	r3
 800c548:	6828      	ldr	r0, [r5, #0]
 800c54a:	6869      	ldr	r1, [r5, #4]
 800c54c:	466b      	mov	r3, sp
 800c54e:	c303      	stmia	r3!, {r0, r1}
 800c550:	4668      	mov	r0, sp
 800c552:	4619      	mov	r1, r3
 800c554:	f7fd fb88 	bl	8009c68 <_ZN8touchgfx4RectaNERKS0_>
 800c558:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800c55a:	b188      	cbz	r0, 800c580 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800c55c:	6803      	ldr	r3, [r0, #0]
 800c55e:	1d21      	adds	r1, r4, #4
 800c560:	68db      	ldr	r3, [r3, #12]
 800c562:	4798      	blx	r3
 800c564:	b160      	cbz	r0, 800c580 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800c566:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800c56a:	2b00      	cmp	r3, #0
 800c56c:	dd08      	ble.n	800c580 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800c56e:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 800c572:	2d00      	cmp	r5, #0
 800c574:	dd04      	ble.n	800c580 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800c576:	4a2b      	ldr	r2, [pc, #172]	@ (800c624 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 800c578:	7812      	ldrb	r2, [r2, #0]
 800c57a:	b11a      	cbz	r2, 800c584 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 800c57c:	2a01      	cmp	r2, #1
 800c57e:	d029      	beq.n	800c5d4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 800c580:	b004      	add	sp, #16
 800c582:	bd70      	pop	{r4, r5, r6, pc}
 800c584:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800c588:	441d      	add	r5, r3
 800c58a:	b2ad      	uxth	r5, r5
 800c58c:	b22e      	sxth	r6, r5
 800c58e:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800c592:	42b3      	cmp	r3, r6
 800c594:	daf4      	bge.n	800c580 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800c596:	6823      	ldr	r3, [r4, #0]
 800c598:	4669      	mov	r1, sp
 800c59a:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800c59c:	4620      	mov	r0, r4
 800c59e:	4798      	blx	r3
 800c5a0:	b940      	cbnz	r0, 800c5b4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 800c5a2:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800c5a6:	2b01      	cmp	r3, #1
 800c5a8:	d004      	beq.n	800c5b4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 800c5aa:	3301      	adds	r3, #1
 800c5ac:	105b      	asrs	r3, r3, #1
 800c5ae:	f8ad 3006 	strh.w	r3, [sp, #6]
 800c5b2:	e7f0      	b.n	800c596 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800c5b4:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800c5b8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800c5bc:	4413      	add	r3, r2
 800c5be:	b29b      	uxth	r3, r3
 800c5c0:	441a      	add	r2, r3
 800c5c2:	b212      	sxth	r2, r2
 800c5c4:	4296      	cmp	r6, r2
 800c5c6:	f8ad 3002 	strh.w	r3, [sp, #2]
 800c5ca:	dae0      	bge.n	800c58e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 800c5cc:	1aeb      	subs	r3, r5, r3
 800c5ce:	f8ad 3006 	strh.w	r3, [sp, #6]
 800c5d2:	e7dc      	b.n	800c58e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 800c5d4:	f8bd 5000 	ldrh.w	r5, [sp]
 800c5d8:	441d      	add	r5, r3
 800c5da:	b2ad      	uxth	r5, r5
 800c5dc:	b22e      	sxth	r6, r5
 800c5de:	f9bd 3000 	ldrsh.w	r3, [sp]
 800c5e2:	42b3      	cmp	r3, r6
 800c5e4:	dacc      	bge.n	800c580 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800c5e6:	6823      	ldr	r3, [r4, #0]
 800c5e8:	4669      	mov	r1, sp
 800c5ea:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800c5ec:	4620      	mov	r0, r4
 800c5ee:	4798      	blx	r3
 800c5f0:	b940      	cbnz	r0, 800c604 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 800c5f2:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800c5f6:	2b01      	cmp	r3, #1
 800c5f8:	d004      	beq.n	800c604 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 800c5fa:	3301      	adds	r3, #1
 800c5fc:	105b      	asrs	r3, r3, #1
 800c5fe:	f8ad 3004 	strh.w	r3, [sp, #4]
 800c602:	e7f0      	b.n	800c5e6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800c604:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800c608:	f8bd 3000 	ldrh.w	r3, [sp]
 800c60c:	4413      	add	r3, r2
 800c60e:	b29b      	uxth	r3, r3
 800c610:	441a      	add	r2, r3
 800c612:	b212      	sxth	r2, r2
 800c614:	4296      	cmp	r6, r2
 800c616:	f8ad 3000 	strh.w	r3, [sp]
 800c61a:	dae0      	bge.n	800c5de <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 800c61c:	1aeb      	subs	r3, r5, r3
 800c61e:	f8ad 3004 	strh.w	r3, [sp, #4]
 800c622:	e7dc      	b.n	800c5de <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 800c624:	20013086 	.word	0x20013086

0800c628 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 800c628:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800c62a:	6803      	ldr	r3, [r0, #0]
 800c62c:	4604      	mov	r4, r0
 800c62e:	4601      	mov	r1, r0
 800c630:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 800c632:	4668      	mov	r0, sp
 800c634:	4798      	blx	r3
 800c636:	2100      	movs	r1, #0
 800c638:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800c63c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c640:	9102      	str	r1, [sp, #8]
 800c642:	4668      	mov	r0, sp
 800c644:	a902      	add	r1, sp, #8
 800c646:	f8ad 200c 	strh.w	r2, [sp, #12]
 800c64a:	f8ad 300e 	strh.w	r3, [sp, #14]
 800c64e:	f7fd fb0b 	bl	8009c68 <_ZN8touchgfx4RectaNERKS0_>
 800c652:	6823      	ldr	r3, [r4, #0]
 800c654:	4669      	mov	r1, sp
 800c656:	691b      	ldr	r3, [r3, #16]
 800c658:	4620      	mov	r0, r4
 800c65a:	4798      	blx	r3
 800c65c:	b004      	add	sp, #16
 800c65e:	bd10      	pop	{r4, pc}

0800c660 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 800c660:	2101      	movs	r1, #1
 800c662:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 800c666:	490b      	ldr	r1, [pc, #44]	@ (800c694 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 800c668:	6001      	str	r1, [r0, #0]
 800c66a:	2200      	movs	r2, #0
 800c66c:	21ff      	movs	r1, #255	@ 0xff
 800c66e:	8082      	strh	r2, [r0, #4]
 800c670:	80c2      	strh	r2, [r0, #6]
 800c672:	8102      	strh	r2, [r0, #8]
 800c674:	8142      	strh	r2, [r0, #10]
 800c676:	8182      	strh	r2, [r0, #12]
 800c678:	81c2      	strh	r2, [r0, #14]
 800c67a:	8202      	strh	r2, [r0, #16]
 800c67c:	8242      	strh	r2, [r0, #18]
 800c67e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800c682:	61c2      	str	r2, [r0, #28]
 800c684:	8402      	strh	r2, [r0, #32]
 800c686:	8442      	strh	r2, [r0, #34]	@ 0x22
 800c688:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
 800c68c:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
 800c690:	6282      	str	r2, [r0, #40]	@ 0x28
 800c692:	4770      	bx	lr
 800c694:	0802396c 	.word	0x0802396c

0800c698 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800c698:	2300      	movs	r3, #0
 800c69a:	8083      	strh	r3, [r0, #4]
 800c69c:	80c3      	strh	r3, [r0, #6]
 800c69e:	8003      	strh	r3, [r0, #0]
 800c6a0:	8043      	strh	r3, [r0, #2]
 800c6a2:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 800c6a6:	2bff      	cmp	r3, #255	@ 0xff
 800c6a8:	bf01      	itttt	eq
 800c6aa:	890b      	ldrheq	r3, [r1, #8]
 800c6ac:	8083      	strheq	r3, [r0, #4]
 800c6ae:	894b      	ldrheq	r3, [r1, #10]
 800c6b0:	80c3      	strheq	r3, [r0, #6]
 800c6b2:	4770      	bx	lr

0800c6b4 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800c6b4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c6b6:	4604      	mov	r4, r0
 800c6b8:	6808      	ldr	r0, [r1, #0]
 800c6ba:	6849      	ldr	r1, [r1, #4]
 800c6bc:	466b      	mov	r3, sp
 800c6be:	c303      	stmia	r3!, {r0, r1}
 800c6c0:	6823      	ldr	r3, [r4, #0]
 800c6c2:	4669      	mov	r1, sp
 800c6c4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800c6c6:	4620      	mov	r0, r4
 800c6c8:	4798      	blx	r3
 800c6ca:	4b08      	ldr	r3, [pc, #32]	@ (800c6ec <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800c6cc:	681b      	ldr	r3, [r3, #0]
 800c6ce:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800c6d2:	b10a      	cbz	r2, 800c6d8 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800c6d4:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800c6d6:	b900      	cbnz	r0, 800c6da <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800c6d8:	6898      	ldr	r0, [r3, #8]
 800c6da:	6803      	ldr	r3, [r0, #0]
 800c6dc:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800c6de:	6a1d      	ldr	r5, [r3, #32]
 800c6e0:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800c6e4:	4669      	mov	r1, sp
 800c6e6:	47a8      	blx	r5
 800c6e8:	b003      	add	sp, #12
 800c6ea:	bd30      	pop	{r4, r5, pc}
 800c6ec:	20013090 	.word	0x20013090

0800c6f0 <_ZN8touchgfx3BoxD1Ev>:
 800c6f0:	4770      	bx	lr

0800c6f2 <_ZN8touchgfx3BoxD0Ev>:
 800c6f2:	b510      	push	{r4, lr}
 800c6f4:	212c      	movs	r1, #44	@ 0x2c
 800c6f6:	4604      	mov	r4, r0
 800c6f8:	f014 f8e9 	bl	80208ce <_ZdlPvj>
 800c6fc:	4620      	mov	r0, r4
 800c6fe:	bd10      	pop	{r4, pc}

0800c700 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800c700:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
 800c704:	b12a      	cbz	r2, 800c712 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800c706:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800c70a:	b112      	cbz	r2, 800c712 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800c70c:	6803      	ldr	r3, [r0, #0]
 800c70e:	695b      	ldr	r3, [r3, #20]
 800c710:	4718      	bx	r3
 800c712:	4770      	bx	lr

0800c714 <_ZN8touchgfx7OutlineD1Ev>:
 800c714:	4770      	bx	lr

0800c716 <_ZN8touchgfx7OutlineD0Ev>:
 800c716:	b510      	push	{r4, lr}
 800c718:	2130      	movs	r1, #48	@ 0x30
 800c71a:	4604      	mov	r4, r0
 800c71c:	f014 f8d7 	bl	80208ce <_ZdlPvj>
 800c720:	4620      	mov	r0, r4
 800c722:	bd10      	pop	{r4, pc}

0800c724 <_ZN8touchgfx7Outline5resetEv>:
 800c724:	b510      	push	{r4, lr}
 800c726:	4604      	mov	r4, r0
 800c728:	f000 fe82 	bl	800d430 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 800c72c:	60e0      	str	r0, [r4, #12]
 800c72e:	f000 fe85 	bl	800d43c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 800c732:	68e3      	ldr	r3, [r4, #12]
 800c734:	6123      	str	r3, [r4, #16]
 800c736:	08c0      	lsrs	r0, r0, #3
 800c738:	2200      	movs	r2, #0
 800c73a:	f647 71ff 	movw	r1, #32767	@ 0x7fff
 800c73e:	3801      	subs	r0, #1
 800c740:	6060      	str	r0, [r4, #4]
 800c742:	60a2      	str	r2, [r4, #8]
 800c744:	8019      	strh	r1, [r3, #0]
 800c746:	8059      	strh	r1, [r3, #2]
 800c748:	809a      	strh	r2, [r3, #4]
 800c74a:	80da      	strh	r2, [r3, #6]
 800c74c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800c74e:	f023 0301 	bic.w	r3, r3, #1
 800c752:	f043 0302 	orr.w	r3, r3, #2
 800c756:	6263      	str	r3, [r4, #36]	@ 0x24
 800c758:	bd10      	pop	{r4, pc}
	...

0800c75c <_ZN8touchgfx7OutlineC1Ev>:
 800c75c:	b510      	push	{r4, lr}
 800c75e:	4b0a      	ldr	r3, [pc, #40]	@ (800c788 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 800c760:	6003      	str	r3, [r0, #0]
 800c762:	2300      	movs	r3, #0
 800c764:	e9c0 3301 	strd	r3, r3, [r0, #4]
 800c768:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800c76c:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800c770:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800c774:	6243      	str	r3, [r0, #36]	@ 0x24
 800c776:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
 800c77a:	4604      	mov	r4, r0
 800c77c:	e9c0 330a 	strd	r3, r3, [r0, #40]	@ 0x28
 800c780:	f7ff ffd0 	bl	800c724 <_ZN8touchgfx7Outline5resetEv>
 800c784:	4620      	mov	r0, r4
 800c786:	bd10      	pop	{r4, pc}
 800c788:	08023a4c 	.word	0x08023a4c

0800c78c <_ZN8touchgfx7Outline10renderLineEiiii>:
 800c78c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c790:	b093      	sub	sp, #76	@ 0x4c
 800c792:	1156      	asrs	r6, r2, #5
 800c794:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 800c796:	9305      	str	r3, [sp, #20]
 800c798:	f004 051f 	and.w	r5, r4, #31
 800c79c:	1153      	asrs	r3, r2, #5
 800c79e:	9504      	str	r5, [sp, #16]
 800c7a0:	1165      	asrs	r5, r4, #5
 800c7a2:	9303      	str	r3, [sp, #12]
 800c7a4:	42ae      	cmp	r6, r5
 800c7a6:	ea4f 1364 	mov.w	r3, r4, asr #5
 800c7aa:	9306      	str	r3, [sp, #24]
 800c7ac:	f002 031f 	and.w	r3, r2, #31
 800c7b0:	f040 80f8 	bne.w	800c9a4 <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 800c7b4:	9c04      	ldr	r4, [sp, #16]
 800c7b6:	9a05      	ldr	r2, [sp, #20]
 800c7b8:	42a3      	cmp	r3, r4
 800c7ba:	ea4f 1e62 	mov.w	lr, r2, asr #5
 800c7be:	6902      	ldr	r2, [r0, #16]
 800c7c0:	d125      	bne.n	800c80e <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 800c7c2:	f9b2 3000 	ldrsh.w	r3, [r2]
 800c7c6:	459e      	cmp	lr, r3
 800c7c8:	d103      	bne.n	800c7d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 800c7ca:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800c7ce:	429e      	cmp	r6, r3
 800c7d0:	d035      	beq.n	800c83e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800c7d2:	88d1      	ldrh	r1, [r2, #6]
 800c7d4:	8893      	ldrh	r3, [r2, #4]
 800c7d6:	430b      	orrs	r3, r1
 800c7d8:	d010      	beq.n	800c7fc <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800c7da:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800c7de:	2b00      	cmp	r3, #0
 800c7e0:	db0c      	blt.n	800c7fc <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800c7e2:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800c7e4:	428b      	cmp	r3, r1
 800c7e6:	da09      	bge.n	800c7fc <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800c7e8:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800c7ec:	428b      	cmp	r3, r1
 800c7ee:	bf38      	it	cc
 800c7f0:	3208      	addcc	r2, #8
 800c7f2:	f103 0301 	add.w	r3, r3, #1
 800c7f6:	bf38      	it	cc
 800c7f8:	6102      	strcc	r2, [r0, #16]
 800c7fa:	6083      	str	r3, [r0, #8]
 800c7fc:	6903      	ldr	r3, [r0, #16]
 800c7fe:	9a03      	ldr	r2, [sp, #12]
 800c800:	f8a3 e000 	strh.w	lr, [r3]
 800c804:	805a      	strh	r2, [r3, #2]
 800c806:	2200      	movs	r2, #0
 800c808:	809a      	strh	r2, [r3, #4]
 800c80a:	80da      	strh	r2, [r3, #6]
 800c80c:	e017      	b.n	800c83e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800c80e:	9c05      	ldr	r4, [sp, #20]
 800c810:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 800c814:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 800c818:	f004 041f 	and.w	r4, r4, #31
 800c81c:	114e      	asrs	r6, r1, #5
 800c81e:	9402      	str	r4, [sp, #8]
 800c820:	9c04      	ldr	r4, [sp, #16]
 800c822:	4576      	cmp	r6, lr
 800c824:	f001 0c1f 	and.w	ip, r1, #31
 800c828:	eba4 0403 	sub.w	r4, r4, r3
 800c82c:	d10a      	bne.n	800c844 <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 800c82e:	9b02      	ldr	r3, [sp, #8]
 800c830:	449c      	add	ip, r3
 800c832:	44a0      	add	r8, r4
 800c834:	fb04 a40c 	mla	r4, r4, ip, sl
 800c838:	f8a2 8004 	strh.w	r8, [r2, #4]
 800c83c:	80d4      	strh	r4, [r2, #6]
 800c83e:	b013      	add	sp, #76	@ 0x4c
 800c840:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c844:	9d05      	ldr	r5, [sp, #20]
 800c846:	1a69      	subs	r1, r5, r1
 800c848:	bf5b      	ittet	pl
 800c84a:	f1cc 0520 	rsbpl	r5, ip, #32
 800c84e:	436c      	mulpl	r4, r5
 800c850:	2500      	movmi	r5, #0
 800c852:	2520      	movpl	r5, #32
 800c854:	bf44      	itt	mi
 800c856:	fb04 f40c 	mulmi.w	r4, r4, ip
 800c85a:	4249      	negmi	r1, r1
 800c85c:	9501      	str	r5, [sp, #4]
 800c85e:	9f01      	ldr	r7, [sp, #4]
 800c860:	fb94 f5f1 	sdiv	r5, r4, r1
 800c864:	fb01 4415 	mls	r4, r1, r5, r4
 800c868:	bf54      	ite	pl
 800c86a:	f04f 0901 	movpl.w	r9, #1
 800c86e:	f04f 39ff 	movmi.w	r9, #4294967295
 800c872:	2c00      	cmp	r4, #0
 800c874:	bfb8      	it	lt
 800c876:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800c87a:	44bc      	add	ip, r7
 800c87c:	44a8      	add	r8, r5
 800c87e:	fb05 ac0c 	mla	ip, r5, ip, sl
 800c882:	f8a2 8004 	strh.w	r8, [r2, #4]
 800c886:	f8a2 c006 	strh.w	ip, [r2, #6]
 800c88a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800c88e:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800c892:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 800c896:	bfb8      	it	lt
 800c898:	1864      	addlt	r4, r4, r1
 800c89a:	ea58 0202 	orrs.w	r2, r8, r2
 800c89e:	444e      	add	r6, r9
 800c8a0:	d011      	beq.n	800c8c6 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800c8a2:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800c8a6:	f1b8 0f00 	cmp.w	r8, #0
 800c8aa:	db0c      	blt.n	800c8c6 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800c8ac:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 800c8ae:	4590      	cmp	r8, r2
 800c8b0:	da09      	bge.n	800c8c6 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800c8b2:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 800c8b6:	4590      	cmp	r8, r2
 800c8b8:	bf3c      	itt	cc
 800c8ba:	f10c 0208 	addcc.w	r2, ip, #8
 800c8be:	6102      	strcc	r2, [r0, #16]
 800c8c0:	f108 0201 	add.w	r2, r8, #1
 800c8c4:	6082      	str	r2, [r0, #8]
 800c8c6:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800c8ca:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800c8ce:	f8ac 6000 	strh.w	r6, [ip]
 800c8d2:	2700      	movs	r7, #0
 800c8d4:	45b6      	cmp	lr, r6
 800c8d6:	f8ac 2002 	strh.w	r2, [ip, #2]
 800c8da:	f8ac 7004 	strh.w	r7, [ip, #4]
 800c8de:	f8ac 7006 	strh.w	r7, [ip, #6]
 800c8e2:	442b      	add	r3, r5
 800c8e4:	d04d      	beq.n	800c982 <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 800c8e6:	9f04      	ldr	r7, [sp, #16]
 800c8e8:	1aff      	subs	r7, r7, r3
 800c8ea:	443d      	add	r5, r7
 800c8ec:	016d      	lsls	r5, r5, #5
 800c8ee:	fb95 f8f1 	sdiv	r8, r5, r1
 800c8f2:	fb01 5518 	mls	r5, r1, r8, r5
 800c8f6:	2d00      	cmp	r5, #0
 800c8f8:	bfb8      	it	lt
 800c8fa:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800c8fe:	f108 0701 	add.w	r7, r8, #1
 800c902:	bfb8      	it	lt
 800c904:	186d      	addlt	r5, r5, r1
 800c906:	1a64      	subs	r4, r4, r1
 800c908:	9703      	str	r7, [sp, #12]
 800c90a:	f04f 0a00 	mov.w	sl, #0
 800c90e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800c912:	1964      	adds	r4, r4, r5
 800c914:	bf58      	it	pl
 800c916:	9f03      	ldrpl	r7, [sp, #12]
 800c918:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800c91c:	bf48      	it	mi
 800c91e:	4647      	movmi	r7, r8
 800c920:	44bb      	add	fp, r7
 800c922:	f8ac b004 	strh.w	fp, [ip, #4]
 800c926:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800c92a:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800c92e:	f8ac b006 	strh.w	fp, [ip, #6]
 800c932:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800c936:	443b      	add	r3, r7
 800c938:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800c93c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800c940:	bf58      	it	pl
 800c942:	1a64      	subpl	r4, r4, r1
 800c944:	ea5b 0707 	orrs.w	r7, fp, r7
 800c948:	444e      	add	r6, r9
 800c94a:	d011      	beq.n	800c970 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800c94c:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800c950:	f1bb 0f00 	cmp.w	fp, #0
 800c954:	db0c      	blt.n	800c970 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800c956:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800c958:	45bb      	cmp	fp, r7
 800c95a:	da09      	bge.n	800c970 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800c95c:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800c960:	45bb      	cmp	fp, r7
 800c962:	bf3c      	itt	cc
 800c964:	f10c 0708 	addcc.w	r7, ip, #8
 800c968:	6107      	strcc	r7, [r0, #16]
 800c96a:	f10b 0701 	add.w	r7, fp, #1
 800c96e:	6087      	str	r7, [r0, #8]
 800c970:	6907      	ldr	r7, [r0, #16]
 800c972:	45b6      	cmp	lr, r6
 800c974:	803e      	strh	r6, [r7, #0]
 800c976:	807a      	strh	r2, [r7, #2]
 800c978:	f8a7 a004 	strh.w	sl, [r7, #4]
 800c97c:	f8a7 a006 	strh.w	sl, [r7, #6]
 800c980:	d1c5      	bne.n	800c90e <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 800c982:	9a04      	ldr	r2, [sp, #16]
 800c984:	1ad3      	subs	r3, r2, r3
 800c986:	6902      	ldr	r2, [r0, #16]
 800c988:	8891      	ldrh	r1, [r2, #4]
 800c98a:	88d6      	ldrh	r6, [r2, #6]
 800c98c:	4419      	add	r1, r3
 800c98e:	8091      	strh	r1, [r2, #4]
 800c990:	9902      	ldr	r1, [sp, #8]
 800c992:	f101 0c20 	add.w	ip, r1, #32
 800c996:	9901      	ldr	r1, [sp, #4]
 800c998:	ebac 0c01 	sub.w	ip, ip, r1
 800c99c:	fb03 630c 	mla	r3, r3, ip, r6
 800c9a0:	80d3      	strh	r3, [r2, #6]
 800c9a2:	e74c      	b.n	800c83e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800c9a4:	9d05      	ldr	r5, [sp, #20]
 800c9a6:	1aa2      	subs	r2, r4, r2
 800c9a8:	eba5 0501 	sub.w	r5, r5, r1
 800c9ac:	9508      	str	r5, [sp, #32]
 800c9ae:	9202      	str	r2, [sp, #8]
 800c9b0:	f140 8128 	bpl.w	800cc04 <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 800c9b4:	9a03      	ldr	r2, [sp, #12]
 800c9b6:	2a00      	cmp	r2, #0
 800c9b8:	f6ff af41 	blt.w	800c83e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800c9bc:	9a02      	ldr	r2, [sp, #8]
 800c9be:	4252      	negs	r2, r2
 800c9c0:	9202      	str	r2, [sp, #8]
 800c9c2:	9a06      	ldr	r2, [sp, #24]
 800c9c4:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 800c9c8:	f04f 34ff 	mov.w	r4, #4294967295
 800c9cc:	9206      	str	r2, [sp, #24]
 800c9ce:	462a      	mov	r2, r5
 800c9d0:	940b      	str	r4, [sp, #44]	@ 0x2c
 800c9d2:	435a      	muls	r2, r3
 800c9d4:	2400      	movs	r4, #0
 800c9d6:	9d02      	ldr	r5, [sp, #8]
 800c9d8:	9401      	str	r4, [sp, #4]
 800c9da:	9c02      	ldr	r4, [sp, #8]
 800c9dc:	fb92 f4f4 	sdiv	r4, r2, r4
 800c9e0:	fb05 2214 	mls	r2, r5, r4, r2
 800c9e4:	2a00      	cmp	r2, #0
 800c9e6:	9207      	str	r2, [sp, #28]
 800c9e8:	bfbc      	itt	lt
 800c9ea:	1952      	addlt	r2, r2, r5
 800c9ec:	9207      	strlt	r2, [sp, #28]
 800c9ee:	9a01      	ldr	r2, [sp, #4]
 800c9f0:	6905      	ldr	r5, [r0, #16]
 800c9f2:	bfb8      	it	lt
 800c9f4:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800c9f8:	eb04 0901 	add.w	r9, r4, r1
 800c9fc:	429a      	cmp	r2, r3
 800c9fe:	ea4f 1669 	mov.w	r6, r9, asr #5
 800ca02:	f040 8112 	bne.w	800cc2a <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 800ca06:	f9b5 3000 	ldrsh.w	r3, [r5]
 800ca0a:	429e      	cmp	r6, r3
 800ca0c:	d104      	bne.n	800ca18 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 800ca0e:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800ca12:	9a03      	ldr	r2, [sp, #12]
 800ca14:	429a      	cmp	r2, r3
 800ca16:	d01b      	beq.n	800ca50 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800ca18:	88ea      	ldrh	r2, [r5, #6]
 800ca1a:	88ab      	ldrh	r3, [r5, #4]
 800ca1c:	4313      	orrs	r3, r2
 800ca1e:	d010      	beq.n	800ca42 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800ca20:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800ca24:	2a00      	cmp	r2, #0
 800ca26:	db0c      	blt.n	800ca42 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800ca28:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800ca2a:	429a      	cmp	r2, r3
 800ca2c:	da09      	bge.n	800ca42 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800ca2e:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 800ca32:	429a      	cmp	r2, r3
 800ca34:	bf38      	it	cc
 800ca36:	3508      	addcc	r5, #8
 800ca38:	f102 0201 	add.w	r2, r2, #1
 800ca3c:	bf38      	it	cc
 800ca3e:	6105      	strcc	r5, [r0, #16]
 800ca40:	6082      	str	r2, [r0, #8]
 800ca42:	6903      	ldr	r3, [r0, #16]
 800ca44:	9a03      	ldr	r2, [sp, #12]
 800ca46:	805a      	strh	r2, [r3, #2]
 800ca48:	2200      	movs	r2, #0
 800ca4a:	801e      	strh	r6, [r3, #0]
 800ca4c:	809a      	strh	r2, [r3, #4]
 800ca4e:	80da      	strh	r2, [r3, #6]
 800ca50:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800ca52:	9a03      	ldr	r2, [sp, #12]
 800ca54:	6901      	ldr	r1, [r0, #16]
 800ca56:	441a      	add	r2, r3
 800ca58:	f9b1 3000 	ldrsh.w	r3, [r1]
 800ca5c:	42b3      	cmp	r3, r6
 800ca5e:	d103      	bne.n	800ca68 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 800ca60:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800ca64:	429a      	cmp	r2, r3
 800ca66:	d01a      	beq.n	800ca9e <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 800ca68:	88cc      	ldrh	r4, [r1, #6]
 800ca6a:	888b      	ldrh	r3, [r1, #4]
 800ca6c:	4323      	orrs	r3, r4
 800ca6e:	d010      	beq.n	800ca92 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800ca70:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800ca74:	2c00      	cmp	r4, #0
 800ca76:	db0c      	blt.n	800ca92 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800ca78:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800ca7a:	429c      	cmp	r4, r3
 800ca7c:	da09      	bge.n	800ca92 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800ca7e:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800ca82:	429c      	cmp	r4, r3
 800ca84:	bf38      	it	cc
 800ca86:	3108      	addcc	r1, #8
 800ca88:	f104 0401 	add.w	r4, r4, #1
 800ca8c:	bf38      	it	cc
 800ca8e:	6101      	strcc	r1, [r0, #16]
 800ca90:	6084      	str	r4, [r0, #8]
 800ca92:	6903      	ldr	r3, [r0, #16]
 800ca94:	2100      	movs	r1, #0
 800ca96:	801e      	strh	r6, [r3, #0]
 800ca98:	805a      	strh	r2, [r3, #2]
 800ca9a:	8099      	strh	r1, [r3, #4]
 800ca9c:	80d9      	strh	r1, [r3, #6]
 800ca9e:	9b06      	ldr	r3, [sp, #24]
 800caa0:	4293      	cmp	r3, r2
 800caa2:	f000 8082 	beq.w	800cbaa <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 800caa6:	9b08      	ldr	r3, [sp, #32]
 800caa8:	9c02      	ldr	r4, [sp, #8]
 800caaa:	9902      	ldr	r1, [sp, #8]
 800caac:	015b      	lsls	r3, r3, #5
 800caae:	fb93 f1f1 	sdiv	r1, r3, r1
 800cab2:	fb04 3311 	mls	r3, r4, r1, r3
 800cab6:	2b00      	cmp	r3, #0
 800cab8:	9103      	str	r1, [sp, #12]
 800caba:	9308      	str	r3, [sp, #32]
 800cabc:	da04      	bge.n	800cac8 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 800cabe:	1e4b      	subs	r3, r1, #1
 800cac0:	9303      	str	r3, [sp, #12]
 800cac2:	9b08      	ldr	r3, [sp, #32]
 800cac4:	4423      	add	r3, r4
 800cac6:	9308      	str	r3, [sp, #32]
 800cac8:	9b07      	ldr	r3, [sp, #28]
 800caca:	9902      	ldr	r1, [sp, #8]
 800cacc:	1a5b      	subs	r3, r3, r1
 800cace:	9307      	str	r3, [sp, #28]
 800cad0:	9b01      	ldr	r3, [sp, #4]
 800cad2:	f1c3 0320 	rsb	r3, r3, #32
 800cad6:	930e      	str	r3, [sp, #56]	@ 0x38
 800cad8:	990e      	ldr	r1, [sp, #56]	@ 0x38
 800cada:	9b01      	ldr	r3, [sp, #4]
 800cadc:	1a5b      	subs	r3, r3, r1
 800cade:	464f      	mov	r7, r9
 800cae0:	930a      	str	r3, [sp, #40]	@ 0x28
 800cae2:	2600      	movs	r6, #0
 800cae4:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 800cae8:	185b      	adds	r3, r3, r1
 800caea:	bf58      	it	pl
 800caec:	9902      	ldrpl	r1, [sp, #8]
 800caee:	9307      	str	r3, [sp, #28]
 800caf0:	bf5d      	ittte	pl
 800caf2:	1a5b      	subpl	r3, r3, r1
 800caf4:	9307      	strpl	r3, [sp, #28]
 800caf6:	9b03      	ldrpl	r3, [sp, #12]
 800caf8:	9903      	ldrmi	r1, [sp, #12]
 800cafa:	bf58      	it	pl
 800cafc:	1c59      	addpl	r1, r3, #1
 800cafe:	4489      	add	r9, r1
 800cb00:	2a00      	cmp	r2, #0
 800cb02:	ea4f 1a69 	mov.w	sl, r9, asr #5
 800cb06:	db2e      	blt.n	800cb66 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800cb08:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800cb0a:	4293      	cmp	r3, r2
 800cb0c:	dd2b      	ble.n	800cb66 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800cb0e:	9c01      	ldr	r4, [sp, #4]
 800cb10:	6905      	ldr	r5, [r0, #16]
 800cb12:	46a0      	mov	r8, r4
 800cb14:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 800cb16:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 800cb1a:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 800cb1e:	45a0      	cmp	r8, r4
 800cb20:	f040 814f 	bne.w	800cdc2 <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 800cb24:	f9b5 1000 	ldrsh.w	r1, [r5]
 800cb28:	4551      	cmp	r1, sl
 800cb2a:	d103      	bne.n	800cb34 <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 800cb2c:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800cb30:	4291      	cmp	r1, r2
 800cb32:	d018      	beq.n	800cb66 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800cb34:	ea5c 010e 	orrs.w	r1, ip, lr
 800cb38:	d00f      	beq.n	800cb5a <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800cb3a:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800cb3e:	2900      	cmp	r1, #0
 800cb40:	db0b      	blt.n	800cb5a <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800cb42:	428b      	cmp	r3, r1
 800cb44:	dd09      	ble.n	800cb5a <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800cb46:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 800cb4a:	4299      	cmp	r1, r3
 800cb4c:	bf38      	it	cc
 800cb4e:	3508      	addcc	r5, #8
 800cb50:	f101 0101 	add.w	r1, r1, #1
 800cb54:	bf38      	it	cc
 800cb56:	6105      	strcc	r5, [r0, #16]
 800cb58:	6081      	str	r1, [r0, #8]
 800cb5a:	6903      	ldr	r3, [r0, #16]
 800cb5c:	f8a3 a000 	strh.w	sl, [r3]
 800cb60:	805a      	strh	r2, [r3, #2]
 800cb62:	809e      	strh	r6, [r3, #4]
 800cb64:	80de      	strh	r6, [r3, #6]
 800cb66:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800cb68:	6901      	ldr	r1, [r0, #16]
 800cb6a:	441a      	add	r2, r3
 800cb6c:	88cc      	ldrh	r4, [r1, #6]
 800cb6e:	888b      	ldrh	r3, [r1, #4]
 800cb70:	4323      	orrs	r3, r4
 800cb72:	d010      	beq.n	800cb96 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800cb74:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800cb78:	2c00      	cmp	r4, #0
 800cb7a:	db0c      	blt.n	800cb96 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800cb7c:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 800cb7e:	429c      	cmp	r4, r3
 800cb80:	da09      	bge.n	800cb96 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800cb82:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800cb86:	429c      	cmp	r4, r3
 800cb88:	bf38      	it	cc
 800cb8a:	3108      	addcc	r1, #8
 800cb8c:	f104 0401 	add.w	r4, r4, #1
 800cb90:	bf38      	it	cc
 800cb92:	6101      	strcc	r1, [r0, #16]
 800cb94:	6084      	str	r4, [r0, #8]
 800cb96:	6903      	ldr	r3, [r0, #16]
 800cb98:	f8a3 a000 	strh.w	sl, [r3]
 800cb9c:	805a      	strh	r2, [r3, #2]
 800cb9e:	809e      	strh	r6, [r3, #4]
 800cba0:	80de      	strh	r6, [r3, #6]
 800cba2:	9b06      	ldr	r3, [sp, #24]
 800cba4:	4293      	cmp	r3, r2
 800cba6:	464f      	mov	r7, r9
 800cba8:	d19c      	bne.n	800cae4 <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 800cbaa:	9b01      	ldr	r3, [sp, #4]
 800cbac:	6907      	ldr	r7, [r0, #16]
 800cbae:	f1c3 0620 	rsb	r6, r3, #32
 800cbb2:	9b05      	ldr	r3, [sp, #20]
 800cbb4:	ea4f 1e63 	mov.w	lr, r3, asr #5
 800cbb8:	9b04      	ldr	r3, [sp, #16]
 800cbba:	429e      	cmp	r6, r3
 800cbbc:	f040 81cc 	bne.w	800cf58 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 800cbc0:	f9b7 3000 	ldrsh.w	r3, [r7]
 800cbc4:	459e      	cmp	lr, r3
 800cbc6:	d104      	bne.n	800cbd2 <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 800cbc8:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800cbcc:	429a      	cmp	r2, r3
 800cbce:	f43f ae36 	beq.w	800c83e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800cbd2:	88f9      	ldrh	r1, [r7, #6]
 800cbd4:	88bb      	ldrh	r3, [r7, #4]
 800cbd6:	430b      	orrs	r3, r1
 800cbd8:	d010      	beq.n	800cbfc <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800cbda:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800cbde:	2b00      	cmp	r3, #0
 800cbe0:	db0c      	blt.n	800cbfc <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800cbe2:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 800cbe4:	428b      	cmp	r3, r1
 800cbe6:	da09      	bge.n	800cbfc <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800cbe8:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800cbec:	428b      	cmp	r3, r1
 800cbee:	bf38      	it	cc
 800cbf0:	3708      	addcc	r7, #8
 800cbf2:	f103 0301 	add.w	r3, r3, #1
 800cbf6:	bf38      	it	cc
 800cbf8:	6107      	strcc	r7, [r0, #16]
 800cbfa:	6083      	str	r3, [r0, #8]
 800cbfc:	6903      	ldr	r3, [r0, #16]
 800cbfe:	f8a3 e000 	strh.w	lr, [r3]
 800cc02:	e5ff      	b.n	800c804 <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 800cc04:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 800cc06:	9c03      	ldr	r4, [sp, #12]
 800cc08:	42a2      	cmp	r2, r4
 800cc0a:	f6ff ae18 	blt.w	800c83e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800cc0e:	9c06      	ldr	r4, [sp, #24]
 800cc10:	42a2      	cmp	r2, r4
 800cc12:	bfb8      	it	lt
 800cc14:	3201      	addlt	r2, #1
 800cc16:	9c08      	ldr	r4, [sp, #32]
 800cc18:	bfb8      	it	lt
 800cc1a:	9206      	strlt	r2, [sp, #24]
 800cc1c:	f1c3 0220 	rsb	r2, r3, #32
 800cc20:	4362      	muls	r2, r4
 800cc22:	2401      	movs	r4, #1
 800cc24:	940b      	str	r4, [sp, #44]	@ 0x2c
 800cc26:	2420      	movs	r4, #32
 800cc28:	e6d5      	b.n	800c9d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 800cc2a:	f009 021f 	and.w	r2, r9, #31
 800cc2e:	ea4f 1861 	mov.w	r8, r1, asr #5
 800cc32:	920c      	str	r2, [sp, #48]	@ 0x30
 800cc34:	9a01      	ldr	r2, [sp, #4]
 800cc36:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 800cc3a:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 800cc3e:	45b0      	cmp	r8, r6
 800cc40:	f001 011f 	and.w	r1, r1, #31
 800cc44:	eba2 0203 	sub.w	r2, r2, r3
 800cc48:	d108      	bne.n	800cc5c <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 800cc4a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800cc4c:	4419      	add	r1, r3
 800cc4e:	4496      	add	lr, r2
 800cc50:	fb02 a101 	mla	r1, r2, r1, sl
 800cc54:	f8a5 e004 	strh.w	lr, [r5, #4]
 800cc58:	80e9      	strh	r1, [r5, #6]
 800cc5a:	e6f9      	b.n	800ca50 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800cc5c:	2c00      	cmp	r4, #0
 800cc5e:	f2c0 80a9 	blt.w	800cdb4 <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 800cc62:	2701      	movs	r7, #1
 800cc64:	f1c1 0c20 	rsb	ip, r1, #32
 800cc68:	970a      	str	r7, [sp, #40]	@ 0x28
 800cc6a:	fb02 f20c 	mul.w	r2, r2, ip
 800cc6e:	2720      	movs	r7, #32
 800cc70:	9709      	str	r7, [sp, #36]	@ 0x24
 800cc72:	fb92 fcf4 	sdiv	ip, r2, r4
 800cc76:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 800cc78:	fb04 221c 	mls	r2, r4, ip, r2
 800cc7c:	2a00      	cmp	r2, #0
 800cc7e:	bfb8      	it	lt
 800cc80:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 800cc84:	4439      	add	r1, r7
 800cc86:	fb0c a101 	mla	r1, ip, r1, sl
 800cc8a:	80e9      	strh	r1, [r5, #6]
 800cc8c:	44e6      	add	lr, ip
 800cc8e:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800cc90:	f8a5 e004 	strh.w	lr, [r5, #4]
 800cc94:	eb08 0501 	add.w	r5, r8, r1
 800cc98:	6901      	ldr	r1, [r0, #16]
 800cc9a:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 800cc9e:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 800cca2:	bfb8      	it	lt
 800cca4:	1912      	addlt	r2, r2, r4
 800cca6:	ea58 070e 	orrs.w	r7, r8, lr
 800ccaa:	d010      	beq.n	800ccce <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800ccac:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 800ccb0:	f1be 0f00 	cmp.w	lr, #0
 800ccb4:	db0b      	blt.n	800ccce <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800ccb6:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800ccb8:	45be      	cmp	lr, r7
 800ccba:	da08      	bge.n	800ccce <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800ccbc:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800ccc0:	45be      	cmp	lr, r7
 800ccc2:	bf3c      	itt	cc
 800ccc4:	3108      	addcc	r1, #8
 800ccc6:	6101      	strcc	r1, [r0, #16]
 800ccc8:	f10e 0101 	add.w	r1, lr, #1
 800cccc:	6081      	str	r1, [r0, #8]
 800ccce:	6901      	ldr	r1, [r0, #16]
 800ccd0:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 800ccd4:	800d      	strh	r5, [r1, #0]
 800ccd6:	f04f 0e00 	mov.w	lr, #0
 800ccda:	42ae      	cmp	r6, r5
 800ccdc:	f8a1 8002 	strh.w	r8, [r1, #2]
 800cce0:	f8a1 e004 	strh.w	lr, [r1, #4]
 800cce4:	f8a1 e006 	strh.w	lr, [r1, #6]
 800cce8:	4463      	add	r3, ip
 800ccea:	d054      	beq.n	800cd96 <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 800ccec:	9901      	ldr	r1, [sp, #4]
 800ccee:	1ac9      	subs	r1, r1, r3
 800ccf0:	4461      	add	r1, ip
 800ccf2:	0149      	lsls	r1, r1, #5
 800ccf4:	fb91 fef4 	sdiv	lr, r1, r4
 800ccf8:	fb04 111e 	mls	r1, r4, lr, r1
 800ccfc:	2900      	cmp	r1, #0
 800ccfe:	bfb8      	it	lt
 800cd00:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 800cd04:	f10e 0701 	add.w	r7, lr, #1
 800cd08:	bfb8      	it	lt
 800cd0a:	1909      	addlt	r1, r1, r4
 800cd0c:	1b12      	subs	r2, r2, r4
 800cd0e:	970d      	str	r7, [sp, #52]	@ 0x34
 800cd10:	f8d0 a010 	ldr.w	sl, [r0, #16]
 800cd14:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 800cd16:	f8ba b004 	ldrh.w	fp, [sl, #4]
 800cd1a:	1852      	adds	r2, r2, r1
 800cd1c:	bf54      	ite	pl
 800cd1e:	f8dd c034 	ldrpl.w	ip, [sp, #52]	@ 0x34
 800cd22:	46f4      	movmi	ip, lr
 800cd24:	44e3      	add	fp, ip
 800cd26:	f8aa b004 	strh.w	fp, [sl, #4]
 800cd2a:	f8ba b006 	ldrh.w	fp, [sl, #6]
 800cd2e:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 800cd32:	f8aa b006 	strh.w	fp, [sl, #6]
 800cd36:	4463      	add	r3, ip
 800cd38:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800cd3c:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800cd40:	f8bc a004 	ldrh.w	sl, [ip, #4]
 800cd44:	bf58      	it	pl
 800cd46:	1b12      	subpl	r2, r2, r4
 800cd48:	443d      	add	r5, r7
 800cd4a:	ea5b 070a 	orrs.w	r7, fp, sl
 800cd4e:	d014      	beq.n	800cd7a <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800cd50:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 800cd54:	f1ba 0f00 	cmp.w	sl, #0
 800cd58:	db0f      	blt.n	800cd7a <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800cd5a:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800cd5c:	45ba      	cmp	sl, r7
 800cd5e:	da0c      	bge.n	800cd7a <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800cd60:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 800cd64:	45ba      	cmp	sl, r7
 800cd66:	bf38      	it	cc
 800cd68:	f10c 0c08 	addcc.w	ip, ip, #8
 800cd6c:	f10a 0a01 	add.w	sl, sl, #1
 800cd70:	bf38      	it	cc
 800cd72:	f8c0 c010 	strcc.w	ip, [r0, #16]
 800cd76:	f8c0 a008 	str.w	sl, [r0, #8]
 800cd7a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800cd7e:	f04f 0700 	mov.w	r7, #0
 800cd82:	42ae      	cmp	r6, r5
 800cd84:	f8ac 5000 	strh.w	r5, [ip]
 800cd88:	f8ac 8002 	strh.w	r8, [ip, #2]
 800cd8c:	f8ac 7004 	strh.w	r7, [ip, #4]
 800cd90:	f8ac 7006 	strh.w	r7, [ip, #6]
 800cd94:	d1bc      	bne.n	800cd10 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 800cd96:	6904      	ldr	r4, [r0, #16]
 800cd98:	9a01      	ldr	r2, [sp, #4]
 800cd9a:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800cd9c:	1ad3      	subs	r3, r2, r3
 800cd9e:	88a2      	ldrh	r2, [r4, #4]
 800cda0:	441a      	add	r2, r3
 800cda2:	80a2      	strh	r2, [r4, #4]
 800cda4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800cda6:	3120      	adds	r1, #32
 800cda8:	1a89      	subs	r1, r1, r2
 800cdaa:	88e2      	ldrh	r2, [r4, #6]
 800cdac:	fb03 2301 	mla	r3, r3, r1, r2
 800cdb0:	80e3      	strh	r3, [r4, #6]
 800cdb2:	e64d      	b.n	800ca50 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800cdb4:	f04f 37ff 	mov.w	r7, #4294967295
 800cdb8:	970a      	str	r7, [sp, #40]	@ 0x28
 800cdba:	434a      	muls	r2, r1
 800cdbc:	4264      	negs	r4, r4
 800cdbe:	2700      	movs	r7, #0
 800cdc0:	e756      	b.n	800cc70 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 800cdc2:	ea4f 1867 	mov.w	r8, r7, asr #5
 800cdc6:	f009 031f 	and.w	r3, r9, #31
 800cdca:	45d0      	cmp	r8, sl
 800cdcc:	f007 071f 	and.w	r7, r7, #31
 800cdd0:	930f      	str	r3, [sp, #60]	@ 0x3c
 800cdd2:	fa1f fc8c 	uxth.w	ip, ip
 800cdd6:	fa1f fe8e 	uxth.w	lr, lr
 800cdda:	d10a      	bne.n	800cdf2 <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 800cddc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800cdde:	449c      	add	ip, r3
 800cde0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800cde2:	f8a5 c004 	strh.w	ip, [r5, #4]
 800cde6:	441f      	add	r7, r3
 800cde8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800cdea:	fb03 e707 	mla	r7, r3, r7, lr
 800cdee:	80ef      	strh	r7, [r5, #6]
 800cdf0:	e6b9      	b.n	800cb66 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800cdf2:	2900      	cmp	r1, #0
 800cdf4:	f2c0 80a8 	blt.w	800cf48 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 800cdf8:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 800cdfa:	f1c7 0320 	rsb	r3, r7, #32
 800cdfe:	4363      	muls	r3, r4
 800ce00:	2401      	movs	r4, #1
 800ce02:	940d      	str	r4, [sp, #52]	@ 0x34
 800ce04:	2420      	movs	r4, #32
 800ce06:	940c      	str	r4, [sp, #48]	@ 0x30
 800ce08:	fb93 f4f1 	sdiv	r4, r3, r1
 800ce0c:	fb01 3b14 	mls	fp, r1, r4, r3
 800ce10:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800ce12:	f1bb 0f00 	cmp.w	fp, #0
 800ce16:	bfb8      	it	lt
 800ce18:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800ce1c:	441f      	add	r7, r3
 800ce1e:	fb04 e707 	mla	r7, r4, r7, lr
 800ce22:	44a4      	add	ip, r4
 800ce24:	f8a5 c004 	strh.w	ip, [r5, #4]
 800ce28:	80ef      	strh	r7, [r5, #6]
 800ce2a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ce2e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800ce30:	f8bc e006 	ldrh.w	lr, [ip, #6]
 800ce34:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800ce38:	bfb8      	it	lt
 800ce3a:	448b      	addlt	fp, r1
 800ce3c:	eb08 0503 	add.w	r5, r8, r3
 800ce40:	ea5e 0307 	orrs.w	r3, lr, r7
 800ce44:	d011      	beq.n	800ce6a <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800ce46:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 800ce4a:	f1be 0f00 	cmp.w	lr, #0
 800ce4e:	db0c      	blt.n	800ce6a <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800ce50:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800ce52:	45be      	cmp	lr, r7
 800ce54:	da09      	bge.n	800ce6a <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800ce56:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800ce5a:	45be      	cmp	lr, r7
 800ce5c:	bf3c      	itt	cc
 800ce5e:	f10c 0708 	addcc.w	r7, ip, #8
 800ce62:	6107      	strcc	r7, [r0, #16]
 800ce64:	f10e 0701 	add.w	r7, lr, #1
 800ce68:	6087      	str	r7, [r0, #8]
 800ce6a:	6907      	ldr	r7, [r0, #16]
 800ce6c:	b213      	sxth	r3, r2
 800ce6e:	9310      	str	r3, [sp, #64]	@ 0x40
 800ce70:	807b      	strh	r3, [r7, #2]
 800ce72:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800ce74:	803d      	strh	r5, [r7, #0]
 800ce76:	4555      	cmp	r5, sl
 800ce78:	80be      	strh	r6, [r7, #4]
 800ce7a:	80fe      	strh	r6, [r7, #6]
 800ce7c:	eb04 0c03 	add.w	ip, r4, r3
 800ce80:	d051      	beq.n	800cf26 <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 800ce82:	9b01      	ldr	r3, [sp, #4]
 800ce84:	eba3 070c 	sub.w	r7, r3, ip
 800ce88:	443c      	add	r4, r7
 800ce8a:	0164      	lsls	r4, r4, #5
 800ce8c:	fb94 f8f1 	sdiv	r8, r4, r1
 800ce90:	fb01 4418 	mls	r4, r1, r8, r4
 800ce94:	2c00      	cmp	r4, #0
 800ce96:	bfb8      	it	lt
 800ce98:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800ce9c:	ebab 0301 	sub.w	r3, fp, r1
 800cea0:	f108 0701 	add.w	r7, r8, #1
 800cea4:	bfb8      	it	lt
 800cea6:	1864      	addlt	r4, r4, r1
 800cea8:	9309      	str	r3, [sp, #36]	@ 0x24
 800ceaa:	9711      	str	r7, [sp, #68]	@ 0x44
 800ceac:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800ceae:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800ceb2:	191b      	adds	r3, r3, r4
 800ceb4:	bf58      	it	pl
 800ceb6:	9f11      	ldrpl	r7, [sp, #68]	@ 0x44
 800ceb8:	f8be b004 	ldrh.w	fp, [lr, #4]
 800cebc:	9309      	str	r3, [sp, #36]	@ 0x24
 800cebe:	bf48      	it	mi
 800cec0:	4647      	movmi	r7, r8
 800cec2:	44bb      	add	fp, r7
 800cec4:	f8ae b004 	strh.w	fp, [lr, #4]
 800cec8:	f8be b006 	ldrh.w	fp, [lr, #6]
 800cecc:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800ced0:	f8ae b006 	strh.w	fp, [lr, #6]
 800ced4:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800ced8:	44bc      	add	ip, r7
 800ceda:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
 800cedc:	f8be b006 	ldrh.w	fp, [lr, #6]
 800cee0:	443d      	add	r5, r7
 800cee2:	f8be 7004 	ldrh.w	r7, [lr, #4]
 800cee6:	bf5c      	itt	pl
 800cee8:	1a5b      	subpl	r3, r3, r1
 800ceea:	9309      	strpl	r3, [sp, #36]	@ 0x24
 800ceec:	ea5b 0307 	orrs.w	r3, fp, r7
 800cef0:	d011      	beq.n	800cf16 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800cef2:	f9be b002 	ldrsh.w	fp, [lr, #2]
 800cef6:	f1bb 0f00 	cmp.w	fp, #0
 800cefa:	db0c      	blt.n	800cf16 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800cefc:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800cefe:	45bb      	cmp	fp, r7
 800cf00:	da09      	bge.n	800cf16 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800cf02:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800cf06:	45bb      	cmp	fp, r7
 800cf08:	bf3c      	itt	cc
 800cf0a:	f10e 0708 	addcc.w	r7, lr, #8
 800cf0e:	6107      	strcc	r7, [r0, #16]
 800cf10:	f10b 0701 	add.w	r7, fp, #1
 800cf14:	6087      	str	r7, [r0, #8]
 800cf16:	6907      	ldr	r7, [r0, #16]
 800cf18:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800cf1a:	803d      	strh	r5, [r7, #0]
 800cf1c:	4555      	cmp	r5, sl
 800cf1e:	807b      	strh	r3, [r7, #2]
 800cf20:	80be      	strh	r6, [r7, #4]
 800cf22:	80fe      	strh	r6, [r7, #6]
 800cf24:	d1c2      	bne.n	800ceac <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 800cf26:	9b01      	ldr	r3, [sp, #4]
 800cf28:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 800cf2a:	eba3 0c0c 	sub.w	ip, r3, ip
 800cf2e:	6903      	ldr	r3, [r0, #16]
 800cf30:	8899      	ldrh	r1, [r3, #4]
 800cf32:	4461      	add	r1, ip
 800cf34:	8099      	strh	r1, [r3, #4]
 800cf36:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800cf38:	3720      	adds	r7, #32
 800cf3a:	1a7f      	subs	r7, r7, r1
 800cf3c:	88d9      	ldrh	r1, [r3, #6]
 800cf3e:	fb0c 1c07 	mla	ip, ip, r7, r1
 800cf42:	f8a3 c006 	strh.w	ip, [r3, #6]
 800cf46:	e60e      	b.n	800cb66 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800cf48:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800cf4a:	f04f 34ff 	mov.w	r4, #4294967295
 800cf4e:	940d      	str	r4, [sp, #52]	@ 0x34
 800cf50:	437b      	muls	r3, r7
 800cf52:	4249      	negs	r1, r1
 800cf54:	2400      	movs	r4, #0
 800cf56:	e756      	b.n	800ce06 <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 800cf58:	9905      	ldr	r1, [sp, #20]
 800cf5a:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 800cf5e:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 800cf62:	f001 011f 	and.w	r1, r1, #31
 800cf66:	ea4f 1b69 	mov.w	fp, r9, asr #5
 800cf6a:	9102      	str	r1, [sp, #8]
 800cf6c:	9904      	ldr	r1, [sp, #16]
 800cf6e:	45f3      	cmp	fp, lr
 800cf70:	f009 0c1f 	and.w	ip, r9, #31
 800cf74:	eba1 0406 	sub.w	r4, r1, r6
 800cf78:	d108      	bne.n	800cf8c <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 800cf7a:	9b02      	ldr	r3, [sp, #8]
 800cf7c:	449c      	add	ip, r3
 800cf7e:	44a0      	add	r8, r4
 800cf80:	fb04 a40c 	mla	r4, r4, ip, sl
 800cf84:	f8a7 8004 	strh.w	r8, [r7, #4]
 800cf88:	80fc      	strh	r4, [r7, #6]
 800cf8a:	e458      	b.n	800c83e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800cf8c:	9905      	ldr	r1, [sp, #20]
 800cf8e:	ebb1 0109 	subs.w	r1, r1, r9
 800cf92:	bf5b      	ittet	pl
 800cf94:	f1cc 0520 	rsbpl	r5, ip, #32
 800cf98:	436c      	mulpl	r4, r5
 800cf9a:	2500      	movmi	r5, #0
 800cf9c:	2520      	movpl	r5, #32
 800cf9e:	bf44      	itt	mi
 800cfa0:	fb04 f40c 	mulmi.w	r4, r4, ip
 800cfa4:	4249      	negmi	r1, r1
 800cfa6:	9501      	str	r5, [sp, #4]
 800cfa8:	9b01      	ldr	r3, [sp, #4]
 800cfaa:	fb94 f5f1 	sdiv	r5, r4, r1
 800cfae:	fb01 4415 	mls	r4, r1, r5, r4
 800cfb2:	bf54      	ite	pl
 800cfb4:	f04f 0901 	movpl.w	r9, #1
 800cfb8:	f04f 39ff 	movmi.w	r9, #4294967295
 800cfbc:	2c00      	cmp	r4, #0
 800cfbe:	bfb8      	it	lt
 800cfc0:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800cfc4:	449c      	add	ip, r3
 800cfc6:	44a8      	add	r8, r5
 800cfc8:	fb05 ac0c 	mla	ip, r5, ip, sl
 800cfcc:	f8a7 8004 	strh.w	r8, [r7, #4]
 800cfd0:	f8a7 c006 	strh.w	ip, [r7, #6]
 800cfd4:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800cfd8:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800cfdc:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800cfe0:	bfb8      	it	lt
 800cfe2:	1864      	addlt	r4, r4, r1
 800cfe4:	ea58 0707 	orrs.w	r7, r8, r7
 800cfe8:	eb0b 0309 	add.w	r3, fp, r9
 800cfec:	d011      	beq.n	800d012 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800cfee:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800cff2:	f1b8 0f00 	cmp.w	r8, #0
 800cff6:	db0c      	blt.n	800d012 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800cff8:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800cffa:	45b8      	cmp	r8, r7
 800cffc:	da09      	bge.n	800d012 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800cffe:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 800d002:	45b8      	cmp	r8, r7
 800d004:	bf3c      	itt	cc
 800d006:	f10c 0708 	addcc.w	r7, ip, #8
 800d00a:	6107      	strcc	r7, [r0, #16]
 800d00c:	f108 0701 	add.w	r7, r8, #1
 800d010:	6087      	str	r7, [r0, #8]
 800d012:	6907      	ldr	r7, [r0, #16]
 800d014:	f04f 0c00 	mov.w	ip, #0
 800d018:	b212      	sxth	r2, r2
 800d01a:	459e      	cmp	lr, r3
 800d01c:	803b      	strh	r3, [r7, #0]
 800d01e:	807a      	strh	r2, [r7, #2]
 800d020:	f8a7 c004 	strh.w	ip, [r7, #4]
 800d024:	f8a7 c006 	strh.w	ip, [r7, #6]
 800d028:	442e      	add	r6, r5
 800d02a:	d04d      	beq.n	800d0c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 800d02c:	9f04      	ldr	r7, [sp, #16]
 800d02e:	1bbf      	subs	r7, r7, r6
 800d030:	443d      	add	r5, r7
 800d032:	016d      	lsls	r5, r5, #5
 800d034:	fb95 f8f1 	sdiv	r8, r5, r1
 800d038:	fb01 5518 	mls	r5, r1, r8, r5
 800d03c:	4565      	cmp	r5, ip
 800d03e:	bfb8      	it	lt
 800d040:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800d044:	f108 0701 	add.w	r7, r8, #1
 800d048:	bfb8      	it	lt
 800d04a:	186d      	addlt	r5, r5, r1
 800d04c:	1a64      	subs	r4, r4, r1
 800d04e:	9703      	str	r7, [sp, #12]
 800d050:	f04f 0a00 	mov.w	sl, #0
 800d054:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800d058:	1964      	adds	r4, r4, r5
 800d05a:	bf58      	it	pl
 800d05c:	9f03      	ldrpl	r7, [sp, #12]
 800d05e:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800d062:	bf48      	it	mi
 800d064:	4647      	movmi	r7, r8
 800d066:	44bb      	add	fp, r7
 800d068:	f8ac b004 	strh.w	fp, [ip, #4]
 800d06c:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800d070:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800d074:	f8ac b006 	strh.w	fp, [ip, #6]
 800d078:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800d07c:	443e      	add	r6, r7
 800d07e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800d082:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800d086:	bf58      	it	pl
 800d088:	1a64      	subpl	r4, r4, r1
 800d08a:	ea5b 0707 	orrs.w	r7, fp, r7
 800d08e:	444b      	add	r3, r9
 800d090:	d011      	beq.n	800d0b6 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800d092:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800d096:	f1bb 0f00 	cmp.w	fp, #0
 800d09a:	db0c      	blt.n	800d0b6 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800d09c:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 800d09e:	45bb      	cmp	fp, r7
 800d0a0:	da09      	bge.n	800d0b6 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800d0a2:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800d0a6:	45bb      	cmp	fp, r7
 800d0a8:	bf3c      	itt	cc
 800d0aa:	f10c 0708 	addcc.w	r7, ip, #8
 800d0ae:	6107      	strcc	r7, [r0, #16]
 800d0b0:	f10b 0701 	add.w	r7, fp, #1
 800d0b4:	6087      	str	r7, [r0, #8]
 800d0b6:	6907      	ldr	r7, [r0, #16]
 800d0b8:	459e      	cmp	lr, r3
 800d0ba:	803b      	strh	r3, [r7, #0]
 800d0bc:	807a      	strh	r2, [r7, #2]
 800d0be:	f8a7 a004 	strh.w	sl, [r7, #4]
 800d0c2:	f8a7 a006 	strh.w	sl, [r7, #6]
 800d0c6:	d1c5      	bne.n	800d054 <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 800d0c8:	9b04      	ldr	r3, [sp, #16]
 800d0ca:	1b9e      	subs	r6, r3, r6
 800d0cc:	6903      	ldr	r3, [r0, #16]
 800d0ce:	889a      	ldrh	r2, [r3, #4]
 800d0d0:	4432      	add	r2, r6
 800d0d2:	809a      	strh	r2, [r3, #4]
 800d0d4:	9a02      	ldr	r2, [sp, #8]
 800d0d6:	f102 0c20 	add.w	ip, r2, #32
 800d0da:	9a01      	ldr	r2, [sp, #4]
 800d0dc:	ebac 0c02 	sub.w	ip, ip, r2
 800d0e0:	88da      	ldrh	r2, [r3, #6]
 800d0e2:	fb06 260c 	mla	r6, r6, ip, r2
 800d0e6:	80de      	strh	r6, [r3, #6]
 800d0e8:	f7ff bba9 	b.w	800c83e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

0800d0ec <_ZN8touchgfx7Outline6lineToEii>:
 800d0ec:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800d0ee:	079b      	lsls	r3, r3, #30
 800d0f0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800d0f2:	460e      	mov	r6, r1
 800d0f4:	4615      	mov	r5, r2
 800d0f6:	d511      	bpl.n	800d11c <_ZN8touchgfx7Outline6lineToEii+0x30>
 800d0f8:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 800d0fc:	ea86 0701 	eor.w	r7, r6, r1
 800d100:	ea85 0302 	eor.w	r3, r5, r2
 800d104:	433b      	orrs	r3, r7
 800d106:	d009      	beq.n	800d11c <_ZN8touchgfx7Outline6lineToEii+0x30>
 800d108:	4633      	mov	r3, r6
 800d10a:	9500      	str	r5, [sp, #0]
 800d10c:	f7ff fb3e 	bl	800c78c <_ZN8touchgfx7Outline10renderLineEiiii>
 800d110:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800d112:	e9c0 6505 	strd	r6, r5, [r0, #20]
 800d116:	f043 0301 	orr.w	r3, r3, #1
 800d11a:	6243      	str	r3, [r0, #36]	@ 0x24
 800d11c:	b003      	add	sp, #12
 800d11e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d120 <_ZN8touchgfx7Outline6moveToEii>:
 800d120:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d122:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800d124:	4615      	mov	r5, r2
 800d126:	079a      	lsls	r2, r3, #30
 800d128:	4604      	mov	r4, r0
 800d12a:	460e      	mov	r6, r1
 800d12c:	d401      	bmi.n	800d132 <_ZN8touchgfx7Outline6moveToEii+0x12>
 800d12e:	f7ff faf9 	bl	800c724 <_ZN8touchgfx7Outline5resetEv>
 800d132:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800d134:	07db      	lsls	r3, r3, #31
 800d136:	d504      	bpl.n	800d142 <_ZN8touchgfx7Outline6moveToEii+0x22>
 800d138:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 800d13c:	4620      	mov	r0, r4
 800d13e:	f7ff ffd5 	bl	800d0ec <_ZN8touchgfx7Outline6lineToEii>
 800d142:	6923      	ldr	r3, [r4, #16]
 800d144:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d148:	1170      	asrs	r0, r6, #5
 800d14a:	4290      	cmp	r0, r2
 800d14c:	ea4f 1165 	mov.w	r1, r5, asr #5
 800d150:	d103      	bne.n	800d15a <_ZN8touchgfx7Outline6moveToEii+0x3a>
 800d152:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800d156:	4291      	cmp	r1, r2
 800d158:	d01a      	beq.n	800d190 <_ZN8touchgfx7Outline6moveToEii+0x70>
 800d15a:	88df      	ldrh	r7, [r3, #6]
 800d15c:	889a      	ldrh	r2, [r3, #4]
 800d15e:	433a      	orrs	r2, r7
 800d160:	d010      	beq.n	800d184 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800d162:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800d166:	2a00      	cmp	r2, #0
 800d168:	db0c      	blt.n	800d184 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800d16a:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 800d16c:	42ba      	cmp	r2, r7
 800d16e:	da09      	bge.n	800d184 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800d170:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 800d174:	42ba      	cmp	r2, r7
 800d176:	bf38      	it	cc
 800d178:	3308      	addcc	r3, #8
 800d17a:	f102 0201 	add.w	r2, r2, #1
 800d17e:	bf38      	it	cc
 800d180:	6123      	strcc	r3, [r4, #16]
 800d182:	60a2      	str	r2, [r4, #8]
 800d184:	6923      	ldr	r3, [r4, #16]
 800d186:	2200      	movs	r2, #0
 800d188:	8018      	strh	r0, [r3, #0]
 800d18a:	8059      	strh	r1, [r3, #2]
 800d18c:	809a      	strh	r2, [r3, #4]
 800d18e:	80da      	strh	r2, [r3, #6]
 800d190:	6166      	str	r6, [r4, #20]
 800d192:	e9c4 5606 	strd	r5, r6, [r4, #24]
 800d196:	6225      	str	r5, [r4, #32]
 800d198:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800d19a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 800d19a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d19e:	b0d0      	sub	sp, #320	@ 0x140
 800d1a0:	466c      	mov	r4, sp
 800d1a2:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 800d1a6:	4627      	mov	r7, r4
 800d1a8:	1a0d      	subs	r5, r1, r0
 800d1aa:	2d48      	cmp	r5, #72	@ 0x48
 800d1ac:	f100 0308 	add.w	r3, r0, #8
 800d1b0:	f340 80d5 	ble.w	800d35e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800d1b4:	112d      	asrs	r5, r5, #4
 800d1b6:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 800d1ba:	f9b0 9000 	ldrsh.w	r9, [r0]
 800d1be:	6816      	ldr	r6, [r2, #0]
 800d1c0:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 800d1c4:	6006      	str	r6, [r0, #0]
 800d1c6:	6856      	ldr	r6, [r2, #4]
 800d1c8:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800d1cc:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800d1d0:	6046      	str	r6, [r0, #4]
 800d1d2:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800d1d6:	f8a2 8002 	strh.w	r8, [r2, #2]
 800d1da:	f8a2 e004 	strh.w	lr, [r2, #4]
 800d1de:	f8a2 c006 	strh.w	ip, [r2, #6]
 800d1e2:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800d1e6:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 800d1ea:	4565      	cmp	r5, ip
 800d1ec:	f1a1 0208 	sub.w	r2, r1, #8
 800d1f0:	db06      	blt.n	800d200 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 800d1f2:	d119      	bne.n	800d228 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800d1f4:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 800d1f8:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 800d1fc:	42ae      	cmp	r6, r5
 800d1fe:	dd13      	ble.n	800d228 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800d200:	460e      	mov	r6, r1
 800d202:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 800d206:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800d20a:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 800d20e:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 800d212:	601d      	str	r5, [r3, #0]
 800d214:	6875      	ldr	r5, [r6, #4]
 800d216:	605d      	str	r5, [r3, #4]
 800d218:	f821 9c08 	strh.w	r9, [r1, #-8]
 800d21c:	f821 cc06 	strh.w	ip, [r1, #-6]
 800d220:	f821 8c04 	strh.w	r8, [r1, #-4]
 800d224:	f821 ec02 	strh.w	lr, [r1, #-2]
 800d228:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800d22c:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 800d230:	42ae      	cmp	r6, r5
 800d232:	db06      	blt.n	800d242 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 800d234:	d116      	bne.n	800d264 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800d236:	f9b0 c000 	ldrsh.w	ip, [r0]
 800d23a:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 800d23e:	45ac      	cmp	ip, r5
 800d240:	da10      	bge.n	800d264 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800d242:	681d      	ldr	r5, [r3, #0]
 800d244:	f9b0 8000 	ldrsh.w	r8, [r0]
 800d248:	6005      	str	r5, [r0, #0]
 800d24a:	685d      	ldr	r5, [r3, #4]
 800d24c:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800d250:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800d254:	f8a0 8008 	strh.w	r8, [r0, #8]
 800d258:	6045      	str	r5, [r0, #4]
 800d25a:	8146      	strh	r6, [r0, #10]
 800d25c:	f8a0 e00c 	strh.w	lr, [r0, #12]
 800d260:	f8a0 c00e 	strh.w	ip, [r0, #14]
 800d264:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800d268:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800d26c:	4565      	cmp	r5, ip
 800d26e:	db06      	blt.n	800d27e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 800d270:	d119      	bne.n	800d2a6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800d272:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 800d276:	f9b0 5000 	ldrsh.w	r5, [r0]
 800d27a:	42ae      	cmp	r6, r5
 800d27c:	da13      	bge.n	800d2a6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800d27e:	460e      	mov	r6, r1
 800d280:	f9b0 9000 	ldrsh.w	r9, [r0]
 800d284:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800d288:	6005      	str	r5, [r0, #0]
 800d28a:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 800d28e:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 800d292:	6875      	ldr	r5, [r6, #4]
 800d294:	6045      	str	r5, [r0, #4]
 800d296:	f821 9c08 	strh.w	r9, [r1, #-8]
 800d29a:	f821 cc06 	strh.w	ip, [r1, #-6]
 800d29e:	f821 8c04 	strh.w	r8, [r1, #-4]
 800d2a2:	f821 ec02 	strh.w	lr, [r1, #-2]
 800d2a6:	3308      	adds	r3, #8
 800d2a8:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800d2ac:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 800d2b0:	45e6      	cmp	lr, ip
 800d2b2:	dbf8      	blt.n	800d2a6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800d2b4:	d105      	bne.n	800d2c2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800d2b6:	f9b3 6000 	ldrsh.w	r6, [r3]
 800d2ba:	f9b0 5000 	ldrsh.w	r5, [r0]
 800d2be:	42ae      	cmp	r6, r5
 800d2c0:	dbf1      	blt.n	800d2a6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800d2c2:	4615      	mov	r5, r2
 800d2c4:	3a08      	subs	r2, #8
 800d2c6:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 800d2ca:	45b4      	cmp	ip, r6
 800d2cc:	dbf9      	blt.n	800d2c2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800d2ce:	d105      	bne.n	800d2dc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 800d2d0:	f9b0 8000 	ldrsh.w	r8, [r0]
 800d2d4:	f9b2 6000 	ldrsh.w	r6, [r2]
 800d2d8:	45b0      	cmp	r8, r6
 800d2da:	dbf2      	blt.n	800d2c2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800d2dc:	4293      	cmp	r3, r2
 800d2de:	f1a5 0608 	sub.w	r6, r5, #8
 800d2e2:	d816      	bhi.n	800d312 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 800d2e4:	f8d6 c000 	ldr.w	ip, [r6]
 800d2e8:	f9b3 a000 	ldrsh.w	sl, [r3]
 800d2ec:	f8c3 c000 	str.w	ip, [r3]
 800d2f0:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 800d2f4:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 800d2f8:	f8d6 c004 	ldr.w	ip, [r6, #4]
 800d2fc:	f8c3 c004 	str.w	ip, [r3, #4]
 800d300:	f825 ac08 	strh.w	sl, [r5, #-8]
 800d304:	f825 ec06 	strh.w	lr, [r5, #-6]
 800d308:	f825 9c04 	strh.w	r9, [r5, #-4]
 800d30c:	f825 8c02 	strh.w	r8, [r5, #-2]
 800d310:	e7c9      	b.n	800d2a6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800d312:	f8d6 e000 	ldr.w	lr, [r6]
 800d316:	f9b0 a000 	ldrsh.w	sl, [r0]
 800d31a:	f8c0 e000 	str.w	lr, [r0]
 800d31e:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 800d322:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 800d326:	f8d6 e004 	ldr.w	lr, [r6, #4]
 800d32a:	f8c0 e004 	str.w	lr, [r0, #4]
 800d32e:	f825 ac08 	strh.w	sl, [r5, #-8]
 800d332:	f825 cc06 	strh.w	ip, [r5, #-6]
 800d336:	f825 9c04 	strh.w	r9, [r5, #-4]
 800d33a:	f825 8c02 	strh.w	r8, [r5, #-2]
 800d33e:	1acd      	subs	r5, r1, r3
 800d340:	1a16      	subs	r6, r2, r0
 800d342:	10ed      	asrs	r5, r5, #3
 800d344:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 800d348:	bfb5      	itete	lt
 800d34a:	e9c4 0200 	strdlt	r0, r2, [r4]
 800d34e:	e9c4 3100 	strdge	r3, r1, [r4]
 800d352:	460a      	movlt	r2, r1
 800d354:	4603      	movge	r3, r0
 800d356:	3408      	adds	r4, #8
 800d358:	4618      	mov	r0, r3
 800d35a:	4611      	mov	r1, r2
 800d35c:	e724      	b.n	800d1a8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800d35e:	4299      	cmp	r1, r3
 800d360:	d928      	bls.n	800d3b4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 800d362:	f1a3 0210 	sub.w	r2, r3, #16
 800d366:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 800d36a:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 800d36e:	45ac      	cmp	ip, r5
 800d370:	db06      	blt.n	800d380 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 800d372:	d11d      	bne.n	800d3b0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800d374:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 800d378:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 800d37c:	42ae      	cmp	r6, r5
 800d37e:	da17      	bge.n	800d3b0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800d380:	4615      	mov	r5, r2
 800d382:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 800d386:	f855 6f08 	ldr.w	r6, [r5, #8]!
 800d38a:	6116      	str	r6, [r2, #16]
 800d38c:	686e      	ldr	r6, [r5, #4]
 800d38e:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 800d392:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 800d396:	f8a2 9008 	strh.w	r9, [r2, #8]
 800d39a:	42a8      	cmp	r0, r5
 800d39c:	6156      	str	r6, [r2, #20]
 800d39e:	f8a2 c00a 	strh.w	ip, [r2, #10]
 800d3a2:	f8a2 800c 	strh.w	r8, [r2, #12]
 800d3a6:	f8a2 e00e 	strh.w	lr, [r2, #14]
 800d3aa:	f1a2 0208 	sub.w	r2, r2, #8
 800d3ae:	d1da      	bne.n	800d366 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 800d3b0:	3308      	adds	r3, #8
 800d3b2:	e7d4      	b.n	800d35e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800d3b4:	42bc      	cmp	r4, r7
 800d3b6:	d903      	bls.n	800d3c0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 800d3b8:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 800d3bc:	3c08      	subs	r4, #8
 800d3be:	e6f3      	b.n	800d1a8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800d3c0:	b050      	add	sp, #320	@ 0x140
 800d3c2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800d3c6 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 800d3c6:	b510      	push	{r4, lr}
 800d3c8:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800d3ca:	07da      	lsls	r2, r3, #31
 800d3cc:	4604      	mov	r4, r0
 800d3ce:	d507      	bpl.n	800d3e0 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 800d3d0:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 800d3d4:	f7ff fe8a 	bl	800d0ec <_ZN8touchgfx7Outline6lineToEii>
 800d3d8:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 800d3da:	f023 0301 	bic.w	r3, r3, #1
 800d3de:	6243      	str	r3, [r0, #36]	@ 0x24
 800d3e0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800d3e2:	079b      	lsls	r3, r3, #30
 800d3e4:	d521      	bpl.n	800d42a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 800d3e6:	6923      	ldr	r3, [r4, #16]
 800d3e8:	88d9      	ldrh	r1, [r3, #6]
 800d3ea:	889a      	ldrh	r2, [r3, #4]
 800d3ec:	430a      	orrs	r2, r1
 800d3ee:	d010      	beq.n	800d412 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800d3f0:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800d3f4:	2a00      	cmp	r2, #0
 800d3f6:	db0c      	blt.n	800d412 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800d3f8:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 800d3fa:	428a      	cmp	r2, r1
 800d3fc:	da09      	bge.n	800d412 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800d3fe:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800d402:	4291      	cmp	r1, r2
 800d404:	bf88      	it	hi
 800d406:	3308      	addhi	r3, #8
 800d408:	f102 0201 	add.w	r2, r2, #1
 800d40c:	bf88      	it	hi
 800d40e:	6123      	strhi	r3, [r4, #16]
 800d410:	60a2      	str	r2, [r4, #8]
 800d412:	68a1      	ldr	r1, [r4, #8]
 800d414:	b129      	cbz	r1, 800d422 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800d416:	6863      	ldr	r3, [r4, #4]
 800d418:	4299      	cmp	r1, r3
 800d41a:	d802      	bhi.n	800d422 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800d41c:	68e0      	ldr	r0, [r4, #12]
 800d41e:	f7ff febc 	bl	800d19a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 800d422:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 800d424:	f023 0302 	bic.w	r3, r3, #2
 800d428:	6263      	str	r3, [r4, #36]	@ 0x24
 800d42a:	68e0      	ldr	r0, [r4, #12]
 800d42c:	bd10      	pop	{r4, pc}
	...

0800d430 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 800d430:	4b01      	ldr	r3, [pc, #4]	@ (800d438 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 800d432:	6818      	ldr	r0, [r3, #0]
 800d434:	4770      	bx	lr
 800d436:	bf00      	nop
 800d438:	20013098 	.word	0x20013098

0800d43c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 800d43c:	4b01      	ldr	r3, [pc, #4]	@ (800d444 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 800d43e:	6818      	ldr	r0, [r3, #0]
 800d440:	4770      	bx	lr
 800d442:	bf00      	nop
 800d444:	2001309c 	.word	0x2001309c

0800d448 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800d448:	b510      	push	{r4, lr}
 800d44a:	6803      	ldr	r3, [r0, #0]
 800d44c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d44e:	460c      	mov	r4, r1
 800d450:	4798      	blx	r3
 800d452:	1b03      	subs	r3, r0, r4
 800d454:	4258      	negs	r0, r3
 800d456:	4158      	adcs	r0, r3
 800d458:	bd10      	pop	{r4, pc}
	...

0800d45c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800d45c:	4b01      	ldr	r3, [pc, #4]	@ (800d464 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800d45e:	6019      	str	r1, [r3, #0]
 800d460:	4770      	bx	lr
 800d462:	bf00      	nop
 800d464:	200130a0 	.word	0x200130a0

0800d468 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800d468:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d46c:	4696      	mov	lr, r2
 800d46e:	4605      	mov	r5, r0
 800d470:	4614      	mov	r4, r2
 800d472:	460e      	mov	r6, r1
 800d474:	461f      	mov	r7, r3
 800d476:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800d47a:	b097      	sub	sp, #92	@ 0x5c
 800d47c:	f10d 0c1c 	add.w	ip, sp, #28
 800d480:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800d484:	f8de 3000 	ldr.w	r3, [lr]
 800d488:	f8cc 3000 	str.w	r3, [ip]
 800d48c:	f104 0e14 	add.w	lr, r4, #20
 800d490:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800d494:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800d498:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800d49c:	f8de 3000 	ldr.w	r3, [lr]
 800d4a0:	f8cc 3000 	str.w	r3, [ip]
 800d4a4:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800d4a8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800d4ac:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800d4b0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800d4b4:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 800d4b8:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 800d4bc:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 800d4c0:	f8de 3000 	ldr.w	r3, [lr]
 800d4c4:	f8cc 3000 	str.w	r3, [ip]
 800d4c8:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800d4ca:	682b      	ldr	r3, [r5, #0]
 800d4cc:	9201      	str	r2, [sp, #4]
 800d4ce:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800d4d2:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800d4d4:	9200      	str	r2, [sp, #0]
 800d4d6:	f8cd 8008 	str.w	r8, [sp, #8]
 800d4da:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 800d4de:	aa07      	add	r2, sp, #28
 800d4e0:	463b      	mov	r3, r7
 800d4e2:	4631      	mov	r1, r6
 800d4e4:	4628      	mov	r0, r5
 800d4e6:	47d8      	blx	fp
 800d4e8:	46a6      	mov	lr, r4
 800d4ea:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800d4ee:	f10d 0c1c 	add.w	ip, sp, #28
 800d4f2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800d4f6:	f8de 3000 	ldr.w	r3, [lr]
 800d4fa:	f8cc 3000 	str.w	r3, [ip]
 800d4fe:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800d502:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800d506:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800d50a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800d50e:	343c      	adds	r4, #60	@ 0x3c
 800d510:	f8de 3000 	ldr.w	r3, [lr]
 800d514:	f8cc 3000 	str.w	r3, [ip]
 800d518:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800d51a:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800d51e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800d522:	6823      	ldr	r3, [r4, #0]
 800d524:	f8cc 3000 	str.w	r3, [ip]
 800d528:	682b      	ldr	r3, [r5, #0]
 800d52a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800d52e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800d530:	9201      	str	r2, [sp, #4]
 800d532:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800d534:	9200      	str	r2, [sp, #0]
 800d536:	f8cd 8008 	str.w	r8, [sp, #8]
 800d53a:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 800d53c:	aa07      	add	r2, sp, #28
 800d53e:	463b      	mov	r3, r7
 800d540:	4631      	mov	r1, r6
 800d542:	4628      	mov	r0, r5
 800d544:	47a0      	blx	r4
 800d546:	b017      	add	sp, #92	@ 0x5c
 800d548:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800d54c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800d54c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d550:	b08d      	sub	sp, #52	@ 0x34
 800d552:	4688      	mov	r8, r1
 800d554:	9916      	ldr	r1, [sp, #88]	@ 0x58
 800d556:	f8d3 c000 	ldr.w	ip, [r3]
 800d55a:	680f      	ldr	r7, [r1, #0]
 800d55c:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 800d560:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 800d564:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 800d568:	edd3 6a07 	vldr	s13, [r3, #28]
 800d56c:	9918      	ldr	r1, [sp, #96]	@ 0x60
 800d56e:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 800d572:	f9b1 9000 	ldrsh.w	r9, [r1]
 800d576:	f9ba 1000 	ldrsh.w	r1, [sl]
 800d57a:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 800d57e:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 800d582:	eba7 070c 	sub.w	r7, r7, ip
 800d586:	42bc      	cmp	r4, r7
 800d588:	bfa8      	it	ge
 800d58a:	463c      	movge	r4, r7
 800d58c:	ee07 4a90 	vmov	s15, r4
 800d590:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800d594:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 800d598:	ee25 4a04 	vmul.f32	s8, s10, s8
 800d59c:	ee65 4a24 	vmul.f32	s9, s10, s9
 800d5a0:	ee25 5a27 	vmul.f32	s10, s10, s15
 800d5a4:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 800d5a8:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800d5ac:	eb09 0e0c 	add.w	lr, r9, ip
 800d5b0:	4571      	cmp	r1, lr
 800d5b2:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800d5b6:	ee32 1a05 	vadd.f32	s2, s4, s10
 800d5ba:	ee36 0a84 	vadd.f32	s0, s13, s8
 800d5be:	ee61 1a87 	vmul.f32	s3, s3, s14
 800d5c2:	ee22 2a07 	vmul.f32	s4, s4, s14
 800d5c6:	f340 808d 	ble.w	800d6e4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800d5ca:	eba1 060e 	sub.w	r6, r1, lr
 800d5ce:	fb96 f5f4 	sdiv	r5, r6, r4
 800d5d2:	ee07 5a10 	vmov	s14, r5
 800d5d6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800d5da:	2d00      	cmp	r5, #0
 800d5dc:	fb04 6615 	mls	r6, r4, r5, r6
 800d5e0:	eea7 0a04 	vfma.f32	s0, s14, s8
 800d5e4:	eee7 0a24 	vfma.f32	s1, s14, s9
 800d5e8:	eea7 1a05 	vfma.f32	s2, s14, s10
 800d5ec:	dd13      	ble.n	800d616 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800d5ee:	ee70 6a44 	vsub.f32	s13, s0, s8
 800d5f2:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800d5f6:	eef5 6a40 	vcmp.f32	s13, #0.0
 800d5fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d5fe:	bf18      	it	ne
 800d600:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800d604:	ee31 2a45 	vsub.f32	s4, s2, s10
 800d608:	bf08      	it	eq
 800d60a:	eeb0 7a67 	vmoveq.f32	s14, s15
 800d60e:	ee61 1a87 	vmul.f32	s3, s3, s14
 800d612:	ee22 2a07 	vmul.f32	s4, s4, s14
 800d616:	fb05 f204 	mul.w	r2, r5, r4
 800d61a:	1abf      	subs	r7, r7, r2
 800d61c:	4494      	add	ip, r2
 800d61e:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800d622:	4411      	add	r1, r2
 800d624:	eb09 020c 	add.w	r2, r9, ip
 800d628:	443a      	add	r2, r7
 800d62a:	b209      	sxth	r1, r1
 800d62c:	428a      	cmp	r2, r1
 800d62e:	bfc4      	itt	gt
 800d630:	eba1 0209 	subgt.w	r2, r1, r9
 800d634:	eba2 070c 	subgt.w	r7, r2, ip
 800d638:	2f00      	cmp	r7, #0
 800d63a:	dd50      	ble.n	800d6de <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800d63c:	fb97 f1f4 	sdiv	r1, r7, r4
 800d640:	fb04 7211 	mls	r2, r4, r1, r7
 800d644:	b90a      	cbnz	r2, 800d64a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800d646:	3901      	subs	r1, #1
 800d648:	4622      	mov	r2, r4
 800d64a:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800d64e:	6840      	ldr	r0, [r0, #4]
 800d650:	900b      	str	r0, [sp, #44]	@ 0x2c
 800d652:	f8d0 a000 	ldr.w	sl, [r0]
 800d656:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 800d658:	9008      	str	r0, [sp, #32]
 800d65a:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 800d65e:	9818      	ldr	r0, [sp, #96]	@ 0x60
 800d660:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 800d664:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800d668:	695b      	ldr	r3, [r3, #20]
 800d66a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 800d66c:	445b      	add	r3, fp
 800d66e:	eef0 6a42 	vmov.f32	s13, s4
 800d672:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800d676:	ee21 3a23 	vmul.f32	s6, s2, s7
 800d67a:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800d67e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800d682:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800d686:	9307      	str	r3, [sp, #28]
 800d688:	ee17 7a90 	vmov	r7, s15
 800d68c:	ee73 7a42 	vsub.f32	s15, s6, s4
 800d690:	eeb0 7a61 	vmov.f32	s14, s3
 800d694:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800d698:	ee16 3a90 	vmov	r3, s13
 800d69c:	fb97 f7f4 	sdiv	r7, r7, r4
 800d6a0:	ee17 ca90 	vmov	ip, s15
 800d6a4:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800d6a8:	fb9c fcf4 	sdiv	ip, ip, r4
 800d6ac:	fb0c 3306 	mla	r3, ip, r6, r3
 800d6b0:	9302      	str	r3, [sp, #8]
 800d6b2:	ee17 3a10 	vmov	r3, s14
 800d6b6:	44b6      	add	lr, r6
 800d6b8:	fb04 e505 	mla	r5, r4, r5, lr
 800d6bc:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800d6c0:	fb07 3706 	mla	r7, r7, r6, r3
 800d6c4:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800d6c8:	e9cd 4700 	strd	r4, r7, [sp]
 800d6cc:	2900      	cmp	r1, #0
 800d6ce:	bfcc      	ite	gt
 800d6d0:	46a1      	movgt	r9, r4
 800d6d2:	4691      	movle	r9, r2
 800d6d4:	eba9 0306 	sub.w	r3, r9, r6
 800d6d8:	f8da 4008 	ldr.w	r4, [sl, #8]
 800d6dc:	47a0      	blx	r4
 800d6de:	b00d      	add	sp, #52	@ 0x34
 800d6e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d6e4:	2500      	movs	r5, #0
 800d6e6:	462e      	mov	r6, r5
 800d6e8:	e799      	b.n	800d61e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800d6ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800d6ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d6f0:	b0db      	sub	sp, #364	@ 0x16c
 800d6f2:	461d      	mov	r5, r3
 800d6f4:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 800d6f8:	930a      	str	r3, [sp, #40]	@ 0x28
 800d6fa:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 800d6fe:	930b      	str	r3, [sp, #44]	@ 0x2c
 800d700:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 800d704:	9310      	str	r3, [sp, #64]	@ 0x40
 800d706:	6803      	ldr	r3, [r0, #0]
 800d708:	910f      	str	r1, [sp, #60]	@ 0x3c
 800d70a:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 800d70c:	9009      	str	r0, [sp, #36]	@ 0x24
 800d70e:	4614      	mov	r4, r2
 800d710:	4629      	mov	r1, r5
 800d712:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 800d716:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 800d71a:	47b8      	blx	r7
 800d71c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800d71e:	6058      	str	r0, [r3, #4]
 800d720:	2800      	cmp	r0, #0
 800d722:	f000 83a1 	beq.w	800de68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800d726:	682b      	ldr	r3, [r5, #0]
 800d728:	9314      	str	r3, [sp, #80]	@ 0x50
 800d72a:	686b      	ldr	r3, [r5, #4]
 800d72c:	9315      	str	r3, [sp, #84]	@ 0x54
 800d72e:	4bc4      	ldr	r3, [pc, #784]	@ (800da40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800d730:	ed94 7a02 	vldr	s14, [r4, #8]
 800d734:	7819      	ldrb	r1, [r3, #0]
 800d736:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800d73a:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 800d73e:	2900      	cmp	r1, #0
 800d740:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800d744:	bf16      	itet	ne
 800d746:	4619      	movne	r1, r3
 800d748:	4611      	moveq	r1, r2
 800d74a:	4613      	movne	r3, r2
 800d74c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d750:	9116      	str	r1, [sp, #88]	@ 0x58
 800d752:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 800d756:	f240 8387 	bls.w	800de68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800d75a:	ed94 7a07 	vldr	s14, [r4, #28]
 800d75e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800d762:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d766:	f240 837f 	bls.w	800de68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800d76a:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 800d76e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800d772:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d776:	f240 8377 	bls.w	800de68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800d77a:	6822      	ldr	r2, [r4, #0]
 800d77c:	4bb1      	ldr	r3, [pc, #708]	@ (800da44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800d77e:	429a      	cmp	r2, r3
 800d780:	f2c0 8372 	blt.w	800de68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800d784:	49b0      	ldr	r1, [pc, #704]	@ (800da48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800d786:	6963      	ldr	r3, [r4, #20]
 800d788:	428a      	cmp	r2, r1
 800d78a:	f300 836d 	bgt.w	800de68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800d78e:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800d792:	48ae      	ldr	r0, [pc, #696]	@ (800da4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800d794:	33ff      	adds	r3, #255	@ 0xff
 800d796:	4283      	cmp	r3, r0
 800d798:	f200 8366 	bhi.w	800de68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800d79c:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800d79e:	4dac      	ldr	r5, [pc, #688]	@ (800da50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800d7a0:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800d7a4:	33ff      	adds	r3, #255	@ 0xff
 800d7a6:	42ab      	cmp	r3, r5
 800d7a8:	f200 835e 	bhi.w	800de68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800d7ac:	6862      	ldr	r2, [r4, #4]
 800d7ae:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 800d7b2:	33ff      	adds	r3, #255	@ 0xff
 800d7b4:	4283      	cmp	r3, r0
 800d7b6:	f200 8357 	bhi.w	800de68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800d7ba:	69a1      	ldr	r1, [r4, #24]
 800d7bc:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 800d7c0:	33ff      	adds	r3, #255	@ 0xff
 800d7c2:	4283      	cmp	r3, r0
 800d7c4:	f200 8350 	bhi.w	800de68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800d7c8:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800d7ca:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 800d7ce:	30ff      	adds	r0, #255	@ 0xff
 800d7d0:	42a8      	cmp	r0, r5
 800d7d2:	f200 8349 	bhi.w	800de68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800d7d6:	428a      	cmp	r2, r1
 800d7d8:	f280 8110 	bge.w	800d9fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800d7dc:	429a      	cmp	r2, r3
 800d7de:	f300 8119 	bgt.w	800da14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800d7e2:	4299      	cmp	r1, r3
 800d7e4:	f280 811d 	bge.w	800da22 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800d7e8:	2502      	movs	r5, #2
 800d7ea:	2701      	movs	r7, #1
 800d7ec:	46a9      	mov	r9, r5
 800d7ee:	46b8      	mov	r8, r7
 800d7f0:	f04f 0a00 	mov.w	sl, #0
 800d7f4:	4621      	mov	r1, r4
 800d7f6:	a849      	add	r0, sp, #292	@ 0x124
 800d7f8:	f003 fd22 	bl	8011240 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800d7fc:	4622      	mov	r2, r4
 800d7fe:	4653      	mov	r3, sl
 800d800:	a949      	add	r1, sp, #292	@ 0x124
 800d802:	f8cd 9000 	str.w	r9, [sp]
 800d806:	a819      	add	r0, sp, #100	@ 0x64
 800d808:	f003 fe4a 	bl	80114a0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800d80c:	4622      	mov	r2, r4
 800d80e:	4653      	mov	r3, sl
 800d810:	a949      	add	r1, sp, #292	@ 0x124
 800d812:	f8cd 8000 	str.w	r8, [sp]
 800d816:	a829      	add	r0, sp, #164	@ 0xa4
 800d818:	f003 fe42 	bl	80114a0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800d81c:	4643      	mov	r3, r8
 800d81e:	4622      	mov	r2, r4
 800d820:	a949      	add	r1, sp, #292	@ 0x124
 800d822:	f8cd 9000 	str.w	r9, [sp]
 800d826:	a839      	add	r0, sp, #228	@ 0xe4
 800d828:	f003 fe3a 	bl	80114a0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800d82c:	42af      	cmp	r7, r5
 800d82e:	bfb5      	itete	lt
 800d830:	2300      	movlt	r3, #0
 800d832:	2301      	movge	r3, #1
 800d834:	930e      	strlt	r3, [sp, #56]	@ 0x38
 800d836:	930e      	strge	r3, [sp, #56]	@ 0x38
 800d838:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800d83a:	e893 0003 	ldmia.w	r3, {r0, r1}
 800d83e:	af12      	add	r7, sp, #72	@ 0x48
 800d840:	bfb9      	ittee	lt
 800d842:	ad29      	addlt	r5, sp, #164	@ 0xa4
 800d844:	ac19      	addlt	r4, sp, #100	@ 0x64
 800d846:	ad19      	addge	r5, sp, #100	@ 0x64
 800d848:	ac29      	addge	r4, sp, #164	@ 0xa4
 800d84a:	e887 0003 	stmia.w	r7, {r0, r1}
 800d84e:	b928      	cbnz	r0, 800d85c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800d850:	4b80      	ldr	r3, [pc, #512]	@ (800da54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800d852:	6818      	ldr	r0, [r3, #0]
 800d854:	6803      	ldr	r3, [r0, #0]
 800d856:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d858:	4798      	blx	r3
 800d85a:	6038      	str	r0, [r7, #0]
 800d85c:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800d85e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800d862:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800d866:	930c      	str	r3, [sp, #48]	@ 0x30
 800d868:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800d86a:	6963      	ldr	r3, [r4, #20]
 800d86c:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 800d86e:	440b      	add	r3, r1
 800d870:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800d874:	4408      	add	r0, r1
 800d876:	b200      	sxth	r0, r0
 800d878:	4283      	cmp	r3, r0
 800d87a:	900d      	str	r0, [sp, #52]	@ 0x34
 800d87c:	f280 80dd 	bge.w	800da3a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800d880:	428b      	cmp	r3, r1
 800d882:	da08      	bge.n	800d896 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800d884:	2a00      	cmp	r2, #0
 800d886:	dd06      	ble.n	800d896 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800d888:	1acb      	subs	r3, r1, r3
 800d88a:	429a      	cmp	r2, r3
 800d88c:	f2c0 80e4 	blt.w	800da58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800d890:	2b00      	cmp	r3, #0
 800d892:	f300 80e2 	bgt.w	800da5a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800d896:	6967      	ldr	r7, [r4, #20]
 800d898:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800d89a:	443b      	add	r3, r7
 800d89c:	461f      	mov	r7, r3
 800d89e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800d8a0:	1bdf      	subs	r7, r3, r7
 800d8a2:	4297      	cmp	r7, r2
 800d8a4:	bfa8      	it	ge
 800d8a6:	4617      	movge	r7, r2
 800d8a8:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800d8ac:	2f00      	cmp	r7, #0
 800d8ae:	f340 8166 	ble.w	800db7e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800d8b2:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800d8b4:	6829      	ldr	r1, [r5, #0]
 800d8b6:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d8ba:	f9bb 3000 	ldrsh.w	r3, [fp]
 800d8be:	6820      	ldr	r0, [r4, #0]
 800d8c0:	4411      	add	r1, r2
 800d8c2:	4299      	cmp	r1, r3
 800d8c4:	dd1a      	ble.n	800d8fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800d8c6:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800d8ca:	440b      	add	r3, r1
 800d8cc:	4402      	add	r2, r0
 800d8ce:	b21b      	sxth	r3, r3
 800d8d0:	429a      	cmp	r2, r3
 800d8d2:	dc13      	bgt.n	800d8fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800d8d4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800d8d6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800d8d8:	681b      	ldr	r3, [r3, #0]
 800d8da:	9206      	str	r2, [sp, #24]
 800d8dc:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800d8de:	9205      	str	r2, [sp, #20]
 800d8e0:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800d8e2:	9500      	str	r5, [sp, #0]
 800d8e4:	e9cd b203 	strd	fp, r2, [sp, #12]
 800d8e8:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800d8ea:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800d8ec:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800d8f0:	a912      	add	r1, sp, #72	@ 0x48
 800d8f2:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800d8f6:	aa49      	add	r2, sp, #292	@ 0x124
 800d8f8:	4623      	mov	r3, r4
 800d8fa:	47c8      	blx	r9
 800d8fc:	e9d4 2300 	ldrd	r2, r3, [r4]
 800d900:	441a      	add	r2, r3
 800d902:	6963      	ldr	r3, [r4, #20]
 800d904:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800d908:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800d90c:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800d910:	68a1      	ldr	r1, [r4, #8]
 800d912:	ed94 6a08 	vldr	s12, [r4, #32]
 800d916:	6022      	str	r2, [r4, #0]
 800d918:	3301      	adds	r3, #1
 800d91a:	6163      	str	r3, [r4, #20]
 800d91c:	69a3      	ldr	r3, [r4, #24]
 800d91e:	ee37 7a27 	vadd.f32	s14, s14, s15
 800d922:	3b01      	subs	r3, #1
 800d924:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800d928:	61a3      	str	r3, [r4, #24]
 800d92a:	6923      	ldr	r3, [r4, #16]
 800d92c:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800d930:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d934:	edd4 6a07 	vldr	s13, [r4, #28]
 800d938:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800d93c:	440b      	add	r3, r1
 800d93e:	68e1      	ldr	r1, [r4, #12]
 800d940:	6123      	str	r3, [r4, #16]
 800d942:	ee76 6a86 	vadd.f32	s13, s13, s12
 800d946:	428b      	cmp	r3, r1
 800d948:	edc4 6a07 	vstr	s13, [r4, #28]
 800d94c:	db15      	blt.n	800d97a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800d94e:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800d952:	ee76 6a26 	vadd.f32	s13, s12, s13
 800d956:	3201      	adds	r2, #1
 800d958:	edc4 6a07 	vstr	s13, [r4, #28]
 800d95c:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800d960:	6022      	str	r2, [r4, #0]
 800d962:	ee36 7a87 	vadd.f32	s14, s13, s14
 800d966:	1a5b      	subs	r3, r3, r1
 800d968:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800d96c:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800d970:	6123      	str	r3, [r4, #16]
 800d972:	ee77 7a27 	vadd.f32	s15, s14, s15
 800d976:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800d97a:	e9d5 2300 	ldrd	r2, r3, [r5]
 800d97e:	441a      	add	r2, r3
 800d980:	696b      	ldr	r3, [r5, #20]
 800d982:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800d986:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800d98a:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800d98e:	68a9      	ldr	r1, [r5, #8]
 800d990:	ed95 6a08 	vldr	s12, [r5, #32]
 800d994:	602a      	str	r2, [r5, #0]
 800d996:	3301      	adds	r3, #1
 800d998:	616b      	str	r3, [r5, #20]
 800d99a:	69ab      	ldr	r3, [r5, #24]
 800d99c:	ee37 7a27 	vadd.f32	s14, s14, s15
 800d9a0:	3b01      	subs	r3, #1
 800d9a2:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800d9a6:	61ab      	str	r3, [r5, #24]
 800d9a8:	692b      	ldr	r3, [r5, #16]
 800d9aa:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800d9ae:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d9b2:	edd5 6a07 	vldr	s13, [r5, #28]
 800d9b6:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800d9ba:	440b      	add	r3, r1
 800d9bc:	68e9      	ldr	r1, [r5, #12]
 800d9be:	612b      	str	r3, [r5, #16]
 800d9c0:	ee76 6a86 	vadd.f32	s13, s13, s12
 800d9c4:	428b      	cmp	r3, r1
 800d9c6:	edc5 6a07 	vstr	s13, [r5, #28]
 800d9ca:	db15      	blt.n	800d9f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800d9cc:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800d9d0:	ee76 6a26 	vadd.f32	s13, s12, s13
 800d9d4:	3201      	adds	r2, #1
 800d9d6:	edc5 6a07 	vstr	s13, [r5, #28]
 800d9da:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800d9de:	602a      	str	r2, [r5, #0]
 800d9e0:	ee36 7a87 	vadd.f32	s14, s13, s14
 800d9e4:	1a5b      	subs	r3, r3, r1
 800d9e6:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800d9ea:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800d9ee:	612b      	str	r3, [r5, #16]
 800d9f0:	ee77 7a27 	vadd.f32	s15, s14, s15
 800d9f4:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800d9f8:	3f01      	subs	r7, #1
 800d9fa:	e757      	b.n	800d8ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800d9fc:	4299      	cmp	r1, r3
 800d9fe:	dc13      	bgt.n	800da28 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800da00:	429a      	cmp	r2, r3
 800da02:	da14      	bge.n	800da2e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800da04:	2502      	movs	r5, #2
 800da06:	2703      	movs	r7, #3
 800da08:	46a9      	mov	r9, r5
 800da0a:	f04f 0800 	mov.w	r8, #0
 800da0e:	f04f 0a01 	mov.w	sl, #1
 800da12:	e6ef      	b.n	800d7f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800da14:	2501      	movs	r5, #1
 800da16:	2700      	movs	r7, #0
 800da18:	46a9      	mov	r9, r5
 800da1a:	46b8      	mov	r8, r7
 800da1c:	f04f 0a02 	mov.w	sl, #2
 800da20:	e6e8      	b.n	800d7f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800da22:	2501      	movs	r5, #1
 800da24:	2702      	movs	r7, #2
 800da26:	e6e1      	b.n	800d7ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800da28:	2500      	movs	r5, #0
 800da2a:	2701      	movs	r7, #1
 800da2c:	e7f4      	b.n	800da18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800da2e:	2702      	movs	r7, #2
 800da30:	2503      	movs	r5, #3
 800da32:	f04f 0900 	mov.w	r9, #0
 800da36:	46b8      	mov	r8, r7
 800da38:	e7e9      	b.n	800da0e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800da3a:	4613      	mov	r3, r2
 800da3c:	e728      	b.n	800d890 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800da3e:	bf00      	nop
 800da40:	20013086 	.word	0x20013086
 800da44:	fffd8f01 	.word	0xfffd8f01
 800da48:	00027100 	.word	0x00027100
 800da4c:	0004e1ff 	.word	0x0004e1ff
 800da50:	0004e1fe 	.word	0x0004e1fe
 800da54:	20013090 	.word	0x20013090
 800da58:	4613      	mov	r3, r2
 800da5a:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800da5c:	9111      	str	r1, [sp, #68]	@ 0x44
 800da5e:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 800da62:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 800da66:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 800da68:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 800da6c:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 800da70:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 800da74:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 800da78:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 800da7c:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 800da80:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 800da84:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 800da88:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 800da8c:	469e      	mov	lr, r3
 800da8e:	469c      	mov	ip, r3
 800da90:	f04f 0900 	mov.w	r9, #0
 800da94:	f1bc 0f00 	cmp.w	ip, #0
 800da98:	d147      	bne.n	800db2a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800da9a:	eb03 0c07 	add.w	ip, r3, r7
 800da9e:	1ad7      	subs	r7, r2, r3
 800daa0:	f1b9 0f00 	cmp.w	r9, #0
 800daa4:	d009      	beq.n	800daba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800daa6:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 800daaa:	9029      	str	r0, [sp, #164]	@ 0xa4
 800daac:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 800dab0:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 800dab4:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 800dab8:	912d      	str	r1, [sp, #180]	@ 0xb4
 800daba:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800dabc:	9111      	str	r1, [sp, #68]	@ 0x44
 800dabe:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800dac2:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800dac6:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800daca:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800dace:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800dad2:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800dad6:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800dada:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800dade:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800dae2:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800dae6:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800daea:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800daee:	f04f 0800 	mov.w	r8, #0
 800daf2:	f1be 0f00 	cmp.w	lr, #0
 800daf6:	d031      	beq.n	800db5c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800daf8:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800dafa:	4431      	add	r1, r6
 800dafc:	4549      	cmp	r1, r9
 800dafe:	4450      	add	r0, sl
 800db00:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800db04:	ee37 7a04 	vadd.f32	s14, s14, s8
 800db08:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800db0c:	db08      	blt.n	800db20 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800db0e:	ee77 7a85 	vadd.f32	s15, s15, s10
 800db12:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800db16:	ee37 7a06 	vadd.f32	s14, s14, s12
 800db1a:	3001      	adds	r0, #1
 800db1c:	eba1 0109 	sub.w	r1, r1, r9
 800db20:	f10e 3eff 	add.w	lr, lr, #4294967295
 800db24:	f04f 0801 	mov.w	r8, #1
 800db28:	e7e3      	b.n	800daf2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800db2a:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800db2c:	4431      	add	r1, r6
 800db2e:	4541      	cmp	r1, r8
 800db30:	4450      	add	r0, sl
 800db32:	ee37 7a24 	vadd.f32	s14, s14, s9
 800db36:	ee77 7a84 	vadd.f32	s15, s15, s8
 800db3a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800db3e:	db08      	blt.n	800db52 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800db40:	ee76 6a85 	vadd.f32	s13, s13, s10
 800db44:	ee37 7a25 	vadd.f32	s14, s14, s11
 800db48:	ee77 7a86 	vadd.f32	s15, s15, s12
 800db4c:	3001      	adds	r0, #1
 800db4e:	eba1 0108 	sub.w	r1, r1, r8
 800db52:	f10c 3cff 	add.w	ip, ip, #4294967295
 800db56:	f04f 0901 	mov.w	r9, #1
 800db5a:	e79b      	b.n	800da94 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800db5c:	449c      	add	ip, r3
 800db5e:	1aff      	subs	r7, r7, r3
 800db60:	f1b8 0f00 	cmp.w	r8, #0
 800db64:	d009      	beq.n	800db7a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800db66:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800db6a:	9019      	str	r0, [sp, #100]	@ 0x64
 800db6c:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800db70:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800db74:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800db78:	911d      	str	r1, [sp, #116]	@ 0x74
 800db7a:	1ad2      	subs	r2, r2, r3
 800db7c:	e68b      	b.n	800d896 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800db7e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800db80:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 800db82:	2b00      	cmp	r3, #0
 800db84:	f000 80d1 	beq.w	800dd2a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800db88:	ad19      	add	r5, sp, #100	@ 0x64
 800db8a:	ac39      	add	r4, sp, #228	@ 0xe4
 800db8c:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800db8e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800db92:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800db96:	930c      	str	r3, [sp, #48]	@ 0x30
 800db98:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800db9a:	6963      	ldr	r3, [r4, #20]
 800db9c:	440b      	add	r3, r1
 800db9e:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800dba2:	4408      	add	r0, r1
 800dba4:	b200      	sxth	r0, r0
 800dba6:	4283      	cmp	r3, r0
 800dba8:	900d      	str	r0, [sp, #52]	@ 0x34
 800dbaa:	f280 80c1 	bge.w	800dd30 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800dbae:	428b      	cmp	r3, r1
 800dbb0:	da08      	bge.n	800dbc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800dbb2:	2a00      	cmp	r2, #0
 800dbb4:	dd06      	ble.n	800dbc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800dbb6:	1acb      	subs	r3, r1, r3
 800dbb8:	429a      	cmp	r2, r3
 800dbba:	f2c0 80bb 	blt.w	800dd34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800dbbe:	2b00      	cmp	r3, #0
 800dbc0:	f300 80b9 	bgt.w	800dd36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800dbc4:	6967      	ldr	r7, [r4, #20]
 800dbc6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800dbc8:	443b      	add	r3, r7
 800dbca:	461f      	mov	r7, r3
 800dbcc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800dbce:	1bdf      	subs	r7, r3, r7
 800dbd0:	4297      	cmp	r7, r2
 800dbd2:	bfa8      	it	ge
 800dbd4:	4617      	movge	r7, r2
 800dbd6:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800dbda:	2f00      	cmp	r7, #0
 800dbdc:	f340 813c 	ble.w	800de58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800dbe0:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800dbe2:	6829      	ldr	r1, [r5, #0]
 800dbe4:	f9b3 2000 	ldrsh.w	r2, [r3]
 800dbe8:	f9bb 3000 	ldrsh.w	r3, [fp]
 800dbec:	6820      	ldr	r0, [r4, #0]
 800dbee:	4411      	add	r1, r2
 800dbf0:	4299      	cmp	r1, r3
 800dbf2:	dd1a      	ble.n	800dc2a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800dbf4:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800dbf8:	440b      	add	r3, r1
 800dbfa:	4402      	add	r2, r0
 800dbfc:	b21b      	sxth	r3, r3
 800dbfe:	429a      	cmp	r2, r3
 800dc00:	dc13      	bgt.n	800dc2a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800dc02:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800dc04:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800dc06:	681b      	ldr	r3, [r3, #0]
 800dc08:	9206      	str	r2, [sp, #24]
 800dc0a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800dc0c:	9205      	str	r2, [sp, #20]
 800dc0e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800dc10:	9500      	str	r5, [sp, #0]
 800dc12:	e9cd b203 	strd	fp, r2, [sp, #12]
 800dc16:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800dc18:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800dc1a:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800dc1e:	a912      	add	r1, sp, #72	@ 0x48
 800dc20:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800dc24:	aa49      	add	r2, sp, #292	@ 0x124
 800dc26:	4623      	mov	r3, r4
 800dc28:	47c8      	blx	r9
 800dc2a:	e9d4 2300 	ldrd	r2, r3, [r4]
 800dc2e:	441a      	add	r2, r3
 800dc30:	6963      	ldr	r3, [r4, #20]
 800dc32:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800dc36:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800dc3a:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800dc3e:	68a1      	ldr	r1, [r4, #8]
 800dc40:	ed94 6a08 	vldr	s12, [r4, #32]
 800dc44:	6022      	str	r2, [r4, #0]
 800dc46:	3301      	adds	r3, #1
 800dc48:	6163      	str	r3, [r4, #20]
 800dc4a:	69a3      	ldr	r3, [r4, #24]
 800dc4c:	ee37 7a27 	vadd.f32	s14, s14, s15
 800dc50:	3b01      	subs	r3, #1
 800dc52:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800dc56:	61a3      	str	r3, [r4, #24]
 800dc58:	6923      	ldr	r3, [r4, #16]
 800dc5a:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800dc5e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800dc62:	edd4 6a07 	vldr	s13, [r4, #28]
 800dc66:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800dc6a:	440b      	add	r3, r1
 800dc6c:	68e1      	ldr	r1, [r4, #12]
 800dc6e:	6123      	str	r3, [r4, #16]
 800dc70:	ee76 6a86 	vadd.f32	s13, s13, s12
 800dc74:	428b      	cmp	r3, r1
 800dc76:	edc4 6a07 	vstr	s13, [r4, #28]
 800dc7a:	db15      	blt.n	800dca8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800dc7c:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800dc80:	ee76 6a26 	vadd.f32	s13, s12, s13
 800dc84:	3201      	adds	r2, #1
 800dc86:	edc4 6a07 	vstr	s13, [r4, #28]
 800dc8a:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800dc8e:	6022      	str	r2, [r4, #0]
 800dc90:	ee36 7a87 	vadd.f32	s14, s13, s14
 800dc94:	1a5b      	subs	r3, r3, r1
 800dc96:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800dc9a:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800dc9e:	6123      	str	r3, [r4, #16]
 800dca0:	ee77 7a27 	vadd.f32	s15, s14, s15
 800dca4:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800dca8:	e9d5 2300 	ldrd	r2, r3, [r5]
 800dcac:	441a      	add	r2, r3
 800dcae:	696b      	ldr	r3, [r5, #20]
 800dcb0:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800dcb4:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800dcb8:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800dcbc:	68a9      	ldr	r1, [r5, #8]
 800dcbe:	ed95 6a08 	vldr	s12, [r5, #32]
 800dcc2:	602a      	str	r2, [r5, #0]
 800dcc4:	3301      	adds	r3, #1
 800dcc6:	616b      	str	r3, [r5, #20]
 800dcc8:	69ab      	ldr	r3, [r5, #24]
 800dcca:	ee37 7a27 	vadd.f32	s14, s14, s15
 800dcce:	3b01      	subs	r3, #1
 800dcd0:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800dcd4:	61ab      	str	r3, [r5, #24]
 800dcd6:	692b      	ldr	r3, [r5, #16]
 800dcd8:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800dcdc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800dce0:	edd5 6a07 	vldr	s13, [r5, #28]
 800dce4:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800dce8:	440b      	add	r3, r1
 800dcea:	68e9      	ldr	r1, [r5, #12]
 800dcec:	612b      	str	r3, [r5, #16]
 800dcee:	ee76 6a86 	vadd.f32	s13, s13, s12
 800dcf2:	428b      	cmp	r3, r1
 800dcf4:	edc5 6a07 	vstr	s13, [r5, #28]
 800dcf8:	db15      	blt.n	800dd26 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800dcfa:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800dcfe:	ee76 6a26 	vadd.f32	s13, s12, s13
 800dd02:	3201      	adds	r2, #1
 800dd04:	edc5 6a07 	vstr	s13, [r5, #28]
 800dd08:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800dd0c:	602a      	str	r2, [r5, #0]
 800dd0e:	ee36 7a87 	vadd.f32	s14, s13, s14
 800dd12:	1a5b      	subs	r3, r3, r1
 800dd14:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800dd18:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800dd1c:	612b      	str	r3, [r5, #16]
 800dd1e:	ee77 7a27 	vadd.f32	s15, s14, s15
 800dd22:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800dd26:	3f01      	subs	r7, #1
 800dd28:	e757      	b.n	800dbda <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800dd2a:	ad39      	add	r5, sp, #228	@ 0xe4
 800dd2c:	ac19      	add	r4, sp, #100	@ 0x64
 800dd2e:	e72d      	b.n	800db8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800dd30:	4613      	mov	r3, r2
 800dd32:	e744      	b.n	800dbbe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800dd34:	4613      	mov	r3, r2
 800dd36:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 800dd3a:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 800dd3c:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 800dd40:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 800dd44:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 800dd48:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 800dd4c:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 800dd50:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 800dd54:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 800dd58:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 800dd5a:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 800dd5e:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 800dd62:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 800dd66:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 800dd6a:	960e      	str	r6, [sp, #56]	@ 0x38
 800dd6c:	469e      	mov	lr, r3
 800dd6e:	461f      	mov	r7, r3
 800dd70:	f04f 0900 	mov.w	r9, #0
 800dd74:	2f00      	cmp	r7, #0
 800dd76:	d146      	bne.n	800de06 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800dd78:	449c      	add	ip, r3
 800dd7a:	1ad7      	subs	r7, r2, r3
 800dd7c:	f1b9 0f00 	cmp.w	r9, #0
 800dd80:	d009      	beq.n	800dd96 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800dd82:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 800dd86:	9039      	str	r0, [sp, #228]	@ 0xe4
 800dd88:	913d      	str	r1, [sp, #244]	@ 0xf4
 800dd8a:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 800dd8e:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 800dd92:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 800dd96:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800dd98:	910e      	str	r1, [sp, #56]	@ 0x38
 800dd9a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800dd9e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800dda2:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800dda6:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800ddaa:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800ddae:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800ddb2:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800ddb6:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800ddba:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800ddbe:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800ddc2:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800ddc6:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800ddca:	f04f 0800 	mov.w	r8, #0
 800ddce:	f1be 0f00 	cmp.w	lr, #0
 800ddd2:	d030      	beq.n	800de36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800ddd4:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800ddd6:	4431      	add	r1, r6
 800ddd8:	4549      	cmp	r1, r9
 800ddda:	4450      	add	r0, sl
 800dddc:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800dde0:	ee37 7a04 	vadd.f32	s14, s14, s8
 800dde4:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800dde8:	db08      	blt.n	800ddfc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800ddea:	ee77 7a85 	vadd.f32	s15, s15, s10
 800ddee:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800ddf2:	ee37 7a06 	vadd.f32	s14, s14, s12
 800ddf6:	3001      	adds	r0, #1
 800ddf8:	eba1 0109 	sub.w	r1, r1, r9
 800ddfc:	f10e 3eff 	add.w	lr, lr, #4294967295
 800de00:	f04f 0801 	mov.w	r8, #1
 800de04:	e7e3      	b.n	800ddce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800de06:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800de08:	4431      	add	r1, r6
 800de0a:	4541      	cmp	r1, r8
 800de0c:	4450      	add	r0, sl
 800de0e:	ee37 7a24 	vadd.f32	s14, s14, s9
 800de12:	ee77 7a84 	vadd.f32	s15, s15, s8
 800de16:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800de1a:	db08      	blt.n	800de2e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800de1c:	ee76 6a85 	vadd.f32	s13, s13, s10
 800de20:	ee37 7a25 	vadd.f32	s14, s14, s11
 800de24:	ee77 7a86 	vadd.f32	s15, s15, s12
 800de28:	3001      	adds	r0, #1
 800de2a:	eba1 0108 	sub.w	r1, r1, r8
 800de2e:	3f01      	subs	r7, #1
 800de30:	f04f 0901 	mov.w	r9, #1
 800de34:	e79e      	b.n	800dd74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800de36:	449c      	add	ip, r3
 800de38:	1aff      	subs	r7, r7, r3
 800de3a:	f1b8 0f00 	cmp.w	r8, #0
 800de3e:	d009      	beq.n	800de54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800de40:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800de44:	9019      	str	r0, [sp, #100]	@ 0x64
 800de46:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800de4a:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800de4e:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800de52:	911d      	str	r1, [sp, #116]	@ 0x74
 800de54:	1ad2      	subs	r2, r2, r3
 800de56:	e6b5      	b.n	800dbc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800de58:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800de5a:	681b      	ldr	r3, [r3, #0]
 800de5c:	b923      	cbnz	r3, 800de68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800de5e:	4b04      	ldr	r3, [pc, #16]	@ (800de70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800de60:	6818      	ldr	r0, [r3, #0]
 800de62:	6803      	ldr	r3, [r0, #0]
 800de64:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800de66:	4798      	blx	r3
 800de68:	b05b      	add	sp, #364	@ 0x16c
 800de6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800de6e:	bf00      	nop
 800de70:	20013090 	.word	0x20013090

0800de74 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800de74:	2b03      	cmp	r3, #3
 800de76:	d818      	bhi.n	800deaa <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 800de78:	e8df f003 	tbb	[pc, r3]
 800de7c:	130d0602 	.word	0x130d0602
 800de80:	f9b0 2000 	ldrsh.w	r2, [r0]
 800de84:	1850      	adds	r0, r2, r1
 800de86:	4770      	bx	lr
 800de88:	8803      	ldrh	r3, [r0, #0]
 800de8a:	8880      	ldrh	r0, [r0, #4]
 800de8c:	4418      	add	r0, r3
 800de8e:	b200      	sxth	r0, r0
 800de90:	1a80      	subs	r0, r0, r2
 800de92:	3801      	subs	r0, #1
 800de94:	4770      	bx	lr
 800de96:	8803      	ldrh	r3, [r0, #0]
 800de98:	8880      	ldrh	r0, [r0, #4]
 800de9a:	4418      	add	r0, r3
 800de9c:	b200      	sxth	r0, r0
 800de9e:	1a40      	subs	r0, r0, r1
 800dea0:	e7f7      	b.n	800de92 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800dea2:	f9b0 0000 	ldrsh.w	r0, [r0]
 800dea6:	4410      	add	r0, r2
 800dea8:	4770      	bx	lr
 800deaa:	2000      	movs	r0, #0
 800deac:	4770      	bx	lr

0800deae <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800deae:	2b03      	cmp	r3, #3
 800deb0:	d817      	bhi.n	800dee2 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 800deb2:	e8df f003 	tbb	[pc, r3]
 800deb6:	0602      	.short	0x0602
 800deb8:	1009      	.short	0x1009
 800deba:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800debe:	1850      	adds	r0, r2, r1
 800dec0:	4770      	bx	lr
 800dec2:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800dec6:	e7fa      	b.n	800debe <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 800dec8:	8843      	ldrh	r3, [r0, #2]
 800deca:	88c0      	ldrh	r0, [r0, #6]
 800decc:	4418      	add	r0, r3
 800dece:	b200      	sxth	r0, r0
 800ded0:	1a80      	subs	r0, r0, r2
 800ded2:	3801      	subs	r0, #1
 800ded4:	4770      	bx	lr
 800ded6:	8843      	ldrh	r3, [r0, #2]
 800ded8:	88c0      	ldrh	r0, [r0, #6]
 800deda:	4418      	add	r0, r3
 800dedc:	b200      	sxth	r0, r0
 800dede:	1a40      	subs	r0, r0, r1
 800dee0:	e7f7      	b.n	800ded2 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800dee2:	2000      	movs	r0, #0
 800dee4:	4770      	bx	lr
	...

0800dee8 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800dee8:	4b01      	ldr	r3, [pc, #4]	@ (800def0 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800deea:	2200      	movs	r2, #0
 800deec:	601a      	str	r2, [r3, #0]
 800deee:	4770      	bx	lr
 800def0:	200130a0 	.word	0x200130a0

0800def4 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800def4:	4603      	mov	r3, r0
 800def6:	b1c8      	cbz	r0, 800df2c <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800def8:	0c02      	lsrs	r2, r0, #16
 800defa:	0412      	lsls	r2, r2, #16
 800defc:	b9a2      	cbnz	r2, 800df28 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800defe:	0403      	lsls	r3, r0, #16
 800df00:	2010      	movs	r0, #16
 800df02:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 800df06:	bf04      	itt	eq
 800df08:	021b      	lsleq	r3, r3, #8
 800df0a:	3008      	addeq	r0, #8
 800df0c:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 800df10:	bf04      	itt	eq
 800df12:	011b      	lsleq	r3, r3, #4
 800df14:	3004      	addeq	r0, #4
 800df16:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 800df1a:	bf04      	itt	eq
 800df1c:	009b      	lsleq	r3, r3, #2
 800df1e:	3002      	addeq	r0, #2
 800df20:	2b00      	cmp	r3, #0
 800df22:	db04      	blt.n	800df2e <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800df24:	3001      	adds	r0, #1
 800df26:	4770      	bx	lr
 800df28:	2000      	movs	r0, #0
 800df2a:	e7ea      	b.n	800df02 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800df2c:	2020      	movs	r0, #32
 800df2e:	4770      	bx	lr

0800df30 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800df30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800df34:	b087      	sub	sp, #28
 800df36:	460d      	mov	r5, r1
 800df38:	4616      	mov	r6, r2
 800df3a:	4698      	mov	r8, r3
 800df3c:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 800df40:	4601      	mov	r1, r0
 800df42:	b120      	cbz	r0, 800df4e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800df44:	b11a      	cbz	r2, 800df4e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800df46:	2d1f      	cmp	r5, #31
 800df48:	d801      	bhi.n	800df4e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800df4a:	2b1f      	cmp	r3, #31
 800df4c:	d904      	bls.n	800df58 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 800df4e:	2000      	movs	r0, #0
 800df50:	6038      	str	r0, [r7, #0]
 800df52:	b007      	add	sp, #28
 800df54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800df58:	b97d      	cbnz	r5, 800df7a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 800df5a:	b143      	cbz	r3, 800df6e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 800df5c:	4602      	mov	r2, r0
 800df5e:	e9cd 4700 	strd	r4, r7, [sp]
 800df62:	462b      	mov	r3, r5
 800df64:	4641      	mov	r1, r8
 800df66:	4630      	mov	r0, r6
 800df68:	f7ff ffe2 	bl	800df30 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800df6c:	e7f1      	b.n	800df52 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800df6e:	f04f 33ff 	mov.w	r3, #4294967295
 800df72:	603b      	str	r3, [r7, #0]
 800df74:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 800df78:	e7eb      	b.n	800df52 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800df7a:	fa32 fa05 	lsrs.w	sl, r2, r5
 800df7e:	d106      	bne.n	800df8e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 800df80:	4346      	muls	r6, r0
 800df82:	fbb6 f0f4 	udiv	r0, r6, r4
 800df86:	fb04 6610 	mls	r6, r4, r0, r6
 800df8a:	603e      	str	r6, [r7, #0]
 800df8c:	e7e1      	b.n	800df52 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800df8e:	2201      	movs	r2, #1
 800df90:	40aa      	lsls	r2, r5
 800df92:	3a01      	subs	r2, #1
 800df94:	4016      	ands	r6, r2
 800df96:	fa00 fb05 	lsl.w	fp, r0, r5
 800df9a:	4630      	mov	r0, r6
 800df9c:	fbbb f9f4 	udiv	r9, fp, r4
 800dfa0:	fb0a f309 	mul.w	r3, sl, r9
 800dfa4:	9303      	str	r3, [sp, #12]
 800dfa6:	f7ff ffa5 	bl	800def4 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800dfaa:	462b      	mov	r3, r5
 800dfac:	460a      	mov	r2, r1
 800dfae:	e9cd 4700 	strd	r4, r7, [sp]
 800dfb2:	4601      	mov	r1, r0
 800dfb4:	4630      	mov	r0, r6
 800dfb6:	f7ff ffbb 	bl	800df30 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800dfba:	fb04 b919 	mls	r9, r4, r9, fp
 800dfbe:	4606      	mov	r6, r0
 800dfc0:	4648      	mov	r0, r9
 800dfc2:	eb05 0108 	add.w	r1, r5, r8
 800dfc6:	f7ff ff95 	bl	800def4 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800dfca:	ab05      	add	r3, sp, #20
 800dfcc:	e9cd 4300 	strd	r4, r3, [sp]
 800dfd0:	464a      	mov	r2, r9
 800dfd2:	4603      	mov	r3, r0
 800dfd4:	4650      	mov	r0, sl
 800dfd6:	f7ff ffab 	bl	800df30 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800dfda:	6839      	ldr	r1, [r7, #0]
 800dfdc:	9a05      	ldr	r2, [sp, #20]
 800dfde:	9b03      	ldr	r3, [sp, #12]
 800dfe0:	4411      	add	r1, r2
 800dfe2:	fbb1 f2f4 	udiv	r2, r1, r4
 800dfe6:	18d3      	adds	r3, r2, r3
 800dfe8:	441e      	add	r6, r3
 800dfea:	fb04 1412 	mls	r4, r4, r2, r1
 800dfee:	4430      	add	r0, r6
 800dff0:	603c      	str	r4, [r7, #0]
 800dff2:	e7ae      	b.n	800df52 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

0800dff4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800dff4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800dff8:	b085      	sub	sp, #20
 800dffa:	f1b0 0900 	subs.w	r9, r0, #0
 800dffe:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 800e000:	461d      	mov	r5, r3
 800e002:	bfbf      	itttt	lt
 800e004:	6823      	ldrlt	r3, [r4, #0]
 800e006:	425b      	neglt	r3, r3
 800e008:	f1c9 0900 	rsblt	r9, r9, #0
 800e00c:	6023      	strlt	r3, [r4, #0]
 800e00e:	bfb4      	ite	lt
 800e010:	f04f 36ff 	movlt.w	r6, #4294967295
 800e014:	2601      	movge	r6, #1
 800e016:	2a00      	cmp	r2, #0
 800e018:	4617      	mov	r7, r2
 800e01a:	da04      	bge.n	800e026 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800e01c:	6823      	ldr	r3, [r4, #0]
 800e01e:	425b      	negs	r3, r3
 800e020:	4257      	negs	r7, r2
 800e022:	4276      	negs	r6, r6
 800e024:	6023      	str	r3, [r4, #0]
 800e026:	2d00      	cmp	r5, #0
 800e028:	4638      	mov	r0, r7
 800e02a:	bfba      	itte	lt
 800e02c:	426d      	neglt	r5, r5
 800e02e:	f04f 38ff 	movlt.w	r8, #4294967295
 800e032:	f04f 0801 	movge.w	r8, #1
 800e036:	f7ff ff5d 	bl	800def4 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800e03a:	ab03      	add	r3, sp, #12
 800e03c:	e9cd 5300 	strd	r5, r3, [sp]
 800e040:	463a      	mov	r2, r7
 800e042:	4603      	mov	r3, r0
 800e044:	4648      	mov	r0, r9
 800e046:	f7ff ff73 	bl	800df30 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800e04a:	6823      	ldr	r3, [r4, #0]
 800e04c:	9a03      	ldr	r2, [sp, #12]
 800e04e:	4546      	cmp	r6, r8
 800e050:	441a      	add	r2, r3
 800e052:	fb92 f3f5 	sdiv	r3, r2, r5
 800e056:	4418      	add	r0, r3
 800e058:	bf18      	it	ne
 800e05a:	4240      	negne	r0, r0
 800e05c:	fb05 2313 	mls	r3, r5, r3, r2
 800e060:	1c72      	adds	r2, r6, #1
 800e062:	6023      	str	r3, [r4, #0]
 800e064:	d105      	bne.n	800e072 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800e066:	2b00      	cmp	r3, #0
 800e068:	f1c3 0200 	rsb	r2, r3, #0
 800e06c:	db0b      	blt.n	800e086 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800e06e:	6022      	str	r2, [r4, #0]
 800e070:	e006      	b.n	800e080 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800e072:	2e01      	cmp	r6, #1
 800e074:	d104      	bne.n	800e080 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800e076:	2b00      	cmp	r3, #0
 800e078:	da02      	bge.n	800e080 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800e07a:	442b      	add	r3, r5
 800e07c:	3801      	subs	r0, #1
 800e07e:	6023      	str	r3, [r4, #0]
 800e080:	b005      	add	sp, #20
 800e082:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e086:	3801      	subs	r0, #1
 800e088:	1b52      	subs	r2, r2, r5
 800e08a:	e7f0      	b.n	800e06e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

0800e08c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800e08c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800e090:	4c1c      	ldr	r4, [pc, #112]	@ (800e104 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800e092:	6807      	ldr	r7, [r0, #0]
 800e094:	69a3      	ldr	r3, [r4, #24]
 800e096:	4605      	mov	r5, r0
 800e098:	b92b      	cbnz	r3, 800e0a6 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800e09a:	6840      	ldr	r0, [r0, #4]
 800e09c:	e9c5 7000 	strd	r7, r0, [r5]
 800e0a0:	b004      	add	sp, #16
 800e0a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e0a6:	68a2      	ldr	r2, [r4, #8]
 800e0a8:	6820      	ldr	r0, [r4, #0]
 800e0aa:	ae04      	add	r6, sp, #16
 800e0ac:	f04f 0802 	mov.w	r8, #2
 800e0b0:	fb93 f1f8 	sdiv	r1, r3, r8
 800e0b4:	440a      	add	r2, r1
 800e0b6:	f846 2d04 	str.w	r2, [r6, #-4]!
 800e0ba:	69e1      	ldr	r1, [r4, #28]
 800e0bc:	9600      	str	r6, [sp, #0]
 800e0be:	463a      	mov	r2, r7
 800e0c0:	f7ff ff98 	bl	800dff4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800e0c4:	69a3      	ldr	r3, [r4, #24]
 800e0c6:	686a      	ldr	r2, [r5, #4]
 800e0c8:	6a21      	ldr	r1, [r4, #32]
 800e0ca:	9600      	str	r6, [sp, #0]
 800e0cc:	4607      	mov	r7, r0
 800e0ce:	6860      	ldr	r0, [r4, #4]
 800e0d0:	f7ff ff90 	bl	800dff4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800e0d4:	6962      	ldr	r2, [r4, #20]
 800e0d6:	69a3      	ldr	r3, [r4, #24]
 800e0d8:	fb93 f8f8 	sdiv	r8, r3, r8
 800e0dc:	4442      	add	r2, r8
 800e0de:	9203      	str	r2, [sp, #12]
 800e0e0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800e0e2:	682a      	ldr	r2, [r5, #0]
 800e0e4:	9600      	str	r6, [sp, #0]
 800e0e6:	4407      	add	r7, r0
 800e0e8:	68e0      	ldr	r0, [r4, #12]
 800e0ea:	f7ff ff83 	bl	800dff4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800e0ee:	9600      	str	r6, [sp, #0]
 800e0f0:	4680      	mov	r8, r0
 800e0f2:	69a3      	ldr	r3, [r4, #24]
 800e0f4:	686a      	ldr	r2, [r5, #4]
 800e0f6:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 800e0f8:	6920      	ldr	r0, [r4, #16]
 800e0fa:	f7ff ff7b 	bl	800dff4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800e0fe:	4440      	add	r0, r8
 800e100:	e7cc      	b.n	800e09c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800e102:	bf00      	nop
 800e104:	200130a4 	.word	0x200130a4

0800e108 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800e108:	4b07      	ldr	r3, [pc, #28]	@ (800e128 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800e10a:	781b      	ldrb	r3, [r3, #0]
 800e10c:	2b01      	cmp	r3, #1
 800e10e:	d109      	bne.n	800e124 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800e110:	f9b1 3000 	ldrsh.w	r3, [r1]
 800e114:	f9b0 2000 	ldrsh.w	r2, [r0]
 800e118:	8003      	strh	r3, [r0, #0]
 800e11a:	4b04      	ldr	r3, [pc, #16]	@ (800e12c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800e11c:	881b      	ldrh	r3, [r3, #0]
 800e11e:	3b01      	subs	r3, #1
 800e120:	1a9b      	subs	r3, r3, r2
 800e122:	800b      	strh	r3, [r1, #0]
 800e124:	4770      	bx	lr
 800e126:	bf00      	nop
 800e128:	20013086 	.word	0x20013086
 800e12c:	20013082 	.word	0x20013082

0800e130 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800e130:	b510      	push	{r4, lr}
 800e132:	4b07      	ldr	r3, [pc, #28]	@ (800e150 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800e134:	781b      	ldrb	r3, [r3, #0]
 800e136:	2b01      	cmp	r3, #1
 800e138:	d108      	bne.n	800e14c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800e13a:	4b06      	ldr	r3, [pc, #24]	@ (800e154 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800e13c:	880c      	ldrh	r4, [r1, #0]
 800e13e:	881b      	ldrh	r3, [r3, #0]
 800e140:	f9b0 2000 	ldrsh.w	r2, [r0]
 800e144:	3b01      	subs	r3, #1
 800e146:	1b1b      	subs	r3, r3, r4
 800e148:	8003      	strh	r3, [r0, #0]
 800e14a:	800a      	strh	r2, [r1, #0]
 800e14c:	bd10      	pop	{r4, pc}
 800e14e:	bf00      	nop
 800e150:	20013086 	.word	0x20013086
 800e154:	20013082 	.word	0x20013082

0800e158 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800e158:	b510      	push	{r4, lr}
 800e15a:	4b0a      	ldr	r3, [pc, #40]	@ (800e184 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800e15c:	781b      	ldrb	r3, [r3, #0]
 800e15e:	2b01      	cmp	r3, #1
 800e160:	d10e      	bne.n	800e180 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800e162:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800e166:	8843      	ldrh	r3, [r0, #2]
 800e168:	f9b0 4000 	ldrsh.w	r4, [r0]
 800e16c:	8044      	strh	r4, [r0, #2]
 800e16e:	18ca      	adds	r2, r1, r3
 800e170:	4b05      	ldr	r3, [pc, #20]	@ (800e188 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800e172:	881b      	ldrh	r3, [r3, #0]
 800e174:	1a9b      	subs	r3, r3, r2
 800e176:	8003      	strh	r3, [r0, #0]
 800e178:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800e17c:	80c3      	strh	r3, [r0, #6]
 800e17e:	8081      	strh	r1, [r0, #4]
 800e180:	bd10      	pop	{r4, pc}
 800e182:	bf00      	nop
 800e184:	20013086 	.word	0x20013086
 800e188:	20013082 	.word	0x20013082

0800e18c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800e18c:	4b08      	ldr	r3, [pc, #32]	@ (800e1b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800e18e:	781b      	ldrb	r3, [r3, #0]
 800e190:	2b01      	cmp	r3, #1
 800e192:	d10c      	bne.n	800e1ae <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800e194:	8803      	ldrh	r3, [r0, #0]
 800e196:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800e19a:	8842      	ldrh	r2, [r0, #2]
 800e19c:	8002      	strh	r2, [r0, #0]
 800e19e:	185a      	adds	r2, r3, r1
 800e1a0:	4b04      	ldr	r3, [pc, #16]	@ (800e1b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800e1a2:	881b      	ldrh	r3, [r3, #0]
 800e1a4:	1a9b      	subs	r3, r3, r2
 800e1a6:	8043      	strh	r3, [r0, #2]
 800e1a8:	88c3      	ldrh	r3, [r0, #6]
 800e1aa:	8083      	strh	r3, [r0, #4]
 800e1ac:	80c1      	strh	r1, [r0, #6]
 800e1ae:	4770      	bx	lr
 800e1b0:	20013086 	.word	0x20013086
 800e1b4:	20013082 	.word	0x20013082

0800e1b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800e1b8:	b510      	push	{r4, lr}
 800e1ba:	4b07      	ldr	r3, [pc, #28]	@ (800e1d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800e1bc:	781b      	ldrb	r3, [r3, #0]
 800e1be:	2b01      	cmp	r3, #1
 800e1c0:	d108      	bne.n	800e1d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800e1c2:	f9b1 3000 	ldrsh.w	r3, [r1]
 800e1c6:	f9b0 4000 	ldrsh.w	r4, [r0]
 800e1ca:	8003      	strh	r3, [r0, #0]
 800e1cc:	8893      	ldrh	r3, [r2, #4]
 800e1ce:	3b01      	subs	r3, #1
 800e1d0:	1b1b      	subs	r3, r3, r4
 800e1d2:	800b      	strh	r3, [r1, #0]
 800e1d4:	bd10      	pop	{r4, pc}
 800e1d6:	bf00      	nop
 800e1d8:	20013086 	.word	0x20013086

0800e1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800e1dc:	b510      	push	{r4, lr}
 800e1de:	4b0a      	ldr	r3, [pc, #40]	@ (800e208 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800e1e0:	781b      	ldrb	r3, [r3, #0]
 800e1e2:	2b01      	cmp	r3, #1
 800e1e4:	460a      	mov	r2, r1
 800e1e6:	d10d      	bne.n	800e204 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800e1e8:	8881      	ldrh	r1, [r0, #4]
 800e1ea:	8803      	ldrh	r3, [r0, #0]
 800e1ec:	440b      	add	r3, r1
 800e1ee:	4601      	mov	r1, r0
 800e1f0:	3b01      	subs	r3, #1
 800e1f2:	f821 3b02 	strh.w	r3, [r1], #2
 800e1f6:	f7ff ffdf 	bl	800e1b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800e1fa:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800e1fe:	88c2      	ldrh	r2, [r0, #6]
 800e200:	8082      	strh	r2, [r0, #4]
 800e202:	80c3      	strh	r3, [r0, #6]
 800e204:	bd10      	pop	{r4, pc}
 800e206:	bf00      	nop
 800e208:	20013086 	.word	0x20013086

0800e20c <_ZN8touchgfx11Application13requestRedrawEv>:
 800e20c:	4b06      	ldr	r3, [pc, #24]	@ (800e228 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800e20e:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e212:	4b06      	ldr	r3, [pc, #24]	@ (800e22c <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800e214:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 800e218:	f9b3 3000 	ldrsh.w	r3, [r3]
 800e21c:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 800e220:	2100      	movs	r1, #0
 800e222:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 800e226:	4770      	bx	lr
 800e228:	20013082 	.word	0x20013082
 800e22c:	20013084 	.word	0x20013084

0800e230 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800e230:	4b03      	ldr	r3, [pc, #12]	@ (800e240 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800e232:	6818      	ldr	r0, [r3, #0]
 800e234:	b110      	cbz	r0, 800e23c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800e236:	6803      	ldr	r3, [r0, #0]
 800e238:	699b      	ldr	r3, [r3, #24]
 800e23a:	4718      	bx	r3
 800e23c:	4770      	bx	lr
 800e23e:	bf00      	nop
 800e240:	200130d4 	.word	0x200130d4

0800e244 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800e244:	4770      	bx	lr
	...

0800e248 <_ZN8touchgfx11Application4drawEv>:
 800e248:	b507      	push	{r0, r1, r2, lr}
 800e24a:	4b09      	ldr	r3, [pc, #36]	@ (800e270 <_ZN8touchgfx11Application4drawEv+0x28>)
 800e24c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e250:	4b08      	ldr	r3, [pc, #32]	@ (800e274 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800e252:	f8ad 2004 	strh.w	r2, [sp, #4]
 800e256:	f9b3 3000 	ldrsh.w	r3, [r3]
 800e25a:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e25e:	6803      	ldr	r3, [r0, #0]
 800e260:	2100      	movs	r1, #0
 800e262:	9100      	str	r1, [sp, #0]
 800e264:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800e266:	4669      	mov	r1, sp
 800e268:	4798      	blx	r3
 800e26a:	b003      	add	sp, #12
 800e26c:	f85d fb04 	ldr.w	pc, [sp], #4
 800e270:	20013082 	.word	0x20013082
 800e274:	20013084 	.word	0x20013084

0800e278 <_ZN8touchgfx11Application10invalidateEv>:
 800e278:	4b09      	ldr	r3, [pc, #36]	@ (800e2a0 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 800e27a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e27e:	4b09      	ldr	r3, [pc, #36]	@ (800e2a4 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 800e280:	b082      	sub	sp, #8
 800e282:	f9b3 3000 	ldrsh.w	r3, [r3]
 800e286:	f8ad 2004 	strh.w	r2, [sp, #4]
 800e28a:	2100      	movs	r1, #0
 800e28c:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e290:	9100      	str	r1, [sp, #0]
 800e292:	6803      	ldr	r3, [r0, #0]
 800e294:	aa02      	add	r2, sp, #8
 800e296:	e912 0006 	ldmdb	r2, {r1, r2}
 800e29a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800e29c:	b002      	add	sp, #8
 800e29e:	4718      	bx	r3
 800e2a0:	20013082 	.word	0x20013082
 800e2a4:	20013084 	.word	0x20013084

0800e2a8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800e2a8:	4b03      	ldr	r3, [pc, #12]	@ (800e2b8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800e2aa:	6818      	ldr	r0, [r3, #0]
 800e2ac:	b110      	cbz	r0, 800e2b4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800e2ae:	6803      	ldr	r3, [r0, #0]
 800e2b0:	69db      	ldr	r3, [r3, #28]
 800e2b2:	4718      	bx	r3
 800e2b4:	4770      	bx	lr
 800e2b6:	bf00      	nop
 800e2b8:	200130d4 	.word	0x200130d4

0800e2bc <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800e2bc:	4b03      	ldr	r3, [pc, #12]	@ (800e2cc <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800e2be:	6818      	ldr	r0, [r3, #0]
 800e2c0:	b110      	cbz	r0, 800e2c8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800e2c2:	6803      	ldr	r3, [r0, #0]
 800e2c4:	6a1b      	ldr	r3, [r3, #32]
 800e2c6:	4718      	bx	r3
 800e2c8:	4770      	bx	lr
 800e2ca:	bf00      	nop
 800e2cc:	200130d4 	.word	0x200130d4

0800e2d0 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 800e2d0:	2300      	movs	r3, #0
 800e2d2:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 800e2d6:	4770      	bx	lr

0800e2d8 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800e2d8:	4b03      	ldr	r3, [pc, #12]	@ (800e2e8 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800e2da:	6818      	ldr	r0, [r3, #0]
 800e2dc:	b110      	cbz	r0, 800e2e4 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800e2de:	6803      	ldr	r3, [r0, #0]
 800e2e0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800e2e2:	4718      	bx	r3
 800e2e4:	4770      	bx	lr
 800e2e6:	bf00      	nop
 800e2e8:	200130d4 	.word	0x200130d4

0800e2ec <_ZN8touchgfx11ApplicationD1Ev>:
 800e2ec:	4770      	bx	lr

0800e2ee <_ZN8touchgfx11ApplicationD0Ev>:
 800e2ee:	b510      	push	{r4, lr}
 800e2f0:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 800e2f4:	4604      	mov	r4, r0
 800e2f6:	f012 faea 	bl	80208ce <_ZdlPvj>
 800e2fa:	4620      	mov	r0, r4
 800e2fc:	bd10      	pop	{r4, pc}

0800e2fe <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800e2fe:	b510      	push	{r4, lr}
 800e300:	f9b1 4000 	ldrsh.w	r4, [r1]
 800e304:	888a      	ldrh	r2, [r1, #4]
 800e306:	f9b0 3000 	ldrsh.w	r3, [r0]
 800e30a:	4422      	add	r2, r4
 800e30c:	b212      	sxth	r2, r2
 800e30e:	4293      	cmp	r3, r2
 800e310:	da15      	bge.n	800e33e <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800e312:	8882      	ldrh	r2, [r0, #4]
 800e314:	4413      	add	r3, r2
 800e316:	b21b      	sxth	r3, r3
 800e318:	429c      	cmp	r4, r3
 800e31a:	da10      	bge.n	800e33e <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800e31c:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800e320:	88c9      	ldrh	r1, [r1, #6]
 800e322:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800e326:	4419      	add	r1, r3
 800e328:	b209      	sxth	r1, r1
 800e32a:	428a      	cmp	r2, r1
 800e32c:	da07      	bge.n	800e33e <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800e32e:	88c0      	ldrh	r0, [r0, #6]
 800e330:	4410      	add	r0, r2
 800e332:	b200      	sxth	r0, r0
 800e334:	4283      	cmp	r3, r0
 800e336:	bfac      	ite	ge
 800e338:	2000      	movge	r0, #0
 800e33a:	2001      	movlt	r0, #1
 800e33c:	bd10      	pop	{r4, pc}
 800e33e:	2000      	movs	r0, #0
 800e340:	e7fc      	b.n	800e33c <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800e342 <_ZN8touchgfx4Rect10restrictToEss>:
 800e342:	f9b0 3000 	ldrsh.w	r3, [r0]
 800e346:	2b00      	cmp	r3, #0
 800e348:	b510      	push	{r4, lr}
 800e34a:	da04      	bge.n	800e356 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 800e34c:	8884      	ldrh	r4, [r0, #4]
 800e34e:	4423      	add	r3, r4
 800e350:	8083      	strh	r3, [r0, #4]
 800e352:	2300      	movs	r3, #0
 800e354:	8003      	strh	r3, [r0, #0]
 800e356:	f9b0 4000 	ldrsh.w	r4, [r0]
 800e35a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800e35e:	1b09      	subs	r1, r1, r4
 800e360:	428b      	cmp	r3, r1
 800e362:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800e366:	bfc8      	it	gt
 800e368:	8081      	strhgt	r1, [r0, #4]
 800e36a:	2b00      	cmp	r3, #0
 800e36c:	da04      	bge.n	800e378 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 800e36e:	88c1      	ldrh	r1, [r0, #6]
 800e370:	440b      	add	r3, r1
 800e372:	80c3      	strh	r3, [r0, #6]
 800e374:	2300      	movs	r3, #0
 800e376:	8043      	strh	r3, [r0, #2]
 800e378:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800e37c:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800e380:	1a52      	subs	r2, r2, r1
 800e382:	4293      	cmp	r3, r2
 800e384:	bfc8      	it	gt
 800e386:	80c2      	strhgt	r2, [r0, #6]
 800e388:	bd10      	pop	{r4, pc}
	...

0800e38c <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800e38c:	b510      	push	{r4, lr}
 800e38e:	4b10      	ldr	r3, [pc, #64]	@ (800e3d0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 800e390:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e394:	4b0f      	ldr	r3, [pc, #60]	@ (800e3d4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 800e396:	460c      	mov	r4, r1
 800e398:	4620      	mov	r0, r4
 800e39a:	f9b3 1000 	ldrsh.w	r1, [r3]
 800e39e:	f7ff ffd0 	bl	800e342 <_ZN8touchgfx4Rect10restrictToEss>
 800e3a2:	4b0d      	ldr	r3, [pc, #52]	@ (800e3d8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 800e3a4:	6818      	ldr	r0, [r3, #0]
 800e3a6:	b190      	cbz	r0, 800e3ce <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 800e3a8:	6803      	ldr	r3, [r0, #0]
 800e3aa:	4621      	mov	r1, r4
 800e3ac:	689b      	ldr	r3, [r3, #8]
 800e3ae:	4798      	blx	r3
 800e3b0:	4b0a      	ldr	r3, [pc, #40]	@ (800e3dc <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 800e3b2:	6818      	ldr	r0, [r3, #0]
 800e3b4:	b118      	cbz	r0, 800e3be <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 800e3b6:	6803      	ldr	r3, [r0, #0]
 800e3b8:	4621      	mov	r1, r4
 800e3ba:	689b      	ldr	r3, [r3, #8]
 800e3bc:	4798      	blx	r3
 800e3be:	4b08      	ldr	r3, [pc, #32]	@ (800e3e0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 800e3c0:	6818      	ldr	r0, [r3, #0]
 800e3c2:	6803      	ldr	r3, [r0, #0]
 800e3c4:	4621      	mov	r1, r4
 800e3c6:	69db      	ldr	r3, [r3, #28]
 800e3c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e3cc:	4718      	bx	r3
 800e3ce:	bd10      	pop	{r4, pc}
 800e3d0:	20013084 	.word	0x20013084
 800e3d4:	20013082 	.word	0x20013082
 800e3d8:	200130d4 	.word	0x200130d4
 800e3dc:	200130d0 	.word	0x200130d0
 800e3e0:	20013090 	.word	0x20013090

0800e3e4 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800e3e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e3e6:	4606      	mov	r6, r0
 800e3e8:	4608      	mov	r0, r1
 800e3ea:	460f      	mov	r7, r1
 800e3ec:	f7fb fc7f 	bl	8009cee <_ZNK8touchgfx4Rect7isEmptyEv>
 800e3f0:	b9e8      	cbnz	r0, 800e42e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800e3f2:	f9b7 5000 	ldrsh.w	r5, [r7]
 800e3f6:	f9b6 4000 	ldrsh.w	r4, [r6]
 800e3fa:	42a5      	cmp	r5, r4
 800e3fc:	db17      	blt.n	800e42e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800e3fe:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800e402:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800e406:	429a      	cmp	r2, r3
 800e408:	db11      	blt.n	800e42e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800e40a:	88b9      	ldrh	r1, [r7, #4]
 800e40c:	440d      	add	r5, r1
 800e40e:	88b1      	ldrh	r1, [r6, #4]
 800e410:	440c      	add	r4, r1
 800e412:	b22d      	sxth	r5, r5
 800e414:	b224      	sxth	r4, r4
 800e416:	42a5      	cmp	r5, r4
 800e418:	dc09      	bgt.n	800e42e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800e41a:	88f8      	ldrh	r0, [r7, #6]
 800e41c:	4410      	add	r0, r2
 800e41e:	88f2      	ldrh	r2, [r6, #6]
 800e420:	4413      	add	r3, r2
 800e422:	b200      	sxth	r0, r0
 800e424:	b21b      	sxth	r3, r3
 800e426:	4298      	cmp	r0, r3
 800e428:	bfcc      	ite	gt
 800e42a:	2000      	movgt	r0, #0
 800e42c:	2001      	movle	r0, #1
 800e42e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800e430 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800e430:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e432:	4604      	mov	r4, r0
 800e434:	4608      	mov	r0, r1
 800e436:	460d      	mov	r5, r1
 800e438:	f7fb fc59 	bl	8009cee <_ZNK8touchgfx4Rect7isEmptyEv>
 800e43c:	b978      	cbnz	r0, 800e45e <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800e43e:	4620      	mov	r0, r4
 800e440:	f7fb fc55 	bl	8009cee <_ZNK8touchgfx4Rect7isEmptyEv>
 800e444:	f9b5 6000 	ldrsh.w	r6, [r5]
 800e448:	b150      	cbz	r0, 800e460 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800e44a:	8026      	strh	r6, [r4, #0]
 800e44c:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800e450:	8063      	strh	r3, [r4, #2]
 800e452:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800e456:	80a3      	strh	r3, [r4, #4]
 800e458:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800e45c:	80e3      	strh	r3, [r4, #6]
 800e45e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e460:	f9b4 1000 	ldrsh.w	r1, [r4]
 800e464:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800e468:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800e46c:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800e470:	88ed      	ldrh	r5, [r5, #6]
 800e472:	42b1      	cmp	r1, r6
 800e474:	460f      	mov	r7, r1
 800e476:	bfa8      	it	ge
 800e478:	4637      	movge	r7, r6
 800e47a:	4293      	cmp	r3, r2
 800e47c:	4618      	mov	r0, r3
 800e47e:	4466      	add	r6, ip
 800e480:	bfa8      	it	ge
 800e482:	4610      	movge	r0, r2
 800e484:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800e488:	8027      	strh	r7, [r4, #0]
 800e48a:	442a      	add	r2, r5
 800e48c:	88e5      	ldrh	r5, [r4, #6]
 800e48e:	8060      	strh	r0, [r4, #2]
 800e490:	4461      	add	r1, ip
 800e492:	442b      	add	r3, r5
 800e494:	b236      	sxth	r6, r6
 800e496:	b209      	sxth	r1, r1
 800e498:	b212      	sxth	r2, r2
 800e49a:	b21b      	sxth	r3, r3
 800e49c:	428e      	cmp	r6, r1
 800e49e:	bfac      	ite	ge
 800e4a0:	ebc7 0106 	rsbge	r1, r7, r6
 800e4a4:	ebc7 0101 	rsblt	r1, r7, r1
 800e4a8:	429a      	cmp	r2, r3
 800e4aa:	bfac      	ite	ge
 800e4ac:	ebc0 0202 	rsbge	r2, r0, r2
 800e4b0:	ebc0 0203 	rsblt	r2, r0, r3
 800e4b4:	80a1      	strh	r1, [r4, #4]
 800e4b6:	80e2      	strh	r2, [r4, #6]
 800e4b8:	e7d1      	b.n	800e45e <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800e4bc <_ZN8touchgfx11Application11getInstanceEv>:
 800e4bc:	4b01      	ldr	r3, [pc, #4]	@ (800e4c4 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800e4be:	6818      	ldr	r0, [r3, #0]
 800e4c0:	4770      	bx	lr
 800e4c2:	bf00      	nop
 800e4c4:	200130e4 	.word	0x200130e4

0800e4c8 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 800e4c8:	b510      	push	{r4, lr}
 800e4ca:	2300      	movs	r3, #0
 800e4cc:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 800e4d0:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800e4d4:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800e4d8:	4604      	mov	r4, r0
 800e4da:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800e4de:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 800e4e2:	429a      	cmp	r2, r3
 800e4e4:	d90e      	bls.n	800e504 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 800e4e6:	18e2      	adds	r2, r4, r3
 800e4e8:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 800e4ec:	b122      	cbz	r2, 800e4f8 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 800e4ee:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 800e4f2:	6803      	ldr	r3, [r0, #0]
 800e4f4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800e4f6:	4798      	blx	r3
 800e4f8:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800e4fc:	3301      	adds	r3, #1
 800e4fe:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 800e502:	e7ea      	b.n	800e4da <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 800e504:	bd10      	pop	{r4, pc}

0800e506 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 800e506:	2300      	movs	r3, #0
 800e508:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 800e50c:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 800e510:	30a4      	adds	r0, #164	@ 0xa4
 800e512:	f802 3b01 	strb.w	r3, [r2], #1
 800e516:	4282      	cmp	r2, r0
 800e518:	d1fb      	bne.n	800e512 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 800e51a:	4770      	bx	lr

0800e51c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800e51c:	b570      	push	{r4, r5, r6, lr}
 800e51e:	4c0b      	ldr	r4, [pc, #44]	@ (800e54c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 800e520:	4605      	mov	r5, r0
 800e522:	6820      	ldr	r0, [r4, #0]
 800e524:	460e      	mov	r6, r1
 800e526:	b110      	cbz	r0, 800e52e <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 800e528:	6803      	ldr	r3, [r0, #0]
 800e52a:	695b      	ldr	r3, [r3, #20]
 800e52c:	4798      	blx	r3
 800e52e:	1d28      	adds	r0, r5, #4
 800e530:	f7ff ffe9 	bl	800e506 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800e534:	6026      	str	r6, [r4, #0]
 800e536:	6833      	ldr	r3, [r6, #0]
 800e538:	4630      	mov	r0, r6
 800e53a:	68db      	ldr	r3, [r3, #12]
 800e53c:	4798      	blx	r3
 800e53e:	682b      	ldr	r3, [r5, #0]
 800e540:	4628      	mov	r0, r5
 800e542:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800e544:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e548:	4718      	bx	r3
 800e54a:	bf00      	nop
 800e54c:	200130d4 	.word	0x200130d4

0800e550 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 800e550:	2300      	movs	r3, #0
 800e552:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 800e556:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 800e55a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e55c:	461a      	mov	r2, r3
 800e55e:	461c      	mov	r4, r3
 800e560:	461d      	mov	r5, r3
 800e562:	459c      	cmp	ip, r3
 800e564:	dd1a      	ble.n	800e59c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 800e566:	18c6      	adds	r6, r0, r3
 800e568:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 800e56c:	b16e      	cbz	r6, 800e58a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 800e56e:	429a      	cmp	r2, r3
 800e570:	d008      	beq.n	800e584 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 800e572:	fa1f fe82 	uxth.w	lr, r2
 800e576:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 800e57a:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 800e57e:	1887      	adds	r7, r0, r2
 800e580:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 800e584:	3201      	adds	r2, #1
 800e586:	3301      	adds	r3, #1
 800e588:	e7eb      	b.n	800e562 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 800e58a:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 800e58e:	4299      	cmp	r1, r3
 800e590:	bfa8      	it	ge
 800e592:	3501      	addge	r5, #1
 800e594:	429e      	cmp	r6, r3
 800e596:	bfc8      	it	gt
 800e598:	3401      	addgt	r4, #1
 800e59a:	e7f4      	b.n	800e586 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 800e59c:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 800e5a0:	1b49      	subs	r1, r1, r5
 800e5a2:	1b1b      	subs	r3, r3, r4
 800e5a4:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 800e5a8:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800e5ac:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800e5b0:	4293      	cmp	r3, r2
 800e5b2:	dd03      	ble.n	800e5bc <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 800e5b4:	3b01      	subs	r3, #1
 800e5b6:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 800e5ba:	e7f7      	b.n	800e5ac <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 800e5bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800e5c0 <_ZN8touchgfx11Application15handleTickEventEv>:
 800e5c0:	b570      	push	{r4, r5, r6, lr}
 800e5c2:	4d16      	ldr	r5, [pc, #88]	@ (800e61c <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 800e5c4:	4604      	mov	r4, r0
 800e5c6:	6828      	ldr	r0, [r5, #0]
 800e5c8:	b140      	cbz	r0, 800e5dc <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800e5ca:	7a03      	ldrb	r3, [r0, #8]
 800e5cc:	b933      	cbnz	r3, 800e5dc <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800e5ce:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 800e5d2:	6803      	ldr	r3, [r0, #0]
 800e5d4:	689b      	ldr	r3, [r3, #8]
 800e5d6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e5da:	4718      	bx	r3
 800e5dc:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 800e5e0:	4e0f      	ldr	r6, [pc, #60]	@ (800e620 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 800e5e2:	b973      	cbnz	r3, 800e602 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800e5e4:	b168      	cbz	r0, 800e602 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800e5e6:	7a03      	ldrb	r3, [r0, #8]
 800e5e8:	b15b      	cbz	r3, 800e602 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800e5ea:	6830      	ldr	r0, [r6, #0]
 800e5ec:	b110      	cbz	r0, 800e5f4 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800e5ee:	6803      	ldr	r3, [r0, #0]
 800e5f0:	691b      	ldr	r3, [r3, #16]
 800e5f2:	4798      	blx	r3
 800e5f4:	6828      	ldr	r0, [r5, #0]
 800e5f6:	6803      	ldr	r3, [r0, #0]
 800e5f8:	68db      	ldr	r3, [r3, #12]
 800e5fa:	4798      	blx	r3
 800e5fc:	2301      	movs	r3, #1
 800e5fe:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 800e602:	3404      	adds	r4, #4
 800e604:	4620      	mov	r0, r4
 800e606:	f7ff ff5f 	bl	800e4c8 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 800e60a:	4620      	mov	r0, r4
 800e60c:	f7ff ffa0 	bl	800e550 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 800e610:	6830      	ldr	r0, [r6, #0]
 800e612:	b110      	cbz	r0, 800e61a <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 800e614:	6803      	ldr	r3, [r0, #0]
 800e616:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e618:	e7dd      	b.n	800e5d6 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800e61a:	bd70      	pop	{r4, r5, r6, pc}
 800e61c:	200130d8 	.word	0x200130d8
 800e620:	200130d4 	.word	0x200130d4

0800e624 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800e624:	4603      	mov	r3, r0
 800e626:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 800e62a:	2200      	movs	r2, #0
 800e62c:	801a      	strh	r2, [r3, #0]
 800e62e:	805a      	strh	r2, [r3, #2]
 800e630:	809a      	strh	r2, [r3, #4]
 800e632:	80da      	strh	r2, [r3, #6]
 800e634:	3308      	adds	r3, #8
 800e636:	428b      	cmp	r3, r1
 800e638:	d1f8      	bne.n	800e62c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800e63a:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 800e63e:	4770      	bx	lr

0800e640 <_ZN8touchgfx11ApplicationC1Ev>:
 800e640:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e642:	4606      	mov	r6, r0
 800e644:	4b1c      	ldr	r3, [pc, #112]	@ (800e6b8 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800e646:	f846 3b04 	str.w	r3, [r6], #4
 800e64a:	4604      	mov	r4, r0
 800e64c:	2500      	movs	r5, #0
 800e64e:	22a8      	movs	r2, #168	@ 0xa8
 800e650:	2100      	movs	r1, #0
 800e652:	4630      	mov	r0, r6
 800e654:	f013 fa7f 	bl	8021b56 <memset>
 800e658:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 800e65c:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 800e660:	f7ff ffe0 	bl	800e624 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800e664:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 800e668:	f7ff ffdc 	bl	800e624 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800e66c:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 800e670:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 800e674:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 800e678:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 800e67c:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 800e680:	490e      	ldr	r1, [pc, #56]	@ (800e6bc <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800e682:	480f      	ldr	r0, [pc, #60]	@ (800e6c0 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800e684:	4f0f      	ldr	r7, [pc, #60]	@ (800e6c4 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800e686:	f011 faad 	bl	801fbe4 <CRC_Lock>
 800e68a:	4b0f      	ldr	r3, [pc, #60]	@ (800e6c8 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 800e68c:	b158      	cbz	r0, 800e6a6 <_ZN8touchgfx11ApplicationC1Ev+0x66>
 800e68e:	801d      	strh	r5, [r3, #0]
 800e690:	4a0e      	ldr	r2, [pc, #56]	@ (800e6cc <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 800e692:	2300      	movs	r3, #0
 800e694:	6013      	str	r3, [r2, #0]
 800e696:	4a0e      	ldr	r2, [pc, #56]	@ (800e6d0 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 800e698:	603b      	str	r3, [r7, #0]
 800e69a:	4630      	mov	r0, r6
 800e69c:	6013      	str	r3, [r2, #0]
 800e69e:	f7ff ff32 	bl	800e506 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800e6a2:	4620      	mov	r0, r4
 800e6a4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e6a6:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800e6aa:	2002      	movs	r0, #2
 800e6ac:	801a      	strh	r2, [r3, #0]
 800e6ae:	6038      	str	r0, [r7, #0]
 800e6b0:	f001 ff40 	bl	8010534 <_ZN8touchgfx6Screen4drawEv>
 800e6b4:	e7ec      	b.n	800e690 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 800e6b6:	bf00      	nop
 800e6b8:	08023a5c 	.word	0x08023a5c
 800e6bc:	b5e8b5cd 	.word	0xb5e8b5cd
 800e6c0:	f407a5c2 	.word	0xf407a5c2
 800e6c4:	200130d4 	.word	0x200130d4
 800e6c8:	20000194 	.word	0x20000194
 800e6cc:	200130e4 	.word	0x200130e4
 800e6d0:	200130d8 	.word	0x200130d8

0800e6d4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800e6d4:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 800e6d8:	3b01      	subs	r3, #1
 800e6da:	b29b      	uxth	r3, r3
 800e6dc:	428b      	cmp	r3, r1
 800e6de:	b510      	push	{r4, lr}
 800e6e0:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 800e6e4:	d908      	bls.n	800e6f8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 800e6e6:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800e6ea:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800e6ee:	681a      	ldr	r2, [r3, #0]
 800e6f0:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800e6f4:	685a      	ldr	r2, [r3, #4]
 800e6f6:	6062      	str	r2, [r4, #4]
 800e6f8:	bd10      	pop	{r4, pc}
	...

0800e6fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800e6fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e700:	4b92      	ldr	r3, [pc, #584]	@ (800e94c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x250>)
 800e702:	b08f      	sub	sp, #60	@ 0x3c
 800e704:	ac0a      	add	r4, sp, #40	@ 0x28
 800e706:	e884 0006 	stmia.w	r4, {r1, r2}
 800e70a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e70e:	4b90      	ldr	r3, [pc, #576]	@ (800e950 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x254>)
 800e710:	4683      	mov	fp, r0
 800e712:	f9b3 1000 	ldrsh.w	r1, [r3]
 800e716:	4620      	mov	r0, r4
 800e718:	f7ff fe13 	bl	800e342 <_ZN8touchgfx4Rect10restrictToEss>
 800e71c:	4620      	mov	r0, r4
 800e71e:	f7fb fae6 	bl	8009cee <_ZNK8touchgfx4Rect7isEmptyEv>
 800e722:	2800      	cmp	r0, #0
 800e724:	d170      	bne.n	800e808 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 800e726:	4b8b      	ldr	r3, [pc, #556]	@ (800e954 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 800e728:	681b      	ldr	r3, [r3, #0]
 800e72a:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 800e72e:	2b02      	cmp	r3, #2
 800e730:	d06a      	beq.n	800e808 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 800e732:	9403      	str	r4, [sp, #12]
 800e734:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 800e738:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 800e73c:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 800e740:	35a4      	adds	r5, #164	@ 0xa4
 800e742:	9301      	str	r3, [sp, #4]
 800e744:	b15c      	cbz	r4, 800e75e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62>
 800e746:	4629      	mov	r1, r5
 800e748:	9803      	ldr	r0, [sp, #12]
 800e74a:	f7ff fe4b 	bl	800e3e4 <_ZNK8touchgfx4Rect8includesERKS0_>
 800e74e:	3c01      	subs	r4, #1
 800e750:	b118      	cbz	r0, 800e75a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 800e752:	b2a1      	uxth	r1, r4
 800e754:	9801      	ldr	r0, [sp, #4]
 800e756:	f7ff ffbd 	bl	800e6d4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800e75a:	3d08      	subs	r5, #8
 800e75c:	e7f2      	b.n	800e744 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x48>
 800e75e:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 800e762:	f8cd a010 	str.w	sl, [sp, #16]
 800e766:	f10a 33ff 	add.w	r3, sl, #4294967295
 800e76a:	9302      	str	r3, [sp, #8]
 800e76c:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 800e770:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 800e774:	9306      	str	r3, [sp, #24]
 800e776:	445c      	add	r4, fp
 800e778:	2500      	movs	r5, #0
 800e77a:	4626      	mov	r6, r4
 800e77c:	f8cd a014 	str.w	sl, [sp, #20]
 800e780:	462f      	mov	r7, r5
 800e782:	9b05      	ldr	r3, [sp, #20]
 800e784:	2b00      	cmp	r3, #0
 800e786:	d073      	beq.n	800e870 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x174>
 800e788:	9903      	ldr	r1, [sp, #12]
 800e78a:	4630      	mov	r0, r6
 800e78c:	f7ff fdb7 	bl	800e2fe <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e790:	b350      	cbz	r0, 800e7e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
 800e792:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 800e796:	f9b6 c000 	ldrsh.w	ip, [r6]
 800e79a:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 800e79e:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 800e7a2:	45e6      	cmp	lr, ip
 800e7a4:	db33      	blt.n	800e80e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
 800e7a6:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 800e7aa:	88b3      	ldrh	r3, [r6, #4]
 800e7ac:	4472      	add	r2, lr
 800e7ae:	4463      	add	r3, ip
 800e7b0:	b212      	sxth	r2, r2
 800e7b2:	b21b      	sxth	r3, r3
 800e7b4:	429a      	cmp	r2, r3
 800e7b6:	dc2a      	bgt.n	800e80e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
 800e7b8:	88f3      	ldrh	r3, [r6, #6]
 800e7ba:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 800e7be:	fa1f f289 	uxth.w	r2, r9
 800e7c2:	4413      	add	r3, r2
 800e7c4:	b29b      	uxth	r3, r3
 800e7c6:	45c8      	cmp	r8, r9
 800e7c8:	fa1f fc88 	uxth.w	ip, r8
 800e7cc:	fa0f fe83 	sxth.w	lr, r3
 800e7d0:	db0f      	blt.n	800e7f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf6>
 800e7d2:	eba3 030c 	sub.w	r3, r3, ip
 800e7d6:	1ac9      	subs	r1, r1, r3
 800e7d8:	b209      	sxth	r1, r1
 800e7da:	2900      	cmp	r1, #0
 800e7dc:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800e7e0:	dd12      	ble.n	800e808 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 800e7e2:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 800e7e6:	4605      	mov	r5, r0
 800e7e8:	9b05      	ldr	r3, [sp, #20]
 800e7ea:	3b01      	subs	r3, #1
 800e7ec:	9305      	str	r3, [sp, #20]
 800e7ee:	3e08      	subs	r6, #8
 800e7f0:	e7c7      	b.n	800e782 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x86>
 800e7f2:	4461      	add	r1, ip
 800e7f4:	b209      	sxth	r1, r1
 800e7f6:	4571      	cmp	r1, lr
 800e7f8:	dc38      	bgt.n	800e86c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 800e7fa:	eba2 020c 	sub.w	r2, r2, ip
 800e7fe:	b212      	sxth	r2, r2
 800e800:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 800e804:	2a00      	cmp	r2, #0
 800e806:	dcee      	bgt.n	800e7e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800e808:	b00f      	add	sp, #60	@ 0x3c
 800e80a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e80e:	45c8      	cmp	r8, r9
 800e810:	db2c      	blt.n	800e86c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 800e812:	88f3      	ldrh	r3, [r6, #6]
 800e814:	4499      	add	r9, r3
 800e816:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 800e81a:	4498      	add	r8, r3
 800e81c:	fa0f f989 	sxth.w	r9, r9
 800e820:	fa0f f888 	sxth.w	r8, r8
 800e824:	45c1      	cmp	r9, r8
 800e826:	db21      	blt.n	800e86c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 800e828:	88b3      	ldrh	r3, [r6, #4]
 800e82a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 800e82e:	fa1f f28c 	uxth.w	r2, ip
 800e832:	4413      	add	r3, r2
 800e834:	b29b      	uxth	r3, r3
 800e836:	45e6      	cmp	lr, ip
 800e838:	fa1f f88e 	uxth.w	r8, lr
 800e83c:	fa0f f983 	sxth.w	r9, r3
 800e840:	db0a      	blt.n	800e858 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x15c>
 800e842:	eba3 0308 	sub.w	r3, r3, r8
 800e846:	1ac9      	subs	r1, r1, r3
 800e848:	b209      	sxth	r1, r1
 800e84a:	2900      	cmp	r1, #0
 800e84c:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 800e850:	ddda      	ble.n	800e808 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 800e852:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 800e856:	e7c6      	b.n	800e7e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800e858:	4441      	add	r1, r8
 800e85a:	b209      	sxth	r1, r1
 800e85c:	4549      	cmp	r1, r9
 800e85e:	dc05      	bgt.n	800e86c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
 800e860:	eba2 0208 	sub.w	r2, r2, r8
 800e864:	b212      	sxth	r2, r2
 800e866:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 800e86a:	e7cb      	b.n	800e804 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x108>
 800e86c:	4607      	mov	r7, r0
 800e86e:	e7bb      	b.n	800e7e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
 800e870:	2d00      	cmp	r5, #0
 800e872:	d181      	bne.n	800e778 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7c>
 800e874:	2f00      	cmp	r7, #0
 800e876:	f000 81df 	beq.w	800ec38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 800e87a:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 800e87e:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 800e882:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 800e886:	b2b3      	uxth	r3, r6
 800e888:	9305      	str	r3, [sp, #20]
 800e88a:	9a05      	ldr	r2, [sp, #20]
 800e88c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 800e890:	4413      	add	r3, r2
 800e892:	b2ba      	uxth	r2, r7
 800e894:	4492      	add	sl, r2
 800e896:	b29b      	uxth	r3, r3
 800e898:	fa1f fa8a 	uxth.w	sl, sl
 800e89c:	fa0f f883 	sxth.w	r8, r3
 800e8a0:	fa0f f98a 	sxth.w	r9, sl
 800e8a4:	e9cd 2307 	strd	r2, r3, [sp, #28]
 800e8a8:	9b04      	ldr	r3, [sp, #16]
 800e8aa:	2b00      	cmp	r3, #0
 800e8ac:	d054      	beq.n	800e958 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>
 800e8ae:	9903      	ldr	r1, [sp, #12]
 800e8b0:	4620      	mov	r0, r4
 800e8b2:	f7ff fd24 	bl	800e2fe <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e8b6:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 800e8ba:	b1c0      	cbz	r0, 800e8ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 800e8bc:	f9b4 e000 	ldrsh.w	lr, [r4]
 800e8c0:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800e8c4:	4576      	cmp	r6, lr
 800e8c6:	dc22      	bgt.n	800e90e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
 800e8c8:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800e8cc:	44f4      	add	ip, lr
 800e8ce:	fa0f fc8c 	sxth.w	ip, ip
 800e8d2:	45e0      	cmp	r8, ip
 800e8d4:	db1b      	blt.n	800e90e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
 800e8d6:	428f      	cmp	r7, r1
 800e8d8:	fa1f fc81 	uxth.w	ip, r1
 800e8dc:	88e1      	ldrh	r1, [r4, #6]
 800e8de:	dc0d      	bgt.n	800e8fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x200>
 800e8e0:	ebaa 0c0c 	sub.w	ip, sl, ip
 800e8e4:	eba1 010c 	sub.w	r1, r1, ip
 800e8e8:	f8a4 9002 	strh.w	r9, [r4, #2]
 800e8ec:	80e1      	strh	r1, [r4, #6]
 800e8ee:	4628      	mov	r0, r5
 800e8f0:	9904      	ldr	r1, [sp, #16]
 800e8f2:	3901      	subs	r1, #1
 800e8f4:	9104      	str	r1, [sp, #16]
 800e8f6:	3c08      	subs	r4, #8
 800e8f8:	4605      	mov	r5, r0
 800e8fa:	e7d3      	b.n	800e8a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a8>
 800e8fc:	4461      	add	r1, ip
 800e8fe:	b209      	sxth	r1, r1
 800e900:	4549      	cmp	r1, r9
 800e902:	dcf5      	bgt.n	800e8f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 800e904:	eba2 0c0c 	sub.w	ip, r2, ip
 800e908:	f8a4 c006 	strh.w	ip, [r4, #6]
 800e90c:	e7ef      	b.n	800e8ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 800e90e:	428f      	cmp	r7, r1
 800e910:	dcee      	bgt.n	800e8f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 800e912:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 800e916:	4461      	add	r1, ip
 800e918:	b209      	sxth	r1, r1
 800e91a:	4589      	cmp	r9, r1
 800e91c:	dbe8      	blt.n	800e8f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 800e91e:	4576      	cmp	r6, lr
 800e920:	fa1f fc8e 	uxth.w	ip, lr
 800e924:	88a1      	ldrh	r1, [r4, #4]
 800e926:	dc07      	bgt.n	800e938 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x23c>
 800e928:	eba3 0c0c 	sub.w	ip, r3, ip
 800e92c:	eba1 010c 	sub.w	r1, r1, ip
 800e930:	f8a4 8000 	strh.w	r8, [r4]
 800e934:	80a1      	strh	r1, [r4, #4]
 800e936:	e7da      	b.n	800e8ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 800e938:	4461      	add	r1, ip
 800e93a:	b209      	sxth	r1, r1
 800e93c:	4588      	cmp	r8, r1
 800e93e:	dbd7      	blt.n	800e8f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 800e940:	9905      	ldr	r1, [sp, #20]
 800e942:	eba1 0c0c 	sub.w	ip, r1, ip
 800e946:	f8a4 c004 	strh.w	ip, [r4, #4]
 800e94a:	e7d0      	b.n	800e8ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 800e94c:	20013084 	.word	0x20013084
 800e950:	20013082 	.word	0x20013082
 800e954:	20013090 	.word	0x20013090
 800e958:	2d00      	cmp	r5, #0
 800e95a:	f000 816d 	beq.w	800ec38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 800e95e:	9b06      	ldr	r3, [sp, #24]
 800e960:	445b      	add	r3, fp
 800e962:	461c      	mov	r4, r3
 800e964:	9b02      	ldr	r3, [sp, #8]
 800e966:	3301      	adds	r3, #1
 800e968:	f000 8166 	beq.w	800ec38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 800e96c:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 800e970:	4629      	mov	r1, r5
 800e972:	9803      	ldr	r0, [sp, #12]
 800e974:	f7ff fd36 	bl	800e3e4 <_ZNK8touchgfx4Rect8includesERKS0_>
 800e978:	b120      	cbz	r0, 800e984 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x288>
 800e97a:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 800e97e:	9801      	ldr	r0, [sp, #4]
 800e980:	f7ff fea8 	bl	800e6d4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800e984:	9903      	ldr	r1, [sp, #12]
 800e986:	4628      	mov	r0, r5
 800e988:	f7ff fcb9 	bl	800e2fe <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e98c:	2800      	cmp	r0, #0
 800e98e:	f000 809c 	beq.w	800eaca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
 800e992:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 800e996:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800e99a:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 800e99e:	9309      	str	r3, [sp, #36]	@ 0x24
 800e9a0:	fa1f f189 	uxth.w	r1, r9
 800e9a4:	eb01 0c03 	add.w	ip, r1, r3
 800e9a8:	fa1f fa8c 	uxth.w	sl, ip
 800e9ac:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 800e9b0:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 800e9b4:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 800e9b8:	b283      	uxth	r3, r0
 800e9ba:	eb03 050c 	add.w	r5, r3, ip
 800e9be:	b2ad      	uxth	r5, r5
 800e9c0:	9505      	str	r5, [sp, #20]
 800e9c2:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 800e9c6:	9504      	str	r5, [sp, #16]
 800e9c8:	4548      	cmp	r0, r9
 800e9ca:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 800e9ce:	f340 8099 	ble.w	800eb04 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x408>
 800e9d2:	1a5b      	subs	r3, r3, r1
 800e9d4:	b29b      	uxth	r3, r3
 800e9d6:	4596      	cmp	lr, r2
 800e9d8:	fa0f f08a 	sxth.w	r0, sl
 800e9dc:	b21e      	sxth	r6, r3
 800e9de:	dd2e      	ble.n	800ea3e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x342>
 800e9e0:	9f02      	ldr	r7, [sp, #8]
 800e9e2:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 800e9e6:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 800e9ea:	9f04      	ldr	r7, [sp, #16]
 800e9ec:	1a3f      	subs	r7, r7, r0
 800e9ee:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 800e9f2:	fa1f fe8e 	uxth.w	lr, lr
 800e9f6:	b292      	uxth	r2, r2
 800e9f8:	ebae 0102 	sub.w	r1, lr, r2
 800e9fc:	44a6      	add	lr, r4
 800e9fe:	4402      	add	r2, r0
 800ea00:	b289      	uxth	r1, r1
 800ea02:	fa0f fe8e 	sxth.w	lr, lr
 800ea06:	b212      	sxth	r2, r2
 800ea08:	b20d      	sxth	r5, r1
 800ea0a:	ebae 0202 	sub.w	r2, lr, r2
 800ea0e:	436f      	muls	r7, r5
 800ea10:	4372      	muls	r2, r6
 800ea12:	4297      	cmp	r7, r2
 800ea14:	db09      	blt.n	800ea2a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x32e>
 800ea16:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 800ea1a:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 800ea1e:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 800ea22:	449c      	add	ip, r3
 800ea24:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 800ea28:	e684      	b.n	800e734 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 800ea2a:	4421      	add	r1, r4
 800ea2c:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 800ea30:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 800ea34:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800ea38:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 800ea3c:	e67a      	b.n	800e734 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 800ea3e:	9f04      	ldr	r7, [sp, #16]
 800ea40:	42b8      	cmp	r0, r7
 800ea42:	da27      	bge.n	800ea94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x398>
 800ea44:	9902      	ldr	r1, [sp, #8]
 800ea46:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 800ea4a:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 800ea4e:	eb05 010e 	add.w	r1, r5, lr
 800ea52:	fa1f f881 	uxth.w	r8, r1
 800ea56:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 800ea5a:	4411      	add	r1, r2
 800ea5c:	eba1 0108 	sub.w	r1, r1, r8
 800ea60:	b289      	uxth	r1, r1
 800ea62:	fa0f f988 	sxth.w	r9, r8
 800ea66:	eba2 020e 	sub.w	r2, r2, lr
 800ea6a:	fa0f f881 	sxth.w	r8, r1
 800ea6e:	1a3f      	subs	r7, r7, r0
 800ea70:	4372      	muls	r2, r6
 800ea72:	fb08 f707 	mul.w	r7, r8, r7
 800ea76:	42ba      	cmp	r2, r7
 800ea78:	dc06      	bgt.n	800ea88 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38c>
 800ea7a:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 800ea7e:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 800ea82:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 800ea86:	e7ca      	b.n	800ea1e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x322>
 800ea88:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 800ea8c:	4429      	add	r1, r5
 800ea8e:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800ea92:	e64f      	b.n	800e734 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 800ea94:	9805      	ldr	r0, [sp, #20]
 800ea96:	ebaa 0000 	sub.w	r0, sl, r0
 800ea9a:	b280      	uxth	r0, r0
 800ea9c:	2d06      	cmp	r5, #6
 800ea9e:	fa0f fe80 	sxth.w	lr, r0
 800eaa2:	d817      	bhi.n	800ead4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d8>
 800eaa4:	9b04      	ldr	r3, [sp, #16]
 800eaa6:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 800eaaa:	1c6b      	adds	r3, r5, #1
 800eaac:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 800eab0:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 800eab4:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 800eab8:	9b01      	ldr	r3, [sp, #4]
 800eaba:	9801      	ldr	r0, [sp, #4]
 800eabc:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800eac0:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800eac4:	805a      	strh	r2, [r3, #2]
 800eac6:	809e      	strh	r6, [r3, #4]
 800eac8:	80d9      	strh	r1, [r3, #6]
 800eaca:	9b02      	ldr	r3, [sp, #8]
 800eacc:	3b01      	subs	r3, #1
 800eace:	9302      	str	r3, [sp, #8]
 800ead0:	3c08      	subs	r4, #8
 800ead2:	e747      	b.n	800e964 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x268>
 800ead4:	9a02      	ldr	r2, [sp, #8]
 800ead6:	45b6      	cmp	lr, r6
 800ead8:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800eadc:	db0d      	blt.n	800eafa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fe>
 800eade:	449c      	add	ip, r3
 800eae0:	fa1f fc8c 	uxth.w	ip, ip
 800eae4:	445a      	add	r2, fp
 800eae6:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 800eaea:	448c      	add	ip, r1
 800eaec:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 800eaf0:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 800eaf4:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 800eaf8:	e61c      	b.n	800e734 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 800eafa:	445a      	add	r2, fp
 800eafc:	4484      	add	ip, r0
 800eafe:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 800eb02:	e78f      	b.n	800ea24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 800eb04:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 800eb08:	fa1f f18e 	uxth.w	r1, lr
 800eb0c:	eb01 0806 	add.w	r8, r1, r6
 800eb10:	b293      	uxth	r3, r2
 800eb12:	fa1f f888 	uxth.w	r8, r8
 800eb16:	9306      	str	r3, [sp, #24]
 800eb18:	fa0f f388 	sxth.w	r3, r8
 800eb1c:	9307      	str	r3, [sp, #28]
 800eb1e:	9f06      	ldr	r7, [sp, #24]
 800eb20:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 800eb24:	443b      	add	r3, r7
 800eb26:	b29b      	uxth	r3, r3
 800eb28:	4596      	cmp	lr, r2
 800eb2a:	9308      	str	r3, [sp, #32]
 800eb2c:	da24      	bge.n	800eb78 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x47c>
 800eb2e:	9905      	ldr	r1, [sp, #20]
 800eb30:	eba3 0308 	sub.w	r3, r3, r8
 800eb34:	ebaa 0401 	sub.w	r4, sl, r1
 800eb38:	b2a4      	uxth	r4, r4
 800eb3a:	b29b      	uxth	r3, r3
 800eb3c:	b225      	sxth	r5, r4
 800eb3e:	b219      	sxth	r1, r3
 800eb40:	eba2 020e 	sub.w	r2, r2, lr
 800eb44:	eba9 0000 	sub.w	r0, r9, r0
 800eb48:	436a      	muls	r2, r5
 800eb4a:	4348      	muls	r0, r1
 800eb4c:	4282      	cmp	r2, r0
 800eb4e:	9a02      	ldr	r2, [sp, #8]
 800eb50:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800eb54:	445a      	add	r2, fp
 800eb56:	dc06      	bgt.n	800eb66 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 800eb58:	9b07      	ldr	r3, [sp, #28]
 800eb5a:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 800eb5e:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 800eb62:	44a4      	add	ip, r4
 800eb64:	e75e      	b.n	800ea24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 800eb66:	9904      	ldr	r1, [sp, #16]
 800eb68:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 800eb6c:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 800eb70:	4433      	add	r3, r6
 800eb72:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800eb76:	e5dd      	b.n	800e734 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 800eb78:	9f06      	ldr	r7, [sp, #24]
 800eb7a:	9b04      	ldr	r3, [sp, #16]
 800eb7c:	1bc9      	subs	r1, r1, r7
 800eb7e:	fa0f f78a 	sxth.w	r7, sl
 800eb82:	b289      	uxth	r1, r1
 800eb84:	429f      	cmp	r7, r3
 800eb86:	fa0f fe81 	sxth.w	lr, r1
 800eb8a:	dd23      	ble.n	800ebd4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4d8>
 800eb8c:	9a05      	ldr	r2, [sp, #20]
 800eb8e:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800eb92:	9d07      	ldr	r5, [sp, #28]
 800eb94:	ebaa 0202 	sub.w	r2, sl, r2
 800eb98:	b292      	uxth	r2, r2
 800eb9a:	eba5 0a03 	sub.w	sl, r5, r3
 800eb9e:	b214      	sxth	r4, r2
 800eba0:	eba9 0000 	sub.w	r0, r9, r0
 800eba4:	9b02      	ldr	r3, [sp, #8]
 800eba6:	fb0e f000 	mul.w	r0, lr, r0
 800ebaa:	fb04 fa0a 	mul.w	sl, r4, sl
 800ebae:	00db      	lsls	r3, r3, #3
 800ebb0:	4550      	cmp	r0, sl
 800ebb2:	445b      	add	r3, fp
 800ebb4:	db03      	blt.n	800ebbe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c2>
 800ebb6:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 800ebba:	4494      	add	ip, r2
 800ebbc:	e732      	b.n	800ea24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
 800ebbe:	9a04      	ldr	r2, [sp, #16]
 800ebc0:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 800ebc4:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 800ebc8:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 800ebcc:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 800ebd0:	4431      	add	r1, r6
 800ebd2:	e75c      	b.n	800ea8e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x392>
 800ebd4:	9b08      	ldr	r3, [sp, #32]
 800ebd6:	eba3 0308 	sub.w	r3, r3, r8
 800ebda:	b29b      	uxth	r3, r3
 800ebdc:	2d06      	cmp	r5, #6
 800ebde:	b218      	sxth	r0, r3
 800ebe0:	d813      	bhi.n	800ec0a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50e>
 800ebe2:	9b07      	ldr	r3, [sp, #28]
 800ebe4:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 800ebe8:	1c6b      	adds	r3, r5, #1
 800ebea:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 800ebee:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 800ebf2:	9b01      	ldr	r3, [sp, #4]
 800ebf4:	9901      	ldr	r1, [sp, #4]
 800ebf6:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800ebfa:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 800ebfe:	805a      	strh	r2, [r3, #2]
 800ec00:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800ec02:	809a      	strh	r2, [r3, #4]
 800ec04:	f8a3 e006 	strh.w	lr, [r3, #6]
 800ec08:	e75f      	b.n	800eaca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
 800ec0a:	9c02      	ldr	r4, [sp, #8]
 800ec0c:	4570      	cmp	r0, lr
 800ec0e:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800ec12:	db0d      	blt.n	800ec30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x534>
 800ec14:	4431      	add	r1, r6
 800ec16:	9b06      	ldr	r3, [sp, #24]
 800ec18:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 800ec1c:	b289      	uxth	r1, r1
 800ec1e:	445c      	add	r4, fp
 800ec20:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 800ec24:	4419      	add	r1, r3
 800ec26:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 800ec2a:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 800ec2e:	e581      	b.n	800e734 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 800ec30:	445c      	add	r4, fp
 800ec32:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 800ec36:	e79b      	b.n	800eb70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x474>
 800ec38:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 800ec3c:	1e65      	subs	r5, r4, #1
 800ec3e:	b2ad      	uxth	r5, r5
 800ec40:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 800ec44:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 800ec48:	42b5      	cmp	r5, r6
 800ec4a:	d044      	beq.n	800ecd6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5da>
 800ec4c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 800ec50:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 800ec54:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 800ec58:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 800ec5c:	4282      	cmp	r2, r0
 800ec5e:	d11f      	bne.n	800eca0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
 800ec60:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 800ec64:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 800ec68:	459c      	cmp	ip, r3
 800ec6a:	d119      	bne.n	800eca0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
 800ec6c:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 800ec70:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 800ec74:	19d8      	adds	r0, r3, r7
 800ec76:	b200      	sxth	r0, r0
 800ec78:	4288      	cmp	r0, r1
 800ec7a:	d109      	bne.n	800ec90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 800ec7c:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 800ec80:	4413      	add	r3, r2
 800ec82:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 800ec86:	4629      	mov	r1, r5
 800ec88:	9801      	ldr	r0, [sp, #4]
 800ec8a:	f7ff fd23 	bl	800e6d4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800ec8e:	e003      	b.n	800ec98 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 800ec90:	4411      	add	r1, r2
 800ec92:	b209      	sxth	r1, r1
 800ec94:	42b9      	cmp	r1, r7
 800ec96:	d0f3      	beq.n	800ec80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 800ec98:	3d01      	subs	r5, #1
 800ec9a:	b2ad      	uxth	r5, r5
 800ec9c:	3c08      	subs	r4, #8
 800ec9e:	e7d3      	b.n	800ec48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54c>
 800eca0:	42b9      	cmp	r1, r7
 800eca2:	d1f9      	bne.n	800ec98 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 800eca4:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 800eca8:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800ecac:	4299      	cmp	r1, r3
 800ecae:	d1f3      	bne.n	800ec98 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 800ecb0:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 800ecb4:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 800ecb8:	181f      	adds	r7, r3, r0
 800ecba:	b23f      	sxth	r7, r7
 800ecbc:	42ba      	cmp	r2, r7
 800ecbe:	d105      	bne.n	800eccc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5d0>
 800ecc0:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 800ecc4:	440b      	add	r3, r1
 800ecc6:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800ecca:	e7dc      	b.n	800ec86 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58a>
 800eccc:	440a      	add	r2, r1
 800ecce:	b212      	sxth	r2, r2
 800ecd0:	4290      	cmp	r0, r2
 800ecd2:	d1e1      	bne.n	800ec98 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
 800ecd4:	e7f6      	b.n	800ecc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c8>
 800ecd6:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 800ecda:	2e07      	cmp	r6, #7
 800ecdc:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 800ece0:	d812      	bhi.n	800ed08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x60c>
 800ece2:	1c75      	adds	r5, r6, #1
 800ece4:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 800ece8:	9d01      	ldr	r5, [sp, #4]
 800ecea:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 800ecee:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 800ecf2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 800ecf6:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 800ecfa:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 800ecfe:	442c      	add	r4, r5
 800ed00:	8061      	strh	r1, [r4, #2]
 800ed02:	80a2      	strh	r2, [r4, #4]
 800ed04:	80e3      	strh	r3, [r4, #6]
 800ed06:	e57f      	b.n	800e808 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
 800ed08:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 800ed0c:	3e01      	subs	r6, #1
 800ed0e:	445c      	add	r4, fp
 800ed10:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 800ed14:	f04f 37ff 	mov.w	r7, #4294967295
 800ed18:	2500      	movs	r5, #0
 800ed1a:	9305      	str	r3, [sp, #20]
 800ed1c:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 800ed20:	9302      	str	r3, [sp, #8]
 800ed22:	1e72      	subs	r2, r6, #1
 800ed24:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 800ed28:	9304      	str	r3, [sp, #16]
 800ed2a:	4691      	mov	r9, r2
 800ed2c:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 800ed30:	f1b9 3fff 	cmp.w	r9, #4294967295
 800ed34:	bf14      	ite	ne
 800ed36:	9905      	ldrne	r1, [sp, #20]
 800ed38:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 800ed3c:	6818      	ldr	r0, [r3, #0]
 800ed3e:	9207      	str	r2, [sp, #28]
 800ed40:	bf18      	it	ne
 800ed42:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 800ed46:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800ed4a:	f8be 1006 	ldrh.w	r1, [lr, #6]
 800ed4e:	f8be 8004 	ldrh.w	r8, [lr, #4]
 800ed52:	9306      	str	r3, [sp, #24]
 800ed54:	fb18 f801 	smulbb	r8, r8, r1
 800ed58:	6859      	ldr	r1, [r3, #4]
 800ed5a:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800ed5e:	4671      	mov	r1, lr
 800ed60:	a80c      	add	r0, sp, #48	@ 0x30
 800ed62:	f7ff fb65 	bl	800e430 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800ed66:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 800ed6a:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 800ed6e:	9b04      	ldr	r3, [sp, #16]
 800ed70:	9a02      	ldr	r2, [sp, #8]
 800ed72:	fb10 f001 	smulbb	r0, r0, r1
 800ed76:	fb02 8803 	mla	r8, r2, r3, r8
 800ed7a:	eba0 0108 	sub.w	r1, r0, r8
 800ed7e:	f04f 0c08 	mov.w	ip, #8
 800ed82:	fb90 f0fc 	sdiv	r0, r0, ip
 800ed86:	4288      	cmp	r0, r1
 800ed88:	dc20      	bgt.n	800edcc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d0>
 800ed8a:	4551      	cmp	r1, sl
 800ed8c:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800ed90:	da03      	bge.n	800ed9a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x69e>
 800ed92:	b1d9      	cbz	r1, 800edcc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d0>
 800ed94:	468a      	mov	sl, r1
 800ed96:	464f      	mov	r7, r9
 800ed98:	4635      	mov	r5, r6
 800ed9a:	f109 39ff 	add.w	r9, r9, #4294967295
 800ed9e:	f119 0f02 	cmn.w	r9, #2
 800eda2:	d1c5      	bne.n	800ed30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x634>
 800eda4:	4616      	mov	r6, r2
 800eda6:	3201      	adds	r2, #1
 800eda8:	f1a4 0408 	sub.w	r4, r4, #8
 800edac:	d1b6      	bne.n	800ed1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x620>
 800edae:	9b01      	ldr	r3, [sp, #4]
 800edb0:	b2ac      	uxth	r4, r5
 800edb2:	00ed      	lsls	r5, r5, #3
 800edb4:	1958      	adds	r0, r3, r5
 800edb6:	1c7b      	adds	r3, r7, #1
 800edb8:	d10b      	bne.n	800edd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d6>
 800edba:	4601      	mov	r1, r0
 800edbc:	9803      	ldr	r0, [sp, #12]
 800edbe:	f7ff fb37 	bl	800e430 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800edc2:	4621      	mov	r1, r4
 800edc4:	9801      	ldr	r0, [sp, #4]
 800edc6:	f7ff fc85 	bl	800e6d4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800edca:	e4b3      	b.n	800e734 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
 800edcc:	464f      	mov	r7, r9
 800edce:	4635      	mov	r5, r6
 800edd0:	e7ed      	b.n	800edae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b2>
 800edd2:	9b01      	ldr	r3, [sp, #4]
 800edd4:	00ff      	lsls	r7, r7, #3
 800edd6:	19d9      	adds	r1, r3, r7
 800edd8:	f7ff fb2a 	bl	800e430 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800eddc:	9b03      	ldr	r3, [sp, #12]
 800edde:	cb03      	ldmia	r3!, {r0, r1}
 800ede0:	445f      	add	r7, fp
 800ede2:	445d      	add	r5, fp
 800ede4:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 800ede8:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 800edec:	f855 0fac 	ldr.w	r0, [r5, #172]!
 800edf0:	9b03      	ldr	r3, [sp, #12]
 800edf2:	6869      	ldr	r1, [r5, #4]
 800edf4:	c303      	stmia	r3!, {r0, r1}
 800edf6:	e7e4      	b.n	800edc2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>

0800edf8 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 800edf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800edfc:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 800ee00:	b0a1      	sub	sp, #132	@ 0x84
 800ee02:	4604      	mov	r4, r0
 800ee04:	4630      	mov	r0, r6
 800ee06:	f7fa ff72 	bl	8009cee <_ZNK8touchgfx4Rect7isEmptyEv>
 800ee0a:	4605      	mov	r5, r0
 800ee0c:	b948      	cbnz	r0, 800ee22 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 800ee0e:	6823      	ldr	r3, [r4, #0]
 800ee10:	e896 0006 	ldmia.w	r6, {r1, r2}
 800ee14:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800ee16:	4620      	mov	r0, r4
 800ee18:	4798      	blx	r3
 800ee1a:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 800ee1e:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 800ee22:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800ee26:	2b00      	cmp	r3, #0
 800ee28:	d149      	bne.n	800eebe <_ZN8touchgfx11Application15drawCachedAreasEv+0xc6>
 800ee2a:	4bb1      	ldr	r3, [pc, #708]	@ (800f0f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f8>)
 800ee2c:	681b      	ldr	r3, [r3, #0]
 800ee2e:	f893 7048 	ldrb.w	r7, [r3, #72]	@ 0x48
 800ee32:	1ebb      	subs	r3, r7, #2
 800ee34:	425f      	negs	r7, r3
 800ee36:	415f      	adcs	r7, r3
 800ee38:	4bae      	ldr	r3, [pc, #696]	@ (800f0f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2fc>)
 800ee3a:	681b      	ldr	r3, [r3, #0]
 800ee3c:	2b00      	cmp	r3, #0
 800ee3e:	d040      	beq.n	800eec2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 800ee40:	4dad      	ldr	r5, [pc, #692]	@ (800f0f8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x300>)
 800ee42:	4628      	mov	r0, r5
 800ee44:	f7fa ff53 	bl	8009cee <_ZNK8touchgfx4Rect7isEmptyEv>
 800ee48:	4606      	mov	r6, r0
 800ee4a:	2800      	cmp	r0, #0
 800ee4c:	d139      	bne.n	800eec2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
 800ee4e:	4628      	mov	r0, r5
 800ee50:	f7ff f982 	bl	800e158 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800ee54:	6823      	ldr	r3, [r4, #0]
 800ee56:	6829      	ldr	r1, [r5, #0]
 800ee58:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800ee5a:	686a      	ldr	r2, [r5, #4]
 800ee5c:	4620      	mov	r0, r4
 800ee5e:	4798      	blx	r3
 800ee60:	802e      	strh	r6, [r5, #0]
 800ee62:	806e      	strh	r6, [r5, #2]
 800ee64:	80ae      	strh	r6, [r5, #4]
 800ee66:	80ee      	strh	r6, [r5, #6]
 800ee68:	af0f      	add	r7, sp, #60	@ 0x3c
 800ee6a:	4ea4      	ldr	r6, [pc, #656]	@ (800f0fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x304>)
 800ee6c:	4638      	mov	r0, r7
 800ee6e:	f7ff fbd9 	bl	800e624 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800ee72:	8835      	ldrh	r5, [r6, #0]
 800ee74:	f8b4 c0ec 	ldrh.w	ip, [r4, #236]	@ 0xec
 800ee78:	462b      	mov	r3, r5
 800ee7a:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 800ee7e:	4563      	cmp	r3, ip
 800ee80:	d224      	bcs.n	800eecc <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
 800ee82:	f8bd 107c 	ldrh.w	r1, [sp, #124]	@ 0x7c
 800ee86:	2907      	cmp	r1, #7
 800ee88:	d816      	bhi.n	800eeb8 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 800ee8a:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 800ee8e:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 800ee92:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 800ee96:	f9b2 8004 	ldrsh.w	r8, [r2, #4]
 800ee9a:	f9b2 e006 	ldrsh.w	lr, [r2, #6]
 800ee9e:	1c4a      	adds	r2, r1, #1
 800eea0:	f8ad 207c 	strh.w	r2, [sp, #124]	@ 0x7c
 800eea4:	eb07 02c1 	add.w	r2, r7, r1, lsl #3
 800eea8:	f827 9031 	strh.w	r9, [r7, r1, lsl #3]
 800eeac:	f8a2 a002 	strh.w	sl, [r2, #2]
 800eeb0:	f8a2 8004 	strh.w	r8, [r2, #4]
 800eeb4:	f8a2 e006 	strh.w	lr, [r2, #6]
 800eeb8:	3301      	adds	r3, #1
 800eeba:	b29b      	uxth	r3, r3
 800eebc:	e7df      	b.n	800ee7e <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
 800eebe:	2701      	movs	r7, #1
 800eec0:	e7ba      	b.n	800ee38 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40>
 800eec2:	2f00      	cmp	r7, #0
 800eec4:	d1d0      	bne.n	800ee68 <_ZN8touchgfx11Application15drawCachedAreasEv+0x70>
 800eec6:	b021      	add	sp, #132	@ 0x84
 800eec8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800eecc:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 800eed0:	42ab      	cmp	r3, r5
 800eed2:	d90c      	bls.n	800eeee <_ZN8touchgfx11Application15drawCachedAreasEv+0xf6>
 800eed4:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 800eed8:	6822      	ldr	r2, [r4, #0]
 800eeda:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 800eede:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 800eee0:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 800eee4:	4620      	mov	r0, r4
 800eee6:	3501      	adds	r5, #1
 800eee8:	47b8      	blx	r7
 800eeea:	b2ad      	uxth	r5, r5
 800eeec:	e7ee      	b.n	800eecc <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
 800eeee:	4d80      	ldr	r5, [pc, #512]	@ (800f0f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f8>)
 800eef0:	6828      	ldr	r0, [r5, #0]
 800eef2:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 800eef6:	2b01      	cmp	r3, #1
 800eef8:	f040 813b 	bne.w	800f172 <_ZN8touchgfx11Application15drawCachedAreasEv+0x37a>
 800eefc:	4a80      	ldr	r2, [pc, #512]	@ (800f100 <_ZN8touchgfx11Application15drawCachedAreasEv+0x308>)
 800eefe:	8833      	ldrh	r3, [r6, #0]
 800ef00:	7812      	ldrb	r2, [r2, #0]
 800ef02:	f8b4 00ec 	ldrh.w	r0, [r4, #236]	@ 0xec
 800ef06:	2a01      	cmp	r2, #1
 800ef08:	d014      	beq.n	800ef34 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 800ef0a:	eb04 02c3 	add.w	r2, r4, r3, lsl #3
 800ef0e:	32ae      	adds	r2, #174	@ 0xae
 800ef10:	f04f 0900 	mov.w	r9, #0
 800ef14:	4283      	cmp	r3, r0
 800ef16:	f102 0208 	add.w	r2, r2, #8
 800ef1a:	f280 8082 	bge.w	800f022 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22a>
 800ef1e:	f832 1c04 	ldrh.w	r1, [r2, #-4]
 800ef22:	f832 7c08 	ldrh.w	r7, [r2, #-8]
 800ef26:	4439      	add	r1, r7
 800ef28:	b209      	sxth	r1, r1
 800ef2a:	4589      	cmp	r9, r1
 800ef2c:	bfb8      	it	lt
 800ef2e:	4689      	movlt	r9, r1
 800ef30:	3301      	adds	r3, #1
 800ef32:	e7ef      	b.n	800ef14 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11c>
 800ef34:	4f73      	ldr	r7, [pc, #460]	@ (800f104 <_ZN8touchgfx11Application15drawCachedAreasEv+0x30c>)
 800ef36:	883a      	ldrh	r2, [r7, #0]
 800ef38:	4693      	mov	fp, r2
 800ef3a:	4283      	cmp	r3, r0
 800ef3c:	da08      	bge.n	800ef50 <_ZN8touchgfx11Application15drawCachedAreasEv+0x158>
 800ef3e:	eb04 01c3 	add.w	r1, r4, r3, lsl #3
 800ef42:	3301      	adds	r3, #1
 800ef44:	f9b1 10ac 	ldrsh.w	r1, [r1, #172]	@ 0xac
 800ef48:	458b      	cmp	fp, r1
 800ef4a:	bfa8      	it	ge
 800ef4c:	468b      	movge	fp, r1
 800ef4e:	e7f4      	b.n	800ef3a <_ZN8touchgfx11Application15drawCachedAreasEv+0x142>
 800ef50:	2300      	movs	r3, #0
 800ef52:	2a0f      	cmp	r2, #15
 800ef54:	f8df 91b0 	ldr.w	r9, [pc, #432]	@ 800f108 <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>
 800ef58:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 800ef5c:	bf8c      	ite	hi
 800ef5e:	ea4f 08d2 	movhi.w	r8, r2, lsr #3
 800ef62:	f04f 0801 	movls.w	r8, #1
 800ef66:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800ef6a:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 800ef6e:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 800ef72:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 800ef76:	6828      	ldr	r0, [r5, #0]
 800ef78:	455b      	cmp	r3, fp
 800ef7a:	f340 80c7 	ble.w	800f10c <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>
 800ef7e:	6803      	ldr	r3, [r0, #0]
 800ef80:	f8b7 a000 	ldrh.w	sl, [r7]
 800ef84:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 800ef88:	4798      	blx	r3
 800ef8a:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 800ef8e:	682b      	ldr	r3, [r5, #0]
 800ef90:	ebaa 0000 	sub.w	r0, sl, r0
 800ef94:	b280      	uxth	r0, r0
 800ef96:	ebac 0e08 	sub.w	lr, ip, r8
 800ef9a:	4570      	cmp	r0, lr
 800ef9c:	f893 107c 	ldrb.w	r1, [r3, #124]	@ 0x7c
 800efa0:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
 800efa4:	dd05      	ble.n	800efb2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1ba>
 800efa6:	4558      	cmp	r0, fp
 800efa8:	dd03      	ble.n	800efb2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1ba>
 800efaa:	b901      	cbnz	r1, 800efae <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b6>
 800efac:	b392      	cbz	r2, 800f014 <_ZN8touchgfx11Application15drawCachedAreasEv+0x21c>
 800efae:	4658      	mov	r0, fp
 800efb0:	e006      	b.n	800efc0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1c8>
 800efb2:	2900      	cmp	r1, #0
 800efb4:	d1fb      	bne.n	800efae <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b6>
 800efb6:	2a00      	cmp	r2, #0
 800efb8:	d1f9      	bne.n	800efae <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b6>
 800efba:	4558      	cmp	r0, fp
 800efbc:	bfb8      	it	lt
 800efbe:	4658      	movlt	r0, fp
 800efc0:	f9b9 3000 	ldrsh.w	r3, [r9]
 800efc4:	f8ad 002c 	strh.w	r0, [sp, #44]	@ 0x2c
 800efc8:	2200      	movs	r2, #0
 800efca:	ebac 0000 	sub.w	r0, ip, r0
 800efce:	f8b6 a000 	ldrh.w	sl, [r6]
 800efd2:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 800efd6:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 800efda:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 800efde:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800efe2:	4553      	cmp	r3, sl
 800efe4:	ddc5      	ble.n	800ef72 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 800efe6:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 800efea:	ab0d      	add	r3, sp, #52	@ 0x34
 800efec:	f852 0fac 	ldr.w	r0, [r2, #172]!
 800eff0:	6851      	ldr	r1, [r2, #4]
 800eff2:	c303      	stmia	r3!, {r0, r1}
 800eff4:	a80d      	add	r0, sp, #52	@ 0x34
 800eff6:	a90b      	add	r1, sp, #44	@ 0x2c
 800eff8:	f7fa fe36 	bl	8009c68 <_ZN8touchgfx4RectaNERKS0_>
 800effc:	a80d      	add	r0, sp, #52	@ 0x34
 800effe:	f7fa fe76 	bl	8009cee <_ZNK8touchgfx4Rect7isEmptyEv>
 800f002:	b920      	cbnz	r0, 800f00e <_ZN8touchgfx11Application15drawCachedAreasEv+0x216>
 800f004:	6823      	ldr	r3, [r4, #0]
 800f006:	a90d      	add	r1, sp, #52	@ 0x34
 800f008:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800f00a:	4620      	mov	r0, r4
 800f00c:	4798      	blx	r3
 800f00e:	f10a 0a01 	add.w	sl, sl, #1
 800f012:	e7e4      	b.n	800efde <_ZN8touchgfx11Application15drawCachedAreasEv+0x1e6>
 800f014:	681a      	ldr	r2, [r3, #0]
 800f016:	2101      	movs	r1, #1
 800f018:	f8d2 20a4 	ldr.w	r2, [r2, #164]	@ 0xa4
 800f01c:	4618      	mov	r0, r3
 800f01e:	4790      	blx	r2
 800f020:	e7a7      	b.n	800ef72 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 800f022:	4b39      	ldr	r3, [pc, #228]	@ (800f108 <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>)
 800f024:	f8df 80dc 	ldr.w	r8, [pc, #220]	@ 800f104 <_ZN8touchgfx11Application15drawCachedAreasEv+0x30c>
 800f028:	881f      	ldrh	r7, [r3, #0]
 800f02a:	2300      	movs	r3, #0
 800f02c:	e9cd 330b 	strd	r3, r3, [sp, #44]	@ 0x2c
 800f030:	2f0f      	cmp	r7, #15
 800f032:	bf8c      	ite	hi
 800f034:	08ff      	lsrhi	r7, r7, #3
 800f036:	2701      	movls	r7, #1
 800f038:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 800f03c:	f8bd 202e 	ldrh.w	r2, [sp, #46]	@ 0x2e
 800f040:	6828      	ldr	r0, [r5, #0]
 800f042:	4413      	add	r3, r2
 800f044:	b21b      	sxth	r3, r3
 800f046:	454b      	cmp	r3, r9
 800f048:	da60      	bge.n	800f10c <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>
 800f04a:	6803      	ldr	r3, [r0, #0]
 800f04c:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 800f050:	4798      	blx	r3
 800f052:	f8bd e02e 	ldrh.w	lr, [sp, #46]	@ 0x2e
 800f056:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 800f05a:	682a      	ldr	r2, [r5, #0]
 800f05c:	4473      	add	r3, lr
 800f05e:	b21b      	sxth	r3, r3
 800f060:	eb03 0e07 	add.w	lr, r3, r7
 800f064:	4570      	cmp	r0, lr
 800f066:	f892 c07c 	ldrb.w	ip, [r2, #124]	@ 0x7c
 800f06a:	f892 106a 	ldrb.w	r1, [r2, #106]	@ 0x6a
 800f06e:	da0d      	bge.n	800f08c <_ZN8touchgfx11Application15drawCachedAreasEv+0x294>
 800f070:	4548      	cmp	r0, r9
 800f072:	da0b      	bge.n	800f08c <_ZN8touchgfx11Application15drawCachedAreasEv+0x294>
 800f074:	f1bc 0f00 	cmp.w	ip, #0
 800f078:	d138      	bne.n	800f0ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 800f07a:	2900      	cmp	r1, #0
 800f07c:	d136      	bne.n	800f0ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 800f07e:	6813      	ldr	r3, [r2, #0]
 800f080:	2101      	movs	r1, #1
 800f082:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 800f086:	4610      	mov	r0, r2
 800f088:	4798      	blx	r3
 800f08a:	e7d5      	b.n	800f038 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 800f08c:	f1bc 0f00 	cmp.w	ip, #0
 800f090:	d12c      	bne.n	800f0ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 800f092:	bb59      	cbnz	r1, 800f0ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f4>
 800f094:	4548      	cmp	r0, r9
 800f096:	bfa8      	it	ge
 800f098:	4648      	movge	r0, r9
 800f09a:	f9b8 2000 	ldrsh.w	r2, [r8]
 800f09e:	f8b6 a000 	ldrh.w	sl, [r6]
 800f0a2:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800f0a6:	2100      	movs	r1, #0
 800f0a8:	1ac0      	subs	r0, r0, r3
 800f0aa:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 800f0ae:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 800f0b2:	f8ad 0032 	strh.w	r0, [sp, #50]	@ 0x32
 800f0b6:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800f0ba:	4553      	cmp	r3, sl
 800f0bc:	ddbc      	ble.n	800f038 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 800f0be:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 800f0c2:	ab0d      	add	r3, sp, #52	@ 0x34
 800f0c4:	f852 0fac 	ldr.w	r0, [r2, #172]!
 800f0c8:	6851      	ldr	r1, [r2, #4]
 800f0ca:	c303      	stmia	r3!, {r0, r1}
 800f0cc:	a80d      	add	r0, sp, #52	@ 0x34
 800f0ce:	a90b      	add	r1, sp, #44	@ 0x2c
 800f0d0:	f7fa fdca 	bl	8009c68 <_ZN8touchgfx4RectaNERKS0_>
 800f0d4:	a80d      	add	r0, sp, #52	@ 0x34
 800f0d6:	f7fa fe0a 	bl	8009cee <_ZNK8touchgfx4Rect7isEmptyEv>
 800f0da:	b920      	cbnz	r0, 800f0e6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ee>
 800f0dc:	6823      	ldr	r3, [r4, #0]
 800f0de:	a90d      	add	r1, sp, #52	@ 0x34
 800f0e0:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800f0e2:	4620      	mov	r0, r4
 800f0e4:	4798      	blx	r3
 800f0e6:	f10a 0a01 	add.w	sl, sl, #1
 800f0ea:	e7e4      	b.n	800f0b6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2be>
 800f0ec:	4648      	mov	r0, r9
 800f0ee:	e7d4      	b.n	800f09a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a2>
 800f0f0:	20013090 	.word	0x20013090
 800f0f4:	200130d0 	.word	0x200130d0
 800f0f8:	200130dc 	.word	0x200130dc
 800f0fc:	20000194 	.word	0x20000194
 800f100:	20013086 	.word	0x20013086
 800f104:	20013082 	.word	0x20013082
 800f108:	20013084 	.word	0x20013084
 800f10c:	6828      	ldr	r0, [r5, #0]
 800f10e:	6803      	ldr	r3, [r0, #0]
 800f110:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800f112:	4798      	blx	r3
 800f114:	4ba5      	ldr	r3, [pc, #660]	@ (800f3ac <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b4>)
 800f116:	781b      	ldrb	r3, [r3, #0]
 800f118:	2b00      	cmp	r3, #0
 800f11a:	f43f aed4 	beq.w	800eec6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
 800f11e:	2300      	movs	r3, #0
 800f120:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 800f124:	4ba2      	ldr	r3, [pc, #648]	@ (800f3b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b8>)
 800f126:	f8bd 607c 	ldrh.w	r6, [sp, #124]	@ 0x7c
 800f12a:	881b      	ldrh	r3, [r3, #0]
 800f12c:	a80f      	add	r0, sp, #60	@ 0x3c
 800f12e:	f104 05ee 	add.w	r5, r4, #238	@ 0xee
 800f132:	42b3      	cmp	r3, r6
 800f134:	f4bf aec7 	bcs.w	800eec6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
 800f138:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 800f13c:	2907      	cmp	r1, #7
 800f13e:	d815      	bhi.n	800f16c <_ZN8touchgfx11Application15drawCachedAreasEv+0x374>
 800f140:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 800f144:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
 800f148:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
 800f14c:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
 800f150:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
 800f154:	1c4a      	adds	r2, r1, #1
 800f156:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 800f15a:	eb05 02c1 	add.w	r2, r5, r1, lsl #3
 800f15e:	f825 8031 	strh.w	r8, [r5, r1, lsl #3]
 800f162:	f8a2 e002 	strh.w	lr, [r2, #2]
 800f166:	f8a2 c004 	strh.w	ip, [r2, #4]
 800f16a:	80d7      	strh	r7, [r2, #6]
 800f16c:	3301      	adds	r3, #1
 800f16e:	b29b      	uxth	r3, r3
 800f170:	e7df      	b.n	800f132 <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 800f172:	2b02      	cmp	r3, #2
 800f174:	f040 80d1 	bne.w	800f31a <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 800f178:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800f17c:	9308      	str	r3, [sp, #32]
 800f17e:	f8b0 307e 	ldrh.w	r3, [r0, #126]	@ 0x7e
 800f182:	9307      	str	r3, [sp, #28]
 800f184:	6803      	ldr	r3, [r0, #0]
 800f186:	f890 b07d 	ldrb.w	fp, [r0, #125]	@ 0x7d
 800f18a:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 800f18e:	4798      	blx	r3
 800f190:	4b88      	ldr	r3, [pc, #544]	@ (800f3b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5bc>)
 800f192:	881b      	ldrh	r3, [r3, #0]
 800f194:	9302      	str	r3, [sp, #8]
 800f196:	4b88      	ldr	r3, [pc, #544]	@ (800f3b8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c0>)
 800f198:	881e      	ldrh	r6, [r3, #0]
 800f19a:	4b88      	ldr	r3, [pc, #544]	@ (800f3bc <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 800f19c:	781b      	ldrb	r3, [r3, #0]
 800f19e:	f10b 37ff 	add.w	r7, fp, #4294967295
 800f1a2:	2b01      	cmp	r3, #1
 800f1a4:	bf1c      	itt	ne
 800f1a6:	9b02      	ldrne	r3, [sp, #8]
 800f1a8:	9602      	strne	r6, [sp, #8]
 800f1aa:	b2bf      	uxth	r7, r7
 800f1ac:	fa0f f887 	sxth.w	r8, r7
 800f1b0:	4682      	mov	sl, r0
 800f1b2:	f04f 0000 	mov.w	r0, #0
 800f1b6:	bf18      	it	ne
 800f1b8:	461e      	movne	r6, r3
 800f1ba:	f7f1 fb4d 	bl	8000858 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800f1be:	fb96 fbfb 	sdiv	fp, r6, fp
 800f1c2:	fb0b f808 	mul.w	r8, fp, r8
 800f1c6:	45c2      	cmp	sl, r8
 800f1c8:	da0c      	bge.n	800f1e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ec>
 800f1ca:	6828      	ldr	r0, [r5, #0]
 800f1cc:	6803      	ldr	r3, [r0, #0]
 800f1ce:	210a      	movs	r1, #10
 800f1d0:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 800f1d4:	4798      	blx	r3
 800f1d6:	6828      	ldr	r0, [r5, #0]
 800f1d8:	6803      	ldr	r3, [r0, #0]
 800f1da:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 800f1de:	4798      	blx	r3
 800f1e0:	4682      	mov	sl, r0
 800f1e2:	e7f0      	b.n	800f1c6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ce>
 800f1e4:	2000      	movs	r0, #0
 800f1e6:	f7f1 fb61 	bl	80008ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800f1ea:	fa1f f38b 	uxth.w	r3, fp
 800f1ee:	fb17 f703 	smulbb	r7, r7, r3
 800f1f2:	9304      	str	r3, [sp, #16]
 800f1f4:	b2bb      	uxth	r3, r7
 800f1f6:	9305      	str	r3, [sp, #20]
 800f1f8:	f04f 0800 	mov.w	r8, #0
 800f1fc:	0973      	lsrs	r3, r6, #5
 800f1fe:	4f70      	ldr	r7, [pc, #448]	@ (800f3c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c8>)
 800f200:	9306      	str	r3, [sp, #24]
 800f202:	4645      	mov	r5, r8
 800f204:	42b5      	cmp	r5, r6
 800f206:	d085      	beq.n	800f114 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 800f208:	6838      	ldr	r0, [r7, #0]
 800f20a:	6803      	ldr	r3, [r0, #0]
 800f20c:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 800f210:	4798      	blx	r3
 800f212:	4582      	cmp	sl, r0
 800f214:	4681      	mov	r9, r0
 800f216:	d907      	bls.n	800f228 <_ZN8touchgfx11Application15drawCachedAreasEv+0x430>
 800f218:	f1b8 0f00 	cmp.w	r8, #0
 800f21c:	d007      	beq.n	800f22e <_ZN8touchgfx11Application15drawCachedAreasEv+0x436>
 800f21e:	6838      	ldr	r0, [r7, #0]
 800f220:	6803      	ldr	r3, [r0, #0]
 800f222:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
 800f226:	e774      	b.n	800f112 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31a>
 800f228:	f1b8 0f00 	cmp.w	r8, #0
 800f22c:	d003      	beq.n	800f236 <_ZN8touchgfx11Application15drawCachedAreasEv+0x43e>
 800f22e:	454d      	cmp	r5, r9
 800f230:	d3f5      	bcc.n	800f21e <_ZN8touchgfx11Application15drawCachedAreasEv+0x426>
 800f232:	f04f 0801 	mov.w	r8, #1
 800f236:	9a04      	ldr	r2, [sp, #16]
 800f238:	fb95 f3fb 	sdiv	r3, r5, fp
 800f23c:	9303      	str	r3, [sp, #12]
 800f23e:	3301      	adds	r3, #1
 800f240:	fb13 f302 	smulbb	r3, r3, r2
 800f244:	b299      	uxth	r1, r3
 800f246:	f1b8 0f00 	cmp.w	r8, #0
 800f24a:	d04e      	beq.n	800f2ea <_ZN8touchgfx11Application15drawCachedAreasEv+0x4f2>
 800f24c:	eb09 030b 	add.w	r3, r9, fp
 800f250:	42b3      	cmp	r3, r6
 800f252:	bfa8      	it	ge
 800f254:	4633      	movge	r3, r6
 800f256:	9807      	ldr	r0, [sp, #28]
 800f258:	b29b      	uxth	r3, r3
 800f25a:	428b      	cmp	r3, r1
 800f25c:	bf94      	ite	ls
 800f25e:	ebc5 0203 	rsbls	r2, r5, r3
 800f262:	ebc5 0201 	rsbhi	r2, r5, r1
 800f266:	4282      	cmp	r2, r0
 800f268:	bfa8      	it	ge
 800f26a:	4602      	movge	r2, r0
 800f26c:	9808      	ldr	r0, [sp, #32]
 800f26e:	fa1f fa82 	uxth.w	sl, r2
 800f272:	4582      	cmp	sl, r0
 800f274:	d205      	bcs.n	800f282 <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
 800f276:	fa15 f082 	uxtah	r0, r5, r2
 800f27a:	4286      	cmp	r6, r0
 800f27c:	d001      	beq.n	800f282 <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
 800f27e:	4299      	cmp	r1, r3
 800f280:	d240      	bcs.n	800f304 <_ZN8touchgfx11Application15drawCachedAreasEv+0x50c>
 800f282:	2001      	movs	r0, #1
 800f284:	9209      	str	r2, [sp, #36]	@ 0x24
 800f286:	f7f1 fae7 	bl	8000858 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800f28a:	6838      	ldr	r0, [r7, #0]
 800f28c:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
 800f290:	6803      	ldr	r3, [r0, #0]
 800f292:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 800f296:	4798      	blx	r3
 800f298:	4b48      	ldr	r3, [pc, #288]	@ (800f3bc <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 800f29a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800f29c:	781b      	ldrb	r3, [r3, #0]
 800f29e:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 800f2a2:	2b01      	cmp	r3, #1
 800f2a4:	b212      	sxth	r2, r2
 800f2a6:	f04f 0000 	mov.w	r0, #0
 800f2aa:	d122      	bne.n	800f2f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4fa>
 800f2ac:	1b73      	subs	r3, r6, r5
 800f2ae:	eba3 030a 	sub.w	r3, r3, sl
 800f2b2:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 800f2b6:	f8ad 0036 	strh.w	r0, [sp, #54]	@ 0x36
 800f2ba:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 800f2be:	f8ad 103a 	strh.w	r1, [sp, #58]	@ 0x3a
 800f2c2:	6823      	ldr	r3, [r4, #0]
 800f2c4:	a90d      	add	r1, sp, #52	@ 0x34
 800f2c6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800f2c8:	4620      	mov	r0, r4
 800f2ca:	4798      	blx	r3
 800f2cc:	6838      	ldr	r0, [r7, #0]
 800f2ce:	9b03      	ldr	r3, [sp, #12]
 800f2d0:	4259      	negs	r1, r3
 800f2d2:	6803      	ldr	r3, [r0, #0]
 800f2d4:	b209      	sxth	r1, r1
 800f2d6:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 800f2da:	4798      	blx	r3
 800f2dc:	4455      	add	r5, sl
 800f2de:	2001      	movs	r0, #1
 800f2e0:	b2ad      	uxth	r5, r5
 800f2e2:	f7f1 fae3 	bl	80008ac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800f2e6:	46ca      	mov	sl, r9
 800f2e8:	e78c      	b.n	800f204 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40c>
 800f2ea:	9b05      	ldr	r3, [sp, #20]
 800f2ec:	eba9 0303 	sub.w	r3, r9, r3
 800f2f0:	e7b1      	b.n	800f256 <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
 800f2f2:	f8ad 0034 	strh.w	r0, [sp, #52]	@ 0x34
 800f2f6:	f8ad 5036 	strh.w	r5, [sp, #54]	@ 0x36
 800f2fa:	f8ad 1038 	strh.w	r1, [sp, #56]	@ 0x38
 800f2fe:	f8ad 203a 	strh.w	r2, [sp, #58]	@ 0x3a
 800f302:	e7de      	b.n	800f2c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4ca>
 800f304:	6838      	ldr	r0, [r7, #0]
 800f306:	6803      	ldr	r3, [r0, #0]
 800f308:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800f30a:	4798      	blx	r3
 800f30c:	6838      	ldr	r0, [r7, #0]
 800f30e:	9906      	ldr	r1, [sp, #24]
 800f310:	6803      	ldr	r3, [r0, #0]
 800f312:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 800f316:	4798      	blx	r3
 800f318:	e7e5      	b.n	800f2e6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4ee>
 800f31a:	2b03      	cmp	r3, #3
 800f31c:	f040 8130 	bne.w	800f580 <_ZN8touchgfx11Application15drawCachedAreasEv+0x788>
 800f320:	4b26      	ldr	r3, [pc, #152]	@ (800f3bc <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
 800f322:	f9b0 9082 	ldrsh.w	r9, [r0, #130]	@ 0x82
 800f326:	781b      	ldrb	r3, [r3, #0]
 800f328:	2b01      	cmp	r3, #1
 800f32a:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 800f32e:	f000 8093 	beq.w	800f458 <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 800f332:	8832      	ldrh	r2, [r6, #0]
 800f334:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 800f338:	3201      	adds	r2, #1
 800f33a:	b292      	uxth	r2, r2
 800f33c:	2900      	cmp	r1, #0
 800f33e:	f43f aee9 	beq.w	800f114 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 800f342:	f8b4 50b2 	ldrh.w	r5, [r4, #178]	@ 0xb2
 800f346:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	@ 0xae
 800f34a:	441d      	add	r5, r3
 800f34c:	b22d      	sxth	r5, r5
 800f34e:	4694      	mov	ip, r2
 800f350:	f04f 0800 	mov.w	r8, #0
 800f354:	fa1f f38c 	uxth.w	r3, ip
 800f358:	4299      	cmp	r1, r3
 800f35a:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 800f35e:	f240 80ba 	bls.w	800f4d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6de>
 800f362:	4427      	add	r7, r4
 800f364:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 800f368:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 800f36c:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 800f370:	4283      	cmp	r3, r0
 800f372:	f340 809c 	ble.w	800f4ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b6>
 800f376:	f8be 50b2 	ldrh.w	r5, [lr, #178]	@ 0xb2
 800f37a:	4405      	add	r5, r0
 800f37c:	b22d      	sxth	r5, r5
 800f37e:	429d      	cmp	r5, r3
 800f380:	bfa8      	it	ge
 800f382:	461d      	movge	r5, r3
 800f384:	46e0      	mov	r8, ip
 800f386:	f10c 0c01 	add.w	ip, ip, #1
 800f38a:	e7e3      	b.n	800f354 <_ZN8touchgfx11Application15drawCachedAreasEv+0x55c>
 800f38c:	d10a      	bne.n	800f3a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5ac>
 800f38e:	f9b7 00b2 	ldrsh.w	r0, [r7, #178]	@ 0xb2
 800f392:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 800f396:	4562      	cmp	r2, ip
 800f398:	bfb8      	it	lt
 800f39a:	4662      	movlt	r2, ip
 800f39c:	4288      	cmp	r0, r1
 800f39e:	bfb8      	it	lt
 800f3a0:	4698      	movlt	r8, r3
 800f3a2:	e082      	b.n	800f4aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b2>
 800f3a4:	428a      	cmp	r2, r1
 800f3a6:	bfb8      	it	lt
 800f3a8:	460a      	movlt	r2, r1
 800f3aa:	e07e      	b.n	800f4aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b2>
 800f3ac:	2001308c 	.word	0x2001308c
 800f3b0:	20000194 	.word	0x20000194
 800f3b4:	20013084 	.word	0x20013084
 800f3b8:	20013082 	.word	0x20013082
 800f3bc:	20013086 	.word	0x20013086
 800f3c0:	20013090 	.word	0x20013090
 800f3c4:	19e1      	adds	r1, r4, r7
 800f3c6:	ab0d      	add	r3, sp, #52	@ 0x34
 800f3c8:	f851 0fac 	ldr.w	r0, [r1, #172]!
 800f3cc:	6849      	ldr	r1, [r1, #4]
 800f3ce:	c303      	stmia	r3!, {r0, r1}
 800f3d0:	f9bd 3038 	ldrsh.w	r3, [sp, #56]	@ 0x38
 800f3d4:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 800f3d8:	454b      	cmp	r3, r9
 800f3da:	bfb8      	it	lt
 800f3dc:	f9bd 2034 	ldrshlt.w	r2, [sp, #52]	@ 0x34
 800f3e0:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800f3e4:	440b      	add	r3, r1
 800f3e6:	1a9b      	subs	r3, r3, r2
 800f3e8:	a80d      	add	r0, sp, #52	@ 0x34
 800f3ea:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 800f3ee:	f7fe fecd 	bl	800e18c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800f3f2:	a80d      	add	r0, sp, #52	@ 0x34
 800f3f4:	f7fa fc7b 	bl	8009cee <_ZNK8touchgfx4Rect7isEmptyEv>
 800f3f8:	bb70      	cbnz	r0, 800f458 <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 800f3fa:	f9bd c03a 	ldrsh.w	ip, [sp, #58]	@ 0x3a
 800f3fe:	6828      	ldr	r0, [r5, #0]
 800f400:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800f404:	f8d0 e000 	ldr.w	lr, [r0]
 800f408:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 800f40c:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 800f410:	45cc      	cmp	ip, r9
 800f412:	bfd4      	ite	le
 800f414:	fa1f fc8c 	uxthle.w	ip, ip
 800f418:	fa1f fc89 	uxthgt.w	ip, r9
 800f41c:	f8cd c000 	str.w	ip, [sp]
 800f420:	f8de b094 	ldr.w	fp, [lr, #148]	@ 0x94
 800f424:	47d8      	blx	fp
 800f426:	4683      	mov	fp, r0
 800f428:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 800f42c:	a80d      	add	r0, sp, #52	@ 0x34
 800f42e:	f7fe fe93 	bl	800e158 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800f432:	6823      	ldr	r3, [r4, #0]
 800f434:	4427      	add	r7, r4
 800f436:	4620      	mov	r0, r4
 800f438:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800f43a:	a90d      	add	r1, sp, #52	@ 0x34
 800f43c:	4798      	blx	r3
 800f43e:	f8b7 00b0 	ldrh.w	r0, [r7, #176]	@ 0xb0
 800f442:	eba0 000b 	sub.w	r0, r0, fp
 800f446:	b200      	sxth	r0, r0
 800f448:	f8a7 00b0 	strh.w	r0, [r7, #176]	@ 0xb0
 800f44c:	b920      	cbnz	r0, 800f458 <_ZN8touchgfx11Application15drawCachedAreasEv+0x660>
 800f44e:	fa1f f188 	uxth.w	r1, r8
 800f452:	4650      	mov	r0, sl
 800f454:	f7ff f93e 	bl	800e6d4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800f458:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 800f45c:	f1bb 0f00 	cmp.w	fp, #0
 800f460:	f43f ae58 	beq.w	800f114 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 800f464:	8833      	ldrh	r3, [r6, #0]
 800f466:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 800f46a:	3301      	adds	r3, #1
 800f46c:	b29b      	uxth	r3, r3
 800f46e:	f04f 0800 	mov.w	r8, #0
 800f472:	b299      	uxth	r1, r3
 800f474:	458b      	cmp	fp, r1
 800f476:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 800f47a:	d9a3      	bls.n	800f3c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5cc>
 800f47c:	4427      	add	r7, r4
 800f47e:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 800f482:	f8b7 10b0 	ldrh.w	r1, [r7, #176]	@ 0xb0
 800f486:	f8b7 00ac 	ldrh.w	r0, [r7, #172]	@ 0xac
 800f48a:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 800f48e:	4408      	add	r0, r1
 800f490:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 800f494:	4461      	add	r1, ip
 800f496:	b200      	sxth	r0, r0
 800f498:	b209      	sxth	r1, r1
 800f49a:	4288      	cmp	r0, r1
 800f49c:	f6bf af76 	bge.w	800f38c <_ZN8touchgfx11Application15drawCachedAreasEv+0x594>
 800f4a0:	4584      	cmp	ip, r0
 800f4a2:	4662      	mov	r2, ip
 800f4a4:	4698      	mov	r8, r3
 800f4a6:	bfb8      	it	lt
 800f4a8:	4602      	movlt	r2, r0
 800f4aa:	3301      	adds	r3, #1
 800f4ac:	e7e1      	b.n	800f472 <_ZN8touchgfx11Application15drawCachedAreasEv+0x67a>
 800f4ae:	d10e      	bne.n	800f4ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x6d6>
 800f4b0:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 800f4b4:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 800f4b8:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 800f4bc:	4473      	add	r3, lr
 800f4be:	b21b      	sxth	r3, r3
 800f4c0:	429d      	cmp	r5, r3
 800f4c2:	bfa8      	it	ge
 800f4c4:	461d      	movge	r5, r3
 800f4c6:	4287      	cmp	r7, r0
 800f4c8:	bfb8      	it	lt
 800f4ca:	46e0      	movlt	r8, ip
 800f4cc:	e75b      	b.n	800f386 <_ZN8touchgfx11Application15drawCachedAreasEv+0x58e>
 800f4ce:	4285      	cmp	r5, r0
 800f4d0:	bfa8      	it	ge
 800f4d2:	4605      	movge	r5, r0
 800f4d4:	e757      	b.n	800f386 <_ZN8touchgfx11Application15drawCachedAreasEv+0x58e>
 800f4d6:	eb0a 0007 	add.w	r0, sl, r7
 800f4da:	4427      	add	r7, r4
 800f4dc:	e9cd 2102 	strd	r2, r1, [sp, #8]
 800f4e0:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 800f4e4:	45cb      	cmp	fp, r9
 800f4e6:	bfbe      	ittt	lt
 800f4e8:	f8b7 50ae 	ldrhlt.w	r5, [r7, #174]	@ 0xae
 800f4ec:	445d      	addlt	r5, fp
 800f4ee:	b22d      	sxthlt	r5, r5
 800f4f0:	f7fa fbfd 	bl	8009cee <_ZNK8touchgfx4Rect7isEmptyEv>
 800f4f4:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 800f4f8:	2800      	cmp	r0, #0
 800f4fa:	f47f af1f 	bne.w	800f33c <_ZN8touchgfx11Application15drawCachedAreasEv+0x544>
 800f4fe:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 800f502:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 800f506:	482b      	ldr	r0, [pc, #172]	@ (800f5b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7bc>)
 800f508:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 800f50c:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 800f510:	6800      	ldr	r0, [r0, #0]
 800f512:	f8ad 1034 	strh.w	r1, [sp, #52]	@ 0x34
 800f516:	1aad      	subs	r5, r5, r2
 800f518:	454d      	cmp	r5, r9
 800f51a:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 800f51e:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 800f522:	bfa8      	it	ge
 800f524:	464d      	movge	r5, r9
 800f526:	f8d0 c000 	ldr.w	ip, [r0]
 800f52a:	b2ad      	uxth	r5, r5
 800f52c:	fa1f fb8b 	uxth.w	fp, fp
 800f530:	455d      	cmp	r5, fp
 800f532:	bf94      	ite	ls
 800f534:	9500      	strls	r5, [sp, #0]
 800f536:	f8cd b000 	strhi.w	fp, [sp]
 800f53a:	b292      	uxth	r2, r2
 800f53c:	f8dc 5094 	ldr.w	r5, [ip, #148]	@ 0x94
 800f540:	b29b      	uxth	r3, r3
 800f542:	b289      	uxth	r1, r1
 800f544:	47a8      	blx	r5
 800f546:	6823      	ldr	r3, [r4, #0]
 800f548:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
 800f54c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800f54e:	a90d      	add	r1, sp, #52	@ 0x34
 800f550:	4620      	mov	r0, r4
 800f552:	4798      	blx	r3
 800f554:	f8bd 103a 	ldrh.w	r1, [sp, #58]	@ 0x3a
 800f558:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 800f55c:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 800f560:	1a5b      	subs	r3, r3, r1
 800f562:	440a      	add	r2, r1
 800f564:	b21b      	sxth	r3, r3
 800f566:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 800f56a:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 800f56e:	2b00      	cmp	r3, #0
 800f570:	f47f aedf 	bne.w	800f332 <_ZN8touchgfx11Application15drawCachedAreasEv+0x53a>
 800f574:	fa1f f188 	uxth.w	r1, r8
 800f578:	4650      	mov	r0, sl
 800f57a:	f7ff f8ab 	bl	800e6d4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800f57e:	e6d8      	b.n	800f332 <_ZN8touchgfx11Application15drawCachedAreasEv+0x53a>
 800f580:	8835      	ldrh	r5, [r6, #0]
 800f582:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 800f586:	42ab      	cmp	r3, r5
 800f588:	f67f adc4 	bls.w	800f114 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 800f58c:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 800f590:	ab0d      	add	r3, sp, #52	@ 0x34
 800f592:	f852 0fac 	ldr.w	r0, [r2, #172]!
 800f596:	6851      	ldr	r1, [r2, #4]
 800f598:	c303      	stmia	r3!, {r0, r1}
 800f59a:	a80d      	add	r0, sp, #52	@ 0x34
 800f59c:	f7fa fba7 	bl	8009cee <_ZNK8touchgfx4Rect7isEmptyEv>
 800f5a0:	b920      	cbnz	r0, 800f5ac <_ZN8touchgfx11Application15drawCachedAreasEv+0x7b4>
 800f5a2:	6823      	ldr	r3, [r4, #0]
 800f5a4:	a90d      	add	r1, sp, #52	@ 0x34
 800f5a6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800f5a8:	4620      	mov	r0, r4
 800f5aa:	4798      	blx	r3
 800f5ac:	3501      	adds	r5, #1
 800f5ae:	b2ad      	uxth	r5, r5
 800f5b0:	e7e7      	b.n	800f582 <_ZN8touchgfx11Application15drawCachedAreasEv+0x78a>
 800f5b2:	bf00      	nop
 800f5b4:	20013090 	.word	0x20013090

0800f5b8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800f5b8:	4b03      	ldr	r3, [pc, #12]	@ (800f5c8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800f5ba:	2200      	movs	r2, #0
 800f5bc:	801a      	strh	r2, [r3, #0]
 800f5be:	805a      	strh	r2, [r3, #2]
 800f5c0:	809a      	strh	r2, [r3, #4]
 800f5c2:	80da      	strh	r2, [r3, #6]
 800f5c4:	4770      	bx	lr
 800f5c6:	bf00      	nop
 800f5c8:	200130dc 	.word	0x200130dc

0800f5cc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800f5cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f5d0:	4606      	mov	r6, r0
 800f5d2:	b09d      	sub	sp, #116	@ 0x74
 800f5d4:	a803      	add	r0, sp, #12
 800f5d6:	4614      	mov	r4, r2
 800f5d8:	468a      	mov	sl, r1
 800f5da:	461d      	mov	r5, r3
 800f5dc:	f001 f924 	bl	8010828 <_ZN8touchgfx12TextProviderC1Ev>
 800f5e0:	6833      	ldr	r3, [r6, #0]
 800f5e2:	4630      	mov	r0, r6
 800f5e4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800f5e6:	4798      	blx	r3
 800f5e8:	6833      	ldr	r3, [r6, #0]
 800f5ea:	4607      	mov	r7, r0
 800f5ec:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800f5ee:	4630      	mov	r0, r6
 800f5f0:	4798      	blx	r3
 800f5f2:	462a      	mov	r2, r5
 800f5f4:	9000      	str	r0, [sp, #0]
 800f5f6:	4621      	mov	r1, r4
 800f5f8:	463b      	mov	r3, r7
 800f5fa:	a803      	add	r0, sp, #12
 800f5fc:	f001 f967 	bl	80108ce <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800f600:	2500      	movs	r5, #0
 800f602:	462c      	mov	r4, r5
 800f604:	46a9      	mov	r9, r5
 800f606:	46a8      	mov	r8, r5
 800f608:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 800f60c:	2300      	movs	r3, #0
 800f60e:	9302      	str	r3, [sp, #8]
 800f610:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800f614:	429c      	cmp	r4, r3
 800f616:	d002      	beq.n	800f61e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 800f618:	455c      	cmp	r4, fp
 800f61a:	bf18      	it	ne
 800f61c:	4625      	movne	r5, r4
 800f61e:	ab02      	add	r3, sp, #8
 800f620:	4632      	mov	r2, r6
 800f622:	4651      	mov	r1, sl
 800f624:	a803      	add	r0, sp, #12
 800f626:	f001 fc6d 	bl	8010f04 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800f62a:	4604      	mov	r4, r0
 800f62c:	b108      	cbz	r0, 800f632 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 800f62e:	280a      	cmp	r0, #10
 800f630:	d10a      	bne.n	800f648 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 800f632:	45c1      	cmp	r9, r8
 800f634:	bf38      	it	cc
 800f636:	46c1      	movcc	r9, r8
 800f638:	f04f 0800 	mov.w	r8, #0
 800f63c:	2c00      	cmp	r4, #0
 800f63e:	d1e5      	bne.n	800f60c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800f640:	4648      	mov	r0, r9
 800f642:	b01d      	add	sp, #116	@ 0x74
 800f644:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f648:	9a02      	ldr	r2, [sp, #8]
 800f64a:	2a00      	cmp	r2, #0
 800f64c:	d0de      	beq.n	800f60c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800f64e:	7b57      	ldrb	r7, [r2, #13]
 800f650:	6833      	ldr	r3, [r6, #0]
 800f652:	8894      	ldrh	r4, [r2, #4]
 800f654:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800f656:	007f      	lsls	r7, r7, #1
 800f658:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 800f65c:	7a97      	ldrb	r7, [r2, #10]
 800f65e:	4629      	mov	r1, r5
 800f660:	4307      	orrs	r7, r0
 800f662:	4630      	mov	r0, r6
 800f664:	4798      	blx	r3
 800f666:	4438      	add	r0, r7
 800f668:	4480      	add	r8, r0
 800f66a:	fa1f f888 	uxth.w	r8, r8
 800f66e:	e7e5      	b.n	800f63c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0800f670 <_ZNK8touchgfx4Font12getCharWidthEt>:
 800f670:	b508      	push	{r3, lr}
 800f672:	6803      	ldr	r3, [r0, #0]
 800f674:	68db      	ldr	r3, [r3, #12]
 800f676:	4798      	blx	r3
 800f678:	b128      	cbz	r0, 800f686 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800f67a:	7b43      	ldrb	r3, [r0, #13]
 800f67c:	7a80      	ldrb	r0, [r0, #10]
 800f67e:	005b      	lsls	r3, r3, #1
 800f680:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800f684:	4318      	orrs	r0, r3
 800f686:	bd08      	pop	{r3, pc}

0800f688 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800f688:	b40e      	push	{r1, r2, r3}
 800f68a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f68c:	b09e      	sub	sp, #120	@ 0x78
 800f68e:	ab23      	add	r3, sp, #140	@ 0x8c
 800f690:	4605      	mov	r5, r0
 800f692:	f853 4b04 	ldr.w	r4, [r3], #4
 800f696:	9303      	str	r3, [sp, #12]
 800f698:	a805      	add	r0, sp, #20
 800f69a:	f001 f8c5 	bl	8010828 <_ZN8touchgfx12TextProviderC1Ev>
 800f69e:	682b      	ldr	r3, [r5, #0]
 800f6a0:	4628      	mov	r0, r5
 800f6a2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800f6a4:	4798      	blx	r3
 800f6a6:	682b      	ldr	r3, [r5, #0]
 800f6a8:	4606      	mov	r6, r0
 800f6aa:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800f6ac:	4628      	mov	r0, r5
 800f6ae:	4798      	blx	r3
 800f6b0:	4633      	mov	r3, r6
 800f6b2:	ae1e      	add	r6, sp, #120	@ 0x78
 800f6b4:	4621      	mov	r1, r4
 800f6b6:	9000      	str	r0, [sp, #0]
 800f6b8:	9a03      	ldr	r2, [sp, #12]
 800f6ba:	2400      	movs	r4, #0
 800f6bc:	a805      	add	r0, sp, #20
 800f6be:	f001 f906 	bl	80108ce <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800f6c2:	f846 4d68 	str.w	r4, [r6, #-104]!
 800f6c6:	462a      	mov	r2, r5
 800f6c8:	4633      	mov	r3, r6
 800f6ca:	4621      	mov	r1, r4
 800f6cc:	a805      	add	r0, sp, #20
 800f6ce:	f001 fc19 	bl	8010f04 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800f6d2:	b1f0      	cbz	r0, 800f712 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 800f6d4:	280a      	cmp	r0, #10
 800f6d6:	d018      	beq.n	800f70a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800f6d8:	9f04      	ldr	r7, [sp, #16]
 800f6da:	b1b7      	cbz	r7, 800f70a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800f6dc:	7b78      	ldrb	r0, [r7, #13]
 800f6de:	7a3b      	ldrb	r3, [r7, #8]
 800f6e0:	88ea      	ldrh	r2, [r5, #6]
 800f6e2:	00c1      	lsls	r1, r0, #3
 800f6e4:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 800f6e8:	4319      	orrs	r1, r3
 800f6ea:	0643      	lsls	r3, r0, #25
 800f6ec:	bf44      	itt	mi
 800f6ee:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 800f6f2:	b219      	sxthmi	r1, r3
 800f6f4:	0100      	lsls	r0, r0, #4
 800f6f6:	79fb      	ldrb	r3, [r7, #7]
 800f6f8:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 800f6fc:	4303      	orrs	r3, r0
 800f6fe:	4413      	add	r3, r2
 800f700:	1a5b      	subs	r3, r3, r1
 800f702:	b21b      	sxth	r3, r3
 800f704:	429c      	cmp	r4, r3
 800f706:	bfb8      	it	lt
 800f708:	461c      	movlt	r4, r3
 800f70a:	4633      	mov	r3, r6
 800f70c:	462a      	mov	r2, r5
 800f70e:	2100      	movs	r1, #0
 800f710:	e7dc      	b.n	800f6cc <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 800f712:	b2a0      	uxth	r0, r4
 800f714:	b01e      	add	sp, #120	@ 0x78
 800f716:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800f71a:	b003      	add	sp, #12
 800f71c:	4770      	bx	lr

0800f71e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 800f71e:	7a43      	ldrb	r3, [r0, #9]
 800f720:	8880      	ldrh	r0, [r0, #4]
 800f722:	4418      	add	r0, r3
 800f724:	b280      	uxth	r0, r0
 800f726:	4770      	bx	lr

0800f728 <_ZNK8touchgfx4Font13getFontHeightEv>:
 800f728:	6803      	ldr	r3, [r0, #0]
 800f72a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800f72c:	4718      	bx	r3

0800f72e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800f72e:	b40e      	push	{r1, r2, r3}
 800f730:	b570      	push	{r4, r5, r6, lr}
 800f732:	b09d      	sub	sp, #116	@ 0x74
 800f734:	ab21      	add	r3, sp, #132	@ 0x84
 800f736:	4604      	mov	r4, r0
 800f738:	f853 5b04 	ldr.w	r5, [r3], #4
 800f73c:	9302      	str	r3, [sp, #8]
 800f73e:	a803      	add	r0, sp, #12
 800f740:	f001 f872 	bl	8010828 <_ZN8touchgfx12TextProviderC1Ev>
 800f744:	6823      	ldr	r3, [r4, #0]
 800f746:	4620      	mov	r0, r4
 800f748:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800f74a:	4798      	blx	r3
 800f74c:	6823      	ldr	r3, [r4, #0]
 800f74e:	4606      	mov	r6, r0
 800f750:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800f752:	4620      	mov	r0, r4
 800f754:	4798      	blx	r3
 800f756:	4633      	mov	r3, r6
 800f758:	9000      	str	r0, [sp, #0]
 800f75a:	9a02      	ldr	r2, [sp, #8]
 800f75c:	4629      	mov	r1, r5
 800f75e:	a803      	add	r0, sp, #12
 800f760:	f001 f8b5 	bl	80108ce <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800f764:	a803      	add	r0, sp, #12
 800f766:	f001 fc4f 	bl	8011008 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800f76a:	2401      	movs	r4, #1
 800f76c:	b2a3      	uxth	r3, r4
 800f76e:	b140      	cbz	r0, 800f782 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 800f770:	280a      	cmp	r0, #10
 800f772:	bf08      	it	eq
 800f774:	3301      	addeq	r3, #1
 800f776:	a803      	add	r0, sp, #12
 800f778:	bf08      	it	eq
 800f77a:	b21c      	sxtheq	r4, r3
 800f77c:	f001 fc44 	bl	8011008 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800f780:	e7f4      	b.n	800f76c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 800f782:	4618      	mov	r0, r3
 800f784:	b01d      	add	sp, #116	@ 0x74
 800f786:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f78a:	b003      	add	sp, #12
 800f78c:	4770      	bx	lr

0800f78e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800f78e:	b40e      	push	{r1, r2, r3}
 800f790:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f792:	b09e      	sub	sp, #120	@ 0x78
 800f794:	ab23      	add	r3, sp, #140	@ 0x8c
 800f796:	4604      	mov	r4, r0
 800f798:	f853 5b04 	ldr.w	r5, [r3], #4
 800f79c:	9303      	str	r3, [sp, #12]
 800f79e:	a805      	add	r0, sp, #20
 800f7a0:	f001 f842 	bl	8010828 <_ZN8touchgfx12TextProviderC1Ev>
 800f7a4:	6823      	ldr	r3, [r4, #0]
 800f7a6:	4620      	mov	r0, r4
 800f7a8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800f7aa:	4798      	blx	r3
 800f7ac:	6823      	ldr	r3, [r4, #0]
 800f7ae:	4606      	mov	r6, r0
 800f7b0:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800f7b2:	4620      	mov	r0, r4
 800f7b4:	4798      	blx	r3
 800f7b6:	4633      	mov	r3, r6
 800f7b8:	4629      	mov	r1, r5
 800f7ba:	9000      	str	r0, [sp, #0]
 800f7bc:	9a03      	ldr	r2, [sp, #12]
 800f7be:	a805      	add	r0, sp, #20
 800f7c0:	ad1e      	add	r5, sp, #120	@ 0x78
 800f7c2:	f001 f884 	bl	80108ce <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800f7c6:	2100      	movs	r1, #0
 800f7c8:	f845 1d68 	str.w	r1, [r5, #-104]!
 800f7cc:	4622      	mov	r2, r4
 800f7ce:	462b      	mov	r3, r5
 800f7d0:	a805      	add	r0, sp, #20
 800f7d2:	f001 fb97 	bl	8010f04 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800f7d6:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 800f7da:	b1d8      	cbz	r0, 800f814 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 800f7dc:	280a      	cmp	r0, #10
 800f7de:	d012      	beq.n	800f806 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 800f7e0:	9804      	ldr	r0, [sp, #16]
 800f7e2:	b180      	cbz	r0, 800f806 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 800f7e4:	7b47      	ldrb	r7, [r0, #13]
 800f7e6:	88e2      	ldrh	r2, [r4, #6]
 800f7e8:	00fb      	lsls	r3, r7, #3
 800f7ea:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 800f7ee:	7a03      	ldrb	r3, [r0, #8]
 800f7f0:	430b      	orrs	r3, r1
 800f7f2:	0679      	lsls	r1, r7, #25
 800f7f4:	bf44      	itt	mi
 800f7f6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 800f7fa:	b21b      	sxthmi	r3, r3
 800f7fc:	1ad3      	subs	r3, r2, r3
 800f7fe:	b21b      	sxth	r3, r3
 800f800:	429e      	cmp	r6, r3
 800f802:	bfa8      	it	ge
 800f804:	461e      	movge	r6, r3
 800f806:	462b      	mov	r3, r5
 800f808:	4622      	mov	r2, r4
 800f80a:	2100      	movs	r1, #0
 800f80c:	a805      	add	r0, sp, #20
 800f80e:	f001 fb79 	bl	8010f04 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800f812:	e7e2      	b.n	800f7da <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 800f814:	4630      	mov	r0, r6
 800f816:	b01e      	add	sp, #120	@ 0x78
 800f818:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800f81c:	b003      	add	sp, #12
 800f81e:	4770      	bx	lr

0800f820 <_ZNK8touchgfx8Drawable10invalidateEv>:
 800f820:	b513      	push	{r0, r1, r4, lr}
 800f822:	6803      	ldr	r3, [r0, #0]
 800f824:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800f828:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800f82c:	f8ad 1004 	strh.w	r1, [sp, #4]
 800f830:	2400      	movs	r4, #0
 800f832:	9400      	str	r4, [sp, #0]
 800f834:	f8ad 2006 	strh.w	r2, [sp, #6]
 800f838:	691b      	ldr	r3, [r3, #16]
 800f83a:	4669      	mov	r1, sp
 800f83c:	4798      	blx	r3
 800f83e:	b002      	add	sp, #8
 800f840:	bd10      	pop	{r4, pc}

0800f842 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800f842:	b538      	push	{r3, r4, r5, lr}
 800f844:	680b      	ldr	r3, [r1, #0]
 800f846:	460c      	mov	r4, r1
 800f848:	68db      	ldr	r3, [r3, #12]
 800f84a:	4605      	mov	r5, r0
 800f84c:	4798      	blx	r3
 800f84e:	6823      	ldr	r3, [r4, #0]
 800f850:	4620      	mov	r0, r4
 800f852:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f854:	4629      	mov	r1, r5
 800f856:	4798      	blx	r3
 800f858:	4628      	mov	r0, r5
 800f85a:	bd38      	pop	{r3, r4, r5, pc}

0800f85c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800f85c:	b410      	push	{r4}
 800f85e:	880a      	ldrh	r2, [r1, #0]
 800f860:	8884      	ldrh	r4, [r0, #4]
 800f862:	4422      	add	r2, r4
 800f864:	800a      	strh	r2, [r1, #0]
 800f866:	88c4      	ldrh	r4, [r0, #6]
 800f868:	884a      	ldrh	r2, [r1, #2]
 800f86a:	4422      	add	r2, r4
 800f86c:	804a      	strh	r2, [r1, #2]
 800f86e:	6940      	ldr	r0, [r0, #20]
 800f870:	b120      	cbz	r0, 800f87c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800f872:	6803      	ldr	r3, [r0, #0]
 800f874:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f878:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f87a:	4718      	bx	r3
 800f87c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f880:	4770      	bx	lr

0800f882 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800f882:	b570      	push	{r4, r5, r6, lr}
 800f884:	8882      	ldrh	r2, [r0, #4]
 800f886:	880b      	ldrh	r3, [r1, #0]
 800f888:	4413      	add	r3, r2
 800f88a:	800b      	strh	r3, [r1, #0]
 800f88c:	88c2      	ldrh	r2, [r0, #6]
 800f88e:	884b      	ldrh	r3, [r1, #2]
 800f890:	460c      	mov	r4, r1
 800f892:	4413      	add	r3, r2
 800f894:	804b      	strh	r3, [r1, #2]
 800f896:	4605      	mov	r5, r0
 800f898:	1d01      	adds	r1, r0, #4
 800f89a:	4620      	mov	r0, r4
 800f89c:	f7fa f9e4 	bl	8009c68 <_ZN8touchgfx4RectaNERKS0_>
 800f8a0:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800f8a4:	2b00      	cmp	r3, #0
 800f8a6:	dd0b      	ble.n	800f8c0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800f8a8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800f8ac:	2b00      	cmp	r3, #0
 800f8ae:	dd07      	ble.n	800f8c0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800f8b0:	6968      	ldr	r0, [r5, #20]
 800f8b2:	b128      	cbz	r0, 800f8c0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800f8b4:	6803      	ldr	r3, [r0, #0]
 800f8b6:	4621      	mov	r1, r4
 800f8b8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800f8ba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f8be:	4718      	bx	r3
 800f8c0:	bd70      	pop	{r4, r5, r6, pc}
	...

0800f8c4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800f8c4:	b570      	push	{r4, r5, r6, lr}
 800f8c6:	8882      	ldrh	r2, [r0, #4]
 800f8c8:	880b      	ldrh	r3, [r1, #0]
 800f8ca:	4413      	add	r3, r2
 800f8cc:	800b      	strh	r3, [r1, #0]
 800f8ce:	88c2      	ldrh	r2, [r0, #6]
 800f8d0:	884b      	ldrh	r3, [r1, #2]
 800f8d2:	460c      	mov	r4, r1
 800f8d4:	4413      	add	r3, r2
 800f8d6:	804b      	strh	r3, [r1, #2]
 800f8d8:	4605      	mov	r5, r0
 800f8da:	1d01      	adds	r1, r0, #4
 800f8dc:	4620      	mov	r0, r4
 800f8de:	f7fa f9c3 	bl	8009c68 <_ZN8touchgfx4RectaNERKS0_>
 800f8e2:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800f8e6:	2b00      	cmp	r3, #0
 800f8e8:	dd19      	ble.n	800f91e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 800f8ea:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800f8ee:	2b00      	cmp	r3, #0
 800f8f0:	dd15      	ble.n	800f91e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 800f8f2:	6968      	ldr	r0, [r5, #20]
 800f8f4:	b128      	cbz	r0, 800f902 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 800f8f6:	6803      	ldr	r3, [r0, #0]
 800f8f8:	4621      	mov	r1, r4
 800f8fa:	691b      	ldr	r3, [r3, #16]
 800f8fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f900:	4718      	bx	r3
 800f902:	4b07      	ldr	r3, [pc, #28]	@ (800f920 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 800f904:	681b      	ldr	r3, [r3, #0]
 800f906:	3304      	adds	r3, #4
 800f908:	429d      	cmp	r5, r3
 800f90a:	d108      	bne.n	800f91e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 800f90c:	f7fe fdd6 	bl	800e4bc <_ZN8touchgfx11Application11getInstanceEv>
 800f910:	6803      	ldr	r3, [r0, #0]
 800f912:	6821      	ldr	r1, [r4, #0]
 800f914:	6862      	ldr	r2, [r4, #4]
 800f916:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800f918:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f91c:	4718      	bx	r3
 800f91e:	bd70      	pop	{r4, r5, r6, pc}
 800f920:	200130d4 	.word	0x200130d4

0800f924 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800f924:	b570      	push	{r4, r5, r6, lr}
 800f926:	4604      	mov	r4, r0
 800f928:	4616      	mov	r6, r2
 800f92a:	460d      	mov	r5, r1
 800f92c:	b901      	cbnz	r1, 800f930 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800f92e:	b192      	cbz	r2, 800f956 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 800f930:	6823      	ldr	r3, [r4, #0]
 800f932:	4620      	mov	r0, r4
 800f934:	699b      	ldr	r3, [r3, #24]
 800f936:	4798      	blx	r3
 800f938:	88e2      	ldrh	r2, [r4, #6]
 800f93a:	88a1      	ldrh	r1, [r4, #4]
 800f93c:	4432      	add	r2, r6
 800f93e:	4429      	add	r1, r5
 800f940:	4620      	mov	r0, r4
 800f942:	b212      	sxth	r2, r2
 800f944:	b209      	sxth	r1, r1
 800f946:	f7fa fc73 	bl	800a230 <_ZN8touchgfx8Drawable5setXYEss>
 800f94a:	6823      	ldr	r3, [r4, #0]
 800f94c:	4620      	mov	r0, r4
 800f94e:	699b      	ldr	r3, [r3, #24]
 800f950:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f954:	4718      	bx	r3
 800f956:	bd70      	pop	{r4, r5, r6, pc}

0800f958 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800f958:	b510      	push	{r4, lr}
 800f95a:	4604      	mov	r4, r0
 800f95c:	4608      	mov	r0, r1
 800f95e:	2300      	movs	r3, #0
 800f960:	8023      	strh	r3, [r4, #0]
 800f962:	8063      	strh	r3, [r4, #2]
 800f964:	6803      	ldr	r3, [r0, #0]
 800f966:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800f96a:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800f96e:	80a1      	strh	r1, [r4, #4]
 800f970:	80e2      	strh	r2, [r4, #6]
 800f972:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f974:	4621      	mov	r1, r4
 800f976:	4798      	blx	r3
 800f978:	4620      	mov	r0, r4
 800f97a:	bd10      	pop	{r4, pc}

0800f97c <_ZN8touchgfx22VectorFontRendererImplD1Ev>:
 800f97c:	4770      	bx	lr

0800f97e <_ZN8touchgfx22VectorFontRendererImplD0Ev>:
 800f97e:	b510      	push	{r4, lr}
 800f980:	211c      	movs	r1, #28
 800f982:	4604      	mov	r4, r0
 800f984:	f010 ffa3 	bl	80208ce <_ZdlPvj>
 800f988:	4620      	mov	r0, r4
 800f98a:	bd10      	pop	{r4, pc}

0800f98c <_ZN8touchgfx22VectorFontRendererImplC1Ev>:
 800f98c:	4a04      	ldr	r2, [pc, #16]	@ (800f9a0 <_ZN8touchgfx22VectorFontRendererImplC1Ev+0x14>)
 800f98e:	6002      	str	r2, [r0, #0]
 800f990:	2200      	movs	r2, #0
 800f992:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800f996:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800f99a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800f99e:	4770      	bx	lr
 800f9a0:	08023ab0 	.word	0x08023ab0

0800f9a4 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>:
 800f9a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f9a8:	4604      	mov	r4, r0
 800f9aa:	b087      	sub	sp, #28
 800f9ac:	8b45      	ldrh	r5, [r0, #26]
 800f9ae:	f8b2 c000 	ldrh.w	ip, [r2]
 800f9b2:	9105      	str	r1, [sp, #20]
 800f9b4:	68e1      	ldr	r1, [r4, #12]
 800f9b6:	9203      	str	r2, [sp, #12]
 800f9b8:	1c68      	adds	r0, r5, #1
 800f9ba:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 800f9be:	f01c 0501 	ands.w	r5, ip, #1
 800f9c2:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f9c6:	9502      	str	r5, [sp, #8]
 800f9c8:	b280      	uxth	r0, r0
 800f9ca:	d07d      	beq.n	800fac8 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x124>
 800f9cc:	ee07 2a90 	vmov	s15, r2
 800f9d0:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 800f9d4:	8360      	strh	r0, [r4, #26]
 800f9d6:	edc1 6a00 	vstr	s13, [r1]
 800f9da:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800f9de:	8b61      	ldrh	r1, [r4, #26]
 800f9e0:	ee07 2a10 	vmov	s14, r2
 800f9e4:	68e2      	ldr	r2, [r4, #12]
 800f9e6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f9ea:	f04f 0e00 	mov.w	lr, #0
 800f9ee:	1c48      	adds	r0, r1, #1
 800f9f0:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 800f9f4:	ee06 ea10 	vmov	s12, lr
 800f9f8:	8360      	strh	r0, [r4, #26]
 800f9fa:	ed82 7a00 	vstr	s14, [r2]
 800f9fe:	8b21      	ldrh	r1, [r4, #24]
 800fa00:	68a2      	ldr	r2, [r4, #8]
 800fa02:	2501      	movs	r5, #1
 800fa04:	1c48      	adds	r0, r1, #1
 800fa06:	8320      	strh	r0, [r4, #24]
 800fa08:	5455      	strb	r5, [r2, r1]
 800fa0a:	2200      	movs	r2, #0
 800fa0c:	3304      	adds	r3, #4
 800fa0e:	ee07 2a90 	vmov	s15, r2
 800fa12:	9300      	str	r3, [sp, #0]
 800fa14:	46aa      	mov	sl, r5
 800fa16:	4613      	mov	r3, r2
 800fa18:	4611      	mov	r1, r2
 800fa1a:	462e      	mov	r6, r5
 800fa1c:	9201      	str	r2, [sp, #4]
 800fa1e:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
 800fa22:	f8b4 8018 	ldrh.w	r8, [r4, #24]
 800fa26:	9805      	ldr	r0, [sp, #20]
 800fa28:	f8d4 b008 	ldr.w	fp, [r4, #8]
 800fa2c:	f108 0701 	add.w	r7, r8, #1
 800fa30:	42a8      	cmp	r0, r5
 800fa32:	b2bf      	uxth	r7, r7
 800fa34:	eb0b 0908 	add.w	r9, fp, r8
 800fa38:	f340 80db 	ble.w	800fbf2 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x24e>
 800fa3c:	fa4c f906 	asr.w	r9, ip, r6
 800fa40:	f009 0901 	and.w	r9, r9, #1
 800fa44:	fa5f f389 	uxtb.w	r3, r9
 800fa48:	9304      	str	r3, [sp, #16]
 800fa4a:	9b00      	ldr	r3, [sp, #0]
 800fa4c:	f9b3 1000 	ldrsh.w	r1, [r3]
 800fa50:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800fa54:	f1b9 0f00 	cmp.w	r9, #0
 800fa58:	d07d      	beq.n	800fb56 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1b2>
 800fa5a:	ee05 1a10 	vmov	s10, r1
 800fa5e:	eef8 4ac5 	vcvt.f32.s32	s9, s10
 800fa62:	ee05 3a10 	vmov	s10, r3
 800fa66:	8327      	strh	r7, [r4, #24]
 800fa68:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 800fa6c:	f1ba 0f00 	cmp.w	sl, #0
 800fa70:	d050      	beq.n	800fb14 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x170>
 800fa72:	f04f 0002 	mov.w	r0, #2
 800fa76:	f80b 0008 	strb.w	r0, [fp, r8]
 800fa7a:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 800fa7e:	68e7      	ldr	r7, [r4, #12]
 800fa80:	f108 0901 	add.w	r9, r8, #1
 800fa84:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 800fa88:	f8a4 901a 	strh.w	r9, [r4, #26]
 800fa8c:	edc7 4a00 	vstr	s9, [r7]
 800fa90:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 800fa94:	68e7      	ldr	r7, [r4, #12]
 800fa96:	f108 0901 	add.w	r9, r8, #1
 800fa9a:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 800fa9e:	f8a4 901a 	strh.w	r9, [r4, #26]
 800faa2:	ed87 5a00 	vstr	s10, [r7]
 800faa6:	3601      	adds	r6, #1
 800faa8:	2e10      	cmp	r6, #16
 800faaa:	d106      	bne.n	800faba <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x116>
 800faac:	9e01      	ldr	r6, [sp, #4]
 800faae:	9803      	ldr	r0, [sp, #12]
 800fab0:	3601      	adds	r6, #1
 800fab2:	9601      	str	r6, [sp, #4]
 800fab4:	f830 c016 	ldrh.w	ip, [r0, r6, lsl #1]
 800fab8:	2600      	movs	r6, #0
 800faba:	9800      	ldr	r0, [sp, #0]
 800fabc:	f8dd a010 	ldr.w	sl, [sp, #16]
 800fac0:	3004      	adds	r0, #4
 800fac2:	3501      	adds	r5, #1
 800fac4:	9000      	str	r0, [sp, #0]
 800fac6:	e7ac      	b.n	800fa22 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x7e>
 800fac8:	ee06 2a10 	vmov	s12, r2
 800facc:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 800fad0:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 800fad4:	ee16 5a10 	vmov	r5, s12
 800fad8:	442a      	add	r2, r5
 800fada:	ee06 2a90 	vmov	s13, r2
 800fade:	f9b3 2006 	ldrsh.w	r2, [r3, #6]
 800fae2:	8360      	strh	r0, [r4, #26]
 800fae4:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800fae8:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 800faec:	4472      	add	r2, lr
 800faee:	ee07 2a10 	vmov	s14, r2
 800faf2:	ee66 6aa7 	vmul.f32	s13, s13, s15
 800faf6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800fafa:	edc1 6a00 	vstr	s13, [r1]
 800fafe:	8b61      	ldrh	r1, [r4, #26]
 800fb00:	68e2      	ldr	r2, [r4, #12]
 800fb02:	ee27 7a27 	vmul.f32	s14, s14, s15
 800fb06:	1c48      	adds	r0, r1, #1
 800fb08:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 800fb0c:	8360      	strh	r0, [r4, #26]
 800fb0e:	ed82 7a00 	vstr	s14, [r2]
 800fb12:	e774      	b.n	800f9fe <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x5a>
 800fb14:	f04f 0005 	mov.w	r0, #5
 800fb18:	f80b 0008 	strb.w	r0, [fp, r8]
 800fb1c:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 800fb20:	68e7      	ldr	r7, [r4, #12]
 800fb22:	eeb8 4ae7 	vcvt.f32.s32	s8, s15
 800fb26:	f108 0901 	add.w	r9, r8, #1
 800fb2a:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 800fb2e:	f8a4 901a 	strh.w	r9, [r4, #26]
 800fb32:	ed87 4a00 	vstr	s8, [r7]
 800fb36:	ee04 2a10 	vmov	s8, r2
 800fb3a:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 800fb3e:	68e7      	ldr	r7, [r4, #12]
 800fb40:	eeb8 4ac4 	vcvt.f32.s32	s8, s8
 800fb44:	f108 0901 	add.w	r9, r8, #1
 800fb48:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 800fb4c:	f8a4 901a 	strh.w	r9, [r4, #26]
 800fb50:	ed87 4a00 	vstr	s8, [r7]
 800fb54:	e791      	b.n	800fa7a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xd6>
 800fb56:	f1ba 0f00 	cmp.w	sl, #0
 800fb5a:	d146      	bne.n	800fbea <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x246>
 800fb5c:	f04f 0005 	mov.w	r0, #5
 800fb60:	8327      	strh	r7, [r4, #24]
 800fb62:	f80b 0008 	strb.w	r0, [fp, r8]
 800fb66:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 800fb6a:	68e7      	ldr	r7, [r4, #12]
 800fb6c:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800fb70:	f108 0901 	add.w	r9, r8, #1
 800fb74:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 800fb78:	ee17 0a90 	vmov	r0, s15
 800fb7c:	f8a4 901a 	strh.w	r9, [r4, #26]
 800fb80:	ed87 5a00 	vstr	s10, [r7]
 800fb84:	ee05 2a10 	vmov	s10, r2
 800fb88:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 800fb8c:	68e7      	ldr	r7, [r4, #12]
 800fb8e:	4408      	add	r0, r1
 800fb90:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
 800fb94:	ee07 0a90 	vmov	s15, r0
 800fb98:	f108 0901 	add.w	r9, r8, #1
 800fb9c:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 800fba0:	f8a4 901a 	strh.w	r9, [r4, #26]
 800fba4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800fba8:	ed87 5a00 	vstr	s10, [r7]
 800fbac:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 800fbb0:	68e7      	ldr	r7, [r4, #12]
 800fbb2:	ee67 7aa5 	vmul.f32	s15, s15, s11
 800fbb6:	f108 0901 	add.w	r9, r8, #1
 800fbba:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 800fbbe:	441a      	add	r2, r3
 800fbc0:	f8a4 901a 	strh.w	r9, [r4, #26]
 800fbc4:	edc7 7a00 	vstr	s15, [r7]
 800fbc8:	ee07 2a90 	vmov	s15, r2
 800fbcc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800fbd0:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 800fbd4:	68e7      	ldr	r7, [r4, #12]
 800fbd6:	ee67 7aa5 	vmul.f32	s15, s15, s11
 800fbda:	f108 0901 	add.w	r9, r8, #1
 800fbde:	eb07 0788 	add.w	r7, r7, r8, lsl #2
 800fbe2:	f8a4 901a 	strh.w	r9, [r4, #26]
 800fbe6:	edc7 7a00 	vstr	s15, [r7]
 800fbea:	461a      	mov	r2, r3
 800fbec:	ee07 1a90 	vmov	s15, r1
 800fbf0:	e759      	b.n	800faa6 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x102>
 800fbf2:	f1ba 0f00 	cmp.w	sl, #0
 800fbf6:	d045      	beq.n	800fc84 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2e0>
 800fbf8:	ee05 1a90 	vmov	s11, r1
 800fbfc:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 800fc00:	eef4 5a66 	vcmp.f32	s11, s13
 800fc04:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fc08:	d108      	bne.n	800fc1c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x278>
 800fc0a:	ee05 3a90 	vmov	s11, r3
 800fc0e:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 800fc12:	eef4 5a47 	vcmp.f32	s11, s14
 800fc16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fc1a:	d033      	beq.n	800fc84 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2e0>
 800fc1c:	9b02      	ldr	r3, [sp, #8]
 800fc1e:	8327      	strh	r7, [r4, #24]
 800fc20:	b1b3      	cbz	r3, 800fc50 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2ac>
 800fc22:	2302      	movs	r3, #2
 800fc24:	f889 3000 	strb.w	r3, [r9]
 800fc28:	8b62      	ldrh	r2, [r4, #26]
 800fc2a:	68e3      	ldr	r3, [r4, #12]
 800fc2c:	1c51      	adds	r1, r2, #1
 800fc2e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 800fc32:	8361      	strh	r1, [r4, #26]
 800fc34:	edc3 6a00 	vstr	s13, [r3]
 800fc38:	8b62      	ldrh	r2, [r4, #26]
 800fc3a:	68e3      	ldr	r3, [r4, #12]
 800fc3c:	1c51      	adds	r1, r2, #1
 800fc3e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 800fc42:	8361      	strh	r1, [r4, #26]
 800fc44:	ed83 7a00 	vstr	s14, [r3]
 800fc48:	9800      	ldr	r0, [sp, #0]
 800fc4a:	b007      	add	sp, #28
 800fc4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fc50:	2305      	movs	r3, #5
 800fc52:	f889 3000 	strb.w	r3, [r9]
 800fc56:	8b62      	ldrh	r2, [r4, #26]
 800fc58:	68e3      	ldr	r3, [r4, #12]
 800fc5a:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
 800fc5e:	1c51      	adds	r1, r2, #1
 800fc60:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 800fc64:	8361      	strh	r1, [r4, #26]
 800fc66:	ee07 ea90 	vmov	s15, lr
 800fc6a:	ed83 6a00 	vstr	s12, [r3]
 800fc6e:	8b62      	ldrh	r2, [r4, #26]
 800fc70:	68e3      	ldr	r3, [r4, #12]
 800fc72:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800fc76:	1c51      	adds	r1, r2, #1
 800fc78:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 800fc7c:	8361      	strh	r1, [r4, #26]
 800fc7e:	edc3 7a00 	vstr	s15, [r3]
 800fc82:	e7d1      	b.n	800fc28 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x284>
 800fc84:	ee05 2a90 	vmov	s11, r2
 800fc88:	9902      	ldr	r1, [sp, #8]
 800fc8a:	8327      	strh	r7, [r4, #24]
 800fc8c:	2305      	movs	r3, #5
 800fc8e:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800fc92:	eef8 5ae5 	vcvt.f32.s32	s11, s11
 800fc96:	f889 3000 	strb.w	r3, [r9]
 800fc9a:	b181      	cbz	r1, 800fcbe <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x31a>
 800fc9c:	8b62      	ldrh	r2, [r4, #26]
 800fc9e:	68e3      	ldr	r3, [r4, #12]
 800fca0:	1c51      	adds	r1, r2, #1
 800fca2:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 800fca6:	8361      	strh	r1, [r4, #26]
 800fca8:	ed83 5a00 	vstr	s10, [r3]
 800fcac:	8b62      	ldrh	r2, [r4, #26]
 800fcae:	68e3      	ldr	r3, [r4, #12]
 800fcb0:	1c51      	adds	r1, r2, #1
 800fcb2:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 800fcb6:	8361      	strh	r1, [r4, #26]
 800fcb8:	edc3 5a00 	vstr	s11, [r3]
 800fcbc:	e7b4      	b.n	800fc28 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x284>
 800fcbe:	8b65      	ldrh	r5, [r4, #26]
 800fcc0:	68e1      	ldr	r1, [r4, #12]
 800fcc2:	1c6e      	adds	r6, r5, #1
 800fcc4:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 800fcc8:	8366      	strh	r6, [r4, #26]
 800fcca:	ed81 5a00 	vstr	s10, [r1]
 800fcce:	8b65      	ldrh	r5, [r4, #26]
 800fcd0:	68e1      	ldr	r1, [r4, #12]
 800fcd2:	1c6e      	adds	r6, r5, #1
 800fcd4:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 800fcd8:	8366      	strh	r6, [r4, #26]
 800fcda:	edc1 5a00 	vstr	s11, [r1]
 800fcde:	8b65      	ldrh	r5, [r4, #26]
 800fce0:	68e1      	ldr	r1, [r4, #12]
 800fce2:	1c6e      	adds	r6, r5, #1
 800fce4:	eb01 0185 	add.w	r1, r1, r5, lsl #2
 800fce8:	ee17 0a90 	vmov	r0, s15
 800fcec:	ee16 5a10 	vmov	r5, s12
 800fcf0:	4428      	add	r0, r5
 800fcf2:	ee07 0a90 	vmov	s15, r0
 800fcf6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800fcfa:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
 800fcfe:	ee67 7aa5 	vmul.f32	s15, s15, s11
 800fd02:	4472      	add	r2, lr
 800fd04:	8366      	strh	r6, [r4, #26]
 800fd06:	edc1 7a00 	vstr	s15, [r1]
 800fd0a:	ee07 2a90 	vmov	s15, r2
 800fd0e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800fd12:	8b61      	ldrh	r1, [r4, #26]
 800fd14:	68e5      	ldr	r5, [r4, #12]
 800fd16:	ee67 7aa5 	vmul.f32	s15, s15, s11
 800fd1a:	1c4e      	adds	r6, r1, #1
 800fd1c:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 800fd20:	8366      	strh	r6, [r4, #26]
 800fd22:	edc1 7a00 	vstr	s15, [r1]
 800fd26:	8b22      	ldrh	r2, [r4, #24]
 800fd28:	68a1      	ldr	r1, [r4, #8]
 800fd2a:	1c55      	adds	r5, r2, #1
 800fd2c:	8325      	strh	r5, [r4, #24]
 800fd2e:	548b      	strb	r3, [r1, r2]
 800fd30:	e791      	b.n	800fc56 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2b2>
	...

0800fd34 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii>:
 800fd34:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800fd38:	b08e      	sub	sp, #56	@ 0x38
 800fd3a:	4604      	mov	r4, r0
 800fd3c:	4688      	mov	r8, r1
 800fd3e:	4615      	mov	r5, r2
 800fd40:	4699      	mov	r9, r3
 800fd42:	9e16      	ldr	r6, [sp, #88]	@ 0x58
 800fd44:	f89d a064 	ldrb.w	sl, [sp, #100]	@ 0x64
 800fd48:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
 800fd4a:	f7f1 fc0d 	bl	8001568 <_ZN8touchgfx14VectorRenderer11getInstanceEv>
 800fd4e:	6060      	str	r0, [r4, #4]
 800fd50:	f1b9 0f00 	cmp.w	r9, #0
 800fd54:	f000 80e8 	beq.w	800ff28 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 800fd58:	2800      	cmp	r0, #0
 800fd5a:	f000 80e5 	beq.w	800ff28 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
 800fd5e:	a805      	add	r0, sp, #20
 800fd60:	f000 f8f9 	bl	800ff56 <_ZN8touchgfx9Matrix3x3C1Ev>
 800fd64:	6833      	ldr	r3, [r6, #0]
 800fd66:	4630      	mov	r0, r6
 800fd68:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800fd6a:	4798      	blx	r3
 800fd6c:	a805      	add	r0, sp, #20
 800fd6e:	eef0 0a40 	vmov.f32	s1, s0
 800fd72:	f000 f8f4 	bl	800ff5e <_ZN8touchgfx9Matrix3x35scaleEff>
 800fd76:	6860      	ldr	r0, [r4, #4]
 800fd78:	f1ba 0f03 	cmp.w	sl, #3
 800fd7c:	d83b      	bhi.n	800fdf6 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xc2>
 800fd7e:	e8df f00a 	tbb	[pc, sl]
 800fd82:	1002      	.short	0x1002
 800fd84:	9f71      	.short	0x9f71
 800fd86:	6803      	ldr	r3, [r0, #0]
 800fd88:	462a      	mov	r2, r5
 800fd8a:	689b      	ldr	r3, [r3, #8]
 800fd8c:	4641      	mov	r1, r8
 800fd8e:	4798      	blx	r3
 800fd90:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 800fd94:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 800fd98:	ee07 7a90 	vmov	s15, r7
 800fd9c:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 800fda0:	e026      	b.n	800fdf0 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xbc>
 800fda2:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
 800fda6:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 800fdaa:	8869      	ldrh	r1, [r5, #2]
 800fdac:	f8ad 2010 	strh.w	r2, [sp, #16]
 800fdb0:	1a9b      	subs	r3, r3, r2
 800fdb2:	1a5b      	subs	r3, r3, r1
 800fdb4:	f8ad 300c 	strh.w	r3, [sp, #12]
 800fdb8:	882b      	ldrh	r3, [r5, #0]
 800fdba:	f8ad 300e 	strh.w	r3, [sp, #14]
 800fdbe:	88ab      	ldrh	r3, [r5, #4]
 800fdc0:	f8ad 3012 	strh.w	r3, [sp, #18]
 800fdc4:	6803      	ldr	r3, [r0, #0]
 800fdc6:	aa03      	add	r2, sp, #12
 800fdc8:	689b      	ldr	r3, [r3, #8]
 800fdca:	4641      	mov	r1, r8
 800fdcc:	4798      	blx	r3
 800fdce:	ed9f 0a58 	vldr	s0, [pc, #352]	@ 800ff30 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1fc>
 800fdd2:	a805      	add	r0, sp, #20
 800fdd4:	f000 f8e8 	bl	800ffa8 <_ZN8touchgfx9Matrix3x36rotateEf>
 800fdd8:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 800fddc:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 800fdde:	ee07 7a90 	vmov	s15, r7
 800fde2:	1a9b      	subs	r3, r3, r2
 800fde4:	ee00 3a10 	vmov	s0, r3
 800fde8:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 800fdec:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 800fdf0:	a805      	add	r0, sp, #20
 800fdf2:	f000 f927 	bl	8010044 <_ZN8touchgfx9Matrix3x39translateEff>
 800fdf6:	6860      	ldr	r0, [r4, #4]
 800fdf8:	6803      	ldr	r3, [r0, #0]
 800fdfa:	a905      	add	r1, sp, #20
 800fdfc:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800fdfe:	4798      	blx	r3
 800fe00:	6860      	ldr	r0, [r4, #4]
 800fe02:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 800fe04:	6803      	ldr	r3, [r0, #0]
 800fe06:	f041 417f 	orr.w	r1, r1, #4278190080	@ 0xff000000
 800fe0a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800fe0c:	4798      	blx	r3
 800fe0e:	6860      	ldr	r0, [r4, #4]
 800fe10:	f89d 1060 	ldrb.w	r1, [sp, #96]	@ 0x60
 800fe14:	6803      	ldr	r3, [r0, #0]
 800fe16:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800fe18:	4798      	blx	r3
 800fe1a:	6860      	ldr	r0, [r4, #4]
 800fe1c:	6803      	ldr	r3, [r0, #0]
 800fe1e:	2101      	movs	r1, #1
 800fe20:	68db      	ldr	r3, [r3, #12]
 800fe22:	2500      	movs	r5, #0
 800fe24:	4798      	blx	r3
 800fe26:	f8b9 7000 	ldrh.w	r7, [r9]
 800fe2a:	61a5      	str	r5, [r4, #24]
 800fe2c:	f104 0310 	add.w	r3, r4, #16
 800fe30:	f104 0208 	add.w	r2, r4, #8
 800fe34:	f104 0114 	add.w	r1, r4, #20
 800fe38:	f104 000c 	add.w	r0, r4, #12
 800fe3c:	f109 0602 	add.w	r6, r9, #2
 800fe40:	f7f2 ffd8 	bl	8002df4 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>
 800fe44:	42af      	cmp	r7, r5
 800fe46:	dd60      	ble.n	800ff0a <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1d6>
 800fe48:	8831      	ldrh	r1, [r6, #0]
 800fe4a:	f101 030f 	add.w	r3, r1, #15
 800fe4e:	1cb2      	adds	r2, r6, #2
 800fe50:	f3c3 1307 	ubfx	r3, r3, #4, #8
 800fe54:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800fe58:	4620      	mov	r0, r4
 800fe5a:	f7ff fda3 	bl	800f9a4 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>
 800fe5e:	3501      	adds	r5, #1
 800fe60:	4606      	mov	r6, r0
 800fe62:	e7ef      	b.n	800fe44 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x110>
 800fe64:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800fe68:	f8b8 3004 	ldrh.w	r3, [r8, #4]
 800fe6c:	8829      	ldrh	r1, [r5, #0]
 800fe6e:	f8ad 2010 	strh.w	r2, [sp, #16]
 800fe72:	1a9b      	subs	r3, r3, r2
 800fe74:	1a5b      	subs	r3, r3, r1
 800fe76:	f8ad 300c 	strh.w	r3, [sp, #12]
 800fe7a:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800fe7e:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800fe82:	886d      	ldrh	r5, [r5, #2]
 800fe84:	f8ad 1012 	strh.w	r1, [sp, #18]
 800fe88:	1a5b      	subs	r3, r3, r1
 800fe8a:	1b5b      	subs	r3, r3, r5
 800fe8c:	f8ad 300e 	strh.w	r3, [sp, #14]
 800fe90:	6803      	ldr	r3, [r0, #0]
 800fe92:	aa03      	add	r2, sp, #12
 800fe94:	689b      	ldr	r3, [r3, #8]
 800fe96:	4641      	mov	r1, r8
 800fe98:	4798      	blx	r3
 800fe9a:	ed9f 0a26 	vldr	s0, [pc, #152]	@ 800ff34 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x200>
 800fe9e:	a805      	add	r0, sp, #20
 800fea0:	f000 f882 	bl	800ffa8 <_ZN8touchgfx9Matrix3x36rotateEf>
 800fea4:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 800fea8:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 800feaa:	1a9b      	subs	r3, r3, r2
 800feac:	ee00 3a90 	vmov	s1, r3
 800feb0:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
 800feb4:	1bdb      	subs	r3, r3, r7
 800feb6:	ee00 3a10 	vmov	s0, r3
 800feba:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 800febe:	e795      	b.n	800fdec <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xb8>
 800fec0:	886b      	ldrh	r3, [r5, #2]
 800fec2:	f8ad 300c 	strh.w	r3, [sp, #12]
 800fec6:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800feca:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800fece:	8829      	ldrh	r1, [r5, #0]
 800fed0:	f8ad 2012 	strh.w	r2, [sp, #18]
 800fed4:	1a9b      	subs	r3, r3, r2
 800fed6:	1a5b      	subs	r3, r3, r1
 800fed8:	f8ad 300e 	strh.w	r3, [sp, #14]
 800fedc:	88eb      	ldrh	r3, [r5, #6]
 800fede:	f8ad 3010 	strh.w	r3, [sp, #16]
 800fee2:	6803      	ldr	r3, [r0, #0]
 800fee4:	aa03      	add	r2, sp, #12
 800fee6:	689b      	ldr	r3, [r3, #8]
 800fee8:	4641      	mov	r1, r8
 800feea:	4798      	blx	r3
 800feec:	ed9f 0a12 	vldr	s0, [pc, #72]	@ 800ff38 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x204>
 800fef0:	a805      	add	r0, sp, #20
 800fef2:	f000 f859 	bl	800ffa8 <_ZN8touchgfx9Matrix3x36rotateEf>
 800fef6:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 800fefa:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
 800fefe:	1bdb      	subs	r3, r3, r7
 800ff00:	ee00 3a90 	vmov	s1, r3
 800ff04:	eef8 0ae0 	vcvt.f32.s32	s1, s1
 800ff08:	e748      	b.n	800fd9c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x68>
 800ff0a:	6860      	ldr	r0, [r4, #4]
 800ff0c:	8b22      	ldrh	r2, [r4, #24]
 800ff0e:	6803      	ldr	r3, [r0, #0]
 800ff10:	2100      	movs	r1, #0
 800ff12:	9101      	str	r1, [sp, #4]
 800ff14:	8b61      	ldrh	r1, [r4, #26]
 800ff16:	9100      	str	r1, [sp, #0]
 800ff18:	6a1d      	ldr	r5, [r3, #32]
 800ff1a:	e9d4 1302 	ldrd	r1, r3, [r4, #8]
 800ff1e:	47a8      	blx	r5
 800ff20:	6860      	ldr	r0, [r4, #4]
 800ff22:	6803      	ldr	r3, [r0, #0]
 800ff24:	69db      	ldr	r3, [r3, #28]
 800ff26:	4798      	blx	r3
 800ff28:	b00e      	add	sp, #56	@ 0x38
 800ff2a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ff2e:	bf00      	nop
 800ff30:	42b40000 	.word	0x42b40000
 800ff34:	43340000 	.word	0x43340000
 800ff38:	43870000 	.word	0x43870000

0800ff3c <_ZN8touchgfx9Matrix3x35resetEv>:
 800ff3c:	2300      	movs	r3, #0
 800ff3e:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
 800ff42:	6002      	str	r2, [r0, #0]
 800ff44:	6043      	str	r3, [r0, #4]
 800ff46:	6083      	str	r3, [r0, #8]
 800ff48:	60c3      	str	r3, [r0, #12]
 800ff4a:	6102      	str	r2, [r0, #16]
 800ff4c:	6143      	str	r3, [r0, #20]
 800ff4e:	6183      	str	r3, [r0, #24]
 800ff50:	61c3      	str	r3, [r0, #28]
 800ff52:	6202      	str	r2, [r0, #32]
 800ff54:	4770      	bx	lr

0800ff56 <_ZN8touchgfx9Matrix3x3C1Ev>:
 800ff56:	b508      	push	{r3, lr}
 800ff58:	f7ff fff0 	bl	800ff3c <_ZN8touchgfx9Matrix3x35resetEv>
 800ff5c:	bd08      	pop	{r3, pc}

0800ff5e <_ZN8touchgfx9Matrix3x35scaleEff>:
 800ff5e:	edd0 7a00 	vldr	s15, [r0]
 800ff62:	ee67 7a80 	vmul.f32	s15, s15, s0
 800ff66:	edc0 7a00 	vstr	s15, [r0]
 800ff6a:	edd0 7a01 	vldr	s15, [r0, #4]
 800ff6e:	ee67 7a80 	vmul.f32	s15, s15, s0
 800ff72:	edc0 7a01 	vstr	s15, [r0, #4]
 800ff76:	edd0 7a02 	vldr	s15, [r0, #8]
 800ff7a:	ee27 0a80 	vmul.f32	s0, s15, s0
 800ff7e:	edd0 7a03 	vldr	s15, [r0, #12]
 800ff82:	ed80 0a02 	vstr	s0, [r0, #8]
 800ff86:	ee67 7aa0 	vmul.f32	s15, s15, s1
 800ff8a:	edc0 7a03 	vstr	s15, [r0, #12]
 800ff8e:	edd0 7a04 	vldr	s15, [r0, #16]
 800ff92:	ee67 7aa0 	vmul.f32	s15, s15, s1
 800ff96:	edc0 7a04 	vstr	s15, [r0, #16]
 800ff9a:	edd0 7a05 	vldr	s15, [r0, #20]
 800ff9e:	ee67 0aa0 	vmul.f32	s1, s15, s1
 800ffa2:	edc0 0a05 	vstr	s1, [r0, #20]
 800ffa6:	4770      	bx	lr

0800ffa8 <_ZN8touchgfx9Matrix3x36rotateEf>:
 800ffa8:	b510      	push	{r4, lr}
 800ffaa:	eddf 7a24 	vldr	s15, [pc, #144]	@ 801003c <_ZN8touchgfx9Matrix3x36rotateEf+0x94>
 800ffae:	ee20 0a27 	vmul.f32	s0, s0, s15
 800ffb2:	eddf 7a23 	vldr	s15, [pc, #140]	@ 8010040 <_ZN8touchgfx9Matrix3x36rotateEf+0x98>
 800ffb6:	ed2d 8b02 	vpush	{d8}
 800ffba:	eec0 8a27 	vdiv.f32	s17, s0, s15
 800ffbe:	4604      	mov	r4, r0
 800ffc0:	eeb0 0a68 	vmov.f32	s0, s17
 800ffc4:	f010 fccc 	bl	8020960 <cosf>
 800ffc8:	eeb0 8a40 	vmov.f32	s16, s0
 800ffcc:	eeb0 0a68 	vmov.f32	s0, s17
 800ffd0:	f010 fd0a 	bl	80209e8 <sinf>
 800ffd4:	edd4 6a03 	vldr	s13, [r4, #12]
 800ffd8:	edd4 4a00 	vldr	s9, [r4]
 800ffdc:	ed94 7a04 	vldr	s14, [r4, #16]
 800ffe0:	ed94 5a01 	vldr	s10, [r4, #4]
 800ffe4:	edd4 5a02 	vldr	s11, [r4, #8]
 800ffe8:	ee60 7a66 	vnmul.f32	s15, s0, s13
 800ffec:	ee66 6a88 	vmul.f32	s13, s13, s16
 800fff0:	eee8 7a24 	vfma.f32	s15, s16, s9
 800fff4:	eee0 6a24 	vfma.f32	s13, s0, s9
 800fff8:	edc4 7a00 	vstr	s15, [r4]
 800fffc:	ee60 7a47 	vnmul.f32	s15, s0, s14
 8010000:	ee27 7a08 	vmul.f32	s14, s14, s16
 8010004:	eee8 7a05 	vfma.f32	s15, s16, s10
 8010008:	eea0 7a05 	vfma.f32	s14, s0, s10
 801000c:	edc4 7a01 	vstr	s15, [r4, #4]
 8010010:	edd4 7a05 	vldr	s15, [r4, #20]
 8010014:	edc4 6a03 	vstr	s13, [r4, #12]
 8010018:	ee20 6a67 	vnmul.f32	s12, s0, s15
 801001c:	ee67 7a88 	vmul.f32	s15, s15, s16
 8010020:	eea8 6a25 	vfma.f32	s12, s16, s11
 8010024:	ecbd 8b02 	vpop	{d8}
 8010028:	eee0 7a25 	vfma.f32	s15, s0, s11
 801002c:	ed84 6a02 	vstr	s12, [r4, #8]
 8010030:	ed84 7a04 	vstr	s14, [r4, #16]
 8010034:	edc4 7a05 	vstr	s15, [r4, #20]
 8010038:	bd10      	pop	{r4, pc}
 801003a:	bf00      	nop
 801003c:	40490fdb 	.word	0x40490fdb
 8010040:	43340000 	.word	0x43340000

08010044 <_ZN8touchgfx9Matrix3x39translateEff>:
 8010044:	ed90 6a06 	vldr	s12, [r0, #24]
 8010048:	edd0 7a00 	vldr	s15, [r0]
 801004c:	edd0 6a07 	vldr	s13, [r0, #28]
 8010050:	ed90 7a08 	vldr	s14, [r0, #32]
 8010054:	eee6 7a00 	vfma.f32	s15, s12, s0
 8010058:	edc0 7a00 	vstr	s15, [r0]
 801005c:	edd0 7a01 	vldr	s15, [r0, #4]
 8010060:	eee6 7a80 	vfma.f32	s15, s13, s0
 8010064:	edc0 7a01 	vstr	s15, [r0, #4]
 8010068:	edd0 7a02 	vldr	s15, [r0, #8]
 801006c:	eee7 7a00 	vfma.f32	s15, s14, s0
 8010070:	edc0 7a02 	vstr	s15, [r0, #8]
 8010074:	edd0 7a03 	vldr	s15, [r0, #12]
 8010078:	eee6 7a20 	vfma.f32	s15, s12, s1
 801007c:	edc0 7a03 	vstr	s15, [r0, #12]
 8010080:	edd0 7a04 	vldr	s15, [r0, #16]
 8010084:	eee6 7aa0 	vfma.f32	s15, s13, s1
 8010088:	edc0 7a04 	vstr	s15, [r0, #16]
 801008c:	edd0 7a05 	vldr	s15, [r0, #20]
 8010090:	eee7 7a20 	vfma.f32	s15, s14, s1
 8010094:	edc0 7a05 	vstr	s15, [r0, #20]
 8010098:	4770      	bx	lr

0801009a <_ZNK8touchgfx9Matrix3x315affineTransformEff>:
 801009a:	edd0 6a01 	vldr	s13, [r0, #4]
 801009e:	edd0 7a04 	vldr	s15, [r0, #16]
 80100a2:	ed90 7a03 	vldr	s14, [r0, #12]
 80100a6:	ee60 7aa7 	vmul.f32	s15, s1, s15
 80100aa:	ee60 0aa6 	vmul.f32	s1, s1, s13
 80100ae:	edd0 6a00 	vldr	s13, [r0]
 80100b2:	eee7 7a00 	vfma.f32	s15, s14, s0
 80100b6:	b084      	sub	sp, #16
 80100b8:	eee6 0a80 	vfma.f32	s1, s13, s0
 80100bc:	ed90 7a05 	vldr	s14, [r0, #20]
 80100c0:	ed90 0a02 	vldr	s0, [r0, #8]
 80100c4:	ee30 0a80 	vadd.f32	s0, s1, s0
 80100c8:	ee77 0a87 	vadd.f32	s1, s15, s14
 80100cc:	b004      	add	sp, #16
 80100ce:	4770      	bx	lr

080100d0 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 80100d0:	b530      	push	{r4, r5, lr}
 80100d2:	8083      	strh	r3, [r0, #4]
 80100d4:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 80100d8:	80c3      	strh	r3, [r0, #6]
 80100da:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80100de:	7203      	strb	r3, [r0, #8]
 80100e0:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80100e4:	f89d 5018 	ldrb.w	r5, [sp, #24]
 80100e8:	7243      	strb	r3, [r0, #9]
 80100ea:	7a83      	ldrb	r3, [r0, #10]
 80100ec:	6141      	str	r1, [r0, #20]
 80100ee:	f365 0306 	bfi	r3, r5, #0, #7
 80100f2:	f89d 501c 	ldrb.w	r5, [sp, #28]
 80100f6:	8302      	strh	r2, [r0, #24]
 80100f8:	f365 13c7 	bfi	r3, r5, #7, #1
 80100fc:	7283      	strb	r3, [r0, #10]
 80100fe:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8010102:	72c3      	strb	r3, [r0, #11]
 8010104:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 8010108:	7303      	strb	r3, [r0, #12]
 801010a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801010e:	81c3      	strh	r3, [r0, #14]
 8010110:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8010114:	8203      	strh	r3, [r0, #16]
 8010116:	4b01      	ldr	r3, [pc, #4]	@ (801011c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8010118:	6003      	str	r3, [r0, #0]
 801011a:	bd30      	pop	{r4, r5, pc}
 801011c:	08023ac4 	.word	0x08023ac4

08010120 <_ZNK8touchgfx9ConstFont4findEt>:
 8010120:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010122:	6944      	ldr	r4, [r0, #20]
 8010124:	b3bc      	cbz	r4, 8010196 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010126:	88a3      	ldrh	r3, [r4, #4]
 8010128:	8b02      	ldrh	r2, [r0, #24]
 801012a:	1acb      	subs	r3, r1, r3
 801012c:	f102 32ff 	add.w	r2, r2, #4294967295
 8010130:	d431      	bmi.n	8010196 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010132:	4293      	cmp	r3, r2
 8010134:	dd0c      	ble.n	8010150 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8010136:	230e      	movs	r3, #14
 8010138:	fb03 4302 	mla	r3, r3, r2, r4
 801013c:	889b      	ldrh	r3, [r3, #4]
 801013e:	1a5b      	subs	r3, r3, r1
 8010140:	1ad3      	subs	r3, r2, r3
 8010142:	429a      	cmp	r2, r3
 8010144:	db27      	blt.n	8010196 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010146:	2b00      	cmp	r3, #0
 8010148:	bfbc      	itt	lt
 801014a:	2302      	movlt	r3, #2
 801014c:	fb92 f3f3 	sdivlt	r3, r2, r3
 8010150:	2500      	movs	r5, #0
 8010152:	260e      	movs	r6, #14
 8010154:	4295      	cmp	r5, r2
 8010156:	dc1e      	bgt.n	8010196 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010158:	fb06 4003 	mla	r0, r6, r3, r4
 801015c:	8887      	ldrh	r7, [r0, #4]
 801015e:	42b9      	cmp	r1, r7
 8010160:	d01a      	beq.n	8010198 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8010162:	d20d      	bcs.n	8010180 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8010164:	1e5a      	subs	r2, r3, #1
 8010166:	4295      	cmp	r5, r2
 8010168:	dc15      	bgt.n	8010196 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801016a:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 801016e:	1a5b      	subs	r3, r3, r1
 8010170:	1ad3      	subs	r3, r2, r3
 8010172:	429a      	cmp	r2, r3
 8010174:	db0f      	blt.n	8010196 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010176:	429d      	cmp	r5, r3
 8010178:	ddec      	ble.n	8010154 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801017a:	1953      	adds	r3, r2, r5
 801017c:	105b      	asrs	r3, r3, #1
 801017e:	e7e9      	b.n	8010154 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8010180:	1c5d      	adds	r5, r3, #1
 8010182:	42aa      	cmp	r2, r5
 8010184:	db07      	blt.n	8010196 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010186:	8a43      	ldrh	r3, [r0, #18]
 8010188:	1acb      	subs	r3, r1, r3
 801018a:	442b      	add	r3, r5
 801018c:	429d      	cmp	r5, r3
 801018e:	dc02      	bgt.n	8010196 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010190:	429a      	cmp	r2, r3
 8010192:	dadf      	bge.n	8010154 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8010194:	e7f1      	b.n	801017a <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8010196:	2000      	movs	r0, #0
 8010198:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801019a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 801019a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801019c:	4604      	mov	r4, r0
 801019e:	4617      	mov	r7, r2
 80101a0:	461e      	mov	r6, r3
 80101a2:	b911      	cbnz	r1, 80101aa <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 80101a4:	2500      	movs	r5, #0
 80101a6:	4628      	mov	r0, r5
 80101a8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80101aa:	290a      	cmp	r1, #10
 80101ac:	d0fa      	beq.n	80101a4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80101ae:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 80101b2:	4291      	cmp	r1, r2
 80101b4:	d0f6      	beq.n	80101a4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80101b6:	f242 020b 	movw	r2, #8203	@ 0x200b
 80101ba:	4291      	cmp	r1, r2
 80101bc:	d0f2      	beq.n	80101a4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80101be:	f7ff ffaf 	bl	8010120 <_ZNK8touchgfx9ConstFont4findEt>
 80101c2:	4605      	mov	r5, r0
 80101c4:	b950      	cbnz	r0, 80101dc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 80101c6:	6823      	ldr	r3, [r4, #0]
 80101c8:	4620      	mov	r0, r4
 80101ca:	691b      	ldr	r3, [r3, #16]
 80101cc:	4798      	blx	r3
 80101ce:	4601      	mov	r1, r0
 80101d0:	4620      	mov	r0, r4
 80101d2:	f7ff ffa5 	bl	8010120 <_ZNK8touchgfx9ConstFont4findEt>
 80101d6:	4605      	mov	r5, r0
 80101d8:	2800      	cmp	r0, #0
 80101da:	d0e3      	beq.n	80101a4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80101dc:	6823      	ldr	r3, [r4, #0]
 80101de:	4629      	mov	r1, r5
 80101e0:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80101e2:	4620      	mov	r0, r4
 80101e4:	4798      	blx	r3
 80101e6:	6038      	str	r0, [r7, #0]
 80101e8:	6823      	ldr	r3, [r4, #0]
 80101ea:	4620      	mov	r0, r4
 80101ec:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80101ee:	4798      	blx	r3
 80101f0:	7030      	strb	r0, [r6, #0]
 80101f2:	e7d8      	b.n	80101a6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

080101f4 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 80101f4:	2000      	movs	r0, #0
 80101f6:	4770      	bx	lr

080101f8 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 80101f8:	2001      	movs	r0, #1
 80101fa:	4770      	bx	lr

080101fc <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 80101fc:	2002      	movs	r0, #2
 80101fe:	4770      	bx	lr

08010200 <_ZN8touchgfx6ScreenD1Ev>:
 8010200:	4770      	bx	lr

08010202 <_ZN8touchgfx12GestureEventD1Ev>:
 8010202:	4770      	bx	lr

08010204 <_ZN8touchgfx9DragEventD1Ev>:
 8010204:	4770      	bx	lr

08010206 <_ZN8touchgfx10ClickEventD1Ev>:
 8010206:	4770      	bx	lr

08010208 <_ZN8touchgfx10ClickEventD0Ev>:
 8010208:	b510      	push	{r4, lr}
 801020a:	210c      	movs	r1, #12
 801020c:	4604      	mov	r4, r0
 801020e:	f010 fb5e 	bl	80208ce <_ZdlPvj>
 8010212:	4620      	mov	r0, r4
 8010214:	bd10      	pop	{r4, pc}

08010216 <_ZN8touchgfx9DragEventD0Ev>:
 8010216:	b510      	push	{r4, lr}
 8010218:	2110      	movs	r1, #16
 801021a:	4604      	mov	r4, r0
 801021c:	f010 fb57 	bl	80208ce <_ZdlPvj>
 8010220:	4620      	mov	r0, r4
 8010222:	bd10      	pop	{r4, pc}

08010224 <_ZN8touchgfx12GestureEventD0Ev>:
 8010224:	b510      	push	{r4, lr}
 8010226:	210c      	movs	r1, #12
 8010228:	4604      	mov	r4, r0
 801022a:	f010 fb50 	bl	80208ce <_ZdlPvj>
 801022e:	4620      	mov	r0, r4
 8010230:	bd10      	pop	{r4, pc}

08010232 <_ZN8touchgfx6ScreenD0Ev>:
 8010232:	b510      	push	{r4, lr}
 8010234:	213c      	movs	r1, #60	@ 0x3c
 8010236:	4604      	mov	r4, r0
 8010238:	f010 fb49 	bl	80208ce <_ZdlPvj>
 801023c:	4620      	mov	r0, r4
 801023e:	bd10      	pop	{r4, pc}

08010240 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8010240:	b530      	push	{r4, r5, lr}
 8010242:	460d      	mov	r5, r1
 8010244:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 8010246:	b087      	sub	sp, #28
 8010248:	4604      	mov	r4, r0
 801024a:	b301      	cbz	r1, 801028e <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 801024c:	a801      	add	r0, sp, #4
 801024e:	f7ff fb83 	bl	800f958 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010252:	892a      	ldrh	r2, [r5, #8]
 8010254:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8010258:	7928      	ldrb	r0, [r5, #4]
 801025a:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801025e:	f88d 0010 	strb.w	r0, [sp, #16]
 8010262:	1ad2      	subs	r2, r2, r3
 8010264:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 8010266:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8010268:	f8ad 1012 	strh.w	r1, [sp, #18]
 801026c:	441a      	add	r2, r3
 801026e:	896b      	ldrh	r3, [r5, #10]
 8010270:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8010274:	f8ad 2014 	strh.w	r2, [sp, #20]
 8010278:	1b5b      	subs	r3, r3, r5
 801027a:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 801027c:	442b      	add	r3, r5
 801027e:	4d05      	ldr	r5, [pc, #20]	@ (8010294 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8010280:	9503      	str	r5, [sp, #12]
 8010282:	f8ad 3016 	strh.w	r3, [sp, #22]
 8010286:	6803      	ldr	r3, [r0, #0]
 8010288:	a903      	add	r1, sp, #12
 801028a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801028c:	4798      	blx	r3
 801028e:	b007      	add	sp, #28
 8010290:	bd30      	pop	{r4, r5, pc}
 8010292:	bf00      	nop
 8010294:	08023b54 	.word	0x08023b54

08010298 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8010298:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801029c:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 801029e:	b08a      	sub	sp, #40	@ 0x28
 80102a0:	4604      	mov	r4, r0
 80102a2:	460d      	mov	r5, r1
 80102a4:	b113      	cbz	r3, 80102ac <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 80102a6:	790b      	ldrb	r3, [r1, #4]
 80102a8:	2b00      	cmp	r3, #0
 80102aa:	d044      	beq.n	8010336 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80102ac:	f104 0804 	add.w	r8, r4, #4
 80102b0:	4641      	mov	r1, r8
 80102b2:	a803      	add	r0, sp, #12
 80102b4:	f7ff fb50 	bl	800f958 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80102b8:	792b      	ldrb	r3, [r5, #4]
 80102ba:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 80102be:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 80102c2:	b983      	cbnz	r3, 80102e6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 80102c4:	892a      	ldrh	r2, [r5, #8]
 80102c6:	88e9      	ldrh	r1, [r5, #6]
 80102c8:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 80102cc:	1b92      	subs	r2, r2, r6
 80102ce:	1bc9      	subs	r1, r1, r7
 80102d0:	9301      	str	r3, [sp, #4]
 80102d2:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 80102d6:	9300      	str	r3, [sp, #0]
 80102d8:	b212      	sxth	r2, r2
 80102da:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 80102de:	b209      	sxth	r1, r1
 80102e0:	4640      	mov	r0, r8
 80102e2:	f7f9 fbdd 	bl	8009aa0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 80102e6:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 80102e8:	b329      	cbz	r1, 8010336 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80102ea:	a805      	add	r0, sp, #20
 80102ec:	f7ff fb34 	bl	800f958 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80102f0:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80102f4:	792b      	ldrb	r3, [r5, #4]
 80102f6:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 80102f8:	f88d 3020 	strb.w	r3, [sp, #32]
 80102fc:	1abf      	subs	r7, r7, r2
 80102fe:	88ea      	ldrh	r2, [r5, #6]
 8010300:	4417      	add	r7, r2
 8010302:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 8010304:	4417      	add	r7, r2
 8010306:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 801030a:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 801030e:	1ab6      	subs	r6, r6, r2
 8010310:	892a      	ldrh	r2, [r5, #8]
 8010312:	4416      	add	r6, r2
 8010314:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8010316:	4416      	add	r6, r2
 8010318:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 801031c:	4a07      	ldr	r2, [pc, #28]	@ (801033c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 801031e:	9207      	str	r2, [sp, #28]
 8010320:	2600      	movs	r6, #0
 8010322:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 8010326:	6803      	ldr	r3, [r0, #0]
 8010328:	a907      	add	r1, sp, #28
 801032a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801032c:	4798      	blx	r3
 801032e:	792b      	ldrb	r3, [r5, #4]
 8010330:	b10b      	cbz	r3, 8010336 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8010332:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 8010336:	b00a      	add	sp, #40	@ 0x28
 8010338:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801033c:	08023b2c 	.word	0x08023b2c

08010340 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8010340:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010344:	460c      	mov	r4, r1
 8010346:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 8010348:	b088      	sub	sp, #32
 801034a:	4605      	mov	r5, r0
 801034c:	2900      	cmp	r1, #0
 801034e:	d06d      	beq.n	801042c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8010350:	4668      	mov	r0, sp
 8010352:	f7ff fb01 	bl	800f958 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010356:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 8010358:	88e3      	ldrh	r3, [r4, #6]
 801035a:	f9bd 8000 	ldrsh.w	r8, [sp]
 801035e:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8010362:	440b      	add	r3, r1
 8010364:	b21b      	sxth	r3, r3
 8010366:	4543      	cmp	r3, r8
 8010368:	db31      	blt.n	80103ce <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801036a:	f8bd c004 	ldrh.w	ip, [sp, #4]
 801036e:	44c4      	add	ip, r8
 8010370:	fa0f fc8c 	sxth.w	ip, ip
 8010374:	4563      	cmp	r3, ip
 8010376:	da2a      	bge.n	80103ce <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8010378:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 801037a:	8926      	ldrh	r6, [r4, #8]
 801037c:	4416      	add	r6, r2
 801037e:	b236      	sxth	r6, r6
 8010380:	42be      	cmp	r6, r7
 8010382:	db24      	blt.n	80103ce <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8010384:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8010388:	4438      	add	r0, r7
 801038a:	b200      	sxth	r0, r0
 801038c:	4286      	cmp	r6, r0
 801038e:	da1e      	bge.n	80103ce <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8010390:	8963      	ldrh	r3, [r4, #10]
 8010392:	4419      	add	r1, r3
 8010394:	b209      	sxth	r1, r1
 8010396:	4541      	cmp	r1, r8
 8010398:	db08      	blt.n	80103ac <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801039a:	4561      	cmp	r1, ip
 801039c:	da06      	bge.n	80103ac <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801039e:	89a3      	ldrh	r3, [r4, #12]
 80103a0:	441a      	add	r2, r3
 80103a2:	b212      	sxth	r2, r2
 80103a4:	42ba      	cmp	r2, r7
 80103a6:	db01      	blt.n	80103ac <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80103a8:	4282      	cmp	r2, r0
 80103aa:	db10      	blt.n	80103ce <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80103ac:	4b21      	ldr	r3, [pc, #132]	@ (8010434 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 80103ae:	9304      	str	r3, [sp, #16]
 80103b0:	2302      	movs	r3, #2
 80103b2:	f88d 3014 	strb.w	r3, [sp, #20]
 80103b6:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 80103b8:	2300      	movs	r3, #0
 80103ba:	f8ad 3016 	strh.w	r3, [sp, #22]
 80103be:	f8ad 3018 	strh.w	r3, [sp, #24]
 80103c2:	f8ad 301a 	strh.w	r3, [sp, #26]
 80103c6:	6803      	ldr	r3, [r0, #0]
 80103c8:	a904      	add	r1, sp, #16
 80103ca:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80103cc:	4798      	blx	r3
 80103ce:	1d29      	adds	r1, r5, #4
 80103d0:	a802      	add	r0, sp, #8
 80103d2:	f7ff fac1 	bl	800f958 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80103d6:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80103da:	88e0      	ldrh	r0, [r4, #6]
 80103dc:	7921      	ldrb	r1, [r4, #4]
 80103de:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 80103e2:	8922      	ldrh	r2, [r4, #8]
 80103e4:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 80103e6:	f88d 1014 	strb.w	r1, [sp, #20]
 80103ea:	eba3 0808 	sub.w	r8, r3, r8
 80103ee:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80103f2:	1bdf      	subs	r7, r3, r7
 80103f4:	b2bb      	uxth	r3, r7
 80103f6:	fa1f f888 	uxth.w	r8, r8
 80103fa:	8967      	ldrh	r7, [r4, #10]
 80103fc:	89a4      	ldrh	r4, [r4, #12]
 80103fe:	4440      	add	r0, r8
 8010400:	4460      	add	r0, ip
 8010402:	441a      	add	r2, r3
 8010404:	44b8      	add	r8, r7
 8010406:	4423      	add	r3, r4
 8010408:	f8ad 0016 	strh.w	r0, [sp, #22]
 801040c:	4433      	add	r3, r6
 801040e:	4432      	add	r2, r6
 8010410:	44e0      	add	r8, ip
 8010412:	4c09      	ldr	r4, [pc, #36]	@ (8010438 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8010414:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8010416:	9404      	str	r4, [sp, #16]
 8010418:	f8ad 2018 	strh.w	r2, [sp, #24]
 801041c:	f8ad 801a 	strh.w	r8, [sp, #26]
 8010420:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010424:	6803      	ldr	r3, [r0, #0]
 8010426:	a904      	add	r1, sp, #16
 8010428:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801042a:	4798      	blx	r3
 801042c:	b008      	add	sp, #32
 801042e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010432:	bf00      	nop
 8010434:	08023b2c 	.word	0x08023b2c
 8010438:	08023b40 	.word	0x08023b40

0801043c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 801043c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801043e:	4604      	mov	r4, r0
 8010440:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8010444:	3201      	adds	r2, #1
 8010446:	d112      	bne.n	801046e <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8010448:	6803      	ldr	r3, [r0, #0]
 801044a:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801044e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8010452:	f8ad 1004 	strh.w	r1, [sp, #4]
 8010456:	2500      	movs	r5, #0
 8010458:	9500      	str	r5, [sp, #0]
 801045a:	466d      	mov	r5, sp
 801045c:	4629      	mov	r1, r5
 801045e:	f8ad 2006 	strh.w	r2, [sp, #6]
 8010462:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8010464:	4798      	blx	r3
 8010466:	e895 0003 	ldmia.w	r5, {r0, r1}
 801046a:	e884 0003 	stmia.w	r4, {r0, r1}
 801046e:	4620      	mov	r0, r4
 8010470:	b003      	add	sp, #12
 8010472:	bd30      	pop	{r4, r5, pc}

08010474 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8010474:	b513      	push	{r0, r1, r4, lr}
 8010476:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 801047a:	3301      	adds	r3, #1
 801047c:	4604      	mov	r4, r0
 801047e:	d109      	bne.n	8010494 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8010480:	4601      	mov	r1, r0
 8010482:	4668      	mov	r0, sp
 8010484:	f7ff fa68 	bl	800f958 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010488:	f8bd 3000 	ldrh.w	r3, [sp]
 801048c:	8423      	strh	r3, [r4, #32]
 801048e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010492:	8463      	strh	r3, [r4, #34]	@ 0x22
 8010494:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8010498:	b002      	add	sp, #8
 801049a:	bd10      	pop	{r4, pc}

0801049c <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 801049c:	b513      	push	{r0, r1, r4, lr}
 801049e:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 80104a2:	3301      	adds	r3, #1
 80104a4:	4604      	mov	r4, r0
 80104a6:	d109      	bne.n	80104bc <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 80104a8:	4601      	mov	r1, r0
 80104aa:	4668      	mov	r0, sp
 80104ac:	f7ff fa54 	bl	800f958 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80104b0:	f8bd 3000 	ldrh.w	r3, [sp]
 80104b4:	8423      	strh	r3, [r4, #32]
 80104b6:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80104ba:	8463      	strh	r3, [r4, #34]	@ 0x22
 80104bc:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 80104c0:	b002      	add	sp, #8
 80104c2:	bd10      	pop	{r4, pc}

080104c4 <_ZN8touchgfx6ScreenC1Ev>:
 80104c4:	b570      	push	{r4, r5, r6, lr}
 80104c6:	4605      	mov	r5, r0
 80104c8:	4b16      	ldr	r3, [pc, #88]	@ (8010524 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 80104ca:	f845 3b04 	str.w	r3, [r5], #4
 80104ce:	2300      	movs	r3, #0
 80104d0:	8103      	strh	r3, [r0, #8]
 80104d2:	8143      	strh	r3, [r0, #10]
 80104d4:	8183      	strh	r3, [r0, #12]
 80104d6:	81c3      	strh	r3, [r0, #14]
 80104d8:	8203      	strh	r3, [r0, #16]
 80104da:	8243      	strh	r3, [r0, #18]
 80104dc:	8283      	strh	r3, [r0, #20]
 80104de:	82c3      	strh	r3, [r0, #22]
 80104e0:	e9c0 3306 	strd	r3, r3, [r0, #24]
 80104e4:	6203      	str	r3, [r0, #32]
 80104e6:	8483      	strh	r3, [r0, #36]	@ 0x24
 80104e8:	84c3      	strh	r3, [r0, #38]	@ 0x26
 80104ea:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 80104ee:	4a0e      	ldr	r2, [pc, #56]	@ (8010528 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 80104f0:	6343      	str	r3, [r0, #52]	@ 0x34
 80104f2:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 80104f6:	4b0d      	ldr	r3, [pc, #52]	@ (801052c <_ZN8touchgfx6ScreenC1Ev+0x68>)
 80104f8:	6042      	str	r2, [r0, #4]
 80104fa:	f9b3 6000 	ldrsh.w	r6, [r3]
 80104fe:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 8010500:	4a0b      	ldr	r2, [pc, #44]	@ (8010530 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8010502:	4604      	mov	r4, r0
 8010504:	2101      	movs	r1, #1
 8010506:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 801050a:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 801050e:	f9b2 1000 	ldrsh.w	r1, [r2]
 8010512:	4628      	mov	r0, r5
 8010514:	4798      	blx	r3
 8010516:	6863      	ldr	r3, [r4, #4]
 8010518:	4628      	mov	r0, r5
 801051a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801051c:	4631      	mov	r1, r6
 801051e:	4798      	blx	r3
 8010520:	4620      	mov	r0, r4
 8010522:	bd70      	pop	{r4, r5, r6, pc}
 8010524:	08023b68 	.word	0x08023b68
 8010528:	080237f4 	.word	0x080237f4
 801052c:	20013084 	.word	0x20013084
 8010530:	20013082 	.word	0x20013082

08010534 <_ZN8touchgfx6Screen4drawEv>:
 8010534:	b507      	push	{r0, r1, r2, lr}
 8010536:	4b09      	ldr	r3, [pc, #36]	@ (801055c <_ZN8touchgfx6Screen4drawEv+0x28>)
 8010538:	f9b3 2000 	ldrsh.w	r2, [r3]
 801053c:	4b08      	ldr	r3, [pc, #32]	@ (8010560 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 801053e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8010542:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010546:	f8ad 3006 	strh.w	r3, [sp, #6]
 801054a:	6803      	ldr	r3, [r0, #0]
 801054c:	2100      	movs	r1, #0
 801054e:	9100      	str	r1, [sp, #0]
 8010550:	689b      	ldr	r3, [r3, #8]
 8010552:	4669      	mov	r1, sp
 8010554:	4798      	blx	r3
 8010556:	b003      	add	sp, #12
 8010558:	f85d fb04 	ldr.w	pc, [sp], #4
 801055c:	20013082 	.word	0x20013082
 8010560:	20013084 	.word	0x20013084

08010564 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8010564:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010568:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 801056c:	2b00      	cmp	r3, #0
 801056e:	b089      	sub	sp, #36	@ 0x24
 8010570:	4680      	mov	r8, r0
 8010572:	460c      	mov	r4, r1
 8010574:	4615      	mov	r5, r2
 8010576:	dd0e      	ble.n	8010596 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8010578:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 801057c:	2b00      	cmp	r3, #0
 801057e:	dd0a      	ble.n	8010596 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8010580:	4628      	mov	r0, r5
 8010582:	f7ff ff5b 	bl	801043c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8010586:	4621      	mov	r1, r4
 8010588:	f7fd feb9 	bl	800e2fe <_ZNK8touchgfx4Rect9intersectERKS0_>
 801058c:	69eb      	ldr	r3, [r5, #28]
 801058e:	b928      	cbnz	r0, 801059c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8010590:	461d      	mov	r5, r3
 8010592:	2b00      	cmp	r3, #0
 8010594:	d1f4      	bne.n	8010580 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8010596:	b009      	add	sp, #36	@ 0x24
 8010598:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801059c:	ae04      	add	r6, sp, #16
 801059e:	2b00      	cmp	r3, #0
 80105a0:	f000 80b5 	beq.w	801070e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80105a4:	682b      	ldr	r3, [r5, #0]
 80105a6:	4629      	mov	r1, r5
 80105a8:	68db      	ldr	r3, [r3, #12]
 80105aa:	a802      	add	r0, sp, #8
 80105ac:	4798      	blx	r3
 80105ae:	4628      	mov	r0, r5
 80105b0:	f7ff ff60 	bl	8010474 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80105b4:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 80105b8:	4407      	add	r7, r0
 80105ba:	4628      	mov	r0, r5
 80105bc:	f7ff ff6e 	bl	801049c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80105c0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80105c4:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 80105c8:	f8ad 2014 	strh.w	r2, [sp, #20]
 80105cc:	4418      	add	r0, r3
 80105ce:	4621      	mov	r1, r4
 80105d0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80105d4:	f8ad 0012 	strh.w	r0, [sp, #18]
 80105d8:	b23f      	sxth	r7, r7
 80105da:	4630      	mov	r0, r6
 80105dc:	f8ad 3016 	strh.w	r3, [sp, #22]
 80105e0:	f8ad 7010 	strh.w	r7, [sp, #16]
 80105e4:	f7f9 fb40 	bl	8009c68 <_ZN8touchgfx4RectaNERKS0_>
 80105e8:	4628      	mov	r0, r5
 80105ea:	f7ff ff27 	bl	801043c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80105ee:	4602      	mov	r2, r0
 80105f0:	e896 0003 	ldmia.w	r6, {r0, r1}
 80105f4:	ab06      	add	r3, sp, #24
 80105f6:	e883 0003 	stmia.w	r3, {r0, r1}
 80105fa:	4611      	mov	r1, r2
 80105fc:	4618      	mov	r0, r3
 80105fe:	f7f9 fb33 	bl	8009c68 <_ZN8touchgfx4RectaNERKS0_>
 8010602:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8010606:	f9b4 1000 	ldrsh.w	r1, [r4]
 801060a:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 801060e:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8010612:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8010616:	4299      	cmp	r1, r3
 8010618:	d10b      	bne.n	8010632 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801061a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801061e:	4552      	cmp	r2, sl
 8010620:	d107      	bne.n	8010632 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8010622:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8010626:	455a      	cmp	r2, fp
 8010628:	d103      	bne.n	8010632 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801062a:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801062e:	454a      	cmp	r2, r9
 8010630:	d06d      	beq.n	801070e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8010632:	f1bb 0f00 	cmp.w	fp, #0
 8010636:	dd65      	ble.n	8010704 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8010638:	f1b9 0f00 	cmp.w	r9, #0
 801063c:	dd62      	ble.n	8010704 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801063e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8010642:	fa1f f08a 	uxth.w	r0, sl
 8010646:	4552      	cmp	r2, sl
 8010648:	9000      	str	r0, [sp, #0]
 801064a:	da12      	bge.n	8010672 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 801064c:	9301      	str	r3, [sp, #4]
 801064e:	9b00      	ldr	r3, [sp, #0]
 8010650:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8010654:	f8ad 2012 	strh.w	r2, [sp, #18]
 8010658:	1a9a      	subs	r2, r3, r2
 801065a:	f8ad 1010 	strh.w	r1, [sp, #16]
 801065e:	f8ad 0014 	strh.w	r0, [sp, #20]
 8010662:	f8ad 2016 	strh.w	r2, [sp, #22]
 8010666:	69ea      	ldr	r2, [r5, #28]
 8010668:	4631      	mov	r1, r6
 801066a:	4640      	mov	r0, r8
 801066c:	f7ff ff7a 	bl	8010564 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8010670:	9b01      	ldr	r3, [sp, #4]
 8010672:	f9b4 2000 	ldrsh.w	r2, [r4]
 8010676:	429a      	cmp	r2, r3
 8010678:	b29f      	uxth	r7, r3
 801067a:	da0d      	bge.n	8010698 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 801067c:	f8ad 2010 	strh.w	r2, [sp, #16]
 8010680:	1aba      	subs	r2, r7, r2
 8010682:	f8ad a012 	strh.w	sl, [sp, #18]
 8010686:	f8ad 2014 	strh.w	r2, [sp, #20]
 801068a:	f8ad 9016 	strh.w	r9, [sp, #22]
 801068e:	69ea      	ldr	r2, [r5, #28]
 8010690:	4631      	mov	r1, r6
 8010692:	4640      	mov	r0, r8
 8010694:	f7ff ff66 	bl	8010564 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8010698:	8822      	ldrh	r2, [r4, #0]
 801069a:	88a3      	ldrh	r3, [r4, #4]
 801069c:	445f      	add	r7, fp
 801069e:	4413      	add	r3, r2
 80106a0:	b29b      	uxth	r3, r3
 80106a2:	b2bf      	uxth	r7, r7
 80106a4:	b23a      	sxth	r2, r7
 80106a6:	b219      	sxth	r1, r3
 80106a8:	4291      	cmp	r1, r2
 80106aa:	dd0d      	ble.n	80106c8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 80106ac:	1bdb      	subs	r3, r3, r7
 80106ae:	f8ad 2010 	strh.w	r2, [sp, #16]
 80106b2:	f8ad a012 	strh.w	sl, [sp, #18]
 80106b6:	f8ad 3014 	strh.w	r3, [sp, #20]
 80106ba:	f8ad 9016 	strh.w	r9, [sp, #22]
 80106be:	69ea      	ldr	r2, [r5, #28]
 80106c0:	4631      	mov	r1, r6
 80106c2:	4640      	mov	r0, r8
 80106c4:	f7ff ff4e 	bl	8010564 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80106c8:	88e2      	ldrh	r2, [r4, #6]
 80106ca:	8863      	ldrh	r3, [r4, #2]
 80106cc:	4413      	add	r3, r2
 80106ce:	9a00      	ldr	r2, [sp, #0]
 80106d0:	444a      	add	r2, r9
 80106d2:	b29b      	uxth	r3, r3
 80106d4:	fa1f f982 	uxth.w	r9, r2
 80106d8:	fa0f f289 	sxth.w	r2, r9
 80106dc:	b219      	sxth	r1, r3
 80106de:	428a      	cmp	r2, r1
 80106e0:	da15      	bge.n	801070e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80106e2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80106e6:	f9b4 0000 	ldrsh.w	r0, [r4]
 80106ea:	f8ad 1014 	strh.w	r1, [sp, #20]
 80106ee:	eba3 0309 	sub.w	r3, r3, r9
 80106f2:	f8ad 0010 	strh.w	r0, [sp, #16]
 80106f6:	f8ad 2012 	strh.w	r2, [sp, #18]
 80106fa:	f8ad 3016 	strh.w	r3, [sp, #22]
 80106fe:	69ea      	ldr	r2, [r5, #28]
 8010700:	4631      	mov	r1, r6
 8010702:	e001      	b.n	8010708 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8010704:	69ea      	ldr	r2, [r5, #28]
 8010706:	4621      	mov	r1, r4
 8010708:	4640      	mov	r0, r8
 801070a:	f7ff ff2b 	bl	8010564 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801070e:	4628      	mov	r0, r5
 8010710:	f7ff fe94 	bl	801043c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8010714:	6861      	ldr	r1, [r4, #4]
 8010716:	4602      	mov	r2, r0
 8010718:	6820      	ldr	r0, [r4, #0]
 801071a:	4633      	mov	r3, r6
 801071c:	c303      	stmia	r3!, {r0, r1}
 801071e:	4611      	mov	r1, r2
 8010720:	4630      	mov	r0, r6
 8010722:	f7f9 faa1 	bl	8009c68 <_ZN8touchgfx4RectaNERKS0_>
 8010726:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801072a:	2b00      	cmp	r3, #0
 801072c:	f77f af33 	ble.w	8010596 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8010730:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8010734:	2b00      	cmp	r3, #0
 8010736:	f77f af2e 	ble.w	8010596 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801073a:	4628      	mov	r0, r5
 801073c:	f7ff fe9a 	bl	8010474 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8010740:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8010744:	1a18      	subs	r0, r3, r0
 8010746:	f8ad 0010 	strh.w	r0, [sp, #16]
 801074a:	4628      	mov	r0, r5
 801074c:	f7ff fea6 	bl	801049c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8010750:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8010754:	1a18      	subs	r0, r3, r0
 8010756:	f8ad 0012 	strh.w	r0, [sp, #18]
 801075a:	682b      	ldr	r3, [r5, #0]
 801075c:	4631      	mov	r1, r6
 801075e:	689b      	ldr	r3, [r3, #8]
 8010760:	4628      	mov	r0, r5
 8010762:	4798      	blx	r3
 8010764:	e717      	b.n	8010596 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08010766 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8010766:	b570      	push	{r4, r5, r6, lr}
 8010768:	460c      	mov	r4, r1
 801076a:	b086      	sub	sp, #24
 801076c:	1d06      	adds	r6, r0, #4
 801076e:	2300      	movs	r3, #0
 8010770:	4631      	mov	r1, r6
 8010772:	4605      	mov	r5, r0
 8010774:	a802      	add	r0, sp, #8
 8010776:	9301      	str	r3, [sp, #4]
 8010778:	f7ff f8ee 	bl	800f958 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801077c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8010780:	8822      	ldrh	r2, [r4, #0]
 8010782:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8010786:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801078a:	f8ad 0014 	strh.w	r0, [sp, #20]
 801078e:	1ad2      	subs	r2, r2, r3
 8010790:	8863      	ldrh	r3, [r4, #2]
 8010792:	f8ad 2010 	strh.w	r2, [sp, #16]
 8010796:	1a5b      	subs	r3, r3, r1
 8010798:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 801079c:	f8ad 1016 	strh.w	r1, [sp, #22]
 80107a0:	aa01      	add	r2, sp, #4
 80107a2:	a904      	add	r1, sp, #16
 80107a4:	4630      	mov	r0, r6
 80107a6:	f8ad 3012 	strh.w	r3, [sp, #18]
 80107aa:	f7f9 fb35 	bl	8009e18 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 80107ae:	9a01      	ldr	r2, [sp, #4]
 80107b0:	b11a      	cbz	r2, 80107ba <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 80107b2:	4621      	mov	r1, r4
 80107b4:	4628      	mov	r0, r5
 80107b6:	f7ff fed5 	bl	8010564 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80107ba:	b006      	add	sp, #24
 80107bc:	bd70      	pop	{r4, r5, r6, pc}

080107be <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 80107be:	b530      	push	{r4, r5, lr}
 80107c0:	4602      	mov	r2, r0
 80107c2:	4604      	mov	r4, r0
 80107c4:	f852 0f08 	ldr.w	r0, [r2, #8]!
 80107c8:	b085      	sub	sp, #20
 80107ca:	460d      	mov	r5, r1
 80107cc:	6851      	ldr	r1, [r2, #4]
 80107ce:	466b      	mov	r3, sp
 80107d0:	c303      	stmia	r3!, {r0, r1}
 80107d2:	4629      	mov	r1, r5
 80107d4:	4668      	mov	r0, sp
 80107d6:	f7f9 fa47 	bl	8009c68 <_ZN8touchgfx4RectaNERKS0_>
 80107da:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 80107de:	b12b      	cbz	r3, 80107ec <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 80107e0:	4669      	mov	r1, sp
 80107e2:	4620      	mov	r0, r4
 80107e4:	f7ff ffbf 	bl	8010766 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 80107e8:	b005      	add	sp, #20
 80107ea:	bd30      	pop	{r4, r5, pc}
 80107ec:	3404      	adds	r4, #4
 80107ee:	4621      	mov	r1, r4
 80107f0:	a802      	add	r0, sp, #8
 80107f2:	f7ff f8b1 	bl	800f958 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80107f6:	f8bd 3000 	ldrh.w	r3, [sp]
 80107fa:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 80107fe:	1a9b      	subs	r3, r3, r2
 8010800:	f8ad 3000 	strh.w	r3, [sp]
 8010804:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8010808:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801080c:	4669      	mov	r1, sp
 801080e:	1a9b      	subs	r3, r3, r2
 8010810:	4620      	mov	r0, r4
 8010812:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010816:	f7f9 fac6 	bl	8009da6 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 801081a:	e7e5      	b.n	80107e8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0801081c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 801081c:	680a      	ldr	r2, [r1, #0]
 801081e:	460b      	mov	r3, r1
 8010820:	6992      	ldr	r2, [r2, #24]
 8010822:	1d01      	adds	r1, r0, #4
 8010824:	4618      	mov	r0, r3
 8010826:	4710      	bx	r2

08010828 <_ZN8touchgfx12TextProviderC1Ev>:
 8010828:	b538      	push	{r3, r4, r5, lr}
 801082a:	2500      	movs	r5, #0
 801082c:	2302      	movs	r3, #2
 801082e:	4604      	mov	r4, r0
 8010830:	e9c0 5500 	strd	r5, r5, [r0]
 8010834:	7403      	strb	r3, [r0, #16]
 8010836:	6145      	str	r5, [r0, #20]
 8010838:	7605      	strb	r5, [r0, #24]
 801083a:	83c5      	strh	r5, [r0, #30]
 801083c:	8405      	strh	r5, [r0, #32]
 801083e:	86c5      	strh	r5, [r0, #54]	@ 0x36
 8010840:	8705      	strh	r5, [r0, #56]	@ 0x38
 8010842:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 8010844:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 8010848:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 801084c:	220e      	movs	r2, #14
 801084e:	4629      	mov	r1, r5
 8010850:	304c      	adds	r0, #76	@ 0x4c
 8010852:	f011 f980 	bl	8021b56 <memset>
 8010856:	2301      	movs	r3, #1
 8010858:	4620      	mov	r0, r4
 801085a:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 801085e:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8010862:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 8010866:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 801086a:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 801086e:	f7f2 fa6f 	bl	8002d50 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8010872:	4620      	mov	r0, r4
 8010874:	bd38      	pop	{r3, r4, r5, pc}

08010876 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8010876:	b530      	push	{r4, r5, lr}
 8010878:	2500      	movs	r5, #0
 801087a:	2401      	movs	r4, #1
 801087c:	6843      	ldr	r3, [r0, #4]
 801087e:	b913      	cbnz	r3, 8010886 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8010880:	6803      	ldr	r3, [r0, #0]
 8010882:	b313      	cbz	r3, 80108ca <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8010884:	6043      	str	r3, [r0, #4]
 8010886:	7e03      	ldrb	r3, [r0, #24]
 8010888:	b143      	cbz	r3, 801089c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 801088a:	6943      	ldr	r3, [r0, #20]
 801088c:	b12b      	cbz	r3, 801089a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801088e:	881a      	ldrh	r2, [r3, #0]
 8010890:	b11a      	cbz	r2, 801089a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8010892:	1c9a      	adds	r2, r3, #2
 8010894:	6142      	str	r2, [r0, #20]
 8010896:	8818      	ldrh	r0, [r3, #0]
 8010898:	bd30      	pop	{r4, r5, pc}
 801089a:	7605      	strb	r5, [r0, #24]
 801089c:	6843      	ldr	r3, [r0, #4]
 801089e:	8819      	ldrh	r1, [r3, #0]
 80108a0:	b199      	cbz	r1, 80108ca <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 80108a2:	1c9a      	adds	r2, r3, #2
 80108a4:	2902      	cmp	r1, #2
 80108a6:	6042      	str	r2, [r0, #4]
 80108a8:	d1f5      	bne.n	8010896 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 80108aa:	7c03      	ldrb	r3, [r0, #16]
 80108ac:	2b01      	cmp	r3, #1
 80108ae:	d8e5      	bhi.n	801087c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80108b0:	1c5a      	adds	r2, r3, #1
 80108b2:	3302      	adds	r3, #2
 80108b4:	7402      	strb	r2, [r0, #16]
 80108b6:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 80108ba:	6143      	str	r3, [r0, #20]
 80108bc:	2b00      	cmp	r3, #0
 80108be:	d0dd      	beq.n	801087c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80108c0:	881b      	ldrh	r3, [r3, #0]
 80108c2:	2b00      	cmp	r3, #0
 80108c4:	d0da      	beq.n	801087c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80108c6:	7604      	strb	r4, [r0, #24]
 80108c8:	e7d8      	b.n	801087c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80108ca:	2000      	movs	r0, #0
 80108cc:	e7e4      	b.n	8010898 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

080108ce <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 80108ce:	b430      	push	{r4, r5}
 80108d0:	6001      	str	r1, [r0, #0]
 80108d2:	2100      	movs	r1, #0
 80108d4:	6041      	str	r1, [r0, #4]
 80108d6:	6815      	ldr	r5, [r2, #0]
 80108d8:	6085      	str	r5, [r0, #8]
 80108da:	6852      	ldr	r2, [r2, #4]
 80108dc:	6443      	str	r3, [r0, #68]	@ 0x44
 80108de:	9b02      	ldr	r3, [sp, #8]
 80108e0:	60c2      	str	r2, [r0, #12]
 80108e2:	7401      	strb	r1, [r0, #16]
 80108e4:	6141      	str	r1, [r0, #20]
 80108e6:	7601      	strb	r1, [r0, #24]
 80108e8:	8701      	strh	r1, [r0, #56]	@ 0x38
 80108ea:	8401      	strh	r1, [r0, #32]
 80108ec:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 80108f0:	6483      	str	r3, [r0, #72]	@ 0x48
 80108f2:	bc30      	pop	{r4, r5}
 80108f4:	f7f2 ba2c 	b.w	8002d50 <_ZN8touchgfx12TextProvider18initializeInternalEv>

080108f8 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 80108f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80108fa:	4605      	mov	r5, r0
 80108fc:	4608      	mov	r0, r1
 80108fe:	b1e9      	cbz	r1, 801093c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8010900:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 8010904:	460b      	mov	r3, r1
 8010906:	f101 0708 	add.w	r7, r1, #8
 801090a:	4622      	mov	r2, r4
 801090c:	6818      	ldr	r0, [r3, #0]
 801090e:	6859      	ldr	r1, [r3, #4]
 8010910:	4626      	mov	r6, r4
 8010912:	c603      	stmia	r6!, {r0, r1}
 8010914:	3308      	adds	r3, #8
 8010916:	42bb      	cmp	r3, r7
 8010918:	4634      	mov	r4, r6
 801091a:	d1f7      	bne.n	801090c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 801091c:	6818      	ldr	r0, [r3, #0]
 801091e:	6030      	str	r0, [r6, #0]
 8010920:	889b      	ldrh	r3, [r3, #4]
 8010922:	80b3      	strh	r3, [r6, #4]
 8010924:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 8010928:	015b      	lsls	r3, r3, #5
 801092a:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 801092e:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 8010932:	430b      	orrs	r3, r1
 8010934:	425b      	negs	r3, r3
 8010936:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 801093a:	4610      	mov	r0, r2
 801093c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801093e <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 801093e:	b538      	push	{r3, r4, r5, lr}
 8010940:	460c      	mov	r4, r1
 8010942:	6811      	ldr	r1, [r2, #0]
 8010944:	4610      	mov	r0, r2
 8010946:	68cd      	ldr	r5, [r1, #12]
 8010948:	4619      	mov	r1, r3
 801094a:	47a8      	blx	r5
 801094c:	2800      	cmp	r0, #0
 801094e:	bf08      	it	eq
 8010950:	4620      	moveq	r0, r4
 8010952:	bd38      	pop	{r3, r4, r5, pc}

08010954 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8010954:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010958:	468c      	mov	ip, r1
 801095a:	4605      	mov	r5, r0
 801095c:	4614      	mov	r4, r2
 801095e:	b942      	cbnz	r2, 8010972 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e>
 8010960:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 8010964:	f8a5 205c 	strh.w	r2, [r5, #92]	@ 0x5c
 8010968:	f8a5 205e 	strh.w	r2, [r5, #94]	@ 0x5e
 801096c:	4620      	mov	r0, r4
 801096e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010972:	7b50      	ldrb	r0, [r2, #13]
 8010974:	8893      	ldrh	r3, [r2, #4]
 8010976:	0106      	lsls	r6, r0, #4
 8010978:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 801097c:	79e6      	ldrb	r6, [r4, #7]
 801097e:	f46f 6163 	mvn.w	r1, #3632	@ 0xe30
 8010982:	4316      	orrs	r6, r2
 8010984:	185a      	adds	r2, r3, r1
 8010986:	b291      	uxth	r1, r2
 8010988:	291d      	cmp	r1, #29
 801098a:	b2b7      	uxth	r7, r6
 801098c:	d87e      	bhi.n	8010a8c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 801098e:	2201      	movs	r2, #1
 8010990:	408a      	lsls	r2, r1
 8010992:	498a      	ldr	r1, [pc, #552]	@ (8010bbc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x268>)
 8010994:	420a      	tst	r2, r1
 8010996:	ea4f 06e6 	mov.w	r6, r6, asr #3
 801099a:	d12d      	bne.n	80109f8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 801099c:	f412 7f60 	tst.w	r2, #896	@ 0x380
 80109a0:	d074      	beq.n	8010a8c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 80109a2:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 80109a6:	4623      	mov	r3, r4
 80109a8:	f104 0e08 	add.w	lr, r4, #8
 80109ac:	4614      	mov	r4, r2
 80109ae:	6818      	ldr	r0, [r3, #0]
 80109b0:	6859      	ldr	r1, [r3, #4]
 80109b2:	4694      	mov	ip, r2
 80109b4:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80109b8:	3308      	adds	r3, #8
 80109ba:	4573      	cmp	r3, lr
 80109bc:	4662      	mov	r2, ip
 80109be:	d1f6      	bne.n	80109ae <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 80109c0:	6818      	ldr	r0, [r3, #0]
 80109c2:	f8cc 0000 	str.w	r0, [ip]
 80109c6:	889b      	ldrh	r3, [r3, #4]
 80109c8:	f8ac 3004 	strh.w	r3, [ip, #4]
 80109cc:	f8b5 105c 	ldrh.w	r1, [r5, #92]	@ 0x5c
 80109d0:	f895 0059 	ldrb.w	r0, [r5, #89]	@ 0x59
 80109d4:	b2b3      	uxth	r3, r6
 80109d6:	1aca      	subs	r2, r1, r3
 80109d8:	b292      	uxth	r2, r2
 80109da:	f885 2054 	strb.w	r2, [r5, #84]	@ 0x54
 80109de:	10d2      	asrs	r2, r2, #3
 80109e0:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 80109e4:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 80109e8:	4302      	orrs	r2, r0
 80109ea:	1bcf      	subs	r7, r1, r7
 80109ec:	f885 2059 	strb.w	r2, [r5, #89]	@ 0x59
 80109f0:	1afb      	subs	r3, r7, r3
 80109f2:	f8a5 305c 	strh.w	r3, [r5, #92]	@ 0x5c
 80109f6:	e7b9      	b.n	801096c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 80109f8:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 80109fc:	4623      	mov	r3, r4
 80109fe:	f104 0808 	add.w	r8, r4, #8
 8010a02:	4614      	mov	r4, r2
 8010a04:	6818      	ldr	r0, [r3, #0]
 8010a06:	6859      	ldr	r1, [r3, #4]
 8010a08:	4696      	mov	lr, r2
 8010a0a:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8010a0e:	3308      	adds	r3, #8
 8010a10:	4543      	cmp	r3, r8
 8010a12:	4672      	mov	r2, lr
 8010a14:	d1f6      	bne.n	8010a04 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb0>
 8010a16:	6818      	ldr	r0, [r3, #0]
 8010a18:	f8ce 0000 	str.w	r0, [lr]
 8010a1c:	889b      	ldrh	r3, [r3, #4]
 8010a1e:	f8ae 3004 	strh.w	r3, [lr, #4]
 8010a22:	8eeb      	ldrh	r3, [r5, #54]	@ 0x36
 8010a24:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 8010a28:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 8010a2a:	f640 6333 	movw	r3, #3635	@ 0xe33
 8010a2e:	4299      	cmp	r1, r3
 8010a30:	d111      	bne.n	8010a56 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 8010a32:	f8dc 3000 	ldr.w	r3, [ip]
 8010a36:	4660      	mov	r0, ip
 8010a38:	68db      	ldr	r3, [r3, #12]
 8010a3a:	4798      	blx	r3
 8010a3c:	7b41      	ldrb	r1, [r0, #13]
 8010a3e:	00cb      	lsls	r3, r1, #3
 8010a40:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8010a44:	7a03      	ldrb	r3, [r0, #8]
 8010a46:	4313      	orrs	r3, r2
 8010a48:	064a      	lsls	r2, r1, #25
 8010a4a:	bf44      	itt	mi
 8010a4c:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8010a50:	b21b      	sxthmi	r3, r3
 8010a52:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8010a56:	f8b5 305a 	ldrh.w	r3, [r5, #90]	@ 0x5a
 8010a5a:	f895 2059 	ldrb.w	r2, [r5, #89]	@ 0x59
 8010a5e:	443b      	add	r3, r7
 8010a60:	4433      	add	r3, r6
 8010a62:	b29b      	uxth	r3, r3
 8010a64:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8010a68:	f885 3054 	strb.w	r3, [r5, #84]	@ 0x54
 8010a6c:	10db      	asrs	r3, r3, #3
 8010a6e:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8010a72:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8010a76:	4313      	orrs	r3, r2
 8010a78:	f885 3059 	strb.w	r3, [r5, #89]	@ 0x59
 8010a7c:	f895 205e 	ldrb.w	r2, [r5, #94]	@ 0x5e
 8010a80:	f895 3055 	ldrb.w	r3, [r5, #85]	@ 0x55
 8010a84:	1a9b      	subs	r3, r3, r2
 8010a86:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8010a8a:	e76f      	b.n	801096c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 8010a8c:	f023 0204 	bic.w	r2, r3, #4
 8010a90:	f640 611b 	movw	r1, #3611	@ 0xe1b
 8010a94:	428a      	cmp	r2, r1
 8010a96:	d003      	beq.n	8010aa0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x14c>
 8010a98:	f640 621d 	movw	r2, #3613	@ 0xe1d
 8010a9c:	4293      	cmp	r3, r2
 8010a9e:	d137      	bne.n	8010b10 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1bc>
 8010aa0:	f105 064c 	add.w	r6, r5, #76	@ 0x4c
 8010aa4:	4622      	mov	r2, r4
 8010aa6:	f104 0808 	add.w	r8, r4, #8
 8010aaa:	4634      	mov	r4, r6
 8010aac:	6810      	ldr	r0, [r2, #0]
 8010aae:	6851      	ldr	r1, [r2, #4]
 8010ab0:	46b6      	mov	lr, r6
 8010ab2:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8010ab6:	3208      	adds	r2, #8
 8010ab8:	4542      	cmp	r2, r8
 8010aba:	4676      	mov	r6, lr
 8010abc:	d1f6      	bne.n	8010aac <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x158>
 8010abe:	6810      	ldr	r0, [r2, #0]
 8010ac0:	f8ce 0000 	str.w	r0, [lr]
 8010ac4:	8892      	ldrh	r2, [r2, #4]
 8010ac6:	f8ae 2004 	strh.w	r2, [lr, #4]
 8010aca:	3b01      	subs	r3, #1
 8010acc:	b29b      	uxth	r3, r3
 8010ace:	4662      	mov	r2, ip
 8010ad0:	4621      	mov	r1, r4
 8010ad2:	4628      	mov	r0, r5
 8010ad4:	f7ff ff33 	bl	801093e <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8010ad8:	7b41      	ldrb	r1, [r0, #13]
 8010ada:	00cb      	lsls	r3, r1, #3
 8010adc:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8010ae0:	7a03      	ldrb	r3, [r0, #8]
 8010ae2:	0648      	lsls	r0, r1, #25
 8010ae4:	ea43 0302 	orr.w	r3, r3, r2
 8010ae8:	bf44      	itt	mi
 8010aea:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8010aee:	b21b      	sxthmi	r3, r3
 8010af0:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8010af4:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 8010af8:	f895 2056 	ldrb.w	r2, [r5, #86]	@ 0x56
 8010afc:	005b      	lsls	r3, r3, #1
 8010afe:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8010b02:	4313      	orrs	r3, r2
 8010b04:	115a      	asrs	r2, r3, #5
 8010b06:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8010b0a:	f8a5 305e 	strh.w	r3, [r5, #94]	@ 0x5e
 8010b0e:	e046      	b.n	8010b9e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x24a>
 8010b10:	00c2      	lsls	r2, r0, #3
 8010b12:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 8010b16:	7a22      	ldrb	r2, [r4, #8]
 8010b18:	430a      	orrs	r2, r1
 8010b1a:	0641      	lsls	r1, r0, #25
 8010b1c:	bf44      	itt	mi
 8010b1e:	f5a2 7200 	submi.w	r2, r2, #512	@ 0x200
 8010b22:	b212      	sxthmi	r2, r2
 8010b24:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 8010b28:	f640 6109 	movw	r1, #3593	@ 0xe09
 8010b2c:	f023 0210 	bic.w	r2, r3, #16
 8010b30:	428a      	cmp	r2, r1
 8010b32:	d003      	beq.n	8010b3c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e8>
 8010b34:	f640 6213 	movw	r2, #3603	@ 0xe13
 8010b38:	4293      	cmp	r3, r2
 8010b3a:	d13d      	bne.n	8010bb8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x264>
 8010b3c:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8010b40:	f104 0808 	add.w	r8, r4, #8
 8010b44:	4696      	mov	lr, r2
 8010b46:	6820      	ldr	r0, [r4, #0]
 8010b48:	6861      	ldr	r1, [r4, #4]
 8010b4a:	4616      	mov	r6, r2
 8010b4c:	c603      	stmia	r6!, {r0, r1}
 8010b4e:	3408      	adds	r4, #8
 8010b50:	4544      	cmp	r4, r8
 8010b52:	4632      	mov	r2, r6
 8010b54:	d1f7      	bne.n	8010b46 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f2>
 8010b56:	6820      	ldr	r0, [r4, #0]
 8010b58:	6030      	str	r0, [r6, #0]
 8010b5a:	88a1      	ldrh	r1, [r4, #4]
 8010b5c:	80b1      	strh	r1, [r6, #4]
 8010b5e:	f895 6059 	ldrb.w	r6, [r5, #89]	@ 0x59
 8010b62:	0076      	lsls	r6, r6, #1
 8010b64:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8010b68:	f895 6056 	ldrb.w	r6, [r5, #86]	@ 0x56
 8010b6c:	4316      	orrs	r6, r2
 8010b6e:	f640 6213 	movw	r2, #3603	@ 0xe13
 8010b72:	4293      	cmp	r3, r2
 8010b74:	bf1a      	itte	ne
 8010b76:	f103 33ff 	addne.w	r3, r3, #4294967295
 8010b7a:	b29b      	uxthne	r3, r3
 8010b7c:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 8010b80:	4662      	mov	r2, ip
 8010b82:	4671      	mov	r1, lr
 8010b84:	4628      	mov	r0, r5
 8010b86:	4674      	mov	r4, lr
 8010b88:	f7ff fed9 	bl	801093e <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8010b8c:	7b43      	ldrb	r3, [r0, #13]
 8010b8e:	7a82      	ldrb	r2, [r0, #10]
 8010b90:	005b      	lsls	r3, r3, #1
 8010b92:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8010b96:	4313      	orrs	r3, r2
 8010b98:	1af6      	subs	r6, r6, r3
 8010b9a:	f8a5 605e 	strh.w	r6, [r5, #94]	@ 0x5e
 8010b9e:	7b61      	ldrb	r1, [r4, #13]
 8010ba0:	00cb      	lsls	r3, r1, #3
 8010ba2:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8010ba6:	7a23      	ldrb	r3, [r4, #8]
 8010ba8:	4313      	orrs	r3, r2
 8010baa:	064a      	lsls	r2, r1, #25
 8010bac:	bf44      	itt	mi
 8010bae:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8010bb2:	b21b      	sxthmi	r3, r3
 8010bb4:	1bdb      	subs	r3, r3, r7
 8010bb6:	e71c      	b.n	80109f2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8010bb8:	2300      	movs	r3, #0
 8010bba:	e7a6      	b.n	8010b0a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b6>
 8010bbc:	3fc00079 	.word	0x3fc00079

08010bc0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8010bc0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010bc4:	4604      	mov	r4, r0
 8010bc6:	b942      	cbnz	r2, 8010bda <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8010bc8:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8010bcc:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 8010bd0:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 8010bd4:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 8010bd8:	e047      	b.n	8010c6a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8010bda:	7b51      	ldrb	r1, [r2, #13]
 8010bdc:	8893      	ldrh	r3, [r2, #4]
 8010bde:	010d      	lsls	r5, r1, #4
 8010be0:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 8010be4:	79d5      	ldrb	r5, [r2, #7]
 8010be6:	4305      	orrs	r5, r0
 8010be8:	2d04      	cmp	r5, #4
 8010bea:	bfcc      	ite	gt
 8010bec:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8010bf0:	f04f 0e01 	movle.w	lr, #1
 8010bf4:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 8010bf8:	f200 80ab 	bhi.w	8010d52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8010bfc:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 8010c00:	4283      	cmp	r3, r0
 8010c02:	d216      	bcs.n	8010c32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8010c04:	f240 605b 	movw	r0, #1627	@ 0x65b
 8010c08:	4283      	cmp	r3, r0
 8010c0a:	d859      	bhi.n	8010cc0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8010c0c:	f240 6057 	movw	r0, #1623	@ 0x657
 8010c10:	4283      	cmp	r3, r0
 8010c12:	d20e      	bcs.n	8010c32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8010c14:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8010c18:	d24a      	bcs.n	8010cb0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8010c1a:	f240 604e 	movw	r0, #1614	@ 0x64e
 8010c1e:	4283      	cmp	r3, r0
 8010c20:	d207      	bcs.n	8010c32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8010c22:	f240 601a 	movw	r0, #1562	@ 0x61a
 8010c26:	4283      	cmp	r3, r0
 8010c28:	d02a      	beq.n	8010c80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8010c2a:	d821      	bhi.n	8010c70 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8010c2c:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 8010c30:	d35b      	bcc.n	8010cea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8010c32:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 8010c36:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8010c3a:	f040 80d0 	bne.w	8010dde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8010c3e:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 8010c42:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8010c46:	f040 80ca 	bne.w	8010dde <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8010c4a:	00cb      	lsls	r3, r1, #3
 8010c4c:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8010c50:	7a13      	ldrb	r3, [r2, #8]
 8010c52:	0649      	lsls	r1, r1, #25
 8010c54:	ea43 0300 	orr.w	r3, r3, r0
 8010c58:	bf44      	itt	mi
 8010c5a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8010c5e:	b21b      	sxthmi	r3, r3
 8010c60:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8010c64:	1b5d      	subs	r5, r3, r5
 8010c66:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8010c6a:	4610      	mov	r0, r2
 8010c6c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010c70:	f240 604b 	movw	r0, #1611	@ 0x64b
 8010c74:	4283      	cmp	r3, r0
 8010c76:	d338      	bcc.n	8010cea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8010c78:	f240 604c 	movw	r0, #1612	@ 0x64c
 8010c7c:	4283      	cmp	r3, r0
 8010c7e:	d9d8      	bls.n	8010c32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8010c80:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 8010c84:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 8010c88:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8010c8c:	f040 80f2 	bne.w	8010e74 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8010c90:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8010c94:	f040 80ee 	bne.w	8010e74 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8010c98:	00cb      	lsls	r3, r1, #3
 8010c9a:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8010c9e:	7a13      	ldrb	r3, [r2, #8]
 8010ca0:	064e      	lsls	r6, r1, #25
 8010ca2:	ea43 0300 	orr.w	r3, r3, r0
 8010ca6:	bf44      	itt	mi
 8010ca8:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8010cac:	b21b      	sxthmi	r3, r3
 8010cae:	e7d9      	b.n	8010c64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8010cb0:	f240 6054 	movw	r0, #1620	@ 0x654
 8010cb4:	4283      	cmp	r3, r0
 8010cb6:	d8e3      	bhi.n	8010c80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8010cb8:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8010cbc:	d9e0      	bls.n	8010c80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8010cbe:	e7b8      	b.n	8010c32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8010cc0:	f240 6074 	movw	r0, #1652	@ 0x674
 8010cc4:	4283      	cmp	r3, r0
 8010cc6:	d0b4      	beq.n	8010c32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8010cc8:	d82d      	bhi.n	8010d26 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8010cca:	f240 605e 	movw	r0, #1630	@ 0x65e
 8010cce:	4283      	cmp	r3, r0
 8010cd0:	d804      	bhi.n	8010cdc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8010cd2:	f240 605d 	movw	r0, #1629	@ 0x65d
 8010cd6:	4283      	cmp	r3, r0
 8010cd8:	d3d2      	bcc.n	8010c80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8010cda:	e7aa      	b.n	8010c32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8010cdc:	f240 605f 	movw	r0, #1631	@ 0x65f
 8010ce0:	4283      	cmp	r3, r0
 8010ce2:	d0cd      	beq.n	8010c80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8010ce4:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 8010ce8:	d0a3      	beq.n	8010c32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8010cea:	00cb      	lsls	r3, r1, #3
 8010cec:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8010cf0:	7a13      	ldrb	r3, [r2, #8]
 8010cf2:	0649      	lsls	r1, r1, #25
 8010cf4:	ea43 0300 	orr.w	r3, r3, r0
 8010cf8:	bf44      	itt	mi
 8010cfa:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8010cfe:	b21b      	sxthmi	r3, r3
 8010d00:	1b5d      	subs	r5, r3, r5
 8010d02:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8010d06:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8010d0a:	7b53      	ldrb	r3, [r2, #13]
 8010d0c:	015b      	lsls	r3, r3, #5
 8010d0e:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8010d12:	7993      	ldrb	r3, [r2, #6]
 8010d14:	430b      	orrs	r3, r1
 8010d16:	005b      	lsls	r3, r3, #1
 8010d18:	2105      	movs	r1, #5
 8010d1a:	fb93 f3f1 	sdiv	r3, r3, r1
 8010d1e:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8010d22:	440b      	add	r3, r1
 8010d24:	e756      	b.n	8010bd4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8010d26:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 8010d2a:	4283      	cmp	r3, r0
 8010d2c:	d809      	bhi.n	8010d42 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8010d2e:	f240 60df 	movw	r0, #1759	@ 0x6df
 8010d32:	4283      	cmp	r3, r0
 8010d34:	f4bf af7d 	bcs.w	8010c32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8010d38:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 8010d3c:	2b05      	cmp	r3, #5
 8010d3e:	d8d4      	bhi.n	8010cea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8010d40:	e777      	b.n	8010c32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8010d42:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 8010d46:	4283      	cmp	r3, r0
 8010d48:	d09a      	beq.n	8010c80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8010d4a:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 8010d4e:	4283      	cmp	r3, r0
 8010d50:	e7ca      	b.n	8010ce8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8010d52:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 8010d56:	d22b      	bcs.n	8010db0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8010d58:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 8010d5c:	4283      	cmp	r3, r0
 8010d5e:	d28f      	bcs.n	8010c80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8010d60:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 8010d64:	4283      	cmp	r3, r0
 8010d66:	d816      	bhi.n	8010d96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8010d68:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 8010d6c:	4283      	cmp	r3, r0
 8010d6e:	f4bf af60 	bcs.w	8010c32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8010d72:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 8010d76:	4283      	cmp	r3, r0
 8010d78:	d80a      	bhi.n	8010d90 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8010d7a:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 8010d7e:	4283      	cmp	r3, r0
 8010d80:	f4bf af57 	bcs.w	8010c32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8010d84:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 8010d88:	4283      	cmp	r3, r0
 8010d8a:	f43f af79 	beq.w	8010c80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8010d8e:	e7ac      	b.n	8010cea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8010d90:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 8010d94:	e7f8      	b.n	8010d88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8010d96:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 8010d9a:	4283      	cmp	r3, r0
 8010d9c:	d802      	bhi.n	8010da4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8010d9e:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 8010da2:	e798      	b.n	8010cd6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8010da4:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 8010da8:	4283      	cmp	r3, r0
 8010daa:	f47f af42 	bne.w	8010c32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8010dae:	e767      	b.n	8010c80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8010db0:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 8010db4:	4283      	cmp	r3, r0
 8010db6:	f43f af63 	beq.w	8010c80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8010dba:	d802      	bhi.n	8010dc2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8010dbc:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 8010dc0:	e7f2      	b.n	8010da8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8010dc2:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 8010dc6:	4283      	cmp	r3, r0
 8010dc8:	d805      	bhi.n	8010dd6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8010dca:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 8010dce:	4283      	cmp	r3, r0
 8010dd0:	f4ff af2f 	bcc.w	8010c32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8010dd4:	e754      	b.n	8010c80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8010dd6:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 8010dda:	4283      	cmp	r3, r0
 8010ddc:	e7af      	b.n	8010d3e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8010dde:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 8010de2:	4617      	mov	r7, r2
 8010de4:	f102 0808 	add.w	r8, r2, #8
 8010de8:	4666      	mov	r6, ip
 8010dea:	6838      	ldr	r0, [r7, #0]
 8010dec:	6879      	ldr	r1, [r7, #4]
 8010dee:	46e6      	mov	lr, ip
 8010df0:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8010df4:	3708      	adds	r7, #8
 8010df6:	4547      	cmp	r7, r8
 8010df8:	46f4      	mov	ip, lr
 8010dfa:	d1f6      	bne.n	8010dea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8010dfc:	6838      	ldr	r0, [r7, #0]
 8010dfe:	f8ce 0000 	str.w	r0, [lr]
 8010e02:	88b9      	ldrh	r1, [r7, #4]
 8010e04:	f8ae 1004 	strh.w	r1, [lr, #4]
 8010e08:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 8010e0c:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8010e10:	d009      	beq.n	8010e26 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8010e12:	7b51      	ldrb	r1, [r2, #13]
 8010e14:	7992      	ldrb	r2, [r2, #6]
 8010e16:	0149      	lsls	r1, r1, #5
 8010e18:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8010e1c:	4311      	orrs	r1, r2
 8010e1e:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8010e22:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8010e26:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8010e2a:	b2ad      	uxth	r5, r5
 8010e2c:	d00d      	beq.n	8010e4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8010e2e:	442b      	add	r3, r5
 8010e30:	b29b      	uxth	r3, r3
 8010e32:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 8010e36:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8010e3a:	10db      	asrs	r3, r3, #3
 8010e3c:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8010e40:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8010e44:	4313      	orrs	r3, r2
 8010e46:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 8010e4a:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 8010e4e:	00cb      	lsls	r3, r1, #3
 8010e50:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8010e54:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 8010e58:	064f      	lsls	r7, r1, #25
 8010e5a:	ea43 0302 	orr.w	r3, r3, r2
 8010e5e:	bf44      	itt	mi
 8010e60:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8010e64:	b21b      	sxthmi	r3, r3
 8010e66:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8010e6a:	1b5b      	subs	r3, r3, r5
 8010e6c:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 8010e70:	4632      	mov	r2, r6
 8010e72:	e6fa      	b.n	8010c6a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8010e74:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 8010e78:	4617      	mov	r7, r2
 8010e7a:	f102 0908 	add.w	r9, r2, #8
 8010e7e:	4666      	mov	r6, ip
 8010e80:	6838      	ldr	r0, [r7, #0]
 8010e82:	6879      	ldr	r1, [r7, #4]
 8010e84:	46e0      	mov	r8, ip
 8010e86:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8010e8a:	3708      	adds	r7, #8
 8010e8c:	454f      	cmp	r7, r9
 8010e8e:	46c4      	mov	ip, r8
 8010e90:	d1f6      	bne.n	8010e80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 8010e92:	6838      	ldr	r0, [r7, #0]
 8010e94:	f8c8 0000 	str.w	r0, [r8]
 8010e98:	88b9      	ldrh	r1, [r7, #4]
 8010e9a:	f8a8 1004 	strh.w	r1, [r8, #4]
 8010e9e:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 8010ea2:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8010ea6:	d009      	beq.n	8010ebc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8010ea8:	7b51      	ldrb	r1, [r2, #13]
 8010eaa:	7992      	ldrb	r2, [r2, #6]
 8010eac:	0149      	lsls	r1, r1, #5
 8010eae:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8010eb2:	4311      	orrs	r1, r2
 8010eb4:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8010eb8:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8010ebc:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8010ec0:	d00e      	beq.n	8010ee0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 8010ec2:	eba3 030e 	sub.w	r3, r3, lr
 8010ec6:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 8010eca:	b29b      	uxth	r3, r3
 8010ecc:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8010ed0:	10db      	asrs	r3, r3, #3
 8010ed2:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8010ed6:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8010eda:	4313      	orrs	r3, r2
 8010edc:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 8010ee0:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 8010ee4:	00cb      	lsls	r3, r1, #3
 8010ee6:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8010eea:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 8010eee:	0648      	lsls	r0, r1, #25
 8010ef0:	ea43 0302 	orr.w	r3, r3, r2
 8010ef4:	bf44      	itt	mi
 8010ef6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8010efa:	b21b      	sxthmi	r3, r3
 8010efc:	1b5d      	subs	r5, r3, r5
 8010efe:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8010f02:	e7b5      	b.n	8010e70 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08010f04 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8010f04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010f08:	461e      	mov	r6, r3
 8010f0a:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8010f0c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8010f10:	4604      	mov	r4, r0
 8010f12:	4617      	mov	r7, r2
 8010f14:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8010f18:	f7f1 fed8 	bl	8002ccc <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8010f1c:	4605      	mov	r5, r0
 8010f1e:	b918      	cbnz	r0, 8010f28 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8010f20:	6030      	str	r0, [r6, #0]
 8010f22:	4628      	mov	r0, r5
 8010f24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010f28:	683b      	ldr	r3, [r7, #0]
 8010f2a:	4601      	mov	r1, r0
 8010f2c:	68db      	ldr	r3, [r3, #12]
 8010f2e:	4638      	mov	r0, r7
 8010f30:	4798      	blx	r3
 8010f32:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 8010f36:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8010f3a:	4602      	mov	r2, r0
 8010f3c:	6030      	str	r0, [r6, #0]
 8010f3e:	d213      	bcs.n	8010f68 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8010f40:	4643      	mov	r3, r8
 8010f42:	4639      	mov	r1, r7
 8010f44:	4620      	mov	r0, r4
 8010f46:	f7ff fe3b 	bl	8010bc0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8010f4a:	6030      	str	r0, [r6, #0]
 8010f4c:	6833      	ldr	r3, [r6, #0]
 8010f4e:	b143      	cbz	r3, 8010f62 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8010f50:	7b5a      	ldrb	r2, [r3, #13]
 8010f52:	7a9b      	ldrb	r3, [r3, #10]
 8010f54:	0052      	lsls	r2, r2, #1
 8010f56:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 8010f5a:	4313      	orrs	r3, r2
 8010f5c:	bf0c      	ite	eq
 8010f5e:	2301      	moveq	r3, #1
 8010f60:	2300      	movne	r3, #0
 8010f62:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 8010f66:	e7dc      	b.n	8010f22 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8010f68:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 8010f6c:	b29b      	uxth	r3, r3
 8010f6e:	2b7f      	cmp	r3, #127	@ 0x7f
 8010f70:	d804      	bhi.n	8010f7c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8010f72:	4639      	mov	r1, r7
 8010f74:	4620      	mov	r0, r4
 8010f76:	f7ff fced 	bl	8010954 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8010f7a:	e7e6      	b.n	8010f4a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8010f7c:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 8010f80:	2b00      	cmp	r3, #0
 8010f82:	d0e3      	beq.n	8010f4c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8010f84:	f640 1302 	movw	r3, #2306	@ 0x902
 8010f88:	429d      	cmp	r5, r3
 8010f8a:	d1df      	bne.n	8010f4c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8010f8c:	4601      	mov	r1, r0
 8010f8e:	4620      	mov	r0, r4
 8010f90:	f7ff fcb2 	bl	80108f8 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8010f94:	e7d9      	b.n	8010f4a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08010f96 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8010f96:	b510      	push	{r4, lr}
 8010f98:	4604      	mov	r4, r0
 8010f9a:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 8010f9e:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8010fa0:	b1f1      	cbz	r1, 8010fe0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8010fa2:	2b0a      	cmp	r3, #10
 8010fa4:	d02f      	beq.n	8011006 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8010fa6:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 8010fa8:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8010fac:	3901      	subs	r1, #1
 8010fae:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 8010fb0:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 8010fb4:	1c51      	adds	r1, r2, #1
 8010fb6:	b289      	uxth	r1, r1
 8010fb8:	2901      	cmp	r1, #1
 8010fba:	bf84      	itt	hi
 8010fbc:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8010fc0:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 8010fc2:	f103 0201 	add.w	r2, r3, #1
 8010fc6:	8722      	strh	r2, [r4, #56]	@ 0x38
 8010fc8:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8010fca:	bf98      	it	ls
 8010fcc:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 8010fce:	4413      	add	r3, r2
 8010fd0:	b29b      	uxth	r3, r3
 8010fd2:	2b09      	cmp	r3, #9
 8010fd4:	bf88      	it	hi
 8010fd6:	3b0a      	subhi	r3, #10
 8010fd8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8010fdc:	8458      	strh	r0, [r3, #34]	@ 0x22
 8010fde:	e7dc      	b.n	8010f9a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8010fe0:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8010fe2:	2b0a      	cmp	r3, #10
 8010fe4:	d00f      	beq.n	8011006 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8010fe6:	4620      	mov	r0, r4
 8010fe8:	f7ff fc45 	bl	8010876 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8010fec:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8010fee:	1c5a      	adds	r2, r3, #1
 8010ff0:	8722      	strh	r2, [r4, #56]	@ 0x38
 8010ff2:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8010ff4:	4413      	add	r3, r2
 8010ff6:	b29b      	uxth	r3, r3
 8010ff8:	2b09      	cmp	r3, #9
 8010ffa:	bf88      	it	hi
 8010ffc:	3b0a      	subhi	r3, #10
 8010ffe:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8011002:	8458      	strh	r0, [r3, #34]	@ 0x22
 8011004:	e7ec      	b.n	8010fe0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8011006:	bd10      	pop	{r4, pc}

08011008 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8011008:	b538      	push	{r3, r4, r5, lr}
 801100a:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 801100c:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8011010:	4604      	mov	r4, r0
 8011012:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 8011014:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 8011016:	3a01      	subs	r2, #1
 8011018:	8702      	strh	r2, [r0, #56]	@ 0x38
 801101a:	1c5a      	adds	r2, r3, #1
 801101c:	b292      	uxth	r2, r2
 801101e:	2a09      	cmp	r2, #9
 8011020:	bf86      	itte	hi
 8011022:	3b09      	subhi	r3, #9
 8011024:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 8011026:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 8011028:	f7ff ffb5 	bl	8010f96 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 801102c:	8c23      	ldrh	r3, [r4, #32]
 801102e:	2b01      	cmp	r3, #1
 8011030:	bf9c      	itt	ls
 8011032:	3301      	addls	r3, #1
 8011034:	8423      	strhls	r3, [r4, #32]
 8011036:	8be3      	ldrh	r3, [r4, #30]
 8011038:	b90b      	cbnz	r3, 801103e <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 801103a:	2302      	movs	r3, #2
 801103c:	83e3      	strh	r3, [r4, #30]
 801103e:	8be3      	ldrh	r3, [r4, #30]
 8011040:	3b01      	subs	r3, #1
 8011042:	b29b      	uxth	r3, r3
 8011044:	83e3      	strh	r3, [r4, #30]
 8011046:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801104a:	4628      	mov	r0, r5
 801104c:	8365      	strh	r5, [r4, #26]
 801104e:	bd38      	pop	{r3, r4, r5, pc}

08011050 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8011050:	428a      	cmp	r2, r1
 8011052:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011056:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 8011058:	d931      	bls.n	80110be <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 801105a:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 801105c:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 8011060:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 8011064:	19ee      	adds	r6, r5, r7
 8011066:	1a54      	subs	r4, r2, r1
 8011068:	3e01      	subs	r6, #1
 801106a:	fa1f fe84 	uxth.w	lr, r4
 801106e:	b2b4      	uxth	r4, r6
 8011070:	eba4 090e 	sub.w	r9, r4, lr
 8011074:	fa1f f989 	uxth.w	r9, r9
 8011078:	2c09      	cmp	r4, #9
 801107a:	4626      	mov	r6, r4
 801107c:	bf88      	it	hi
 801107e:	f1a4 060a 	subhi.w	r6, r4, #10
 8011082:	f1bc 0f00 	cmp.w	ip, #0
 8011086:	bf08      	it	eq
 8011088:	f04f 0c02 	moveq.w	ip, #2
 801108c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8011090:	f10c 3cff 	add.w	ip, ip, #4294967295
 8011094:	fa1f fc8c 	uxth.w	ip, ip
 8011098:	3c01      	subs	r4, #1
 801109a:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 801109e:	b2a4      	uxth	r4, r4
 80110a0:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 80110a4:	454c      	cmp	r4, r9
 80110a6:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 80110aa:	d1e5      	bne.n	8011078 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 80110ac:	eba5 050e 	sub.w	r5, r5, lr
 80110b0:	eb0e 0408 	add.w	r4, lr, r8
 80110b4:	8705      	strh	r5, [r0, #56]	@ 0x38
 80110b6:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 80110ba:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 80110be:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 80110c0:	1a64      	subs	r4, r4, r1
 80110c2:	4439      	add	r1, r7
 80110c4:	b289      	uxth	r1, r1
 80110c6:	2909      	cmp	r1, #9
 80110c8:	bf88      	it	hi
 80110ca:	390a      	subhi	r1, #10
 80110cc:	8704      	strh	r4, [r0, #56]	@ 0x38
 80110ce:	86c1      	strh	r1, [r0, #54]	@ 0x36
 80110d0:	250a      	movs	r5, #10
 80110d2:	b18a      	cbz	r2, 80110f8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 80110d4:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 80110d6:	3a01      	subs	r2, #1
 80110d8:	b292      	uxth	r2, r2
 80110da:	3101      	adds	r1, #1
 80110dc:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 80110e0:	8701      	strh	r1, [r0, #56]	@ 0x38
 80110e2:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 80110e4:	b901      	cbnz	r1, 80110e8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 80110e6:	86c5      	strh	r5, [r0, #54]	@ 0x36
 80110e8:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 80110ea:	3901      	subs	r1, #1
 80110ec:	b289      	uxth	r1, r1
 80110ee:	86c1      	strh	r1, [r0, #54]	@ 0x36
 80110f0:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80110f4:	844c      	strh	r4, [r1, #34]	@ 0x22
 80110f6:	e7ec      	b.n	80110d2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 80110f8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80110fc:	f7ff bf4b 	b.w	8010f96 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08011100 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8011100:	b570      	push	{r4, r5, r6, lr}
 8011102:	2500      	movs	r5, #0
 8011104:	4295      	cmp	r5, r2
 8011106:	d011      	beq.n	801112c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8011108:	8bc4      	ldrh	r4, [r0, #30]
 801110a:	f831 6b02 	ldrh.w	r6, [r1], #2
 801110e:	4414      	add	r4, r2
 8011110:	3c01      	subs	r4, #1
 8011112:	1b64      	subs	r4, r4, r5
 8011114:	b2a4      	uxth	r4, r4
 8011116:	2c01      	cmp	r4, #1
 8011118:	bf88      	it	hi
 801111a:	3c02      	subhi	r4, #2
 801111c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8011120:	8b64      	ldrh	r4, [r4, #26]
 8011122:	42b4      	cmp	r4, r6
 8011124:	d117      	bne.n	8011156 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8011126:	3501      	adds	r5, #1
 8011128:	b2ad      	uxth	r5, r5
 801112a:	e7eb      	b.n	8011104 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 801112c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8011130:	2400      	movs	r4, #0
 8011132:	4413      	add	r3, r2
 8011134:	b2a2      	uxth	r2, r4
 8011136:	429a      	cmp	r2, r3
 8011138:	da0f      	bge.n	801115a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 801113a:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 801113c:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8011140:	4432      	add	r2, r6
 8011142:	b292      	uxth	r2, r2
 8011144:	2a09      	cmp	r2, #9
 8011146:	bf88      	it	hi
 8011148:	3a0a      	subhi	r2, #10
 801114a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801114e:	3401      	adds	r4, #1
 8011150:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 8011152:	42aa      	cmp	r2, r5
 8011154:	d0ee      	beq.n	8011134 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8011156:	2000      	movs	r0, #0
 8011158:	bd70      	pop	{r4, r5, r6, pc}
 801115a:	2001      	movs	r0, #1
 801115c:	e7fc      	b.n	8011158 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

0801115e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 801115e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011162:	4605      	mov	r5, r0
 8011164:	4616      	mov	r6, r2
 8011166:	1c8c      	adds	r4, r1, #2
 8011168:	8809      	ldrh	r1, [r1, #0]
 801116a:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 801116e:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8011172:	42b3      	cmp	r3, r6
 8011174:	d124      	bne.n	80111c0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8011176:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801117a:	f3c1 1803 	ubfx	r8, r1, #4, #4
 801117e:	f001 070f 	and.w	r7, r1, #15
 8011182:	f8cd 8000 	str.w	r8, [sp]
 8011186:	464b      	mov	r3, r9
 8011188:	4652      	mov	r2, sl
 801118a:	4621      	mov	r1, r4
 801118c:	4628      	mov	r0, r5
 801118e:	f7ff ffb7 	bl	8011100 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8011192:	4683      	mov	fp, r0
 8011194:	b168      	cbz	r0, 80111b2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8011196:	eb0a 0109 	add.w	r1, sl, r9
 801119a:	4441      	add	r1, r8
 801119c:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 80111a0:	463a      	mov	r2, r7
 80111a2:	4649      	mov	r1, r9
 80111a4:	4628      	mov	r0, r5
 80111a6:	f7ff ff53 	bl	8011050 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 80111aa:	4658      	mov	r0, fp
 80111ac:	b003      	add	sp, #12
 80111ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80111b2:	eb07 010a 	add.w	r1, r7, sl
 80111b6:	4449      	add	r1, r9
 80111b8:	4441      	add	r1, r8
 80111ba:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 80111be:	e7d2      	b.n	8011166 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 80111c0:	f04f 0b00 	mov.w	fp, #0
 80111c4:	e7f1      	b.n	80111aa <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

080111c6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 80111c6:	b570      	push	{r4, r5, r6, lr}
 80111c8:	8810      	ldrh	r0, [r2, #0]
 80111ca:	4298      	cmp	r0, r3
 80111cc:	d817      	bhi.n	80111fe <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80111ce:	1e48      	subs	r0, r1, #1
 80111d0:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 80111d4:	4298      	cmp	r0, r3
 80111d6:	d312      	bcc.n	80111fe <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80111d8:	2400      	movs	r4, #0
 80111da:	428c      	cmp	r4, r1
 80111dc:	d20f      	bcs.n	80111fe <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80111de:	1860      	adds	r0, r4, r1
 80111e0:	1040      	asrs	r0, r0, #1
 80111e2:	0085      	lsls	r5, r0, #2
 80111e4:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 80111e8:	42b3      	cmp	r3, r6
 80111ea:	d902      	bls.n	80111f2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 80111ec:	3001      	adds	r0, #1
 80111ee:	b284      	uxth	r4, r0
 80111f0:	e7f3      	b.n	80111da <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80111f2:	d201      	bcs.n	80111f8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 80111f4:	b281      	uxth	r1, r0
 80111f6:	e7f0      	b.n	80111da <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80111f8:	442a      	add	r2, r5
 80111fa:	8850      	ldrh	r0, [r2, #2]
 80111fc:	bd70      	pop	{r4, r5, r6, pc}
 80111fe:	2000      	movs	r0, #0
 8011200:	e7fc      	b.n	80111fc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08011202 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8011202:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011206:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 8011208:	886f      	ldrh	r7, [r5, #2]
 801120a:	4604      	mov	r4, r0
 801120c:	087f      	lsrs	r7, r7, #1
 801120e:	260b      	movs	r6, #11
 8011210:	3e01      	subs	r6, #1
 8011212:	d013      	beq.n	801123c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8011214:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8011216:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801121a:	462a      	mov	r2, r5
 801121c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8011220:	4639      	mov	r1, r7
 8011222:	4643      	mov	r3, r8
 8011224:	4620      	mov	r0, r4
 8011226:	f7ff ffce 	bl	80111c6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 801122a:	b138      	cbz	r0, 801123c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801122c:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8011230:	4642      	mov	r2, r8
 8011232:	4620      	mov	r0, r4
 8011234:	f7ff ff93 	bl	801115e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8011238:	2800      	cmp	r0, #0
 801123a:	d1e9      	bne.n	8011210 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 801123c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011240 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8011240:	b570      	push	{r4, r5, r6, lr}
 8011242:	694a      	ldr	r2, [r1, #20]
 8011244:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 8011246:	684b      	ldr	r3, [r1, #4]
 8011248:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 801124a:	1b54      	subs	r4, r2, r5
 801124c:	f000 8106 	beq.w	801145c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8011250:	1b9b      	subs	r3, r3, r6
 8011252:	d003      	beq.n	801125c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8011254:	4363      	muls	r3, r4
 8011256:	2210      	movs	r2, #16
 8011258:	fb93 f3f2 	sdiv	r3, r3, r2
 801125c:	680c      	ldr	r4, [r1, #0]
 801125e:	698a      	ldr	r2, [r1, #24]
 8011260:	1b65      	subs	r5, r4, r5
 8011262:	f000 80fd 	beq.w	8011460 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8011266:	1b92      	subs	r2, r2, r6
 8011268:	d003      	beq.n	8011272 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801126a:	436a      	muls	r2, r5
 801126c:	2410      	movs	r4, #16
 801126e:	fb92 f2f4 	sdiv	r2, r2, r4
 8011272:	1a9b      	subs	r3, r3, r2
 8011274:	ee07 3a90 	vmov	s15, r3
 8011278:	ed9f 4a88 	vldr	s8, [pc, #544]	@ 801149c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 801127c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011280:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8011284:	ee67 7a84 	vmul.f32	s15, s15, s8
 8011288:	460a      	mov	r2, r1
 801128a:	ee87 3a27 	vdiv.f32	s6, s14, s15
 801128e:	4603      	mov	r3, r0
 8011290:	f100 040c 	add.w	r4, r0, #12
 8011294:	eeb1 6a43 	vneg.f32	s12, s6
 8011298:	edd2 7a02 	vldr	s15, [r2, #8]
 801129c:	eec7 6a27 	vdiv.f32	s13, s14, s15
 80112a0:	3214      	adds	r2, #20
 80112a2:	ece3 6a01 	vstmia	r3!, {s13}
 80112a6:	ed52 7a02 	vldr	s15, [r2, #-8]
 80112aa:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80112ae:	429c      	cmp	r4, r3
 80112b0:	edc3 7a02 	vstr	s15, [r3, #8]
 80112b4:	ed52 7a01 	vldr	s15, [r2, #-4]
 80112b8:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80112bc:	edc3 7a05 	vstr	s15, [r3, #20]
 80112c0:	d1ea      	bne.n	8011298 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 80112c2:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 80112c4:	698b      	ldr	r3, [r1, #24]
 80112c6:	edd0 4a02 	vldr	s9, [r0, #8]
 80112ca:	edd0 3a00 	vldr	s7, [r0]
 80112ce:	edd0 6a01 	vldr	s13, [r0, #4]
 80112d2:	ed90 5a05 	vldr	s10, [r0, #20]
 80112d6:	ed90 2a03 	vldr	s4, [r0, #12]
 80112da:	edd0 5a04 	vldr	s11, [r0, #16]
 80112de:	ed90 1a07 	vldr	s2, [r0, #28]
 80112e2:	edd0 2a06 	vldr	s5, [r0, #24]
 80112e6:	1a9b      	subs	r3, r3, r2
 80112e8:	ee07 3a90 	vmov	s15, r3
 80112ec:	684b      	ldr	r3, [r1, #4]
 80112ee:	1a9b      	subs	r3, r3, r2
 80112f0:	ee07 3a10 	vmov	s14, r3
 80112f4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80112f8:	ee76 6ae4 	vsub.f32	s13, s13, s9
 80112fc:	ee67 7a84 	vmul.f32	s15, s15, s8
 8011300:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8011304:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011308:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 801130c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8011310:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8011314:	eee6 7a87 	vfma.f32	s15, s13, s14
 8011318:	ee32 5a45 	vsub.f32	s10, s4, s10
 801131c:	ee67 7a83 	vmul.f32	s15, s15, s6
 8011320:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 8011324:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8011326:	694a      	ldr	r2, [r1, #20]
 8011328:	1b13      	subs	r3, r2, r4
 801132a:	ee07 3a10 	vmov	s14, r3
 801132e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011332:	680b      	ldr	r3, [r1, #0]
 8011334:	ee27 7a04 	vmul.f32	s14, s14, s8
 8011338:	1b1b      	subs	r3, r3, r4
 801133a:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 801133e:	ee07 3a10 	vmov	s14, r3
 8011342:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011346:	ee27 7a04 	vmul.f32	s14, s14, s8
 801134a:	eee6 4a87 	vfma.f32	s9, s13, s14
 801134e:	ee64 4a86 	vmul.f32	s9, s9, s12
 8011352:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 8011356:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8011358:	698b      	ldr	r3, [r1, #24]
 801135a:	1a9b      	subs	r3, r3, r2
 801135c:	ee06 3a90 	vmov	s13, r3
 8011360:	684b      	ldr	r3, [r1, #4]
 8011362:	1a9b      	subs	r3, r3, r2
 8011364:	ee07 3a10 	vmov	s14, r3
 8011368:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801136c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011370:	ee66 6a84 	vmul.f32	s13, s13, s8
 8011374:	ee27 7a04 	vmul.f32	s14, s14, s8
 8011378:	ee65 6a66 	vnmul.f32	s13, s10, s13
 801137c:	eee5 6a87 	vfma.f32	s13, s11, s14
 8011380:	ee66 6a83 	vmul.f32	s13, s13, s6
 8011384:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 8011388:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 801138a:	694a      	ldr	r2, [r1, #20]
 801138c:	1b13      	subs	r3, r2, r4
 801138e:	ee07 3a10 	vmov	s14, r3
 8011392:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011396:	680b      	ldr	r3, [r1, #0]
 8011398:	ee27 7a04 	vmul.f32	s14, s14, s8
 801139c:	1b1b      	subs	r3, r3, r4
 801139e:	ee25 5a47 	vnmul.f32	s10, s10, s14
 80113a2:	ee07 3a10 	vmov	s14, r3
 80113a6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80113aa:	ee27 7a04 	vmul.f32	s14, s14, s8
 80113ae:	eea5 5a87 	vfma.f32	s10, s11, s14
 80113b2:	edd0 5a08 	vldr	s11, [r0, #32]
 80113b6:	ee25 5a06 	vmul.f32	s10, s10, s12
 80113ba:	ee31 1a65 	vsub.f32	s2, s2, s11
 80113be:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 80113c2:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 80113c4:	698b      	ldr	r3, [r1, #24]
 80113c6:	1a9b      	subs	r3, r3, r2
 80113c8:	ee07 3a10 	vmov	s14, r3
 80113cc:	684b      	ldr	r3, [r1, #4]
 80113ce:	1a9b      	subs	r3, r3, r2
 80113d0:	ee01 3a90 	vmov	s3, r3
 80113d4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80113d8:	ee72 5ae5 	vsub.f32	s11, s5, s11
 80113dc:	ee27 7a04 	vmul.f32	s14, s14, s8
 80113e0:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 80113e4:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 80113e8:	ee61 1a84 	vmul.f32	s3, s3, s8
 80113ec:	eea1 7a21 	vfma.f32	s14, s2, s3
 80113f0:	ee27 7a03 	vmul.f32	s14, s14, s6
 80113f4:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 80113f8:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 80113fa:	694a      	ldr	r2, [r1, #20]
 80113fc:	1b13      	subs	r3, r2, r4
 80113fe:	ee03 3a10 	vmov	s6, r3
 8011402:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8011406:	680b      	ldr	r3, [r1, #0]
 8011408:	ee23 3a04 	vmul.f32	s6, s6, s8
 801140c:	1b1b      	subs	r3, r3, r4
 801140e:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8011412:	ee03 3a10 	vmov	s6, r3
 8011416:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801141a:	ee23 4a04 	vmul.f32	s8, s6, s8
 801141e:	eee1 5a04 	vfma.f32	s11, s2, s8
 8011422:	ee25 6a86 	vmul.f32	s12, s11, s12
 8011426:	ee62 5a67 	vnmul.f32	s11, s4, s15
 801142a:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 801142e:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8011432:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8011436:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801143a:	dd13      	ble.n	8011464 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 801143c:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8011440:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8011444:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8011446:	eee3 7a87 	vfma.f32	s15, s7, s14
 801144a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801144e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011452:	dd15      	ble.n	8011480 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8011454:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8011458:	6403      	str	r3, [r0, #64]	@ 0x40
 801145a:	bd70      	pop	{r4, r5, r6, pc}
 801145c:	4623      	mov	r3, r4
 801145e:	e6fd      	b.n	801125c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8011460:	462a      	mov	r2, r5
 8011462:	e706      	b.n	8011272 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8011464:	d502      	bpl.n	801146c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8011466:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 801146a:	e7e9      	b.n	8011440 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 801146c:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8011470:	eea3 2a85 	vfma.f32	s4, s7, s10
 8011474:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8011478:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801147c:	dade      	bge.n	801143c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801147e:	e7f2      	b.n	8011466 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8011480:	d502      	bpl.n	8011488 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8011482:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 8011486:	e7e7      	b.n	8011458 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8011488:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 801148c:	eee3 4a86 	vfma.f32	s9, s7, s12
 8011490:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8011494:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011498:	dadc      	bge.n	8011454 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801149a:	e7f2      	b.n	8011482 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 801149c:	3d800000 	.word	0x3d800000

080114a0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 80114a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80114a4:	2714      	movs	r7, #20
 80114a6:	435f      	muls	r7, r3
 80114a8:	eb02 0c07 	add.w	ip, r2, r7
 80114ac:	f8dc 5004 	ldr.w	r5, [ip, #4]
 80114b0:	f115 0e0f 	adds.w	lr, r5, #15
 80114b4:	f100 80a2 	bmi.w	80115fc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 80114b8:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 80114bc:	9c08      	ldr	r4, [sp, #32]
 80114be:	f8c0 e014 	str.w	lr, [r0, #20]
 80114c2:	2614      	movs	r6, #20
 80114c4:	4366      	muls	r6, r4
 80114c6:	eb02 0806 	add.w	r8, r2, r6
 80114ca:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80114ce:	f115 040f 	adds.w	r4, r5, #15
 80114d2:	f100 809f 	bmi.w	8011614 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 80114d6:	1124      	asrs	r4, r4, #4
 80114d8:	eba4 040e 	sub.w	r4, r4, lr
 80114dc:	6184      	str	r4, [r0, #24]
 80114de:	2c00      	cmp	r4, #0
 80114e0:	f000 808a 	beq.w	80115f8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 80114e4:	f8dc 9004 	ldr.w	r9, [ip, #4]
 80114e8:	f8d8 4004 	ldr.w	r4, [r8, #4]
 80114ec:	5995      	ldr	r5, [r2, r6]
 80114ee:	eba4 0809 	sub.w	r8, r4, r9
 80114f2:	59d4      	ldr	r4, [r2, r7]
 80114f4:	eba5 0a04 	sub.w	sl, r5, r4
 80114f8:	ea4f 150a 	mov.w	r5, sl, lsl #4
 80114fc:	fb0e fe05 	mul.w	lr, lr, r5
 8011500:	fb0a ee19 	mls	lr, sl, r9, lr
 8011504:	fb08 e404 	mla	r4, r8, r4, lr
 8011508:	ea4f 1608 	mov.w	r6, r8, lsl #4
 801150c:	3c01      	subs	r4, #1
 801150e:	19a4      	adds	r4, r4, r6
 8011510:	f100 808c 	bmi.w	801162c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8011514:	fb94 fef6 	sdiv	lr, r4, r6
 8011518:	f8c0 e000 	str.w	lr, [r0]
 801151c:	fb06 441e 	mls	r4, r6, lr, r4
 8011520:	6104      	str	r4, [r0, #16]
 8011522:	2d00      	cmp	r5, #0
 8011524:	f2c0 8095 	blt.w	8011652 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8011528:	fb95 f4f6 	sdiv	r4, r5, r6
 801152c:	6044      	str	r4, [r0, #4]
 801152e:	fb06 5514 	mls	r5, r6, r4, r5
 8011532:	6085      	str	r5, [r0, #8]
 8011534:	60c6      	str	r6, [r0, #12]
 8011536:	f8dc 4004 	ldr.w	r4, [ip, #4]
 801153a:	6945      	ldr	r5, [r0, #20]
 801153c:	59d2      	ldr	r2, [r2, r7]
 801153e:	eddf 6a4d 	vldr	s13, [pc, #308]	@ 8011674 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8011542:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 8011546:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 801154a:	ee07 4a10 	vmov	s14, r4
 801154e:	6804      	ldr	r4, [r0, #0]
 8011550:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8011554:	ee07 2a90 	vmov	s15, r2
 8011558:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801155c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011560:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8011564:	ee27 7a26 	vmul.f32	s14, s14, s13
 8011568:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801156c:	edd3 6a00 	vldr	s13, [r3]
 8011570:	eee6 6a07 	vfma.f32	s13, s12, s14
 8011574:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 8011578:	eee6 6a27 	vfma.f32	s13, s12, s15
 801157c:	edc0 6a07 	vstr	s13, [r0, #28]
 8011580:	edd0 6a01 	vldr	s13, [r0, #4]
 8011584:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 8011588:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 801158c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8011590:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8011594:	ed80 6a08 	vstr	s12, [r0, #32]
 8011598:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 801159a:	6242      	str	r2, [r0, #36]	@ 0x24
 801159c:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 80115a0:	ed93 6a03 	vldr	s12, [r3, #12]
 80115a4:	eea5 6a87 	vfma.f32	s12, s11, s14
 80115a8:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 80115ac:	eea5 6aa7 	vfma.f32	s12, s11, s15
 80115b0:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 80115b4:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 80115b8:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 80115bc:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80115c0:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 80115c4:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 80115c6:	6302      	str	r2, [r0, #48]	@ 0x30
 80115c8:	ed93 6a06 	vldr	s12, [r3, #24]
 80115cc:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 80115d0:	eea5 6a87 	vfma.f32	s12, s11, s14
 80115d4:	eeb0 7a46 	vmov.f32	s14, s12
 80115d8:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 80115dc:	eea6 7a27 	vfma.f32	s14, s12, s15
 80115e0:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 80115e4:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 80115e8:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 80115ec:	eee6 7a87 	vfma.f32	s15, s13, s14
 80115f0:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 80115f4:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 80115f6:	63c3      	str	r3, [r0, #60]	@ 0x3c
 80115f8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80115fc:	f1c5 0501 	rsb	r5, r5, #1
 8011600:	f015 050f 	ands.w	r5, r5, #15
 8011604:	bf18      	it	ne
 8011606:	2501      	movne	r5, #1
 8011608:	2410      	movs	r4, #16
 801160a:	fb9e fef4 	sdiv	lr, lr, r4
 801160e:	ebae 0e05 	sub.w	lr, lr, r5
 8011612:	e753      	b.n	80114bc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8011614:	f1c5 0501 	rsb	r5, r5, #1
 8011618:	f015 050f 	ands.w	r5, r5, #15
 801161c:	bf18      	it	ne
 801161e:	2501      	movne	r5, #1
 8011620:	f04f 0910 	mov.w	r9, #16
 8011624:	fb94 f4f9 	sdiv	r4, r4, r9
 8011628:	1b64      	subs	r4, r4, r5
 801162a:	e755      	b.n	80114d8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 801162c:	4264      	negs	r4, r4
 801162e:	fb94 fef6 	sdiv	lr, r4, r6
 8011632:	f1ce 0800 	rsb	r8, lr, #0
 8011636:	fb06 441e 	mls	r4, r6, lr, r4
 801163a:	f8c0 8000 	str.w	r8, [r0]
 801163e:	6104      	str	r4, [r0, #16]
 8011640:	2c00      	cmp	r4, #0
 8011642:	f43f af6e 	beq.w	8011522 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8011646:	ea6f 0e0e 	mvn.w	lr, lr
 801164a:	f8c0 e000 	str.w	lr, [r0]
 801164e:	1b34      	subs	r4, r6, r4
 8011650:	e766      	b.n	8011520 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8011652:	426d      	negs	r5, r5
 8011654:	fb95 f4f6 	sdiv	r4, r5, r6
 8011658:	f1c4 0e00 	rsb	lr, r4, #0
 801165c:	fb06 5514 	mls	r5, r6, r4, r5
 8011660:	f8c0 e004 	str.w	lr, [r0, #4]
 8011664:	6085      	str	r5, [r0, #8]
 8011666:	2d00      	cmp	r5, #0
 8011668:	f43f af64 	beq.w	8011534 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 801166c:	43e4      	mvns	r4, r4
 801166e:	6044      	str	r4, [r0, #4]
 8011670:	1b75      	subs	r5, r6, r5
 8011672:	e75e      	b.n	8011532 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8011674:	3d800000 	.word	0x3d800000

08011678 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8011678:	4b01      	ldr	r3, [pc, #4]	@ (8011680 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801167a:	6018      	str	r0, [r3, #0]
 801167c:	4770      	bx	lr
 801167e:	bf00      	nop
 8011680:	200130f8 	.word	0x200130f8

08011684 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8011684:	4b06      	ldr	r3, [pc, #24]	@ (80116a0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8011686:	881a      	ldrh	r2, [r3, #0]
 8011688:	4282      	cmp	r2, r0
 801168a:	d807      	bhi.n	801169c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 801168c:	4b05      	ldr	r3, [pc, #20]	@ (80116a4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801168e:	881b      	ldrh	r3, [r3, #0]
 8011690:	4413      	add	r3, r2
 8011692:	4298      	cmp	r0, r3
 8011694:	bfac      	ite	ge
 8011696:	2000      	movge	r0, #0
 8011698:	2001      	movlt	r0, #1
 801169a:	4770      	bx	lr
 801169c:	2000      	movs	r0, #0
 801169e:	4770      	bx	lr
 80116a0:	20013118 	.word	0x20013118
 80116a4:	2001311c 	.word	0x2001311c

080116a8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 80116a8:	b508      	push	{r3, lr}
 80116aa:	4601      	mov	r1, r0
 80116ac:	f7ff ffea 	bl	8011684 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 80116b0:	b118      	cbz	r0, 80116ba <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 80116b2:	4b02      	ldr	r3, [pc, #8]	@ (80116bc <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 80116b4:	681b      	ldr	r3, [r3, #0]
 80116b6:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80116ba:	bd08      	pop	{r3, pc}
 80116bc:	200130fc 	.word	0x200130fc

080116c0 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 80116c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80116c2:	4c24      	ldr	r4, [pc, #144]	@ (8011754 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 80116c4:	6823      	ldr	r3, [r4, #0]
 80116c6:	2b00      	cmp	r3, #0
 80116c8:	d042      	beq.n	8011750 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80116ca:	4a23      	ldr	r2, [pc, #140]	@ (8011758 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 80116cc:	4d23      	ldr	r5, [pc, #140]	@ (801175c <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 80116ce:	8811      	ldrh	r1, [r2, #0]
 80116d0:	f8b5 c000 	ldrh.w	ip, [r5]
 80116d4:	4822      	ldr	r0, [pc, #136]	@ (8011760 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 80116d6:	4461      	add	r1, ip
 80116d8:	1c4a      	adds	r2, r1, #1
 80116da:	f022 0201 	bic.w	r2, r2, #1
 80116de:	008f      	lsls	r7, r1, #2
 80116e0:	0412      	lsls	r2, r2, #16
 80116e2:	19de      	adds	r6, r3, r7
 80116e4:	0c12      	lsrs	r2, r2, #16
 80116e6:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 80116ea:	6006      	str	r6, [r0, #0]
 80116ec:	4e1d      	ldr	r6, [pc, #116]	@ (8011764 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 80116ee:	19da      	adds	r2, r3, r7
 80116f0:	6032      	str	r2, [r6, #0]
 80116f2:	220e      	movs	r2, #14
 80116f4:	fb02 f20c 	mul.w	r2, r2, ip
 80116f8:	3203      	adds	r2, #3
 80116fa:	f022 0203 	bic.w	r2, r2, #3
 80116fe:	443a      	add	r2, r7
 8011700:	4f19      	ldr	r7, [pc, #100]	@ (8011768 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8011702:	4413      	add	r3, r2
 8011704:	603b      	str	r3, [r7, #0]
 8011706:	4f19      	ldr	r7, [pc, #100]	@ (801176c <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8011708:	2300      	movs	r3, #0
 801170a:	803b      	strh	r3, [r7, #0]
 801170c:	4f18      	ldr	r7, [pc, #96]	@ (8011770 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801170e:	683f      	ldr	r7, [r7, #0]
 8011710:	1aba      	subs	r2, r7, r2
 8011712:	4f18      	ldr	r7, [pc, #96]	@ (8011774 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8011714:	603a      	str	r2, [r7, #0]
 8011716:	4a18      	ldr	r2, [pc, #96]	@ (8011778 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8011718:	469c      	mov	ip, r3
 801171a:	8013      	strh	r3, [r2, #0]
 801171c:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 8011720:	428b      	cmp	r3, r1
 8011722:	d10d      	bne.n	8011740 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8011724:	882d      	ldrh	r5, [r5, #0]
 8011726:	6830      	ldr	r0, [r6, #0]
 8011728:	2300      	movs	r3, #0
 801172a:	240e      	movs	r4, #14
 801172c:	429d      	cmp	r5, r3
 801172e:	d90f      	bls.n	8011750 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8011730:	fb04 0203 	mla	r2, r4, r3, r0
 8011734:	3301      	adds	r3, #1
 8011736:	7b11      	ldrb	r1, [r2, #12]
 8011738:	f36f 1145 	bfc	r1, #5, #1
 801173c:	7311      	strb	r1, [r2, #12]
 801173e:	e7f5      	b.n	801172c <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8011740:	6822      	ldr	r2, [r4, #0]
 8011742:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8011746:	6802      	ldr	r2, [r0, #0]
 8011748:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 801174c:	3301      	adds	r3, #1
 801174e:	e7e7      	b.n	8011720 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8011750:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011752:	bf00      	nop
 8011754:	200130fc 	.word	0x200130fc
 8011758:	20013118 	.word	0x20013118
 801175c:	2001311c 	.word	0x2001311c
 8011760:	20013110 	.word	0x20013110
 8011764:	20013100 	.word	0x20013100
 8011768:	20013108 	.word	0x20013108
 801176c:	2001311a 	.word	0x2001311a
 8011770:	20013104 	.word	0x20013104
 8011774:	20013114 	.word	0x20013114
 8011778:	2001310c 	.word	0x2001310c

0801177c <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 801177c:	4b06      	ldr	r3, [pc, #24]	@ (8011798 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801177e:	681b      	ldr	r3, [r3, #0]
 8011780:	b943      	cbnz	r3, 8011794 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8011782:	b139      	cbz	r1, 8011794 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8011784:	4b05      	ldr	r3, [pc, #20]	@ (801179c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8011786:	801a      	strh	r2, [r3, #0]
 8011788:	4b05      	ldr	r3, [pc, #20]	@ (80117a0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 801178a:	6019      	str	r1, [r3, #0]
 801178c:	4b05      	ldr	r3, [pc, #20]	@ (80117a4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801178e:	6018      	str	r0, [r3, #0]
 8011790:	f7ff bf96 	b.w	80116c0 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8011794:	4770      	bx	lr
 8011796:	bf00      	nop
 8011798:	20013108 	.word	0x20013108
 801179c:	2001311c 	.word	0x2001311c
 80117a0:	20013104 	.word	0x20013104
 80117a4:	200130fc 	.word	0x200130fc

080117a8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 80117a8:	b470      	push	{r4, r5, r6}
 80117aa:	4c07      	ldr	r4, [pc, #28]	@ (80117c8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 80117ac:	6826      	ldr	r6, [r4, #0]
 80117ae:	4605      	mov	r5, r0
 80117b0:	4610      	mov	r0, r2
 80117b2:	9a03      	ldr	r2, [sp, #12]
 80117b4:	b936      	cbnz	r6, 80117c4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 80117b6:	6025      	str	r5, [r4, #0]
 80117b8:	4c04      	ldr	r4, [pc, #16]	@ (80117cc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 80117ba:	8021      	strh	r1, [r4, #0]
 80117bc:	bc70      	pop	{r4, r5, r6}
 80117be:	4619      	mov	r1, r3
 80117c0:	f7ff bfdc 	b.w	801177c <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 80117c4:	bc70      	pop	{r4, r5, r6}
 80117c6:	4770      	bx	lr
 80117c8:	20013120 	.word	0x20013120
 80117cc:	20013118 	.word	0x20013118

080117d0 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 80117d0:	4a12      	ldr	r2, [pc, #72]	@ (801181c <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 80117d2:	8803      	ldrh	r3, [r0, #0]
 80117d4:	8812      	ldrh	r2, [r2, #0]
 80117d6:	4293      	cmp	r3, r2
 80117d8:	d207      	bcs.n	80117ea <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 80117da:	4a11      	ldr	r2, [pc, #68]	@ (8011820 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 80117dc:	6812      	ldr	r2, [r2, #0]
 80117de:	2114      	movs	r1, #20
 80117e0:	fb01 2303 	mla	r3, r1, r3, r2
 80117e4:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80117e8:	4770      	bx	lr
 80117ea:	490e      	ldr	r1, [pc, #56]	@ (8011824 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 80117ec:	8809      	ldrh	r1, [r1, #0]
 80117ee:	4411      	add	r1, r2
 80117f0:	428b      	cmp	r3, r1
 80117f2:	da04      	bge.n	80117fe <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 80117f4:	1a9b      	subs	r3, r3, r2
 80117f6:	4a0c      	ldr	r2, [pc, #48]	@ (8011828 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 80117f8:	210e      	movs	r1, #14
 80117fa:	6812      	ldr	r2, [r2, #0]
 80117fc:	e7f0      	b.n	80117e0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 80117fe:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8011802:	4293      	cmp	r3, r2
 8011804:	d108      	bne.n	8011818 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8011806:	4b09      	ldr	r3, [pc, #36]	@ (801182c <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8011808:	781b      	ldrb	r3, [r3, #0]
 801180a:	b91b      	cbnz	r3, 8011814 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 801180c:	4b08      	ldr	r3, [pc, #32]	@ (8011830 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801180e:	f9b3 0000 	ldrsh.w	r0, [r3]
 8011812:	4770      	bx	lr
 8011814:	4b07      	ldr	r3, [pc, #28]	@ (8011834 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8011816:	e7fa      	b.n	801180e <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8011818:	2000      	movs	r0, #0
 801181a:	4770      	bx	lr
 801181c:	20013118 	.word	0x20013118
 8011820:	20013120 	.word	0x20013120
 8011824:	2001311c 	.word	0x2001311c
 8011828:	20013100 	.word	0x20013100
 801182c:	20013086 	.word	0x20013086
 8011830:	20013088 	.word	0x20013088
 8011834:	2001308a 	.word	0x2001308a

08011838 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8011838:	4a12      	ldr	r2, [pc, #72]	@ (8011884 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801183a:	8803      	ldrh	r3, [r0, #0]
 801183c:	8812      	ldrh	r2, [r2, #0]
 801183e:	4293      	cmp	r3, r2
 8011840:	d207      	bcs.n	8011852 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8011842:	4a11      	ldr	r2, [pc, #68]	@ (8011888 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8011844:	6812      	ldr	r2, [r2, #0]
 8011846:	2114      	movs	r1, #20
 8011848:	fb01 2303 	mla	r3, r1, r3, r2
 801184c:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8011850:	4770      	bx	lr
 8011852:	490e      	ldr	r1, [pc, #56]	@ (801188c <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8011854:	8809      	ldrh	r1, [r1, #0]
 8011856:	4411      	add	r1, r2
 8011858:	428b      	cmp	r3, r1
 801185a:	da04      	bge.n	8011866 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 801185c:	1a9b      	subs	r3, r3, r2
 801185e:	4a0c      	ldr	r2, [pc, #48]	@ (8011890 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8011860:	210e      	movs	r1, #14
 8011862:	6812      	ldr	r2, [r2, #0]
 8011864:	e7f0      	b.n	8011848 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8011866:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801186a:	4293      	cmp	r3, r2
 801186c:	d108      	bne.n	8011880 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801186e:	4b09      	ldr	r3, [pc, #36]	@ (8011894 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8011870:	781b      	ldrb	r3, [r3, #0]
 8011872:	b91b      	cbnz	r3, 801187c <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8011874:	4b08      	ldr	r3, [pc, #32]	@ (8011898 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8011876:	f9b3 0000 	ldrsh.w	r0, [r3]
 801187a:	4770      	bx	lr
 801187c:	4b07      	ldr	r3, [pc, #28]	@ (801189c <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801187e:	e7fa      	b.n	8011876 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8011880:	2000      	movs	r0, #0
 8011882:	4770      	bx	lr
 8011884:	20013118 	.word	0x20013118
 8011888:	20013120 	.word	0x20013120
 801188c:	2001311c 	.word	0x2001311c
 8011890:	20013100 	.word	0x20013100
 8011894:	20013086 	.word	0x20013086
 8011898:	2001308a 	.word	0x2001308a
 801189c:	20013088 	.word	0x20013088

080118a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 80118a0:	b530      	push	{r4, r5, lr}
 80118a2:	4a22      	ldr	r2, [pc, #136]	@ (801192c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 80118a4:	880b      	ldrh	r3, [r1, #0]
 80118a6:	8812      	ldrh	r2, [r2, #0]
 80118a8:	4293      	cmp	r3, r2
 80118aa:	d213      	bcs.n	80118d4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 80118ac:	4a20      	ldr	r2, [pc, #128]	@ (8011930 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 80118ae:	6812      	ldr	r2, [r2, #0]
 80118b0:	2114      	movs	r1, #20
 80118b2:	fb01 2303 	mla	r3, r1, r3, r2
 80118b6:	8a1a      	ldrh	r2, [r3, #16]
 80118b8:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 80118bc:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 80118c0:	8a5b      	ldrh	r3, [r3, #18]
 80118c2:	8004      	strh	r4, [r0, #0]
 80118c4:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80118c8:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80118cc:	8041      	strh	r1, [r0, #2]
 80118ce:	8082      	strh	r2, [r0, #4]
 80118d0:	80c3      	strh	r3, [r0, #6]
 80118d2:	e024      	b.n	801191e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
 80118d4:	4917      	ldr	r1, [pc, #92]	@ (8011934 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 80118d6:	8809      	ldrh	r1, [r1, #0]
 80118d8:	4411      	add	r1, r2
 80118da:	428b      	cmp	r3, r1
 80118dc:	da10      	bge.n	8011900 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
 80118de:	1a9b      	subs	r3, r3, r2
 80118e0:	220e      	movs	r2, #14
 80118e2:	4353      	muls	r3, r2
 80118e4:	4a14      	ldr	r2, [pc, #80]	@ (8011938 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 80118e6:	6811      	ldr	r1, [r2, #0]
 80118e8:	18ca      	adds	r2, r1, r3
 80118ea:	5ecd      	ldrsh	r5, [r1, r3]
 80118ec:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 80118f0:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
 80118f4:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 80118f8:	8005      	strh	r5, [r0, #0]
 80118fa:	8044      	strh	r4, [r0, #2]
 80118fc:	8081      	strh	r1, [r0, #4]
 80118fe:	e7e7      	b.n	80118d0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8011900:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8011904:	4293      	cmp	r3, r2
 8011906:	d10b      	bne.n	8011920 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
 8011908:	4b0c      	ldr	r3, [pc, #48]	@ (801193c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 801190a:	f9b3 1000 	ldrsh.w	r1, [r3]
 801190e:	4b0c      	ldr	r3, [pc, #48]	@ (8011940 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 8011910:	8081      	strh	r1, [r0, #4]
 8011912:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011916:	80c2      	strh	r2, [r0, #6]
 8011918:	2300      	movs	r3, #0
 801191a:	8003      	strh	r3, [r0, #0]
 801191c:	8043      	strh	r3, [r0, #2]
 801191e:	bd30      	pop	{r4, r5, pc}
 8011920:	2300      	movs	r3, #0
 8011922:	8003      	strh	r3, [r0, #0]
 8011924:	8043      	strh	r3, [r0, #2]
 8011926:	8083      	strh	r3, [r0, #4]
 8011928:	e7d2      	b.n	80118d0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801192a:	bf00      	nop
 801192c:	20013118 	.word	0x20013118
 8011930:	20013120 	.word	0x20013120
 8011934:	2001311c 	.word	0x2001311c
 8011938:	20013100 	.word	0x20013100
 801193c:	20013082 	.word	0x20013082
 8011940:	20013084 	.word	0x20013084

08011944 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8011944:	4a17      	ldr	r2, [pc, #92]	@ (80119a4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8011946:	8803      	ldrh	r3, [r0, #0]
 8011948:	8812      	ldrh	r2, [r2, #0]
 801194a:	4293      	cmp	r3, r2
 801194c:	d213      	bcs.n	8011976 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801194e:	4a16      	ldr	r2, [pc, #88]	@ (80119a8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8011950:	6812      	ldr	r2, [r2, #0]
 8011952:	2114      	movs	r1, #20
 8011954:	fb01 2303 	mla	r3, r1, r3, r2
 8011958:	8a1a      	ldrh	r2, [r3, #16]
 801195a:	8919      	ldrh	r1, [r3, #8]
 801195c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8011960:	428a      	cmp	r2, r1
 8011962:	db1d      	blt.n	80119a0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8011964:	8a58      	ldrh	r0, [r3, #18]
 8011966:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801196a:	895b      	ldrh	r3, [r3, #10]
 801196c:	4298      	cmp	r0, r3
 801196e:	bfac      	ite	ge
 8011970:	2000      	movge	r0, #0
 8011972:	2001      	movlt	r0, #1
 8011974:	4770      	bx	lr
 8011976:	490d      	ldr	r1, [pc, #52]	@ (80119ac <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8011978:	8809      	ldrh	r1, [r1, #0]
 801197a:	4411      	add	r1, r2
 801197c:	428b      	cmp	r3, r1
 801197e:	da0d      	bge.n	801199c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8011980:	1a9b      	subs	r3, r3, r2
 8011982:	4a0b      	ldr	r2, [pc, #44]	@ (80119b0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8011984:	6812      	ldr	r2, [r2, #0]
 8011986:	210e      	movs	r1, #14
 8011988:	fb01 2303 	mla	r3, r1, r3, r2
 801198c:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8011990:	891a      	ldrh	r2, [r3, #8]
 8011992:	4291      	cmp	r1, r2
 8011994:	db04      	blt.n	80119a0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8011996:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801199a:	e7e6      	b.n	801196a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 801199c:	2000      	movs	r0, #0
 801199e:	4770      	bx	lr
 80119a0:	2001      	movs	r0, #1
 80119a2:	4770      	bx	lr
 80119a4:	20013118 	.word	0x20013118
 80119a8:	20013120 	.word	0x20013120
 80119ac:	2001311c 	.word	0x2001311c
 80119b0:	20013100 	.word	0x20013100

080119b4 <_ZNK8touchgfx6Bitmap7getDataEv>:
 80119b4:	4a12      	ldr	r2, [pc, #72]	@ (8011a00 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 80119b6:	8803      	ldrh	r3, [r0, #0]
 80119b8:	8811      	ldrh	r1, [r2, #0]
 80119ba:	428b      	cmp	r3, r1
 80119bc:	d20b      	bcs.n	80119d6 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 80119be:	4a11      	ldr	r2, [pc, #68]	@ (8011a04 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80119c0:	6812      	ldr	r2, [r2, #0]
 80119c2:	b112      	cbz	r2, 80119ca <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 80119c4:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80119c8:	b9c0      	cbnz	r0, 80119fc <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 80119ca:	4a0f      	ldr	r2, [pc, #60]	@ (8011a08 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 80119cc:	6811      	ldr	r1, [r2, #0]
 80119ce:	2214      	movs	r2, #20
 80119d0:	4353      	muls	r3, r2
 80119d2:	58c8      	ldr	r0, [r1, r3]
 80119d4:	4770      	bx	lr
 80119d6:	4a0d      	ldr	r2, [pc, #52]	@ (8011a0c <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 80119d8:	8812      	ldrh	r2, [r2, #0]
 80119da:	440a      	add	r2, r1
 80119dc:	4293      	cmp	r3, r2
 80119de:	da04      	bge.n	80119ea <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 80119e0:	4a08      	ldr	r2, [pc, #32]	@ (8011a04 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80119e2:	6812      	ldr	r2, [r2, #0]
 80119e4:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80119e8:	4770      	bx	lr
 80119ea:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 80119ee:	4293      	cmp	r3, r2
 80119f0:	d103      	bne.n	80119fa <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 80119f2:	4b07      	ldr	r3, [pc, #28]	@ (8011a10 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 80119f4:	681b      	ldr	r3, [r3, #0]
 80119f6:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 80119f8:	4770      	bx	lr
 80119fa:	2000      	movs	r0, #0
 80119fc:	4770      	bx	lr
 80119fe:	bf00      	nop
 8011a00:	20013118 	.word	0x20013118
 8011a04:	200130fc 	.word	0x200130fc
 8011a08:	20013120 	.word	0x20013120
 8011a0c:	2001311c 	.word	0x2001311c
 8011a10:	20013090 	.word	0x20013090

08011a14 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8011a14:	4b24      	ldr	r3, [pc, #144]	@ (8011aa8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8011a16:	8802      	ldrh	r2, [r0, #0]
 8011a18:	8818      	ldrh	r0, [r3, #0]
 8011a1a:	4282      	cmp	r2, r0
 8011a1c:	d221      	bcs.n	8011a62 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8011a1e:	4b23      	ldr	r3, [pc, #140]	@ (8011aac <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8011a20:	6819      	ldr	r1, [r3, #0]
 8011a22:	2314      	movs	r3, #20
 8011a24:	fb03 1302 	mla	r3, r3, r2, r1
 8011a28:	6858      	ldr	r0, [r3, #4]
 8011a2a:	2800      	cmp	r0, #0
 8011a2c:	d03a      	beq.n	8011aa4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8011a2e:	4920      	ldr	r1, [pc, #128]	@ (8011ab0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8011a30:	6809      	ldr	r1, [r1, #0]
 8011a32:	2900      	cmp	r1, #0
 8011a34:	d036      	beq.n	8011aa4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8011a36:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8011a3a:	2900      	cmp	r1, #0
 8011a3c:	d032      	beq.n	8011aa4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8011a3e:	891a      	ldrh	r2, [r3, #8]
 8011a40:	8958      	ldrh	r0, [r3, #10]
 8011a42:	4350      	muls	r0, r2
 8011a44:	7c5a      	ldrb	r2, [r3, #17]
 8011a46:	7cdb      	ldrb	r3, [r3, #19]
 8011a48:	0952      	lsrs	r2, r2, #5
 8011a4a:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8011a4e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8011a52:	2b0b      	cmp	r3, #11
 8011a54:	bf18      	it	ne
 8011a56:	0040      	lslne	r0, r0, #1
 8011a58:	3003      	adds	r0, #3
 8011a5a:	f020 0003 	bic.w	r0, r0, #3
 8011a5e:	4408      	add	r0, r1
 8011a60:	4770      	bx	lr
 8011a62:	4b14      	ldr	r3, [pc, #80]	@ (8011ab4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8011a64:	881b      	ldrh	r3, [r3, #0]
 8011a66:	4403      	add	r3, r0
 8011a68:	429a      	cmp	r2, r3
 8011a6a:	da1a      	bge.n	8011aa2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8011a6c:	4b12      	ldr	r3, [pc, #72]	@ (8011ab8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8011a6e:	681b      	ldr	r3, [r3, #0]
 8011a70:	1a10      	subs	r0, r2, r0
 8011a72:	210e      	movs	r1, #14
 8011a74:	fb01 3000 	mla	r0, r1, r0, r3
 8011a78:	7b03      	ldrb	r3, [r0, #12]
 8011a7a:	f003 031f 	and.w	r3, r3, #31
 8011a7e:	2b0b      	cmp	r3, #11
 8011a80:	d10b      	bne.n	8011a9a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8011a82:	8903      	ldrh	r3, [r0, #8]
 8011a84:	8940      	ldrh	r0, [r0, #10]
 8011a86:	4358      	muls	r0, r3
 8011a88:	4b09      	ldr	r3, [pc, #36]	@ (8011ab0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8011a8a:	6819      	ldr	r1, [r3, #0]
 8011a8c:	3003      	adds	r0, #3
 8011a8e:	f020 0303 	bic.w	r3, r0, #3
 8011a92:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8011a96:	4418      	add	r0, r3
 8011a98:	4770      	bx	lr
 8011a9a:	2b0d      	cmp	r3, #13
 8011a9c:	d101      	bne.n	8011aa2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8011a9e:	300d      	adds	r0, #13
 8011aa0:	4770      	bx	lr
 8011aa2:	2000      	movs	r0, #0
 8011aa4:	4770      	bx	lr
 8011aa6:	bf00      	nop
 8011aa8:	20013118 	.word	0x20013118
 8011aac:	20013120 	.word	0x20013120
 8011ab0:	200130fc 	.word	0x200130fc
 8011ab4:	2001311c 	.word	0x2001311c
 8011ab8:	20013100 	.word	0x20013100

08011abc <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8011abc:	b510      	push	{r4, lr}
 8011abe:	4b1f      	ldr	r3, [pc, #124]	@ (8011b3c <_ZNK8touchgfx6Bitmap9getFormatEv+0x80>)
 8011ac0:	8802      	ldrh	r2, [r0, #0]
 8011ac2:	881b      	ldrh	r3, [r3, #0]
 8011ac4:	429a      	cmp	r2, r3
 8011ac6:	d21a      	bcs.n	8011afe <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
 8011ac8:	4b1d      	ldr	r3, [pc, #116]	@ (8011b40 <_ZNK8touchgfx6Bitmap9getFormatEv+0x84>)
 8011aca:	681b      	ldr	r3, [r3, #0]
 8011acc:	2114      	movs	r1, #20
 8011ace:	fb01 3102 	mla	r1, r1, r2, r3
 8011ad2:	7c4b      	ldrb	r3, [r1, #17]
 8011ad4:	0958      	lsrs	r0, r3, #5
 8011ad6:	7ccb      	ldrb	r3, [r1, #19]
 8011ad8:	491a      	ldr	r1, [pc, #104]	@ (8011b44 <_ZNK8touchgfx6Bitmap9getFormatEv+0x88>)
 8011ada:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8011ade:	6809      	ldr	r1, [r1, #0]
 8011ae0:	ea43 03c0 	orr.w	r3, r3, r0, lsl #3
 8011ae4:	b2d8      	uxtb	r0, r3
 8011ae6:	b149      	cbz	r1, 8011afc <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8011ae8:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8011aec:	b132      	cbz	r2, 8011afc <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8011aee:	2b0e      	cmp	r3, #14
 8011af0:	d021      	beq.n	8011b36 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 8011af2:	280f      	cmp	r0, #15
 8011af4:	d01d      	beq.n	8011b32 <_ZNK8touchgfx6Bitmap9getFormatEv+0x76>
 8011af6:	2810      	cmp	r0, #16
 8011af8:	bf08      	it	eq
 8011afa:	2002      	moveq	r0, #2
 8011afc:	bd10      	pop	{r4, pc}
 8011afe:	4912      	ldr	r1, [pc, #72]	@ (8011b48 <_ZNK8touchgfx6Bitmap9getFormatEv+0x8c>)
 8011b00:	8809      	ldrh	r1, [r1, #0]
 8011b02:	4419      	add	r1, r3
 8011b04:	428a      	cmp	r2, r1
 8011b06:	da09      	bge.n	8011b1c <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>
 8011b08:	1ad3      	subs	r3, r2, r3
 8011b0a:	4a10      	ldr	r2, [pc, #64]	@ (8011b4c <_ZNK8touchgfx6Bitmap9getFormatEv+0x90>)
 8011b0c:	6812      	ldr	r2, [r2, #0]
 8011b0e:	210e      	movs	r1, #14
 8011b10:	fb01 2303 	mla	r3, r1, r3, r2
 8011b14:	7b18      	ldrb	r0, [r3, #12]
 8011b16:	f000 001f 	and.w	r0, r0, #31
 8011b1a:	e7ef      	b.n	8011afc <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8011b1c:	f64f 73fe 	movw	r3, #65534	@ 0xfffe
 8011b20:	429a      	cmp	r2, r3
 8011b22:	d108      	bne.n	8011b36 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 8011b24:	f7f0 ff0c 	bl	8002940 <_ZN8touchgfx3HAL3lcdEv>
 8011b28:	6803      	ldr	r3, [r0, #0]
 8011b2a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011b2e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011b30:	4718      	bx	r3
 8011b32:	2001      	movs	r0, #1
 8011b34:	e7e2      	b.n	8011afc <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8011b36:	2000      	movs	r0, #0
 8011b38:	e7e0      	b.n	8011afc <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8011b3a:	bf00      	nop
 8011b3c:	20013118 	.word	0x20013118
 8011b40:	20013120 	.word	0x20013120
 8011b44:	200130fc 	.word	0x200130fc
 8011b48:	2001311c 	.word	0x2001311c
 8011b4c:	20013100 	.word	0x20013100

08011b50 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8011b50:	2010      	movs	r0, #16
 8011b52:	4770      	bx	lr

08011b54 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8011b54:	2000      	movs	r0, #0
 8011b56:	4770      	bx	lr

08011b58 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8011b58:	4b02      	ldr	r3, [pc, #8]	@ (8011b64 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8011b5a:	8818      	ldrh	r0, [r3, #0]
 8011b5c:	0040      	lsls	r0, r0, #1
 8011b5e:	b280      	uxth	r0, r0
 8011b60:	4770      	bx	lr
 8011b62:	bf00      	nop
 8011b64:	20013088 	.word	0x20013088

08011b68 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8011b68:	2bff      	cmp	r3, #255	@ 0xff
 8011b6a:	d05e      	beq.n	8011c2a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc2>
 8011b6c:	2a0b      	cmp	r2, #11
 8011b6e:	d058      	beq.n	8011c22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 8011b70:	d80e      	bhi.n	8011b90 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8011b72:	2a03      	cmp	r2, #3
 8011b74:	d04d      	beq.n	8011c12 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xaa>
 8011b76:	d804      	bhi.n	8011b82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8011b78:	2a01      	cmp	r2, #1
 8011b7a:	d04c      	beq.n	8011c16 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xae>
 8011b7c:	d94d      	bls.n	8011c1a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb2>
 8011b7e:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 8011b80:	e031      	b.n	8011be6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8011b82:	2a09      	cmp	r2, #9
 8011b84:	d04d      	beq.n	8011c22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 8011b86:	d84a      	bhi.n	8011c1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 8011b88:	2a08      	cmp	r2, #8
 8011b8a:	d048      	beq.n	8011c1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 8011b8c:	2300      	movs	r3, #0
 8011b8e:	e02a      	b.n	8011be6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8011b90:	2a2f      	cmp	r2, #47	@ 0x2f
 8011b92:	d02c      	beq.n	8011bee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x86>
 8011b94:	d811      	bhi.n	8011bba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 8011b96:	2a2d      	cmp	r2, #45	@ 0x2d
 8011b98:	d018      	beq.n	8011bcc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64>
 8011b9a:	d831      	bhi.n	8011c00 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x98>
 8011b9c:	2a2c      	cmp	r2, #44	@ 0x2c
 8011b9e:	d1f5      	bne.n	8011b8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011ba0:	684a      	ldr	r2, [r1, #4]
 8011ba2:	7813      	ldrb	r3, [r2, #0]
 8011ba4:	7852      	ldrb	r2, [r2, #1]
 8011ba6:	2a00      	cmp	r2, #0
 8011ba8:	d1f0      	bne.n	8011b8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011baa:	2b01      	cmp	r3, #1
 8011bac:	d01d      	beq.n	8011bea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8011bae:	2b00      	cmp	r3, #0
 8011bb0:	d02d      	beq.n	8011c0e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8011bb2:	2b02      	cmp	r3, #2
 8011bb4:	d1ea      	bne.n	8011b8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011bb6:	68c3      	ldr	r3, [r0, #12]
 8011bb8:	e015      	b.n	8011be6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8011bba:	2a31      	cmp	r2, #49	@ 0x31
 8011bbc:	d004      	beq.n	8011bc8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
 8011bbe:	d332      	bcc.n	8011c26 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 8011bc0:	2a32      	cmp	r2, #50	@ 0x32
 8011bc2:	d030      	beq.n	8011c26 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 8011bc4:	2a33      	cmp	r2, #51	@ 0x33
 8011bc6:	d1e1      	bne.n	8011b8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011bc8:	6f43      	ldr	r3, [r0, #116]	@ 0x74
 8011bca:	e00c      	b.n	8011be6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8011bcc:	684a      	ldr	r2, [r1, #4]
 8011bce:	7813      	ldrb	r3, [r2, #0]
 8011bd0:	7852      	ldrb	r2, [r2, #1]
 8011bd2:	2a00      	cmp	r2, #0
 8011bd4:	d1da      	bne.n	8011b8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011bd6:	2b01      	cmp	r3, #1
 8011bd8:	d004      	beq.n	8011be4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c>
 8011bda:	d30f      	bcc.n	8011bfc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x94>
 8011bdc:	2b02      	cmp	r3, #2
 8011bde:	d1d5      	bne.n	8011b8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011be0:	6943      	ldr	r3, [r0, #20]
 8011be2:	e000      	b.n	8011be6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8011be4:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8011be6:	4618      	mov	r0, r3
 8011be8:	4770      	bx	lr
 8011bea:	69c3      	ldr	r3, [r0, #28]
 8011bec:	e7fb      	b.n	8011be6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8011bee:	684b      	ldr	r3, [r1, #4]
 8011bf0:	781a      	ldrb	r2, [r3, #0]
 8011bf2:	785b      	ldrb	r3, [r3, #1]
 8011bf4:	2b00      	cmp	r3, #0
 8011bf6:	d1c9      	bne.n	8011b8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011bf8:	2a00      	cmp	r2, #0
 8011bfa:	d1f4      	bne.n	8011be6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8011bfc:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 8011bfe:	e7f2      	b.n	8011be6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8011c00:	684b      	ldr	r3, [r1, #4]
 8011c02:	781a      	ldrb	r2, [r3, #0]
 8011c04:	785b      	ldrb	r3, [r3, #1]
 8011c06:	2b00      	cmp	r3, #0
 8011c08:	d1c0      	bne.n	8011b8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011c0a:	2a00      	cmp	r2, #0
 8011c0c:	d1eb      	bne.n	8011be6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8011c0e:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8011c10:	e7e9      	b.n	8011be6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8011c12:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 8011c14:	e7e7      	b.n	8011be6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8011c16:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8011c18:	e7e5      	b.n	8011be6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8011c1a:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 8011c1c:	e7e3      	b.n	8011be6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8011c1e:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
 8011c20:	e7e1      	b.n	8011be6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8011c22:	6e43      	ldr	r3, [r0, #100]	@ 0x64
 8011c24:	e7df      	b.n	8011be6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8011c26:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
 8011c28:	e7dd      	b.n	8011be6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8011c2a:	2a0b      	cmp	r2, #11
 8011c2c:	d059      	beq.n	8011ce2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 8011c2e:	d80e      	bhi.n	8011c4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe6>
 8011c30:	2a03      	cmp	r2, #3
 8011c32:	d050      	beq.n	8011cd6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16e>
 8011c34:	d804      	bhi.n	8011c40 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
 8011c36:	2a01      	cmp	r2, #1
 8011c38:	d04f      	beq.n	8011cda <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x172>
 8011c3a:	d950      	bls.n	8011cde <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
 8011c3c:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8011c3e:	e7d2      	b.n	8011be6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8011c40:	2a09      	cmp	r2, #9
 8011c42:	d04e      	beq.n	8011ce2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 8011c44:	d801      	bhi.n	8011c4a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
 8011c46:	2a08      	cmp	r2, #8
 8011c48:	d1a0      	bne.n	8011b8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011c4a:	6e03      	ldr	r3, [r0, #96]	@ 0x60
 8011c4c:	e7cb      	b.n	8011be6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8011c4e:	2a2f      	cmp	r2, #47	@ 0x2f
 8011c50:	d02d      	beq.n	8011cae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x146>
 8011c52:	d811      	bhi.n	8011c78 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8011c54:	2a2d      	cmp	r2, #45	@ 0x2d
 8011c56:	d018      	beq.n	8011c8a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x122>
 8011c58:	d833      	bhi.n	8011cc2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15a>
 8011c5a:	2a2c      	cmp	r2, #44	@ 0x2c
 8011c5c:	d196      	bne.n	8011b8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011c5e:	684a      	ldr	r2, [r1, #4]
 8011c60:	7813      	ldrb	r3, [r2, #0]
 8011c62:	7852      	ldrb	r2, [r2, #1]
 8011c64:	2a00      	cmp	r2, #0
 8011c66:	d191      	bne.n	8011b8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011c68:	2b01      	cmp	r3, #1
 8011c6a:	d01e      	beq.n	8011caa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8011c6c:	2b00      	cmp	r3, #0
 8011c6e:	d030      	beq.n	8011cd2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16a>
 8011c70:	2b02      	cmp	r3, #2
 8011c72:	d18b      	bne.n	8011b8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011c74:	6903      	ldr	r3, [r0, #16]
 8011c76:	e7b6      	b.n	8011be6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8011c78:	2a31      	cmp	r2, #49	@ 0x31
 8011c7a:	d004      	beq.n	8011c86 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11e>
 8011c7c:	d333      	bcc.n	8011ce6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 8011c7e:	2a32      	cmp	r2, #50	@ 0x32
 8011c80:	d031      	beq.n	8011ce6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 8011c82:	2a33      	cmp	r2, #51	@ 0x33
 8011c84:	d182      	bne.n	8011b8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011c86:	6f83      	ldr	r3, [r0, #120]	@ 0x78
 8011c88:	e7ad      	b.n	8011be6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8011c8a:	684a      	ldr	r2, [r1, #4]
 8011c8c:	7813      	ldrb	r3, [r2, #0]
 8011c8e:	7852      	ldrb	r2, [r2, #1]
 8011c90:	2a00      	cmp	r2, #0
 8011c92:	f47f af7b 	bne.w	8011b8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011c96:	2b01      	cmp	r3, #1
 8011c98:	d005      	beq.n	8011ca6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8011c9a:	d310      	bcc.n	8011cbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x156>
 8011c9c:	2b02      	cmp	r3, #2
 8011c9e:	f47f af75 	bne.w	8011b8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011ca2:	6983      	ldr	r3, [r0, #24]
 8011ca4:	e79f      	b.n	8011be6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8011ca6:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8011ca8:	e79d      	b.n	8011be6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8011caa:	6a03      	ldr	r3, [r0, #32]
 8011cac:	e79b      	b.n	8011be6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8011cae:	684b      	ldr	r3, [r1, #4]
 8011cb0:	781a      	ldrb	r2, [r3, #0]
 8011cb2:	785b      	ldrb	r3, [r3, #1]
 8011cb4:	2b00      	cmp	r3, #0
 8011cb6:	f47f af69 	bne.w	8011b8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011cba:	2a00      	cmp	r2, #0
 8011cbc:	d193      	bne.n	8011be6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8011cbe:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8011cc0:	e791      	b.n	8011be6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8011cc2:	684b      	ldr	r3, [r1, #4]
 8011cc4:	781a      	ldrb	r2, [r3, #0]
 8011cc6:	785b      	ldrb	r3, [r3, #1]
 8011cc8:	2b00      	cmp	r3, #0
 8011cca:	f47f af5f 	bne.w	8011b8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011cce:	2a00      	cmp	r2, #0
 8011cd0:	d189      	bne.n	8011be6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8011cd2:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8011cd4:	e787      	b.n	8011be6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8011cd6:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 8011cd8:	e785      	b.n	8011be6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8011cda:	6d83      	ldr	r3, [r0, #88]	@ 0x58
 8011cdc:	e783      	b.n	8011be6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8011cde:	6c83      	ldr	r3, [r0, #72]	@ 0x48
 8011ce0:	e781      	b.n	8011be6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8011ce2:	6e83      	ldr	r3, [r0, #104]	@ 0x68
 8011ce4:	e77f      	b.n	8011be6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8011ce6:	6f03      	ldr	r3, [r0, #112]	@ 0x70
 8011ce8:	e77d      	b.n	8011be6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>

08011cea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011cea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011cee:	b087      	sub	sp, #28
 8011cf0:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8011cf2:	9205      	str	r2, [sp, #20]
 8011cf4:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8011cf8:	9202      	str	r2, [sp, #8]
 8011cfa:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8011cfe:	9101      	str	r1, [sp, #4]
 8011d00:	6841      	ldr	r1, [r0, #4]
 8011d02:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 8011d06:	fb01 2404 	mla	r4, r1, r4, r2
 8011d0a:	6802      	ldr	r2, [r0, #0]
 8011d0c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011d10:	f8de 2000 	ldr.w	r2, [lr]
 8011d14:	9203      	str	r2, [sp, #12]
 8011d16:	f8de 2004 	ldr.w	r2, [lr, #4]
 8011d1a:	3204      	adds	r2, #4
 8011d1c:	9204      	str	r2, [sp, #16]
 8011d1e:	9a02      	ldr	r2, [sp, #8]
 8011d20:	43d6      	mvns	r6, r2
 8011d22:	b2f6      	uxtb	r6, r6
 8011d24:	9a01      	ldr	r2, [sp, #4]
 8011d26:	2a00      	cmp	r2, #0
 8011d28:	dc03      	bgt.n	8011d32 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8011d2a:	9a05      	ldr	r2, [sp, #20]
 8011d2c:	2a00      	cmp	r2, #0
 8011d2e:	f340 8129 	ble.w	8011f84 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8011d32:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8011d34:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8011d38:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8011d3c:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8011d40:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8011d42:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8011d46:	2b00      	cmp	r3, #0
 8011d48:	dd0e      	ble.n	8011d68 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8011d4a:	1408      	asrs	r0, r1, #16
 8011d4c:	d405      	bmi.n	8011d5a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8011d4e:	4560      	cmp	r0, ip
 8011d50:	da03      	bge.n	8011d5a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8011d52:	1410      	asrs	r0, r2, #16
 8011d54:	d401      	bmi.n	8011d5a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8011d56:	42b8      	cmp	r0, r7
 8011d58:	db07      	blt.n	8011d6a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8011d5a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8011d5c:	4401      	add	r1, r0
 8011d5e:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8011d60:	3b01      	subs	r3, #1
 8011d62:	4402      	add	r2, r0
 8011d64:	3402      	adds	r4, #2
 8011d66:	e7ee      	b.n	8011d46 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8011d68:	d071      	beq.n	8011e4e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011d6a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8011d6c:	1e58      	subs	r0, r3, #1
 8011d6e:	fb05 1500 	mla	r5, r5, r0, r1
 8011d72:	142d      	asrs	r5, r5, #16
 8011d74:	d45f      	bmi.n	8011e36 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8011d76:	4565      	cmp	r5, ip
 8011d78:	da5d      	bge.n	8011e36 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8011d7a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8011d7c:	fb05 2000 	mla	r0, r5, r0, r2
 8011d80:	1400      	asrs	r0, r0, #16
 8011d82:	d458      	bmi.n	8011e36 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8011d84:	42b8      	cmp	r0, r7
 8011d86:	da56      	bge.n	8011e36 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8011d88:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8011d8c:	4699      	mov	r9, r3
 8011d8e:	46a2      	mov	sl, r4
 8011d90:	f1b9 0f00 	cmp.w	r9, #0
 8011d94:	dd57      	ble.n	8011e46 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8011d96:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8011d9a:	9803      	ldr	r0, [sp, #12]
 8011d9c:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8011da0:	140d      	asrs	r5, r1, #16
 8011da2:	fb07 000c 	mla	r0, r7, ip, r0
 8011da6:	f109 39ff 	add.w	r9, r9, #4294967295
 8011daa:	5d40      	ldrb	r0, [r0, r5]
 8011dac:	9d04      	ldr	r5, [sp, #16]
 8011dae:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8011db2:	f8ba 5000 	ldrh.w	r5, [sl]
 8011db6:	122f      	asrs	r7, r5, #8
 8011db8:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8011dbc:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8011dc0:	fb17 f706 	smulbb	r7, r7, r6
 8011dc4:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8011dc8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8011dcc:	00ed      	lsls	r5, r5, #3
 8011dce:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8011dd2:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8011dd6:	10c7      	asrs	r7, r0, #3
 8011dd8:	b2ed      	uxtb	r5, r5
 8011dda:	00c0      	lsls	r0, r0, #3
 8011ddc:	fb18 f806 	smulbb	r8, r8, r6
 8011de0:	fb15 f506 	smulbb	r5, r5, r6
 8011de4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8011de8:	b2c0      	uxtb	r0, r0
 8011dea:	fa1f fc8c 	uxth.w	ip, ip
 8011dee:	fb07 870b 	mla	r7, r7, fp, r8
 8011df2:	fb00 500b 	mla	r0, r0, fp, r5
 8011df6:	b280      	uxth	r0, r0
 8011df8:	b2bf      	uxth	r7, r7
 8011dfa:	f10c 0501 	add.w	r5, ip, #1
 8011dfe:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8011e02:	f107 0801 	add.w	r8, r7, #1
 8011e06:	1c45      	adds	r5, r0, #1
 8011e08:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8011e0c:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8011e10:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8011e12:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8011e16:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8011e1a:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8011e1e:	ea45 0c0c 	orr.w	ip, r5, ip
 8011e22:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8011e26:	4401      	add	r1, r0
 8011e28:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8011e2a:	ea4c 0c08 	orr.w	ip, ip, r8
 8011e2e:	f82a cb02 	strh.w	ip, [sl], #2
 8011e32:	4402      	add	r2, r0
 8011e34:	e7ac      	b.n	8011d90 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8011e36:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8011e3a:	f04f 0800 	mov.w	r8, #0
 8011e3e:	eb03 0008 	add.w	r0, r3, r8
 8011e42:	2800      	cmp	r0, #0
 8011e44:	dc41      	bgt.n	8011eca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8011e46:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011e4a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011e4e:	9b01      	ldr	r3, [sp, #4]
 8011e50:	2b00      	cmp	r3, #0
 8011e52:	f340 8097 	ble.w	8011f84 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8011e56:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011e5a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8011e5e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8011e62:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8011e64:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011e68:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011e6c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011e70:	eef0 6a62 	vmov.f32	s13, s5
 8011e74:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011e78:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8011e7c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011e80:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8011e84:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011e88:	eef0 6a43 	vmov.f32	s13, s6
 8011e8c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011e90:	ee12 2a90 	vmov	r2, s5
 8011e94:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011e98:	fb92 f3f3 	sdiv	r3, r2, r3
 8011e9c:	ee13 2a10 	vmov	r2, s6
 8011ea0:	9313      	str	r3, [sp, #76]	@ 0x4c
 8011ea2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8011ea4:	fb92 f3f3 	sdiv	r3, r2, r3
 8011ea8:	9314      	str	r3, [sp, #80]	@ 0x50
 8011eaa:	9b01      	ldr	r3, [sp, #4]
 8011eac:	9a05      	ldr	r2, [sp, #20]
 8011eae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8011eb2:	3b01      	subs	r3, #1
 8011eb4:	9301      	str	r3, [sp, #4]
 8011eb6:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 8011eba:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8011ebc:	eeb0 3a67 	vmov.f32	s6, s15
 8011ec0:	bf08      	it	eq
 8011ec2:	4613      	moveq	r3, r2
 8011ec4:	eef0 2a47 	vmov.f32	s5, s14
 8011ec8:	e72c      	b.n	8011d24 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8011eca:	140f      	asrs	r7, r1, #16
 8011ecc:	d453      	bmi.n	8011f76 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8011ece:	f8de 5008 	ldr.w	r5, [lr, #8]
 8011ed2:	42bd      	cmp	r5, r7
 8011ed4:	dd4f      	ble.n	8011f76 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8011ed6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8011eda:	d44c      	bmi.n	8011f76 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8011edc:	f8de 000c 	ldr.w	r0, [lr, #12]
 8011ee0:	4560      	cmp	r0, ip
 8011ee2:	dd48      	ble.n	8011f76 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8011ee4:	9803      	ldr	r0, [sp, #12]
 8011ee6:	b22d      	sxth	r5, r5
 8011ee8:	fb0c 0505 	mla	r5, ip, r5, r0
 8011eec:	5de8      	ldrb	r0, [r5, r7]
 8011eee:	9d04      	ldr	r5, [sp, #16]
 8011ef0:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8011ef4:	f06f 0501 	mvn.w	r5, #1
 8011ef8:	fb05 fb08 	mul.w	fp, r5, r8
 8011efc:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8011f00:	f834 500b 	ldrh.w	r5, [r4, fp]
 8011f04:	122f      	asrs	r7, r5, #8
 8011f06:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8011f0a:	fb17 f706 	smulbb	r7, r7, r6
 8011f0e:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8011f12:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8011f16:	00ed      	lsls	r5, r5, #3
 8011f18:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8011f1c:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8011f20:	10c7      	asrs	r7, r0, #3
 8011f22:	b2ed      	uxtb	r5, r5
 8011f24:	00c0      	lsls	r0, r0, #3
 8011f26:	fb19 f906 	smulbb	r9, r9, r6
 8011f2a:	fb15 f506 	smulbb	r5, r5, r6
 8011f2e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8011f32:	b2c0      	uxtb	r0, r0
 8011f34:	fa1f fc8c 	uxth.w	ip, ip
 8011f38:	fb07 970a 	mla	r7, r7, sl, r9
 8011f3c:	fb00 500a 	mla	r0, r0, sl, r5
 8011f40:	b2bf      	uxth	r7, r7
 8011f42:	b280      	uxth	r0, r0
 8011f44:	f10c 0501 	add.w	r5, ip, #1
 8011f48:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8011f4c:	f107 0901 	add.w	r9, r7, #1
 8011f50:	1c45      	adds	r5, r0, #1
 8011f52:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8011f56:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8011f5a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8011f5e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8011f62:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8011f66:	ea45 0c0c 	orr.w	ip, r5, ip
 8011f6a:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8011f6e:	ea4c 0c09 	orr.w	ip, ip, r9
 8011f72:	f824 c00b 	strh.w	ip, [r4, fp]
 8011f76:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8011f78:	4401      	add	r1, r0
 8011f7a:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8011f7c:	f108 38ff 	add.w	r8, r8, #4294967295
 8011f80:	4402      	add	r2, r0
 8011f82:	e75c      	b.n	8011e3e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8011f84:	b007      	add	sp, #28
 8011f86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011f8a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011f8a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011f8e:	b085      	sub	sp, #20
 8011f90:	4693      	mov	fp, r2
 8011f92:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8011f94:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8011f96:	6870      	ldr	r0, [r6, #4]
 8011f98:	9100      	str	r1, [sp, #0]
 8011f9a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8011f9e:	fb00 2404 	mla	r4, r0, r4, r2
 8011fa2:	6832      	ldr	r2, [r6, #0]
 8011fa4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011fa8:	682a      	ldr	r2, [r5, #0]
 8011faa:	9201      	str	r2, [sp, #4]
 8011fac:	686a      	ldr	r2, [r5, #4]
 8011fae:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 8011fb2:	3204      	adds	r2, #4
 8011fb4:	9202      	str	r2, [sp, #8]
 8011fb6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8011fba:	9a00      	ldr	r2, [sp, #0]
 8011fbc:	2a00      	cmp	r2, #0
 8011fbe:	dc03      	bgt.n	8011fc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8011fc0:	f1bb 0f00 	cmp.w	fp, #0
 8011fc4:	f340 80a0 	ble.w	8012108 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8011fc8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8011fca:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8011fce:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8011fd2:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8011fd6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8011fd8:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8011fdc:	2b00      	cmp	r3, #0
 8011fde:	dd0c      	ble.n	8011ffa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8011fe0:	1406      	asrs	r6, r0, #16
 8011fe2:	d405      	bmi.n	8011ff0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011fe4:	454e      	cmp	r6, r9
 8011fe6:	da03      	bge.n	8011ff0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011fe8:	1416      	asrs	r6, r2, #16
 8011fea:	d401      	bmi.n	8011ff0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011fec:	4546      	cmp	r6, r8
 8011fee:	db05      	blt.n	8011ffc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011ff0:	4470      	add	r0, lr
 8011ff2:	4462      	add	r2, ip
 8011ff4:	3b01      	subs	r3, #1
 8011ff6:	3402      	adds	r4, #2
 8011ff8:	e7f0      	b.n	8011fdc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8011ffa:	d00f      	beq.n	801201c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8011ffc:	1e5e      	subs	r6, r3, #1
 8011ffe:	fb0e 0706 	mla	r7, lr, r6, r0
 8012002:	143f      	asrs	r7, r7, #16
 8012004:	d541      	bpl.n	801208a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8012006:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801200a:	4698      	mov	r8, r3
 801200c:	9603      	str	r6, [sp, #12]
 801200e:	f1b8 0f00 	cmp.w	r8, #0
 8012012:	dc59      	bgt.n	80120c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8012014:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012018:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801201c:	9b00      	ldr	r3, [sp, #0]
 801201e:	2b00      	cmp	r3, #0
 8012020:	dd72      	ble.n	8012108 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8012022:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012026:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801202a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801202e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012030:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012034:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012038:	eeb0 6a62 	vmov.f32	s12, s5
 801203c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012040:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012044:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012048:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801204c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012050:	eeb0 6a43 	vmov.f32	s12, s6
 8012054:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012058:	ee12 2a90 	vmov	r2, s5
 801205c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012060:	fb92 fef3 	sdiv	lr, r2, r3
 8012064:	ee13 2a10 	vmov	r2, s6
 8012068:	fb92 fcf3 	sdiv	ip, r2, r3
 801206c:	9b00      	ldr	r3, [sp, #0]
 801206e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012072:	3b01      	subs	r3, #1
 8012074:	9300      	str	r3, [sp, #0]
 8012076:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801207a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801207c:	eeb0 3a67 	vmov.f32	s6, s15
 8012080:	bf08      	it	eq
 8012082:	465b      	moveq	r3, fp
 8012084:	eef0 2a47 	vmov.f32	s5, s14
 8012088:	e797      	b.n	8011fba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801208a:	454f      	cmp	r7, r9
 801208c:	dabb      	bge.n	8012006 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801208e:	fb0c 2606 	mla	r6, ip, r6, r2
 8012092:	1436      	asrs	r6, r6, #16
 8012094:	d4b7      	bmi.n	8012006 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8012096:	4546      	cmp	r6, r8
 8012098:	dab5      	bge.n	8012006 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801209a:	461e      	mov	r6, r3
 801209c:	46a0      	mov	r8, r4
 801209e:	2e00      	cmp	r6, #0
 80120a0:	ddb8      	ble.n	8012014 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80120a2:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 80120a6:	9901      	ldr	r1, [sp, #4]
 80120a8:	1417      	asrs	r7, r2, #16
 80120aa:	ea4f 4920 	mov.w	r9, r0, asr #16
 80120ae:	fb0a 1707 	mla	r7, sl, r7, r1
 80120b2:	9902      	ldr	r1, [sp, #8]
 80120b4:	f817 7009 	ldrb.w	r7, [r7, r9]
 80120b8:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 80120bc:	f828 7b02 	strh.w	r7, [r8], #2
 80120c0:	4470      	add	r0, lr
 80120c2:	4462      	add	r2, ip
 80120c4:	3e01      	subs	r6, #1
 80120c6:	e7ea      	b.n	801209e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 80120c8:	ea5f 4920 	movs.w	r9, r0, asr #16
 80120cc:	d417      	bmi.n	80120fe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80120ce:	68ae      	ldr	r6, [r5, #8]
 80120d0:	454e      	cmp	r6, r9
 80120d2:	dd14      	ble.n	80120fe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80120d4:	ea5f 4a22 	movs.w	sl, r2, asr #16
 80120d8:	d411      	bmi.n	80120fe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80120da:	68ef      	ldr	r7, [r5, #12]
 80120dc:	4557      	cmp	r7, sl
 80120de:	dd0e      	ble.n	80120fe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80120e0:	9f01      	ldr	r7, [sp, #4]
 80120e2:	b236      	sxth	r6, r6
 80120e4:	fb0a 7606 	mla	r6, sl, r6, r7
 80120e8:	9f02      	ldr	r7, [sp, #8]
 80120ea:	f816 6009 	ldrb.w	r6, [r6, r9]
 80120ee:	f06f 0101 	mvn.w	r1, #1
 80120f2:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 80120f6:	fb01 f608 	mul.w	r6, r1, r8
 80120fa:	9903      	ldr	r1, [sp, #12]
 80120fc:	538f      	strh	r7, [r1, r6]
 80120fe:	4470      	add	r0, lr
 8012100:	4462      	add	r2, ip
 8012102:	f108 38ff 	add.w	r8, r8, #4294967295
 8012106:	e782      	b.n	801200e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8012108:	b005      	add	sp, #20
 801210a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801210e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801210e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012112:	b087      	sub	sp, #28
 8012114:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8012116:	9205      	str	r2, [sp, #20]
 8012118:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801211c:	9203      	str	r2, [sp, #12]
 801211e:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 8012122:	9102      	str	r1, [sp, #8]
 8012124:	6861      	ldr	r1, [r4, #4]
 8012126:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 801212a:	fb01 2000 	mla	r0, r1, r0, r2
 801212e:	6822      	ldr	r2, [r4, #0]
 8012130:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8012134:	9200      	str	r2, [sp, #0]
 8012136:	f8dc 2000 	ldr.w	r2, [ip]
 801213a:	9204      	str	r2, [sp, #16]
 801213c:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8012140:	3204      	adds	r2, #4
 8012142:	9201      	str	r2, [sp, #4]
 8012144:	9a03      	ldr	r2, [sp, #12]
 8012146:	43d5      	mvns	r5, r2
 8012148:	b2ed      	uxtb	r5, r5
 801214a:	9a02      	ldr	r2, [sp, #8]
 801214c:	2a00      	cmp	r2, #0
 801214e:	dc03      	bgt.n	8012158 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8012150:	9a05      	ldr	r2, [sp, #20]
 8012152:	2a00      	cmp	r2, #0
 8012154:	f340 812c 	ble.w	80123b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8012158:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801215a:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801215e:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8012162:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8012166:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8012168:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801216c:	2b00      	cmp	r3, #0
 801216e:	dd10      	ble.n	8012192 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8012170:	140c      	asrs	r4, r1, #16
 8012172:	d405      	bmi.n	8012180 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8012174:	4574      	cmp	r4, lr
 8012176:	da03      	bge.n	8012180 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8012178:	1414      	asrs	r4, r2, #16
 801217a:	d401      	bmi.n	8012180 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801217c:	42bc      	cmp	r4, r7
 801217e:	db09      	blt.n	8012194 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8012180:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8012182:	9800      	ldr	r0, [sp, #0]
 8012184:	4421      	add	r1, r4
 8012186:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8012188:	3002      	adds	r0, #2
 801218a:	4422      	add	r2, r4
 801218c:	3b01      	subs	r3, #1
 801218e:	9000      	str	r0, [sp, #0]
 8012190:	e7ec      	b.n	801216c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8012192:	d071      	beq.n	8012278 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8012194:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8012196:	1e5c      	subs	r4, r3, #1
 8012198:	fb06 1604 	mla	r6, r6, r4, r1
 801219c:	1436      	asrs	r6, r6, #16
 801219e:	d45d      	bmi.n	801225c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80121a0:	4576      	cmp	r6, lr
 80121a2:	da5b      	bge.n	801225c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80121a4:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 80121a6:	fb06 2404 	mla	r4, r6, r4, r2
 80121aa:	1424      	asrs	r4, r4, #16
 80121ac:	d456      	bmi.n	801225c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80121ae:	42bc      	cmp	r4, r7
 80121b0:	da54      	bge.n	801225c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80121b2:	f8dd 9000 	ldr.w	r9, [sp]
 80121b6:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 80121ba:	4698      	mov	r8, r3
 80121bc:	f1b8 0f00 	cmp.w	r8, #0
 80121c0:	dd54      	ble.n	801226c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80121c2:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 80121c6:	9804      	ldr	r0, [sp, #16]
 80121c8:	1414      	asrs	r4, r2, #16
 80121ca:	fb07 0404 	mla	r4, r7, r4, r0
 80121ce:	140e      	asrs	r6, r1, #16
 80121d0:	9801      	ldr	r0, [sp, #4]
 80121d2:	f814 e006 	ldrb.w	lr, [r4, r6]
 80121d6:	f8b9 4000 	ldrh.w	r4, [r9]
 80121da:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80121de:	eb00 0b0e 	add.w	fp, r0, lr
 80121e2:	1227      	asrs	r7, r4, #8
 80121e4:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80121e8:	f89b b001 	ldrb.w	fp, [fp, #1]
 80121ec:	f810 e00e 	ldrb.w	lr, [r0, lr]
 80121f0:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80121f2:	fb16 f60a 	smulbb	r6, r6, sl
 80121f6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80121fa:	fb07 6705 	mla	r7, r7, r5, r6
 80121fe:	10e6      	asrs	r6, r4, #3
 8012200:	00e4      	lsls	r4, r4, #3
 8012202:	b2e4      	uxtb	r4, r4
 8012204:	fb1b fb0a 	smulbb	fp, fp, sl
 8012208:	fb14 f405 	smulbb	r4, r4, r5
 801220c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8012210:	b2bf      	uxth	r7, r7
 8012212:	fb06 b605 	mla	r6, r6, r5, fp
 8012216:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801221a:	b2b6      	uxth	r6, r6
 801221c:	fa1f fe8e 	uxth.w	lr, lr
 8012220:	1c7c      	adds	r4, r7, #1
 8012222:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8012226:	f106 0b01 	add.w	fp, r6, #1
 801222a:	f10e 0401 	add.w	r4, lr, #1
 801222e:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8012232:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8012236:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801223a:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801223e:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8012242:	4327      	orrs	r7, r4
 8012244:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8012248:	4401      	add	r1, r0
 801224a:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801224c:	ea47 070b 	orr.w	r7, r7, fp
 8012250:	f829 7b02 	strh.w	r7, [r9], #2
 8012254:	4402      	add	r2, r0
 8012256:	f108 38ff 	add.w	r8, r8, #4294967295
 801225a:	e7af      	b.n	80121bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801225c:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8012260:	f04f 0e00 	mov.w	lr, #0
 8012264:	eb03 040e 	add.w	r4, r3, lr
 8012268:	2c00      	cmp	r4, #0
 801226a:	dc43      	bgt.n	80122f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801226c:	9a00      	ldr	r2, [sp, #0]
 801226e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012272:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8012276:	9300      	str	r3, [sp, #0]
 8012278:	9b02      	ldr	r3, [sp, #8]
 801227a:	2b00      	cmp	r3, #0
 801227c:	f340 8098 	ble.w	80123b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8012280:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012284:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8012288:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801228c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801228e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012292:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012296:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801229a:	eef0 6a62 	vmov.f32	s13, s5
 801229e:	ee61 7a27 	vmul.f32	s15, s2, s15
 80122a2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80122a6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80122aa:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 80122ae:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80122b2:	eef0 6a43 	vmov.f32	s13, s6
 80122b6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80122ba:	ee12 2a90 	vmov	r2, s5
 80122be:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80122c2:	fb92 f3f3 	sdiv	r3, r2, r3
 80122c6:	ee13 2a10 	vmov	r2, s6
 80122ca:	9313      	str	r3, [sp, #76]	@ 0x4c
 80122cc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80122ce:	fb92 f3f3 	sdiv	r3, r2, r3
 80122d2:	9314      	str	r3, [sp, #80]	@ 0x50
 80122d4:	9b02      	ldr	r3, [sp, #8]
 80122d6:	9a05      	ldr	r2, [sp, #20]
 80122d8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80122dc:	3b01      	subs	r3, #1
 80122de:	9302      	str	r3, [sp, #8]
 80122e0:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 80122e4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80122e6:	eeb0 3a67 	vmov.f32	s6, s15
 80122ea:	bf08      	it	eq
 80122ec:	4613      	moveq	r3, r2
 80122ee:	eef0 2a47 	vmov.f32	s5, s14
 80122f2:	e72a      	b.n	801214a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80122f4:	140f      	asrs	r7, r1, #16
 80122f6:	d454      	bmi.n	80123a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80122f8:	f8dc 6008 	ldr.w	r6, [ip, #8]
 80122fc:	42be      	cmp	r6, r7
 80122fe:	dd50      	ble.n	80123a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8012300:	ea5f 4822 	movs.w	r8, r2, asr #16
 8012304:	d44d      	bmi.n	80123a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8012306:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801230a:	4544      	cmp	r4, r8
 801230c:	dd49      	ble.n	80123a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801230e:	9c04      	ldr	r4, [sp, #16]
 8012310:	b236      	sxth	r6, r6
 8012312:	fb08 4606 	mla	r6, r8, r6, r4
 8012316:	f06f 0001 	mvn.w	r0, #1
 801231a:	f816 8007 	ldrb.w	r8, [r6, r7]
 801231e:	9c01      	ldr	r4, [sp, #4]
 8012320:	fb00 fa0e 	mul.w	sl, r0, lr
 8012324:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8012328:	9800      	ldr	r0, [sp, #0]
 801232a:	eb04 0b08 	add.w	fp, r4, r8
 801232e:	f830 400a 	ldrh.w	r4, [r0, sl]
 8012332:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8012336:	9801      	ldr	r0, [sp, #4]
 8012338:	f89b b001 	ldrb.w	fp, [fp, #1]
 801233c:	f810 8008 	ldrb.w	r8, [r0, r8]
 8012340:	9800      	ldr	r0, [sp, #0]
 8012342:	1227      	asrs	r7, r4, #8
 8012344:	fb16 f609 	smulbb	r6, r6, r9
 8012348:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801234c:	fb07 6705 	mla	r7, r7, r5, r6
 8012350:	10e6      	asrs	r6, r4, #3
 8012352:	00e4      	lsls	r4, r4, #3
 8012354:	b2e4      	uxtb	r4, r4
 8012356:	fb1b fb09 	smulbb	fp, fp, r9
 801235a:	fb14 f405 	smulbb	r4, r4, r5
 801235e:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8012362:	b2bf      	uxth	r7, r7
 8012364:	fb06 b605 	mla	r6, r6, r5, fp
 8012368:	fb08 4809 	mla	r8, r8, r9, r4
 801236c:	b2b6      	uxth	r6, r6
 801236e:	fa1f f888 	uxth.w	r8, r8
 8012372:	1c7c      	adds	r4, r7, #1
 8012374:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8012378:	f106 0b01 	add.w	fp, r6, #1
 801237c:	f108 0401 	add.w	r4, r8, #1
 8012380:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8012384:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8012388:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801238c:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8012390:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8012394:	4327      	orrs	r7, r4
 8012396:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801239a:	ea47 070b 	orr.w	r7, r7, fp
 801239e:	f820 700a 	strh.w	r7, [r0, sl]
 80123a2:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80123a4:	4401      	add	r1, r0
 80123a6:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80123a8:	f10e 3eff 	add.w	lr, lr, #4294967295
 80123ac:	4402      	add	r2, r0
 80123ae:	e759      	b.n	8012264 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80123b0:	b007      	add	sp, #28
 80123b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080123b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80123b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80123bc:	b085      	sub	sp, #20
 80123be:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80123c2:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 80123c4:	9203      	str	r2, [sp, #12]
 80123c6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 80123ca:	6870      	ldr	r0, [r6, #4]
 80123cc:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 80123ce:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 80123d2:	686f      	ldr	r7, [r5, #4]
 80123d4:	9101      	str	r1, [sp, #4]
 80123d6:	fb00 2404 	mla	r4, r0, r4, r2
 80123da:	6832      	ldr	r2, [r6, #0]
 80123dc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80123e0:	682a      	ldr	r2, [r5, #0]
 80123e2:	9202      	str	r2, [sp, #8]
 80123e4:	3704      	adds	r7, #4
 80123e6:	9a01      	ldr	r2, [sp, #4]
 80123e8:	2a00      	cmp	r2, #0
 80123ea:	dc03      	bgt.n	80123f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80123ec:	9a03      	ldr	r2, [sp, #12]
 80123ee:	2a00      	cmp	r2, #0
 80123f0:	f340 80cc 	ble.w	801258c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80123f4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80123f6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80123fa:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80123fe:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8012402:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8012404:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8012408:	2b00      	cmp	r3, #0
 801240a:	dd0d      	ble.n	8012428 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801240c:	1406      	asrs	r6, r0, #16
 801240e:	d405      	bmi.n	801241c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8012410:	454e      	cmp	r6, r9
 8012412:	da03      	bge.n	801241c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8012414:	1416      	asrs	r6, r2, #16
 8012416:	d401      	bmi.n	801241c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8012418:	4546      	cmp	r6, r8
 801241a:	db06      	blt.n	801242a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801241c:	9e12      	ldr	r6, [sp, #72]	@ 0x48
 801241e:	4460      	add	r0, ip
 8012420:	4432      	add	r2, r6
 8012422:	3b01      	subs	r3, #1
 8012424:	3402      	adds	r4, #2
 8012426:	e7ef      	b.n	8012408 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8012428:	d00f      	beq.n	801244a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801242a:	1e5e      	subs	r6, r3, #1
 801242c:	fb0c 0e06 	mla	lr, ip, r6, r0
 8012430:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8012434:	d543      	bpl.n	80124be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8012436:	4698      	mov	r8, r3
 8012438:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801243c:	f1b8 0f00 	cmp.w	r8, #0
 8012440:	dc71      	bgt.n	8012526 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8012442:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012446:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801244a:	9b01      	ldr	r3, [sp, #4]
 801244c:	2b00      	cmp	r3, #0
 801244e:	f340 809d 	ble.w	801258c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8012452:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012456:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801245a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801245e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012460:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012464:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012468:	eeb0 6a62 	vmov.f32	s12, s5
 801246c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012470:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012474:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012478:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801247c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012480:	eeb0 6a43 	vmov.f32	s12, s6
 8012484:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012488:	ee12 2a90 	vmov	r2, s5
 801248c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012490:	fb92 fcf3 	sdiv	ip, r2, r3
 8012494:	ee13 2a10 	vmov	r2, s6
 8012498:	fb92 f3f3 	sdiv	r3, r2, r3
 801249c:	9312      	str	r3, [sp, #72]	@ 0x48
 801249e:	9b01      	ldr	r3, [sp, #4]
 80124a0:	9a03      	ldr	r2, [sp, #12]
 80124a2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80124a6:	3b01      	subs	r3, #1
 80124a8:	9301      	str	r3, [sp, #4]
 80124aa:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80124ae:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80124b0:	eeb0 3a67 	vmov.f32	s6, s15
 80124b4:	bf08      	it	eq
 80124b6:	4613      	moveq	r3, r2
 80124b8:	eef0 2a47 	vmov.f32	s5, s14
 80124bc:	e793      	b.n	80123e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 80124be:	45ce      	cmp	lr, r9
 80124c0:	dab9      	bge.n	8012436 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80124c2:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80124c4:	fb01 2606 	mla	r6, r1, r6, r2
 80124c8:	1436      	asrs	r6, r6, #16
 80124ca:	d4b4      	bmi.n	8012436 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80124cc:	4546      	cmp	r6, r8
 80124ce:	dab2      	bge.n	8012436 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80124d0:	4698      	mov	r8, r3
 80124d2:	46a2      	mov	sl, r4
 80124d4:	f1b8 0f00 	cmp.w	r8, #0
 80124d8:	ddb3      	ble.n	8012442 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80124da:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80124de:	9902      	ldr	r1, [sp, #8]
 80124e0:	1416      	asrs	r6, r2, #16
 80124e2:	fb09 1606 	mla	r6, r9, r6, r1
 80124e6:	ea4f 4e20 	mov.w	lr, r0, asr #16
 80124ea:	492a      	ldr	r1, [pc, #168]	@ (8012594 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 80124ec:	f816 e00e 	ldrb.w	lr, [r6, lr]
 80124f0:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80124f4:	eb07 0b0e 	add.w	fp, r7, lr
 80124f8:	4460      	add	r0, ip
 80124fa:	f89b 6001 	ldrb.w	r6, [fp, #1]
 80124fe:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8012502:	00f6      	lsls	r6, r6, #3
 8012504:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8012508:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801250c:	ea49 0606 	orr.w	r6, r9, r6
 8012510:	f817 900e 	ldrb.w	r9, [r7, lr]
 8012514:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8012516:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801251a:	f82a 6b02 	strh.w	r6, [sl], #2
 801251e:	440a      	add	r2, r1
 8012520:	f108 38ff 	add.w	r8, r8, #4294967295
 8012524:	e7d6      	b.n	80124d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8012526:	ea5f 4920 	movs.w	r9, r0, asr #16
 801252a:	d429      	bmi.n	8012580 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801252c:	68ae      	ldr	r6, [r5, #8]
 801252e:	454e      	cmp	r6, r9
 8012530:	dd26      	ble.n	8012580 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8012532:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8012536:	d423      	bmi.n	8012580 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8012538:	68e9      	ldr	r1, [r5, #12]
 801253a:	4559      	cmp	r1, fp
 801253c:	dd20      	ble.n	8012580 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801253e:	9902      	ldr	r1, [sp, #8]
 8012540:	fa0f fe86 	sxth.w	lr, r6
 8012544:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8012548:	f06f 0101 	mvn.w	r1, #1
 801254c:	f81e e009 	ldrb.w	lr, [lr, r9]
 8012550:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8012554:	eb07 060e 	add.w	r6, r7, lr
 8012558:	fb01 f908 	mul.w	r9, r1, r8
 801255c:	f896 b002 	ldrb.w	fp, [r6, #2]
 8012560:	7876      	ldrb	r6, [r6, #1]
 8012562:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
 8012566:	00f6      	lsls	r6, r6, #3
 8012568:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801256c:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8012570:	ea4b 0606 	orr.w	r6, fp, r6
 8012574:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8012578:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801257c:	f82a 6009 	strh.w	r6, [sl, r9]
 8012580:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8012582:	4460      	add	r0, ip
 8012584:	440a      	add	r2, r1
 8012586:	f108 38ff 	add.w	r8, r8, #4294967295
 801258a:	e757      	b.n	801243c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801258c:	b005      	add	sp, #20
 801258e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012592:	bf00      	nop
 8012594:	fffff800 	.word	0xfffff800

08012598 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012598:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801259c:	b087      	sub	sp, #28
 801259e:	468b      	mov	fp, r1
 80125a0:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80125a2:	9204      	str	r2, [sp, #16]
 80125a4:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80125a8:	9205      	str	r2, [sp, #20]
 80125aa:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 80125ae:	6841      	ldr	r1, [r0, #4]
 80125b0:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 80125b4:	fb01 2404 	mla	r4, r1, r4, r2
 80125b8:	6802      	ldr	r2, [r0, #0]
 80125ba:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80125be:	f8dc 2000 	ldr.w	r2, [ip]
 80125c2:	9201      	str	r2, [sp, #4]
 80125c4:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80125c8:	3204      	adds	r2, #4
 80125ca:	9202      	str	r2, [sp, #8]
 80125cc:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80125d0:	f1bb 0f00 	cmp.w	fp, #0
 80125d4:	dc03      	bgt.n	80125de <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 80125d6:	9a04      	ldr	r2, [sp, #16]
 80125d8:	2a00      	cmp	r2, #0
 80125da:	f340 8138 	ble.w	801284e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80125de:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80125e0:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 80125e4:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 80125e8:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80125ec:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80125ee:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80125f2:	2b00      	cmp	r3, #0
 80125f4:	dd0e      	ble.n	8012614 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80125f6:	1402      	asrs	r2, r0, #16
 80125f8:	d405      	bmi.n	8012606 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80125fa:	42ba      	cmp	r2, r7
 80125fc:	da03      	bge.n	8012606 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80125fe:	140a      	asrs	r2, r1, #16
 8012600:	d401      	bmi.n	8012606 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8012602:	42b2      	cmp	r2, r6
 8012604:	db07      	blt.n	8012616 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8012606:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8012608:	4410      	add	r0, r2
 801260a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801260c:	3b01      	subs	r3, #1
 801260e:	4411      	add	r1, r2
 8012610:	3402      	adds	r4, #2
 8012612:	e7ee      	b.n	80125f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8012614:	d019      	beq.n	801264a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8012616:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8012618:	1e5a      	subs	r2, r3, #1
 801261a:	fb05 0502 	mla	r5, r5, r2, r0
 801261e:	142d      	asrs	r5, r5, #16
 8012620:	d409      	bmi.n	8012636 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8012622:	42bd      	cmp	r5, r7
 8012624:	da07      	bge.n	8012636 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8012626:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8012628:	fb05 1202 	mla	r2, r5, r2, r1
 801262c:	1412      	asrs	r2, r2, #16
 801262e:	d402      	bmi.n	8012636 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8012630:	42b2      	cmp	r2, r6
 8012632:	f2c0 80ac 	blt.w	801278e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8012636:	f04f 0e00 	mov.w	lr, #0
 801263a:	eb03 020e 	add.w	r2, r3, lr
 801263e:	2a00      	cmp	r2, #0
 8012640:	dc3e      	bgt.n	80126c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8012642:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012646:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801264a:	f1bb 0f00 	cmp.w	fp, #0
 801264e:	f340 80fe 	ble.w	801284e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8012652:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012656:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801265a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801265e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8012660:	f1bb 0b01 	subs.w	fp, fp, #1
 8012664:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012668:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801266c:	eeb0 6a62 	vmov.f32	s12, s5
 8012670:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012674:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012678:	ee77 2a62 	vsub.f32	s5, s14, s5
 801267c:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8012680:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012684:	eeb0 6a43 	vmov.f32	s12, s6
 8012688:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801268c:	ee12 2a90 	vmov	r2, s5
 8012690:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012694:	fb92 f3f3 	sdiv	r3, r2, r3
 8012698:	ee13 2a10 	vmov	r2, s6
 801269c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80126a0:	9313      	str	r3, [sp, #76]	@ 0x4c
 80126a2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80126a4:	fb92 f3f3 	sdiv	r3, r2, r3
 80126a8:	9a04      	ldr	r2, [sp, #16]
 80126aa:	9314      	str	r3, [sp, #80]	@ 0x50
 80126ac:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 80126b0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80126b2:	eeb0 3a67 	vmov.f32	s6, s15
 80126b6:	bf08      	it	eq
 80126b8:	4613      	moveq	r3, r2
 80126ba:	eef0 2a47 	vmov.f32	s5, s14
 80126be:	e787      	b.n	80125d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80126c0:	1406      	asrs	r6, r0, #16
 80126c2:	d45d      	bmi.n	8012780 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80126c4:	f8dc 5008 	ldr.w	r5, [ip, #8]
 80126c8:	42b5      	cmp	r5, r6
 80126ca:	dd59      	ble.n	8012780 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80126cc:	140f      	asrs	r7, r1, #16
 80126ce:	d457      	bmi.n	8012780 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80126d0:	f8dc 200c 	ldr.w	r2, [ip, #12]
 80126d4:	42ba      	cmp	r2, r7
 80126d6:	dd53      	ble.n	8012780 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80126d8:	9a01      	ldr	r2, [sp, #4]
 80126da:	b22d      	sxth	r5, r5
 80126dc:	fb07 2505 	mla	r5, r7, r5, r2
 80126e0:	5daa      	ldrb	r2, [r5, r6]
 80126e2:	9d02      	ldr	r5, [sp, #8]
 80126e4:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80126e8:	0e2e      	lsrs	r6, r5, #24
 80126ea:	d049      	beq.n	8012780 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80126ec:	f06f 0201 	mvn.w	r2, #1
 80126f0:	fb02 f20e 	mul.w	r2, r2, lr
 80126f4:	9203      	str	r2, [sp, #12]
 80126f6:	f834 8002 	ldrh.w	r8, [r4, r2]
 80126fa:	9a05      	ldr	r2, [sp, #20]
 80126fc:	4356      	muls	r6, r2
 80126fe:	1c72      	adds	r2, r6, #1
 8012700:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8012704:	1212      	asrs	r2, r2, #8
 8012706:	fa1f f982 	uxth.w	r9, r2
 801270a:	ea4f 2728 	mov.w	r7, r8, asr #8
 801270e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8012712:	43d2      	mvns	r2, r2
 8012714:	b2d2      	uxtb	r2, r2
 8012716:	fb16 f609 	smulbb	r6, r6, r9
 801271a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801271e:	fb07 6702 	mla	r7, r7, r2, r6
 8012722:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8012726:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801272a:	b2ed      	uxtb	r5, r5
 801272c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8012730:	fa5f f888 	uxtb.w	r8, r8
 8012734:	fb15 f509 	smulbb	r5, r5, r9
 8012738:	fb08 5502 	mla	r5, r8, r2, r5
 801273c:	b2bf      	uxth	r7, r7
 801273e:	fb1a fa09 	smulbb	sl, sl, r9
 8012742:	b2ad      	uxth	r5, r5
 8012744:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8012748:	fb06 a602 	mla	r6, r6, r2, sl
 801274c:	1c7a      	adds	r2, r7, #1
 801274e:	f105 0a01 	add.w	sl, r5, #1
 8012752:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8012756:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801275a:	b2b6      	uxth	r6, r6
 801275c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012760:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8012764:	ea4a 0707 	orr.w	r7, sl, r7
 8012768:	f106 0a01 	add.w	sl, r6, #1
 801276c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8012770:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012774:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8012778:	9a03      	ldr	r2, [sp, #12]
 801277a:	ea47 070a 	orr.w	r7, r7, sl
 801277e:	52a7      	strh	r7, [r4, r2]
 8012780:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8012782:	4410      	add	r0, r2
 8012784:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8012786:	f10e 3eff 	add.w	lr, lr, #4294967295
 801278a:	4411      	add	r1, r2
 801278c:	e755      	b.n	801263a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801278e:	f04f 0800 	mov.w	r8, #0
 8012792:	eba3 0208 	sub.w	r2, r3, r8
 8012796:	2a00      	cmp	r2, #0
 8012798:	f77f af53 	ble.w	8012642 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801279c:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 80127a0:	9f01      	ldr	r7, [sp, #4]
 80127a2:	140a      	asrs	r2, r1, #16
 80127a4:	1405      	asrs	r5, r0, #16
 80127a6:	fb06 7202 	mla	r2, r6, r2, r7
 80127aa:	5d52      	ldrb	r2, [r2, r5]
 80127ac:	9d02      	ldr	r5, [sp, #8]
 80127ae:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80127b2:	0e2e      	lsrs	r6, r5, #24
 80127b4:	d044      	beq.n	8012840 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80127b6:	9a05      	ldr	r2, [sp, #20]
 80127b8:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 80127bc:	4356      	muls	r6, r2
 80127be:	1c72      	adds	r2, r6, #1
 80127c0:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80127c4:	1212      	asrs	r2, r2, #8
 80127c6:	fa1f f982 	uxth.w	r9, r2
 80127ca:	ea4f 272e 	mov.w	r7, lr, asr #8
 80127ce:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80127d2:	43d2      	mvns	r2, r2
 80127d4:	b2d2      	uxtb	r2, r2
 80127d6:	fb16 f609 	smulbb	r6, r6, r9
 80127da:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80127de:	fb07 6702 	mla	r7, r7, r2, r6
 80127e2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80127e6:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80127ea:	b2ed      	uxtb	r5, r5
 80127ec:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80127f0:	fa5f fe8e 	uxtb.w	lr, lr
 80127f4:	fb15 f509 	smulbb	r5, r5, r9
 80127f8:	fb0e 5502 	mla	r5, lr, r2, r5
 80127fc:	b2bf      	uxth	r7, r7
 80127fe:	fb1a fa09 	smulbb	sl, sl, r9
 8012802:	b2ad      	uxth	r5, r5
 8012804:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8012808:	fb06 a602 	mla	r6, r6, r2, sl
 801280c:	1c7a      	adds	r2, r7, #1
 801280e:	f105 0a01 	add.w	sl, r5, #1
 8012812:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8012816:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801281a:	b2b6      	uxth	r6, r6
 801281c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012820:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8012824:	ea4a 0707 	orr.w	r7, sl, r7
 8012828:	f106 0a01 	add.w	sl, r6, #1
 801282c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8012830:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012834:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8012838:	ea47 070a 	orr.w	r7, r7, sl
 801283c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8012840:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8012842:	4410      	add	r0, r2
 8012844:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8012846:	f108 0801 	add.w	r8, r8, #1
 801284a:	4411      	add	r1, r2
 801284c:	e7a1      	b.n	8012792 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801284e:	b007      	add	sp, #28
 8012850:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012854 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012854:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012858:	b085      	sub	sp, #20
 801285a:	468b      	mov	fp, r1
 801285c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801285e:	9203      	str	r2, [sp, #12]
 8012860:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8012864:	6841      	ldr	r1, [r0, #4]
 8012866:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 801286a:	fb01 2404 	mla	r4, r1, r4, r2
 801286e:	6802      	ldr	r2, [r0, #0]
 8012870:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8012874:	f8de 2000 	ldr.w	r2, [lr]
 8012878:	9200      	str	r2, [sp, #0]
 801287a:	f8de 2004 	ldr.w	r2, [lr, #4]
 801287e:	3204      	adds	r2, #4
 8012880:	9201      	str	r2, [sp, #4]
 8012882:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8012886:	f1bb 0f00 	cmp.w	fp, #0
 801288a:	dc03      	bgt.n	8012894 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801288c:	9a03      	ldr	r2, [sp, #12]
 801288e:	2a00      	cmp	r2, #0
 8012890:	f340 8153 	ble.w	8012b3a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8012894:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8012896:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801289a:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801289e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80128a2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80128a4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80128a8:	2b00      	cmp	r3, #0
 80128aa:	dd0e      	ble.n	80128ca <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80128ac:	1408      	asrs	r0, r1, #16
 80128ae:	d405      	bmi.n	80128bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80128b0:	42b8      	cmp	r0, r7
 80128b2:	da03      	bge.n	80128bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80128b4:	1410      	asrs	r0, r2, #16
 80128b6:	d401      	bmi.n	80128bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80128b8:	42b0      	cmp	r0, r6
 80128ba:	db07      	blt.n	80128cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80128bc:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80128be:	4401      	add	r1, r0
 80128c0:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80128c2:	3b01      	subs	r3, #1
 80128c4:	4402      	add	r2, r0
 80128c6:	3402      	adds	r4, #2
 80128c8:	e7ee      	b.n	80128a8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80128ca:	d017      	beq.n	80128fc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80128cc:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80128ce:	1e58      	subs	r0, r3, #1
 80128d0:	fb05 1500 	mla	r5, r5, r0, r1
 80128d4:	142d      	asrs	r5, r5, #16
 80128d6:	d409      	bmi.n	80128ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80128d8:	42bd      	cmp	r5, r7
 80128da:	da07      	bge.n	80128ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80128dc:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80128de:	fb05 2000 	mla	r0, r5, r0, r2
 80128e2:	1400      	asrs	r0, r0, #16
 80128e4:	d402      	bmi.n	80128ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80128e6:	42b0      	cmp	r0, r6
 80128e8:	f2c0 80bc 	blt.w	8012a64 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 80128ec:	2600      	movs	r6, #0
 80128ee:	1998      	adds	r0, r3, r6
 80128f0:	2800      	cmp	r0, #0
 80128f2:	dc3e      	bgt.n	8012972 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 80128f4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80128f8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80128fc:	f1bb 0f00 	cmp.w	fp, #0
 8012900:	f340 811b 	ble.w	8012b3a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8012904:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012908:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801290c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012910:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012912:	f1bb 0b01 	subs.w	fp, fp, #1
 8012916:	ee31 1a05 	vadd.f32	s2, s2, s10
 801291a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801291e:	eeb0 6a62 	vmov.f32	s12, s5
 8012922:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012926:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801292a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801292e:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8012932:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012936:	eeb0 6a43 	vmov.f32	s12, s6
 801293a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801293e:	ee12 2a90 	vmov	r2, s5
 8012942:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012946:	fb92 f3f3 	sdiv	r3, r2, r3
 801294a:	ee13 2a10 	vmov	r2, s6
 801294e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012952:	9311      	str	r3, [sp, #68]	@ 0x44
 8012954:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012956:	fb92 f3f3 	sdiv	r3, r2, r3
 801295a:	9a03      	ldr	r2, [sp, #12]
 801295c:	9312      	str	r3, [sp, #72]	@ 0x48
 801295e:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8012962:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012964:	eeb0 3a67 	vmov.f32	s6, s15
 8012968:	bf08      	it	eq
 801296a:	4613      	moveq	r3, r2
 801296c:	eef0 2a47 	vmov.f32	s5, s14
 8012970:	e789      	b.n	8012886 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8012972:	140f      	asrs	r7, r1, #16
 8012974:	d426      	bmi.n	80129c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8012976:	f8de 5008 	ldr.w	r5, [lr, #8]
 801297a:	42bd      	cmp	r5, r7
 801297c:	dd22      	ble.n	80129c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801297e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8012982:	d41f      	bmi.n	80129c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8012984:	f8de 000c 	ldr.w	r0, [lr, #12]
 8012988:	4560      	cmp	r0, ip
 801298a:	dd1b      	ble.n	80129c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801298c:	9800      	ldr	r0, [sp, #0]
 801298e:	b22d      	sxth	r5, r5
 8012990:	fb0c 0505 	mla	r5, ip, r5, r0
 8012994:	5de8      	ldrb	r0, [r5, r7]
 8012996:	9d01      	ldr	r5, [sp, #4]
 8012998:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801299c:	0e07      	lsrs	r7, r0, #24
 801299e:	2fff      	cmp	r7, #255	@ 0xff
 80129a0:	d116      	bne.n	80129d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80129a2:	f06f 0501 	mvn.w	r5, #1
 80129a6:	fb05 f706 	mul.w	r7, r5, r6
 80129aa:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 80129ae:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 80129b2:	0945      	lsrs	r5, r0, #5
 80129b4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80129b8:	ea4c 0505 	orr.w	r5, ip, r5
 80129bc:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80129c0:	4305      	orrs	r5, r0
 80129c2:	53e5      	strh	r5, [r4, r7]
 80129c4:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80129c6:	4401      	add	r1, r0
 80129c8:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80129ca:	3e01      	subs	r6, #1
 80129cc:	4402      	add	r2, r0
 80129ce:	e78e      	b.n	80128ee <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80129d0:	b2fd      	uxtb	r5, r7
 80129d2:	2f00      	cmp	r7, #0
 80129d4:	d0f6      	beq.n	80129c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80129d6:	f06f 0701 	mvn.w	r7, #1
 80129da:	4377      	muls	r7, r6
 80129dc:	fa1f f985 	uxth.w	r9, r5
 80129e0:	f834 8007 	ldrh.w	r8, [r4, r7]
 80129e4:	9702      	str	r7, [sp, #8]
 80129e6:	ea4f 2c28 	mov.w	ip, r8, asr #8
 80129ea:	f3c0 4707 	ubfx	r7, r0, #16, #8
 80129ee:	43ed      	mvns	r5, r5
 80129f0:	b2ed      	uxtb	r5, r5
 80129f2:	fb17 f709 	smulbb	r7, r7, r9
 80129f6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80129fa:	fb0c 7c05 	mla	ip, ip, r5, r7
 80129fe:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8012a02:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8012a06:	b2c0      	uxtb	r0, r0
 8012a08:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8012a0c:	fa5f f888 	uxtb.w	r8, r8
 8012a10:	fb10 f009 	smulbb	r0, r0, r9
 8012a14:	fb08 0005 	mla	r0, r8, r5, r0
 8012a18:	b280      	uxth	r0, r0
 8012a1a:	fa1f fc8c 	uxth.w	ip, ip
 8012a1e:	fb1a fa09 	smulbb	sl, sl, r9
 8012a22:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8012a26:	fb07 a705 	mla	r7, r7, r5, sl
 8012a2a:	f100 0a01 	add.w	sl, r0, #1
 8012a2e:	f10c 0501 	add.w	r5, ip, #1
 8012a32:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8012a36:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8012a3a:	b2bf      	uxth	r7, r7
 8012a3c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012a40:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8012a44:	ea4a 0c0c 	orr.w	ip, sl, ip
 8012a48:	f107 0a01 	add.w	sl, r7, #1
 8012a4c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8012a50:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012a54:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8012a58:	9802      	ldr	r0, [sp, #8]
 8012a5a:	ea4c 0c0a 	orr.w	ip, ip, sl
 8012a5e:	f824 c000 	strh.w	ip, [r4, r0]
 8012a62:	e7af      	b.n	80129c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8012a64:	f04f 0800 	mov.w	r8, #0
 8012a68:	eba3 0008 	sub.w	r0, r3, r8
 8012a6c:	2800      	cmp	r0, #0
 8012a6e:	f77f af41 	ble.w	80128f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8012a72:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8012a76:	9f00      	ldr	r7, [sp, #0]
 8012a78:	1410      	asrs	r0, r2, #16
 8012a7a:	140d      	asrs	r5, r1, #16
 8012a7c:	fb06 7000 	mla	r0, r6, r0, r7
 8012a80:	5d40      	ldrb	r0, [r0, r5]
 8012a82:	9d01      	ldr	r5, [sp, #4]
 8012a84:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8012a88:	0e2e      	lsrs	r6, r5, #24
 8012a8a:	2eff      	cmp	r6, #255	@ 0xff
 8012a8c:	d112      	bne.n	8012ab4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8012a8e:	482c      	ldr	r0, [pc, #176]	@ (8012b40 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8012a90:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8012a94:	0968      	lsrs	r0, r5, #5
 8012a96:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8012a9a:	4330      	orrs	r0, r6
 8012a9c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8012aa0:	4328      	orrs	r0, r5
 8012aa2:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8012aa6:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8012aa8:	4401      	add	r1, r0
 8012aaa:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8012aac:	f108 0801 	add.w	r8, r8, #1
 8012ab0:	4402      	add	r2, r0
 8012ab2:	e7d9      	b.n	8012a68 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8012ab4:	b2f0      	uxtb	r0, r6
 8012ab6:	2e00      	cmp	r6, #0
 8012ab8:	d0f5      	beq.n	8012aa6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8012aba:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8012abe:	fa1f f980 	uxth.w	r9, r0
 8012ac2:	ea4f 272c 	mov.w	r7, ip, asr #8
 8012ac6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8012aca:	43c0      	mvns	r0, r0
 8012acc:	b2c0      	uxtb	r0, r0
 8012ace:	fb16 f609 	smulbb	r6, r6, r9
 8012ad2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8012ad6:	fb07 6700 	mla	r7, r7, r0, r6
 8012ada:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8012ade:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8012ae2:	b2ed      	uxtb	r5, r5
 8012ae4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8012ae8:	fa5f fc8c 	uxtb.w	ip, ip
 8012aec:	fb15 f509 	smulbb	r5, r5, r9
 8012af0:	fb0c 5500 	mla	r5, ip, r0, r5
 8012af4:	b2bf      	uxth	r7, r7
 8012af6:	fb1a fa09 	smulbb	sl, sl, r9
 8012afa:	b2ad      	uxth	r5, r5
 8012afc:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8012b00:	fb06 a600 	mla	r6, r6, r0, sl
 8012b04:	1c78      	adds	r0, r7, #1
 8012b06:	f105 0a01 	add.w	sl, r5, #1
 8012b0a:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8012b0e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8012b12:	b2b6      	uxth	r6, r6
 8012b14:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012b18:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8012b1c:	ea4a 0707 	orr.w	r7, sl, r7
 8012b20:	f106 0a01 	add.w	sl, r6, #1
 8012b24:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8012b28:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012b2c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8012b30:	ea47 070a 	orr.w	r7, r7, sl
 8012b34:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8012b38:	e7b5      	b.n	8012aa6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8012b3a:	b005      	add	sp, #20
 8012b3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012b40:	fffff800 	.word	0xfffff800

08012b44 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012b44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012b48:	b087      	sub	sp, #28
 8012b4a:	468b      	mov	fp, r1
 8012b4c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8012b4e:	9204      	str	r2, [sp, #16]
 8012b50:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8012b54:	9205      	str	r2, [sp, #20]
 8012b56:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 8012b5a:	6861      	ldr	r1, [r4, #4]
 8012b5c:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 8012b60:	fb01 2000 	mla	r0, r1, r0, r2
 8012b64:	6822      	ldr	r2, [r4, #0]
 8012b66:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8012b6a:	f8de 2000 	ldr.w	r2, [lr]
 8012b6e:	9201      	str	r2, [sp, #4]
 8012b70:	f8de 2004 	ldr.w	r2, [lr, #4]
 8012b74:	9202      	str	r2, [sp, #8]
 8012b76:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8012b7a:	f1bb 0f00 	cmp.w	fp, #0
 8012b7e:	dc03      	bgt.n	8012b88 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8012b80:	9a04      	ldr	r2, [sp, #16]
 8012b82:	2a00      	cmp	r2, #0
 8012b84:	f340 8142 	ble.w	8012e0c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8012b88:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8012b8a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8012b8e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8012b92:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8012b96:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8012b98:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8012b9c:	2b00      	cmp	r3, #0
 8012b9e:	dd0e      	ble.n	8012bbe <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8012ba0:	140c      	asrs	r4, r1, #16
 8012ba2:	d405      	bmi.n	8012bb0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8012ba4:	42bc      	cmp	r4, r7
 8012ba6:	da03      	bge.n	8012bb0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8012ba8:	1414      	asrs	r4, r2, #16
 8012baa:	d401      	bmi.n	8012bb0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8012bac:	42b4      	cmp	r4, r6
 8012bae:	db07      	blt.n	8012bc0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8012bb0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8012bb2:	4421      	add	r1, r4
 8012bb4:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8012bb6:	3b01      	subs	r3, #1
 8012bb8:	4422      	add	r2, r4
 8012bba:	3002      	adds	r0, #2
 8012bbc:	e7ee      	b.n	8012b9c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8012bbe:	d019      	beq.n	8012bf4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8012bc0:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8012bc2:	1e5c      	subs	r4, r3, #1
 8012bc4:	fb05 1504 	mla	r5, r5, r4, r1
 8012bc8:	142d      	asrs	r5, r5, #16
 8012bca:	d409      	bmi.n	8012be0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8012bcc:	42bd      	cmp	r5, r7
 8012bce:	da07      	bge.n	8012be0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8012bd0:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8012bd2:	fb05 2404 	mla	r4, r5, r4, r2
 8012bd6:	1424      	asrs	r4, r4, #16
 8012bd8:	d402      	bmi.n	8012be0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8012bda:	42b4      	cmp	r4, r6
 8012bdc:	f2c0 80b1 	blt.w	8012d42 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8012be0:	f04f 0800 	mov.w	r8, #0
 8012be4:	eb03 0408 	add.w	r4, r3, r8
 8012be8:	2c00      	cmp	r4, #0
 8012bea:	dc3e      	bgt.n	8012c6a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8012bec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012bf0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012bf4:	f1bb 0f00 	cmp.w	fp, #0
 8012bf8:	f340 8108 	ble.w	8012e0c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8012bfc:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012c00:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012c04:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012c08:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8012c0a:	f1bb 0b01 	subs.w	fp, fp, #1
 8012c0e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012c12:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012c16:	eeb0 6a62 	vmov.f32	s12, s5
 8012c1a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012c1e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012c22:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012c26:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8012c2a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012c2e:	eeb0 6a43 	vmov.f32	s12, s6
 8012c32:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012c36:	ee12 2a90 	vmov	r2, s5
 8012c3a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012c3e:	fb92 f3f3 	sdiv	r3, r2, r3
 8012c42:	ee13 2a10 	vmov	r2, s6
 8012c46:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012c4a:	9313      	str	r3, [sp, #76]	@ 0x4c
 8012c4c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8012c4e:	fb92 f3f3 	sdiv	r3, r2, r3
 8012c52:	9a04      	ldr	r2, [sp, #16]
 8012c54:	9314      	str	r3, [sp, #80]	@ 0x50
 8012c56:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8012c5a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8012c5c:	eeb0 3a67 	vmov.f32	s6, s15
 8012c60:	bf08      	it	eq
 8012c62:	4613      	moveq	r3, r2
 8012c64:	eef0 2a47 	vmov.f32	s5, s14
 8012c68:	e787      	b.n	8012b7a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8012c6a:	140e      	asrs	r6, r1, #16
 8012c6c:	d462      	bmi.n	8012d34 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8012c6e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8012c72:	42b5      	cmp	r5, r6
 8012c74:	dd5e      	ble.n	8012d34 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8012c76:	1417      	asrs	r7, r2, #16
 8012c78:	d45c      	bmi.n	8012d34 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8012c7a:	f8de 400c 	ldr.w	r4, [lr, #12]
 8012c7e:	42bc      	cmp	r4, r7
 8012c80:	dd58      	ble.n	8012d34 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8012c82:	b22d      	sxth	r5, r5
 8012c84:	fb07 6505 	mla	r5, r7, r5, r6
 8012c88:	9c02      	ldr	r4, [sp, #8]
 8012c8a:	5d66      	ldrb	r6, [r4, r5]
 8012c8c:	2e00      	cmp	r6, #0
 8012c8e:	d051      	beq.n	8012d34 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8012c90:	9c01      	ldr	r4, [sp, #4]
 8012c92:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8012c96:	f06f 0401 	mvn.w	r4, #1
 8012c9a:	fb04 f408 	mul.w	r4, r4, r8
 8012c9e:	9403      	str	r4, [sp, #12]
 8012ca0:	5b05      	ldrh	r5, [r0, r4]
 8012ca2:	9c05      	ldr	r4, [sp, #20]
 8012ca4:	4366      	muls	r6, r4
 8012ca6:	1c74      	adds	r4, r6, #1
 8012ca8:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8012cac:	1224      	asrs	r4, r4, #8
 8012cae:	b2a7      	uxth	r7, r4
 8012cb0:	122e      	asrs	r6, r5, #8
 8012cb2:	43e4      	mvns	r4, r4
 8012cb4:	b2e4      	uxtb	r4, r4
 8012cb6:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8012cba:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8012cbe:	fb16 f604 	smulbb	r6, r6, r4
 8012cc2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8012cc6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8012cca:	00ed      	lsls	r5, r5, #3
 8012ccc:	fb0c 6c07 	mla	ip, ip, r7, r6
 8012cd0:	b2ed      	uxtb	r5, r5
 8012cd2:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8012cd6:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8012cda:	fb15 f504 	smulbb	r5, r5, r4
 8012cde:	fa5f f989 	uxtb.w	r9, r9
 8012ce2:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8012ce6:	fb09 5507 	mla	r5, r9, r7, r5
 8012cea:	fb1a fa04 	smulbb	sl, sl, r4
 8012cee:	fa1f fc8c 	uxth.w	ip, ip
 8012cf2:	b2ad      	uxth	r5, r5
 8012cf4:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8012cf8:	fb06 a607 	mla	r6, r6, r7, sl
 8012cfc:	f10c 0401 	add.w	r4, ip, #1
 8012d00:	f105 0a01 	add.w	sl, r5, #1
 8012d04:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8012d08:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8012d0c:	b2b6      	uxth	r6, r6
 8012d0e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012d12:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8012d16:	ea4a 0c0c 	orr.w	ip, sl, ip
 8012d1a:	f106 0a01 	add.w	sl, r6, #1
 8012d1e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8012d22:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012d26:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8012d2a:	9c03      	ldr	r4, [sp, #12]
 8012d2c:	ea4c 0c0a 	orr.w	ip, ip, sl
 8012d30:	f820 c004 	strh.w	ip, [r0, r4]
 8012d34:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8012d36:	4421      	add	r1, r4
 8012d38:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8012d3a:	f108 38ff 	add.w	r8, r8, #4294967295
 8012d3e:	4422      	add	r2, r4
 8012d40:	e750      	b.n	8012be4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8012d42:	f04f 0900 	mov.w	r9, #0
 8012d46:	eba3 0409 	sub.w	r4, r3, r9
 8012d4a:	2c00      	cmp	r4, #0
 8012d4c:	f77f af4e 	ble.w	8012bec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8012d50:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8012d54:	140d      	asrs	r5, r1, #16
 8012d56:	1414      	asrs	r4, r2, #16
 8012d58:	fb06 5404 	mla	r4, r6, r4, r5
 8012d5c:	9d02      	ldr	r5, [sp, #8]
 8012d5e:	5d2e      	ldrb	r6, [r5, r4]
 8012d60:	2e00      	cmp	r6, #0
 8012d62:	d04c      	beq.n	8012dfe <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8012d64:	9d01      	ldr	r5, [sp, #4]
 8012d66:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8012d6a:	9c05      	ldr	r4, [sp, #20]
 8012d6c:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8012d70:	4366      	muls	r6, r4
 8012d72:	1c74      	adds	r4, r6, #1
 8012d74:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8012d78:	1224      	asrs	r4, r4, #8
 8012d7a:	b2a7      	uxth	r7, r4
 8012d7c:	122e      	asrs	r6, r5, #8
 8012d7e:	43e4      	mvns	r4, r4
 8012d80:	b2e4      	uxtb	r4, r4
 8012d82:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8012d86:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8012d8a:	fb16 f604 	smulbb	r6, r6, r4
 8012d8e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8012d92:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8012d96:	00ed      	lsls	r5, r5, #3
 8012d98:	fb0c 6c07 	mla	ip, ip, r7, r6
 8012d9c:	b2ed      	uxtb	r5, r5
 8012d9e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8012da2:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8012da6:	fb15 f504 	smulbb	r5, r5, r4
 8012daa:	fa5f f888 	uxtb.w	r8, r8
 8012dae:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8012db2:	fb08 5507 	mla	r5, r8, r7, r5
 8012db6:	fb1a fa04 	smulbb	sl, sl, r4
 8012dba:	fa1f fc8c 	uxth.w	ip, ip
 8012dbe:	b2ad      	uxth	r5, r5
 8012dc0:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8012dc4:	fb06 a607 	mla	r6, r6, r7, sl
 8012dc8:	f10c 0401 	add.w	r4, ip, #1
 8012dcc:	f105 0a01 	add.w	sl, r5, #1
 8012dd0:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8012dd4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8012dd8:	b2b6      	uxth	r6, r6
 8012dda:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012dde:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8012de2:	ea4a 0c0c 	orr.w	ip, sl, ip
 8012de6:	f106 0a01 	add.w	sl, r6, #1
 8012dea:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8012dee:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012df2:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8012df6:	ea4c 0c0a 	orr.w	ip, ip, sl
 8012dfa:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8012dfe:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8012e00:	4421      	add	r1, r4
 8012e02:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8012e04:	f109 0901 	add.w	r9, r9, #1
 8012e08:	4422      	add	r2, r4
 8012e0a:	e79c      	b.n	8012d46 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8012e0c:	b007      	add	sp, #28
 8012e0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012e12 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012e12:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012e16:	b085      	sub	sp, #20
 8012e18:	468b      	mov	fp, r1
 8012e1a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8012e1c:	9203      	str	r2, [sp, #12]
 8012e1e:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
 8012e22:	6861      	ldr	r1, [r4, #4]
 8012e24:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8012e28:	fb01 2000 	mla	r0, r1, r0, r2
 8012e2c:	6822      	ldr	r2, [r4, #0]
 8012e2e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8012e32:	f8d8 2000 	ldr.w	r2, [r8]
 8012e36:	9200      	str	r2, [sp, #0]
 8012e38:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8012e3c:	9201      	str	r2, [sp, #4]
 8012e3e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8012e42:	f1bb 0f00 	cmp.w	fp, #0
 8012e46:	dc03      	bgt.n	8012e50 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8012e48:	9a03      	ldr	r2, [sp, #12]
 8012e4a:	2a00      	cmp	r2, #0
 8012e4c:	f340 8146 	ble.w	80130dc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8012e50:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8012e52:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8012e56:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8012e5a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8012e5e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8012e60:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8012e64:	2b00      	cmp	r3, #0
 8012e66:	dd0e      	ble.n	8012e86 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8012e68:	140c      	asrs	r4, r1, #16
 8012e6a:	d405      	bmi.n	8012e78 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012e6c:	42bc      	cmp	r4, r7
 8012e6e:	da03      	bge.n	8012e78 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012e70:	1414      	asrs	r4, r2, #16
 8012e72:	d401      	bmi.n	8012e78 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012e74:	42b4      	cmp	r4, r6
 8012e76:	db07      	blt.n	8012e88 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8012e78:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8012e7a:	4421      	add	r1, r4
 8012e7c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8012e7e:	3b01      	subs	r3, #1
 8012e80:	4422      	add	r2, r4
 8012e82:	3002      	adds	r0, #2
 8012e84:	e7ee      	b.n	8012e64 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8012e86:	d017      	beq.n	8012eb8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8012e88:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8012e8a:	1e5c      	subs	r4, r3, #1
 8012e8c:	fb05 1504 	mla	r5, r5, r4, r1
 8012e90:	142d      	asrs	r5, r5, #16
 8012e92:	d409      	bmi.n	8012ea8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8012e94:	42bd      	cmp	r5, r7
 8012e96:	da07      	bge.n	8012ea8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8012e98:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8012e9a:	fb05 2404 	mla	r4, r5, r4, r2
 8012e9e:	1424      	asrs	r4, r4, #16
 8012ea0:	d402      	bmi.n	8012ea8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8012ea2:	42b4      	cmp	r4, r6
 8012ea4:	f2c0 80b3 	blt.w	801300e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8012ea8:	2600      	movs	r6, #0
 8012eaa:	199c      	adds	r4, r3, r6
 8012eac:	2c00      	cmp	r4, #0
 8012eae:	dc3e      	bgt.n	8012f2e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8012eb0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012eb4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012eb8:	f1bb 0f00 	cmp.w	fp, #0
 8012ebc:	f340 810e 	ble.w	80130dc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8012ec0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012ec4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012ec8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012ecc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012ece:	f1bb 0b01 	subs.w	fp, fp, #1
 8012ed2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012ed6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012eda:	eeb0 6a62 	vmov.f32	s12, s5
 8012ede:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012ee2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012ee6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012eea:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8012eee:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012ef2:	eeb0 6a43 	vmov.f32	s12, s6
 8012ef6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012efa:	ee12 2a90 	vmov	r2, s5
 8012efe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012f02:	fb92 f3f3 	sdiv	r3, r2, r3
 8012f06:	ee13 2a10 	vmov	r2, s6
 8012f0a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012f0e:	9311      	str	r3, [sp, #68]	@ 0x44
 8012f10:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012f12:	fb92 f3f3 	sdiv	r3, r2, r3
 8012f16:	9a03      	ldr	r2, [sp, #12]
 8012f18:	9312      	str	r3, [sp, #72]	@ 0x48
 8012f1a:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8012f1e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012f20:	eeb0 3a67 	vmov.f32	s6, s15
 8012f24:	bf08      	it	eq
 8012f26:	4613      	moveq	r3, r2
 8012f28:	eef0 2a47 	vmov.f32	s5, s14
 8012f2c:	e789      	b.n	8012e42 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8012f2e:	140f      	asrs	r7, r1, #16
 8012f30:	d418      	bmi.n	8012f64 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8012f32:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8012f36:	42bd      	cmp	r5, r7
 8012f38:	dd14      	ble.n	8012f64 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8012f3a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8012f3e:	d411      	bmi.n	8012f64 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8012f40:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8012f44:	4564      	cmp	r4, ip
 8012f46:	dd0d      	ble.n	8012f64 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8012f48:	b22d      	sxth	r5, r5
 8012f4a:	fb0c 7505 	mla	r5, ip, r5, r7
 8012f4e:	9c01      	ldr	r4, [sp, #4]
 8012f50:	5d64      	ldrb	r4, [r4, r5]
 8012f52:	2cff      	cmp	r4, #255	@ 0xff
 8012f54:	d10c      	bne.n	8012f70 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8012f56:	9c00      	ldr	r4, [sp, #0]
 8012f58:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8012f5c:	f06f 0401 	mvn.w	r4, #1
 8012f60:	4374      	muls	r4, r6
 8012f62:	5305      	strh	r5, [r0, r4]
 8012f64:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8012f66:	4421      	add	r1, r4
 8012f68:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8012f6a:	3e01      	subs	r6, #1
 8012f6c:	4422      	add	r2, r4
 8012f6e:	e79c      	b.n	8012eaa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8012f70:	2c00      	cmp	r4, #0
 8012f72:	d0f7      	beq.n	8012f64 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8012f74:	9f00      	ldr	r7, [sp, #0]
 8012f76:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8012f7a:	f06f 0501 	mvn.w	r5, #1
 8012f7e:	4375      	muls	r5, r6
 8012f80:	9502      	str	r5, [sp, #8]
 8012f82:	5b45      	ldrh	r5, [r0, r5]
 8012f84:	fa1f fc84 	uxth.w	ip, r4
 8012f88:	122f      	asrs	r7, r5, #8
 8012f8a:	43e4      	mvns	r4, r4
 8012f8c:	b2e4      	uxtb	r4, r4
 8012f8e:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8012f92:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8012f96:	fb17 f704 	smulbb	r7, r7, r4
 8012f9a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8012f9e:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8012fa2:	00ed      	lsls	r5, r5, #3
 8012fa4:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8012fa8:	b2ed      	uxtb	r5, r5
 8012faa:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8012fae:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8012fb2:	fb15 f504 	smulbb	r5, r5, r4
 8012fb6:	fa5f f989 	uxtb.w	r9, r9
 8012fba:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8012fbe:	fb09 550c 	mla	r5, r9, ip, r5
 8012fc2:	fb1a fa04 	smulbb	sl, sl, r4
 8012fc6:	fa1f fe8e 	uxth.w	lr, lr
 8012fca:	b2ad      	uxth	r5, r5
 8012fcc:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8012fd0:	fb07 a70c 	mla	r7, r7, ip, sl
 8012fd4:	f10e 0401 	add.w	r4, lr, #1
 8012fd8:	f105 0a01 	add.w	sl, r5, #1
 8012fdc:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8012fe0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8012fe4:	b2bf      	uxth	r7, r7
 8012fe6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012fea:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8012fee:	ea4a 0e0e 	orr.w	lr, sl, lr
 8012ff2:	f107 0a01 	add.w	sl, r7, #1
 8012ff6:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8012ffa:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012ffe:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013002:	9c02      	ldr	r4, [sp, #8]
 8013004:	ea4e 0e0a 	orr.w	lr, lr, sl
 8013008:	f820 e004 	strh.w	lr, [r0, r4]
 801300c:	e7aa      	b.n	8012f64 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801300e:	f04f 0900 	mov.w	r9, #0
 8013012:	eba3 0409 	sub.w	r4, r3, r9
 8013016:	2c00      	cmp	r4, #0
 8013018:	f77f af4a 	ble.w	8012eb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801301c:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8013020:	1414      	asrs	r4, r2, #16
 8013022:	140d      	asrs	r5, r1, #16
 8013024:	fb06 5504 	mla	r5, r6, r4, r5
 8013028:	9c01      	ldr	r4, [sp, #4]
 801302a:	5d64      	ldrb	r4, [r4, r5]
 801302c:	2cff      	cmp	r4, #255	@ 0xff
 801302e:	d10b      	bne.n	8013048 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8013030:	9c00      	ldr	r4, [sp, #0]
 8013032:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8013036:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801303a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801303c:	4421      	add	r1, r4
 801303e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8013040:	f109 0901 	add.w	r9, r9, #1
 8013044:	4422      	add	r2, r4
 8013046:	e7e4      	b.n	8013012 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8013048:	2c00      	cmp	r4, #0
 801304a:	d0f6      	beq.n	801303a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801304c:	9e00      	ldr	r6, [sp, #0]
 801304e:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8013052:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8013056:	b2a7      	uxth	r7, r4
 8013058:	122e      	asrs	r6, r5, #8
 801305a:	43e4      	mvns	r4, r4
 801305c:	b2e4      	uxtb	r4, r4
 801305e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8013062:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8013066:	fb16 f604 	smulbb	r6, r6, r4
 801306a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801306e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013072:	00ed      	lsls	r5, r5, #3
 8013074:	fb0c 6c07 	mla	ip, ip, r7, r6
 8013078:	b2ed      	uxtb	r5, r5
 801307a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801307e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013082:	fb15 f504 	smulbb	r5, r5, r4
 8013086:	fa5f fe8e 	uxtb.w	lr, lr
 801308a:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801308e:	fb0e 5507 	mla	r5, lr, r7, r5
 8013092:	fb1a fa04 	smulbb	sl, sl, r4
 8013096:	fa1f fc8c 	uxth.w	ip, ip
 801309a:	b2ad      	uxth	r5, r5
 801309c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80130a0:	fb06 a607 	mla	r6, r6, r7, sl
 80130a4:	f10c 0401 	add.w	r4, ip, #1
 80130a8:	f105 0a01 	add.w	sl, r5, #1
 80130ac:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80130b0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80130b4:	b2b6      	uxth	r6, r6
 80130b6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80130ba:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80130be:	ea4a 0c0c 	orr.w	ip, sl, ip
 80130c2:	f106 0a01 	add.w	sl, r6, #1
 80130c6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80130ca:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80130ce:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80130d2:	ea4c 0c0a 	orr.w	ip, ip, sl
 80130d6:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 80130da:	e7ae      	b.n	801303a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80130dc:	b005      	add	sp, #20
 80130de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080130e2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80130e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80130e6:	b085      	sub	sp, #20
 80130e8:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80130ea:	9203      	str	r2, [sp, #12]
 80130ec:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
 80130f0:	9201      	str	r2, [sp, #4]
 80130f2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 80130f6:	9100      	str	r1, [sp, #0]
 80130f8:	6841      	ldr	r1, [r0, #4]
 80130fa:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 80130fe:	fb01 2404 	mla	r4, r1, r4, r2
 8013102:	6802      	ldr	r2, [r0, #0]
 8013104:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013108:	f8de 2000 	ldr.w	r2, [lr]
 801310c:	9202      	str	r2, [sp, #8]
 801310e:	9a01      	ldr	r2, [sp, #4]
 8013110:	43d6      	mvns	r6, r2
 8013112:	b2f6      	uxtb	r6, r6
 8013114:	9a00      	ldr	r2, [sp, #0]
 8013116:	2a00      	cmp	r2, #0
 8013118:	dc03      	bgt.n	8013122 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801311a:	9a03      	ldr	r2, [sp, #12]
 801311c:	2a00      	cmp	r2, #0
 801311e:	f340 8124 	ble.w	801336a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8013122:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8013124:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8013128:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801312c:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8013130:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8013132:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013136:	2b00      	cmp	r3, #0
 8013138:	dd0e      	ble.n	8013158 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801313a:	1408      	asrs	r0, r1, #16
 801313c:	d405      	bmi.n	801314a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801313e:	4560      	cmp	r0, ip
 8013140:	da03      	bge.n	801314a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8013142:	1410      	asrs	r0, r2, #16
 8013144:	d401      	bmi.n	801314a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8013146:	42b8      	cmp	r0, r7
 8013148:	db07      	blt.n	801315a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801314a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801314c:	4401      	add	r1, r0
 801314e:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8013150:	3b01      	subs	r3, #1
 8013152:	4402      	add	r2, r0
 8013154:	3402      	adds	r4, #2
 8013156:	e7ee      	b.n	8013136 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8013158:	d06e      	beq.n	8013238 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801315a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801315c:	1e58      	subs	r0, r3, #1
 801315e:	fb05 1500 	mla	r5, r5, r0, r1
 8013162:	142d      	asrs	r5, r5, #16
 8013164:	d45c      	bmi.n	8013220 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8013166:	4565      	cmp	r5, ip
 8013168:	da5a      	bge.n	8013220 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801316a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801316c:	fb05 2000 	mla	r0, r5, r0, r2
 8013170:	1400      	asrs	r0, r0, #16
 8013172:	d455      	bmi.n	8013220 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8013174:	42b8      	cmp	r0, r7
 8013176:	da53      	bge.n	8013220 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8013178:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801317c:	4699      	mov	r9, r3
 801317e:	46a2      	mov	sl, r4
 8013180:	f1b9 0f00 	cmp.w	r9, #0
 8013184:	dd54      	ble.n	8013230 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8013186:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801318a:	140d      	asrs	r5, r1, #16
 801318c:	1410      	asrs	r0, r2, #16
 801318e:	fb07 5000 	mla	r0, r7, r0, r5
 8013192:	9d02      	ldr	r5, [sp, #8]
 8013194:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8013198:	f8ba 5000 	ldrh.w	r5, [sl]
 801319c:	122f      	asrs	r7, r5, #8
 801319e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80131a2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80131a6:	fb17 f706 	smulbb	r7, r7, r6
 80131aa:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80131ae:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80131b2:	00ed      	lsls	r5, r5, #3
 80131b4:	fb0c 7c0b 	mla	ip, ip, fp, r7
 80131b8:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 80131bc:	10c7      	asrs	r7, r0, #3
 80131be:	b2ed      	uxtb	r5, r5
 80131c0:	00c0      	lsls	r0, r0, #3
 80131c2:	fb18 f806 	smulbb	r8, r8, r6
 80131c6:	fb15 f506 	smulbb	r5, r5, r6
 80131ca:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80131ce:	b2c0      	uxtb	r0, r0
 80131d0:	fa1f fc8c 	uxth.w	ip, ip
 80131d4:	fb07 870b 	mla	r7, r7, fp, r8
 80131d8:	fb00 500b 	mla	r0, r0, fp, r5
 80131dc:	b280      	uxth	r0, r0
 80131de:	b2bf      	uxth	r7, r7
 80131e0:	f10c 0501 	add.w	r5, ip, #1
 80131e4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80131e8:	f107 0801 	add.w	r8, r7, #1
 80131ec:	1c45      	adds	r5, r0, #1
 80131ee:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80131f2:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80131f6:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80131f8:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80131fc:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8013200:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8013204:	ea45 0c0c 	orr.w	ip, r5, ip
 8013208:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801320c:	4401      	add	r1, r0
 801320e:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8013210:	ea4c 0c08 	orr.w	ip, ip, r8
 8013214:	f82a cb02 	strh.w	ip, [sl], #2
 8013218:	4402      	add	r2, r0
 801321a:	f109 39ff 	add.w	r9, r9, #4294967295
 801321e:	e7af      	b.n	8013180 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8013220:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8013224:	f04f 0800 	mov.w	r8, #0
 8013228:	eb03 0008 	add.w	r0, r3, r8
 801322c:	2800      	cmp	r0, #0
 801322e:	dc41      	bgt.n	80132b4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8013230:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013234:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013238:	9b00      	ldr	r3, [sp, #0]
 801323a:	2b00      	cmp	r3, #0
 801323c:	f340 8095 	ble.w	801336a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8013240:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013244:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8013248:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801324c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801324e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013252:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013256:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801325a:	eef0 6a62 	vmov.f32	s13, s5
 801325e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013262:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013266:	ee77 2a62 	vsub.f32	s5, s14, s5
 801326a:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 801326e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013272:	eef0 6a43 	vmov.f32	s13, s6
 8013276:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801327a:	ee12 2a90 	vmov	r2, s5
 801327e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013282:	fb92 f3f3 	sdiv	r3, r2, r3
 8013286:	ee13 2a10 	vmov	r2, s6
 801328a:	9311      	str	r3, [sp, #68]	@ 0x44
 801328c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801328e:	fb92 f3f3 	sdiv	r3, r2, r3
 8013292:	9312      	str	r3, [sp, #72]	@ 0x48
 8013294:	9b00      	ldr	r3, [sp, #0]
 8013296:	9a03      	ldr	r2, [sp, #12]
 8013298:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801329c:	3b01      	subs	r3, #1
 801329e:	9300      	str	r3, [sp, #0]
 80132a0:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 80132a4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80132a6:	eeb0 3a67 	vmov.f32	s6, s15
 80132aa:	bf08      	it	eq
 80132ac:	4613      	moveq	r3, r2
 80132ae:	eef0 2a47 	vmov.f32	s5, s14
 80132b2:	e72f      	b.n	8013114 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80132b4:	140f      	asrs	r7, r1, #16
 80132b6:	d451      	bmi.n	801335c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80132b8:	f8de 5008 	ldr.w	r5, [lr, #8]
 80132bc:	42bd      	cmp	r5, r7
 80132be:	dd4d      	ble.n	801335c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80132c0:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80132c4:	d44a      	bmi.n	801335c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80132c6:	f8de 000c 	ldr.w	r0, [lr, #12]
 80132ca:	4560      	cmp	r0, ip
 80132cc:	dd46      	ble.n	801335c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80132ce:	b22d      	sxth	r5, r5
 80132d0:	fb0c 7505 	mla	r5, ip, r5, r7
 80132d4:	9802      	ldr	r0, [sp, #8]
 80132d6:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 80132da:	f06f 0501 	mvn.w	r5, #1
 80132de:	fb05 fb08 	mul.w	fp, r5, r8
 80132e2:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80132e6:	f834 500b 	ldrh.w	r5, [r4, fp]
 80132ea:	122f      	asrs	r7, r5, #8
 80132ec:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80132f0:	fb17 f706 	smulbb	r7, r7, r6
 80132f4:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80132f8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80132fc:	00ed      	lsls	r5, r5, #3
 80132fe:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8013302:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8013306:	10c7      	asrs	r7, r0, #3
 8013308:	b2ed      	uxtb	r5, r5
 801330a:	00c0      	lsls	r0, r0, #3
 801330c:	fb19 f906 	smulbb	r9, r9, r6
 8013310:	fb15 f506 	smulbb	r5, r5, r6
 8013314:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8013318:	b2c0      	uxtb	r0, r0
 801331a:	fa1f fc8c 	uxth.w	ip, ip
 801331e:	fb07 970a 	mla	r7, r7, sl, r9
 8013322:	fb00 500a 	mla	r0, r0, sl, r5
 8013326:	b2bf      	uxth	r7, r7
 8013328:	b280      	uxth	r0, r0
 801332a:	f10c 0501 	add.w	r5, ip, #1
 801332e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8013332:	f107 0901 	add.w	r9, r7, #1
 8013336:	1c45      	adds	r5, r0, #1
 8013338:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801333c:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8013340:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8013344:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8013348:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801334c:	ea45 0c0c 	orr.w	ip, r5, ip
 8013350:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8013354:	ea4c 0c09 	orr.w	ip, ip, r9
 8013358:	f824 c00b 	strh.w	ip, [r4, fp]
 801335c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801335e:	4401      	add	r1, r0
 8013360:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8013362:	f108 38ff 	add.w	r8, r8, #4294967295
 8013366:	4402      	add	r2, r0
 8013368:	e75e      	b.n	8013228 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801336a:	b005      	add	sp, #20
 801336c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013370 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013370:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013374:	b085      	sub	sp, #20
 8013376:	4693      	mov	fp, r2
 8013378:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801337a:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801337c:	6870      	ldr	r0, [r6, #4]
 801337e:	9101      	str	r1, [sp, #4]
 8013380:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8013384:	fb00 2404 	mla	r4, r0, r4, r2
 8013388:	6832      	ldr	r2, [r6, #0]
 801338a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 801338e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013392:	682a      	ldr	r2, [r5, #0]
 8013394:	9202      	str	r2, [sp, #8]
 8013396:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801339a:	9a01      	ldr	r2, [sp, #4]
 801339c:	2a00      	cmp	r2, #0
 801339e:	dc03      	bgt.n	80133a8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80133a0:	f1bb 0f00 	cmp.w	fp, #0
 80133a4:	f340 809a 	ble.w	80134dc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80133a8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80133aa:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80133ae:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80133b2:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80133b6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80133b8:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80133bc:	2b00      	cmp	r3, #0
 80133be:	dd0c      	ble.n	80133da <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 80133c0:	1406      	asrs	r6, r0, #16
 80133c2:	d405      	bmi.n	80133d0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80133c4:	454e      	cmp	r6, r9
 80133c6:	da03      	bge.n	80133d0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80133c8:	1416      	asrs	r6, r2, #16
 80133ca:	d401      	bmi.n	80133d0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80133cc:	4546      	cmp	r6, r8
 80133ce:	db05      	blt.n	80133dc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80133d0:	4470      	add	r0, lr
 80133d2:	4462      	add	r2, ip
 80133d4:	3b01      	subs	r3, #1
 80133d6:	3402      	adds	r4, #2
 80133d8:	e7f0      	b.n	80133bc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80133da:	d00f      	beq.n	80133fc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80133dc:	1e5e      	subs	r6, r3, #1
 80133de:	fb0e 0706 	mla	r7, lr, r6, r0
 80133e2:	143f      	asrs	r7, r7, #16
 80133e4:	d541      	bpl.n	801346a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 80133e6:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80133ea:	4698      	mov	r8, r3
 80133ec:	9603      	str	r6, [sp, #12]
 80133ee:	f1b8 0f00 	cmp.w	r8, #0
 80133f2:	dc56      	bgt.n	80134a2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 80133f4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80133f8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80133fc:	9b01      	ldr	r3, [sp, #4]
 80133fe:	2b00      	cmp	r3, #0
 8013400:	dd6c      	ble.n	80134dc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8013402:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013406:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801340a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801340e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013410:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013414:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013418:	eeb0 6a62 	vmov.f32	s12, s5
 801341c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013420:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013424:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013428:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801342c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013430:	eeb0 6a43 	vmov.f32	s12, s6
 8013434:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013438:	ee12 2a90 	vmov	r2, s5
 801343c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013440:	fb92 fef3 	sdiv	lr, r2, r3
 8013444:	ee13 2a10 	vmov	r2, s6
 8013448:	fb92 fcf3 	sdiv	ip, r2, r3
 801344c:	9b01      	ldr	r3, [sp, #4]
 801344e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013452:	3b01      	subs	r3, #1
 8013454:	9301      	str	r3, [sp, #4]
 8013456:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801345a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801345c:	eeb0 3a67 	vmov.f32	s6, s15
 8013460:	bf08      	it	eq
 8013462:	465b      	moveq	r3, fp
 8013464:	eef0 2a47 	vmov.f32	s5, s14
 8013468:	e797      	b.n	801339a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801346a:	454f      	cmp	r7, r9
 801346c:	dabb      	bge.n	80133e6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801346e:	fb0c 2606 	mla	r6, ip, r6, r2
 8013472:	1436      	asrs	r6, r6, #16
 8013474:	d4b7      	bmi.n	80133e6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8013476:	4546      	cmp	r6, r8
 8013478:	dab5      	bge.n	80133e6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801347a:	461e      	mov	r6, r3
 801347c:	46a0      	mov	r8, r4
 801347e:	2e00      	cmp	r6, #0
 8013480:	ddb8      	ble.n	80133f4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8013482:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8013486:	9902      	ldr	r1, [sp, #8]
 8013488:	1417      	asrs	r7, r2, #16
 801348a:	ea4f 4920 	mov.w	r9, r0, asr #16
 801348e:	fb0a 9707 	mla	r7, sl, r7, r9
 8013492:	4470      	add	r0, lr
 8013494:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8013498:	f828 7b02 	strh.w	r7, [r8], #2
 801349c:	4462      	add	r2, ip
 801349e:	3e01      	subs	r6, #1
 80134a0:	e7ed      	b.n	801347e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 80134a2:	ea5f 4920 	movs.w	r9, r0, asr #16
 80134a6:	d414      	bmi.n	80134d2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80134a8:	68ae      	ldr	r6, [r5, #8]
 80134aa:	454e      	cmp	r6, r9
 80134ac:	dd11      	ble.n	80134d2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80134ae:	ea5f 4a22 	movs.w	sl, r2, asr #16
 80134b2:	d40e      	bmi.n	80134d2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80134b4:	68ef      	ldr	r7, [r5, #12]
 80134b6:	4557      	cmp	r7, sl
 80134b8:	dd0b      	ble.n	80134d2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80134ba:	b236      	sxth	r6, r6
 80134bc:	fb0a 9606 	mla	r6, sl, r6, r9
 80134c0:	9f02      	ldr	r7, [sp, #8]
 80134c2:	f06f 0101 	mvn.w	r1, #1
 80134c6:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 80134ca:	fb01 f608 	mul.w	r6, r1, r8
 80134ce:	9903      	ldr	r1, [sp, #12]
 80134d0:	538f      	strh	r7, [r1, r6]
 80134d2:	4470      	add	r0, lr
 80134d4:	4462      	add	r2, ip
 80134d6:	f108 38ff 	add.w	r8, r8, #4294967295
 80134da:	e788      	b.n	80133ee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80134dc:	b005      	add	sp, #20
 80134de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080134e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80134e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80134e6:	b087      	sub	sp, #28
 80134e8:	468b      	mov	fp, r1
 80134ea:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80134ec:	9203      	str	r2, [sp, #12]
 80134ee:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80134f2:	9204      	str	r2, [sp, #16]
 80134f4:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
 80134f8:	6841      	ldr	r1, [r0, #4]
 80134fa:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 80134fe:	fb01 2505 	mla	r5, r1, r5, r2
 8013502:	6802      	ldr	r2, [r0, #0]
 8013504:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8013508:	f8d9 2000 	ldr.w	r2, [r9]
 801350c:	9201      	str	r2, [sp, #4]
 801350e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8013512:	f1bb 0f00 	cmp.w	fp, #0
 8013516:	dc03      	bgt.n	8013520 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8013518:	9a03      	ldr	r2, [sp, #12]
 801351a:	2a00      	cmp	r2, #0
 801351c:	f340 8159 	ble.w	80137d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8013520:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8013522:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8013526:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801352a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801352e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8013530:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8013534:	2b00      	cmp	r3, #0
 8013536:	dd0e      	ble.n	8013556 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8013538:	1402      	asrs	r2, r0, #16
 801353a:	d405      	bmi.n	8013548 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801353c:	42ba      	cmp	r2, r7
 801353e:	da03      	bge.n	8013548 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013540:	140a      	asrs	r2, r1, #16
 8013542:	d401      	bmi.n	8013548 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013544:	42b2      	cmp	r2, r6
 8013546:	db07      	blt.n	8013558 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8013548:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801354a:	4410      	add	r0, r2
 801354c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801354e:	3b01      	subs	r3, #1
 8013550:	4411      	add	r1, r2
 8013552:	3502      	adds	r5, #2
 8013554:	e7ee      	b.n	8013534 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8013556:	d017      	beq.n	8013588 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8013558:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801355a:	1e5a      	subs	r2, r3, #1
 801355c:	fb04 0402 	mla	r4, r4, r2, r0
 8013560:	1424      	asrs	r4, r4, #16
 8013562:	d409      	bmi.n	8013578 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8013564:	42bc      	cmp	r4, r7
 8013566:	da07      	bge.n	8013578 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8013568:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801356a:	fb04 1202 	mla	r2, r4, r2, r1
 801356e:	1412      	asrs	r2, r2, #16
 8013570:	d402      	bmi.n	8013578 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8013572:	42b2      	cmp	r2, r6
 8013574:	f2c0 80bf 	blt.w	80136f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8013578:	2700      	movs	r7, #0
 801357a:	19da      	adds	r2, r3, r7
 801357c:	2a00      	cmp	r2, #0
 801357e:	dc3e      	bgt.n	80135fe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8013580:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013584:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8013588:	f1bb 0f00 	cmp.w	fp, #0
 801358c:	f340 8121 	ble.w	80137d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8013590:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013594:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013598:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801359c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801359e:	f1bb 0b01 	subs.w	fp, fp, #1
 80135a2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80135a6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80135aa:	eeb0 6a62 	vmov.f32	s12, s5
 80135ae:	ee61 7a27 	vmul.f32	s15, s2, s15
 80135b2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80135b6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80135ba:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 80135be:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80135c2:	eeb0 6a43 	vmov.f32	s12, s6
 80135c6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80135ca:	ee12 2a90 	vmov	r2, s5
 80135ce:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80135d2:	fb92 f3f3 	sdiv	r3, r2, r3
 80135d6:	ee13 2a10 	vmov	r2, s6
 80135da:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80135de:	9313      	str	r3, [sp, #76]	@ 0x4c
 80135e0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80135e2:	fb92 f3f3 	sdiv	r3, r2, r3
 80135e6:	9a03      	ldr	r2, [sp, #12]
 80135e8:	9314      	str	r3, [sp, #80]	@ 0x50
 80135ea:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 80135ee:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80135f0:	eeb0 3a67 	vmov.f32	s6, s15
 80135f4:	bf08      	it	eq
 80135f6:	4613      	moveq	r3, r2
 80135f8:	eef0 2a47 	vmov.f32	s5, s14
 80135fc:	e789      	b.n	8013512 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80135fe:	1406      	asrs	r6, r0, #16
 8013600:	d42d      	bmi.n	801365e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8013602:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8013606:	42b4      	cmp	r4, r6
 8013608:	dd29      	ble.n	801365e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801360a:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801360e:	d426      	bmi.n	801365e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8013610:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8013614:	4562      	cmp	r2, ip
 8013616:	dd22      	ble.n	801365e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8013618:	b224      	sxth	r4, r4
 801361a:	9a01      	ldr	r2, [sp, #4]
 801361c:	fb0c 6404 	mla	r4, ip, r4, r6
 8013620:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8013624:	0e22      	lsrs	r2, r4, #24
 8013626:	d01a      	beq.n	801365e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8013628:	9e04      	ldr	r6, [sp, #16]
 801362a:	4372      	muls	r2, r6
 801362c:	1c56      	adds	r6, r2, #1
 801362e:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8013632:	1212      	asrs	r2, r2, #8
 8013634:	0a26      	lsrs	r6, r4, #8
 8013636:	2aff      	cmp	r2, #255	@ 0xff
 8013638:	9605      	str	r6, [sp, #20]
 801363a:	d116      	bne.n	801366a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801363c:	f06f 0201 	mvn.w	r2, #1
 8013640:	fb02 fc07 	mul.w	ip, r2, r7
 8013644:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8013648:	0962      	lsrs	r2, r4, #5
 801364a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801364e:	f026 0607 	bic.w	r6, r6, #7
 8013652:	4316      	orrs	r6, r2
 8013654:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8013658:	4326      	orrs	r6, r4
 801365a:	f825 600c 	strh.w	r6, [r5, ip]
 801365e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8013660:	4410      	add	r0, r2
 8013662:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8013664:	3f01      	subs	r7, #1
 8013666:	4411      	add	r1, r2
 8013668:	e787      	b.n	801357a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801366a:	f06f 0601 	mvn.w	r6, #1
 801366e:	437e      	muls	r6, r7
 8013670:	fa1f fa82 	uxth.w	sl, r2
 8013674:	f835 8006 	ldrh.w	r8, [r5, r6]
 8013678:	9602      	str	r6, [sp, #8]
 801367a:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801367e:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8013682:	43d2      	mvns	r2, r2
 8013684:	b2d2      	uxtb	r2, r2
 8013686:	fb1c fc0a 	smulbb	ip, ip, sl
 801368a:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801368e:	fb0e ce02 	mla	lr, lr, r2, ip
 8013692:	b2e4      	uxtb	r4, r4
 8013694:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8013698:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801369c:	f89d 6014 	ldrb.w	r6, [sp, #20]
 80136a0:	fa5f f888 	uxtb.w	r8, r8
 80136a4:	fb14 f40a 	smulbb	r4, r4, sl
 80136a8:	fb08 4402 	mla	r4, r8, r2, r4
 80136ac:	fa1f fe8e 	uxth.w	lr, lr
 80136b0:	fb16 f60a 	smulbb	r6, r6, sl
 80136b4:	b2a4      	uxth	r4, r4
 80136b6:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 80136ba:	fb0c 6c02 	mla	ip, ip, r2, r6
 80136be:	f10e 0201 	add.w	r2, lr, #1
 80136c2:	1c66      	adds	r6, r4, #1
 80136c4:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 80136c8:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80136cc:	fa1f fc8c 	uxth.w	ip, ip
 80136d0:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80136d4:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 80136d8:	ea46 0e0e 	orr.w	lr, r6, lr
 80136dc:	f10c 0601 	add.w	r6, ip, #1
 80136e0:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 80136e4:	0976      	lsrs	r6, r6, #5
 80136e6:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80136ea:	9a02      	ldr	r2, [sp, #8]
 80136ec:	ea4e 0e06 	orr.w	lr, lr, r6
 80136f0:	f825 e002 	strh.w	lr, [r5, r2]
 80136f4:	e7b3      	b.n	801365e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80136f6:	f04f 0800 	mov.w	r8, #0
 80136fa:	eba3 0208 	sub.w	r2, r3, r8
 80136fe:	2a00      	cmp	r2, #0
 8013700:	f77f af3e 	ble.w	8013580 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8013704:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8013708:	1404      	asrs	r4, r0, #16
 801370a:	140a      	asrs	r2, r1, #16
 801370c:	fb06 4202 	mla	r2, r6, r2, r4
 8013710:	9c01      	ldr	r4, [sp, #4]
 8013712:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8013716:	0e22      	lsrs	r2, r4, #24
 8013718:	d016      	beq.n	8013748 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801371a:	9e04      	ldr	r6, [sp, #16]
 801371c:	4372      	muls	r2, r6
 801371e:	1c56      	adds	r6, r2, #1
 8013720:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8013724:	1212      	asrs	r2, r2, #8
 8013726:	2aff      	cmp	r2, #255	@ 0xff
 8013728:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801372c:	d113      	bne.n	8013756 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801372e:	0962      	lsrs	r2, r4, #5
 8013730:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8013734:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8013738:	f026 0607 	bic.w	r6, r6, #7
 801373c:	4316      	orrs	r6, r2
 801373e:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8013742:	4326      	orrs	r6, r4
 8013744:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8013748:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801374a:	4410      	add	r0, r2
 801374c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801374e:	f108 0801 	add.w	r8, r8, #1
 8013752:	4411      	add	r1, r2
 8013754:	e7d1      	b.n	80136fa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8013756:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801375a:	fa1f fa82 	uxth.w	sl, r2
 801375e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8013762:	f3c4 4707 	ubfx	r7, r4, #16, #8
 8013766:	43d2      	mvns	r2, r2
 8013768:	b2d2      	uxtb	r2, r2
 801376a:	fb17 f70a 	smulbb	r7, r7, sl
 801376e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013772:	fb0c 7c02 	mla	ip, ip, r2, r7
 8013776:	b2e4      	uxtb	r4, r4
 8013778:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801377c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013780:	fa5f fe8e 	uxtb.w	lr, lr
 8013784:	fb14 f40a 	smulbb	r4, r4, sl
 8013788:	fb0e 4402 	mla	r4, lr, r2, r4
 801378c:	b2f6      	uxtb	r6, r6
 801378e:	fa1f fc8c 	uxth.w	ip, ip
 8013792:	fb16 f60a 	smulbb	r6, r6, sl
 8013796:	b2a4      	uxth	r4, r4
 8013798:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801379c:	fb07 6702 	mla	r7, r7, r2, r6
 80137a0:	f10c 0201 	add.w	r2, ip, #1
 80137a4:	1c66      	adds	r6, r4, #1
 80137a6:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80137aa:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80137ae:	b2bf      	uxth	r7, r7
 80137b0:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80137b4:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80137b8:	ea46 0c0c 	orr.w	ip, r6, ip
 80137bc:	1c7e      	adds	r6, r7, #1
 80137be:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 80137c2:	0976      	lsrs	r6, r6, #5
 80137c4:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80137c8:	ea4c 0c06 	orr.w	ip, ip, r6
 80137cc:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 80137d0:	e7ba      	b.n	8013748 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 80137d2:	b007      	add	sp, #28
 80137d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080137d8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80137d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80137dc:	b085      	sub	sp, #20
 80137de:	468b      	mov	fp, r1
 80137e0:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80137e2:	9203      	str	r2, [sp, #12]
 80137e4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 80137e8:	6841      	ldr	r1, [r0, #4]
 80137ea:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 80137ee:	fb01 2404 	mla	r4, r1, r4, r2
 80137f2:	6802      	ldr	r2, [r0, #0]
 80137f4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80137f8:	f8d8 2000 	ldr.w	r2, [r8]
 80137fc:	9201      	str	r2, [sp, #4]
 80137fe:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8013802:	f1bb 0f00 	cmp.w	fp, #0
 8013806:	dc03      	bgt.n	8013810 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8013808:	9a03      	ldr	r2, [sp, #12]
 801380a:	2a00      	cmp	r2, #0
 801380c:	f340 814f 	ble.w	8013aae <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8013810:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8013812:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8013816:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801381a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801381e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8013820:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013824:	2b00      	cmp	r3, #0
 8013826:	dd0e      	ble.n	8013846 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8013828:	1408      	asrs	r0, r1, #16
 801382a:	d405      	bmi.n	8013838 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801382c:	42b8      	cmp	r0, r7
 801382e:	da03      	bge.n	8013838 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8013830:	1410      	asrs	r0, r2, #16
 8013832:	d401      	bmi.n	8013838 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8013834:	42b0      	cmp	r0, r6
 8013836:	db07      	blt.n	8013848 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013838:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801383a:	4401      	add	r1, r0
 801383c:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801383e:	3b01      	subs	r3, #1
 8013840:	4402      	add	r2, r0
 8013842:	3402      	adds	r4, #2
 8013844:	e7ee      	b.n	8013824 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8013846:	d017      	beq.n	8013878 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8013848:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801384a:	1e58      	subs	r0, r3, #1
 801384c:	fb05 1500 	mla	r5, r5, r0, r1
 8013850:	142d      	asrs	r5, r5, #16
 8013852:	d409      	bmi.n	8013868 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8013854:	42bd      	cmp	r5, r7
 8013856:	da07      	bge.n	8013868 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8013858:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801385a:	fb05 2000 	mla	r0, r5, r0, r2
 801385e:	1400      	asrs	r0, r0, #16
 8013860:	d402      	bmi.n	8013868 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8013862:	42b0      	cmp	r0, r6
 8013864:	f2c0 80ba 	blt.w	80139dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8013868:	2600      	movs	r6, #0
 801386a:	1998      	adds	r0, r3, r6
 801386c:	2800      	cmp	r0, #0
 801386e:	dc3e      	bgt.n	80138ee <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8013870:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013874:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013878:	f1bb 0f00 	cmp.w	fp, #0
 801387c:	f340 8117 	ble.w	8013aae <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8013880:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013884:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013888:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801388c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801388e:	f1bb 0b01 	subs.w	fp, fp, #1
 8013892:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013896:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801389a:	eeb0 6a62 	vmov.f32	s12, s5
 801389e:	ee61 7a27 	vmul.f32	s15, s2, s15
 80138a2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80138a6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80138aa:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80138ae:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80138b2:	eeb0 6a43 	vmov.f32	s12, s6
 80138b6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80138ba:	ee12 2a90 	vmov	r2, s5
 80138be:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80138c2:	fb92 f3f3 	sdiv	r3, r2, r3
 80138c6:	ee13 2a10 	vmov	r2, s6
 80138ca:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80138ce:	9311      	str	r3, [sp, #68]	@ 0x44
 80138d0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80138d2:	fb92 f3f3 	sdiv	r3, r2, r3
 80138d6:	9a03      	ldr	r2, [sp, #12]
 80138d8:	9312      	str	r3, [sp, #72]	@ 0x48
 80138da:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80138de:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80138e0:	eeb0 3a67 	vmov.f32	s6, s15
 80138e4:	bf08      	it	eq
 80138e6:	4613      	moveq	r3, r2
 80138e8:	eef0 2a47 	vmov.f32	s5, s14
 80138ec:	e789      	b.n	8013802 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80138ee:	140f      	asrs	r7, r1, #16
 80138f0:	d424      	bmi.n	801393c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80138f2:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80138f6:	42bd      	cmp	r5, r7
 80138f8:	dd20      	ble.n	801393c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80138fa:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80138fe:	d41d      	bmi.n	801393c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8013900:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8013904:	4560      	cmp	r0, ip
 8013906:	dd19      	ble.n	801393c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8013908:	b22d      	sxth	r5, r5
 801390a:	fb0c 7505 	mla	r5, ip, r5, r7
 801390e:	9801      	ldr	r0, [sp, #4]
 8013910:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8013914:	0e07      	lsrs	r7, r0, #24
 8013916:	2fff      	cmp	r7, #255	@ 0xff
 8013918:	d116      	bne.n	8013948 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801391a:	f06f 0501 	mvn.w	r5, #1
 801391e:	fb05 f706 	mul.w	r7, r5, r6
 8013922:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 8013926:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801392a:	0945      	lsrs	r5, r0, #5
 801392c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8013930:	ea4c 0505 	orr.w	r5, ip, r5
 8013934:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8013938:	4305      	orrs	r5, r0
 801393a:	53e5      	strh	r5, [r4, r7]
 801393c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801393e:	4401      	add	r1, r0
 8013940:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8013942:	3e01      	subs	r6, #1
 8013944:	4402      	add	r2, r0
 8013946:	e790      	b.n	801386a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8013948:	b2fd      	uxtb	r5, r7
 801394a:	2f00      	cmp	r7, #0
 801394c:	d0f6      	beq.n	801393c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801394e:	f06f 0701 	mvn.w	r7, #1
 8013952:	4377      	muls	r7, r6
 8013954:	fa1f f985 	uxth.w	r9, r5
 8013958:	f834 e007 	ldrh.w	lr, [r4, r7]
 801395c:	9702      	str	r7, [sp, #8]
 801395e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8013962:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8013966:	43ed      	mvns	r5, r5
 8013968:	b2ed      	uxtb	r5, r5
 801396a:	fb17 f709 	smulbb	r7, r7, r9
 801396e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013972:	fb0c 7c05 	mla	ip, ip, r5, r7
 8013976:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801397a:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801397e:	b2c0      	uxtb	r0, r0
 8013980:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013984:	fa5f fe8e 	uxtb.w	lr, lr
 8013988:	fb10 f009 	smulbb	r0, r0, r9
 801398c:	fb0e 0005 	mla	r0, lr, r5, r0
 8013990:	b280      	uxth	r0, r0
 8013992:	fa1f fc8c 	uxth.w	ip, ip
 8013996:	fb1a fa09 	smulbb	sl, sl, r9
 801399a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801399e:	fb07 a705 	mla	r7, r7, r5, sl
 80139a2:	f100 0a01 	add.w	sl, r0, #1
 80139a6:	f10c 0501 	add.w	r5, ip, #1
 80139aa:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80139ae:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80139b2:	b2bf      	uxth	r7, r7
 80139b4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80139b8:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80139bc:	ea4a 0c0c 	orr.w	ip, sl, ip
 80139c0:	f107 0a01 	add.w	sl, r7, #1
 80139c4:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80139c8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80139cc:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80139d0:	9802      	ldr	r0, [sp, #8]
 80139d2:	ea4c 0c0a 	orr.w	ip, ip, sl
 80139d6:	f824 c000 	strh.w	ip, [r4, r0]
 80139da:	e7af      	b.n	801393c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80139dc:	f04f 0e00 	mov.w	lr, #0
 80139e0:	eba3 000e 	sub.w	r0, r3, lr
 80139e4:	2800      	cmp	r0, #0
 80139e6:	f77f af43 	ble.w	8013870 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80139ea:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 80139ee:	140d      	asrs	r5, r1, #16
 80139f0:	1410      	asrs	r0, r2, #16
 80139f2:	fb06 5000 	mla	r0, r6, r0, r5
 80139f6:	9d01      	ldr	r5, [sp, #4]
 80139f8:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 80139fc:	0e2e      	lsrs	r6, r5, #24
 80139fe:	2eff      	cmp	r6, #255	@ 0xff
 8013a00:	d112      	bne.n	8013a28 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8013a02:	482c      	ldr	r0, [pc, #176]	@ (8013ab4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8013a04:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8013a08:	0968      	lsrs	r0, r5, #5
 8013a0a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8013a0e:	4330      	orrs	r0, r6
 8013a10:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8013a14:	4328      	orrs	r0, r5
 8013a16:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 8013a1a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8013a1c:	4401      	add	r1, r0
 8013a1e:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8013a20:	f10e 0e01 	add.w	lr, lr, #1
 8013a24:	4402      	add	r2, r0
 8013a26:	e7db      	b.n	80139e0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8013a28:	b2f0      	uxtb	r0, r6
 8013a2a:	2e00      	cmp	r6, #0
 8013a2c:	d0f5      	beq.n	8013a1a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8013a2e:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8013a32:	fa1f f980 	uxth.w	r9, r0
 8013a36:	ea4f 272c 	mov.w	r7, ip, asr #8
 8013a3a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8013a3e:	43c0      	mvns	r0, r0
 8013a40:	b2c0      	uxtb	r0, r0
 8013a42:	fb16 f609 	smulbb	r6, r6, r9
 8013a46:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013a4a:	fb07 6700 	mla	r7, r7, r0, r6
 8013a4e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8013a52:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8013a56:	b2ed      	uxtb	r5, r5
 8013a58:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8013a5c:	fa5f fc8c 	uxtb.w	ip, ip
 8013a60:	fb15 f509 	smulbb	r5, r5, r9
 8013a64:	fb0c 5500 	mla	r5, ip, r0, r5
 8013a68:	b2bf      	uxth	r7, r7
 8013a6a:	fb1a fa09 	smulbb	sl, sl, r9
 8013a6e:	b2ad      	uxth	r5, r5
 8013a70:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013a74:	fb06 a600 	mla	r6, r6, r0, sl
 8013a78:	1c78      	adds	r0, r7, #1
 8013a7a:	f105 0a01 	add.w	sl, r5, #1
 8013a7e:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8013a82:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013a86:	b2b6      	uxth	r6, r6
 8013a88:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013a8c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8013a90:	ea4a 0707 	orr.w	r7, sl, r7
 8013a94:	f106 0a01 	add.w	sl, r6, #1
 8013a98:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013a9c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013aa0:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013aa4:	ea47 070a 	orr.w	r7, r7, sl
 8013aa8:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8013aac:	e7b5      	b.n	8013a1a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8013aae:	b005      	add	sp, #20
 8013ab0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013ab4:	fffff800 	.word	0xfffff800

08013ab8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013ab8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013abc:	b087      	sub	sp, #28
 8013abe:	468b      	mov	fp, r1
 8013ac0:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8013ac2:	9203      	str	r2, [sp, #12]
 8013ac4:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8013ac8:	9204      	str	r2, [sp, #16]
 8013aca:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8013ace:	6841      	ldr	r1, [r0, #4]
 8013ad0:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8013ad4:	fb01 2404 	mla	r4, r1, r4, r2
 8013ad8:	6802      	ldr	r2, [r0, #0]
 8013ada:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013ade:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8013ae2:	3201      	adds	r2, #1
 8013ae4:	f022 0201 	bic.w	r2, r2, #1
 8013ae8:	9200      	str	r2, [sp, #0]
 8013aea:	f8d9 2000 	ldr.w	r2, [r9]
 8013aee:	9201      	str	r2, [sp, #4]
 8013af0:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8013af4:	f1bb 0f00 	cmp.w	fp, #0
 8013af8:	dc03      	bgt.n	8013b02 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8013afa:	9a03      	ldr	r2, [sp, #12]
 8013afc:	2a00      	cmp	r2, #0
 8013afe:	f340 8169 	ble.w	8013dd4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8013b02:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8013b04:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8013b08:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8013b0c:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8013b10:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8013b12:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8013b16:	2b00      	cmp	r3, #0
 8013b18:	dd0e      	ble.n	8013b38 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8013b1a:	1402      	asrs	r2, r0, #16
 8013b1c:	d405      	bmi.n	8013b2a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013b1e:	42ba      	cmp	r2, r7
 8013b20:	da03      	bge.n	8013b2a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013b22:	140a      	asrs	r2, r1, #16
 8013b24:	d401      	bmi.n	8013b2a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013b26:	42b2      	cmp	r2, r6
 8013b28:	db07      	blt.n	8013b3a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8013b2a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8013b2c:	4410      	add	r0, r2
 8013b2e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8013b30:	3b01      	subs	r3, #1
 8013b32:	4411      	add	r1, r2
 8013b34:	3402      	adds	r4, #2
 8013b36:	e7ee      	b.n	8013b16 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8013b38:	d017      	beq.n	8013b6a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8013b3a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8013b3c:	1e5a      	subs	r2, r3, #1
 8013b3e:	fb05 0502 	mla	r5, r5, r2, r0
 8013b42:	142d      	asrs	r5, r5, #16
 8013b44:	d409      	bmi.n	8013b5a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8013b46:	42bd      	cmp	r5, r7
 8013b48:	da07      	bge.n	8013b5a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8013b4a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8013b4c:	fb05 1202 	mla	r2, r5, r2, r1
 8013b50:	1412      	asrs	r2, r2, #16
 8013b52:	d402      	bmi.n	8013b5a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8013b54:	42b2      	cmp	r2, r6
 8013b56:	f2c0 80c7 	blt.w	8013ce8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8013b5a:	2700      	movs	r7, #0
 8013b5c:	19da      	adds	r2, r3, r7
 8013b5e:	2a00      	cmp	r2, #0
 8013b60:	dc3e      	bgt.n	8013be0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8013b62:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013b66:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013b6a:	f1bb 0f00 	cmp.w	fp, #0
 8013b6e:	f340 8131 	ble.w	8013dd4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8013b72:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013b76:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013b7a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013b7e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013b80:	f1bb 0b01 	subs.w	fp, fp, #1
 8013b84:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013b88:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013b8c:	eeb0 6a62 	vmov.f32	s12, s5
 8013b90:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013b94:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013b98:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013b9c:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8013ba0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013ba4:	eeb0 6a43 	vmov.f32	s12, s6
 8013ba8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013bac:	ee12 2a90 	vmov	r2, s5
 8013bb0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013bb4:	fb92 f3f3 	sdiv	r3, r2, r3
 8013bb8:	ee13 2a10 	vmov	r2, s6
 8013bbc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013bc0:	9313      	str	r3, [sp, #76]	@ 0x4c
 8013bc2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013bc4:	fb92 f3f3 	sdiv	r3, r2, r3
 8013bc8:	9a03      	ldr	r2, [sp, #12]
 8013bca:	9314      	str	r3, [sp, #80]	@ 0x50
 8013bcc:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8013bd0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013bd2:	eeb0 3a67 	vmov.f32	s6, s15
 8013bd6:	bf08      	it	eq
 8013bd8:	4613      	moveq	r3, r2
 8013bda:	eef0 2a47 	vmov.f32	s5, s14
 8013bde:	e789      	b.n	8013af4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8013be0:	1405      	asrs	r5, r0, #16
 8013be2:	d435      	bmi.n	8013c50 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8013be4:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8013be8:	42aa      	cmp	r2, r5
 8013bea:	dd31      	ble.n	8013c50 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8013bec:	140e      	asrs	r6, r1, #16
 8013bee:	d42f      	bmi.n	8013c50 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8013bf0:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8013bf4:	42b2      	cmp	r2, r6
 8013bf6:	dd2b      	ble.n	8013c50 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8013bf8:	9a00      	ldr	r2, [sp, #0]
 8013bfa:	fb06 5502 	mla	r5, r6, r2, r5
 8013bfe:	086a      	lsrs	r2, r5, #1
 8013c00:	9e01      	ldr	r6, [sp, #4]
 8013c02:	5cb2      	ldrb	r2, [r6, r2]
 8013c04:	07ee      	lsls	r6, r5, #31
 8013c06:	bf54      	ite	pl
 8013c08:	f002 020f 	andpl.w	r2, r2, #15
 8013c0c:	1112      	asrmi	r2, r2, #4
 8013c0e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8013c12:	b2d2      	uxtb	r2, r2
 8013c14:	b1e2      	cbz	r2, 8013c50 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8013c16:	9d04      	ldr	r5, [sp, #16]
 8013c18:	436a      	muls	r2, r5
 8013c1a:	1c55      	adds	r5, r2, #1
 8013c1c:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8013c20:	4d6e      	ldr	r5, [pc, #440]	@ (8013ddc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8013c22:	682d      	ldr	r5, [r5, #0]
 8013c24:	1212      	asrs	r2, r2, #8
 8013c26:	0a2e      	lsrs	r6, r5, #8
 8013c28:	2aff      	cmp	r2, #255	@ 0xff
 8013c2a:	9605      	str	r6, [sp, #20]
 8013c2c:	d116      	bne.n	8013c5c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8013c2e:	f06f 0201 	mvn.w	r2, #1
 8013c32:	fb02 fc07 	mul.w	ip, r2, r7
 8013c36:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8013c3a:	096a      	lsrs	r2, r5, #5
 8013c3c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8013c40:	f026 0607 	bic.w	r6, r6, #7
 8013c44:	4316      	orrs	r6, r2
 8013c46:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8013c4a:	432e      	orrs	r6, r5
 8013c4c:	f824 600c 	strh.w	r6, [r4, ip]
 8013c50:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8013c52:	4410      	add	r0, r2
 8013c54:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8013c56:	3f01      	subs	r7, #1
 8013c58:	4411      	add	r1, r2
 8013c5a:	e77f      	b.n	8013b5c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8013c5c:	f06f 0601 	mvn.w	r6, #1
 8013c60:	437e      	muls	r6, r7
 8013c62:	fa1f fa82 	uxth.w	sl, r2
 8013c66:	f834 8006 	ldrh.w	r8, [r4, r6]
 8013c6a:	9602      	str	r6, [sp, #8]
 8013c6c:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8013c70:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8013c74:	43d2      	mvns	r2, r2
 8013c76:	b2d2      	uxtb	r2, r2
 8013c78:	fb1c fc0a 	smulbb	ip, ip, sl
 8013c7c:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8013c80:	fb0e ce02 	mla	lr, lr, r2, ip
 8013c84:	b2ed      	uxtb	r5, r5
 8013c86:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8013c8a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8013c8e:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8013c92:	fa5f f888 	uxtb.w	r8, r8
 8013c96:	fb15 f50a 	smulbb	r5, r5, sl
 8013c9a:	fb08 5502 	mla	r5, r8, r2, r5
 8013c9e:	fa1f fe8e 	uxth.w	lr, lr
 8013ca2:	fb16 f60a 	smulbb	r6, r6, sl
 8013ca6:	b2ad      	uxth	r5, r5
 8013ca8:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8013cac:	fb0c 6c02 	mla	ip, ip, r2, r6
 8013cb0:	f10e 0201 	add.w	r2, lr, #1
 8013cb4:	1c6e      	adds	r6, r5, #1
 8013cb6:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8013cba:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8013cbe:	fa1f fc8c 	uxth.w	ip, ip
 8013cc2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8013cc6:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8013cca:	ea46 0e0e 	orr.w	lr, r6, lr
 8013cce:	f10c 0601 	add.w	r6, ip, #1
 8013cd2:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8013cd6:	0976      	lsrs	r6, r6, #5
 8013cd8:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8013cdc:	9a02      	ldr	r2, [sp, #8]
 8013cde:	ea4e 0e06 	orr.w	lr, lr, r6
 8013ce2:	f824 e002 	strh.w	lr, [r4, r2]
 8013ce6:	e7b3      	b.n	8013c50 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8013ce8:	f04f 0800 	mov.w	r8, #0
 8013cec:	eba3 0208 	sub.w	r2, r3, r8
 8013cf0:	2a00      	cmp	r2, #0
 8013cf2:	f77f af36 	ble.w	8013b62 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8013cf6:	9e00      	ldr	r6, [sp, #0]
 8013cf8:	1402      	asrs	r2, r0, #16
 8013cfa:	140d      	asrs	r5, r1, #16
 8013cfc:	fb06 2505 	mla	r5, r6, r5, r2
 8013d00:	086a      	lsrs	r2, r5, #1
 8013d02:	9e01      	ldr	r6, [sp, #4]
 8013d04:	5cb2      	ldrb	r2, [r6, r2]
 8013d06:	07ed      	lsls	r5, r5, #31
 8013d08:	bf54      	ite	pl
 8013d0a:	f002 020f 	andpl.w	r2, r2, #15
 8013d0e:	1112      	asrmi	r2, r2, #4
 8013d10:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8013d14:	b2d2      	uxtb	r2, r2
 8013d16:	b1c2      	cbz	r2, 8013d4a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8013d18:	9d04      	ldr	r5, [sp, #16]
 8013d1a:	436a      	muls	r2, r5
 8013d1c:	1c55      	adds	r5, r2, #1
 8013d1e:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8013d22:	4d2e      	ldr	r5, [pc, #184]	@ (8013ddc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8013d24:	1212      	asrs	r2, r2, #8
 8013d26:	682e      	ldr	r6, [r5, #0]
 8013d28:	2aff      	cmp	r2, #255	@ 0xff
 8013d2a:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8013d2e:	d113      	bne.n	8013d58 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8013d30:	0972      	lsrs	r2, r6, #5
 8013d32:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 8013d36:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8013d3a:	f025 0507 	bic.w	r5, r5, #7
 8013d3e:	4315      	orrs	r5, r2
 8013d40:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8013d44:	4335      	orrs	r5, r6
 8013d46:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8013d4a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8013d4c:	4410      	add	r0, r2
 8013d4e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8013d50:	f108 0801 	add.w	r8, r8, #1
 8013d54:	4411      	add	r1, r2
 8013d56:	e7c9      	b.n	8013cec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8013d58:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8013d5c:	fa1f fa82 	uxth.w	sl, r2
 8013d60:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8013d64:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8013d68:	43d2      	mvns	r2, r2
 8013d6a:	b2d2      	uxtb	r2, r2
 8013d6c:	fb17 f70a 	smulbb	r7, r7, sl
 8013d70:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013d74:	fb0c 7c02 	mla	ip, ip, r2, r7
 8013d78:	b2f6      	uxtb	r6, r6
 8013d7a:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8013d7e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013d82:	fa5f fe8e 	uxtb.w	lr, lr
 8013d86:	fb16 f60a 	smulbb	r6, r6, sl
 8013d8a:	fb0e 6602 	mla	r6, lr, r2, r6
 8013d8e:	b2ed      	uxtb	r5, r5
 8013d90:	fa1f fc8c 	uxth.w	ip, ip
 8013d94:	fb15 f50a 	smulbb	r5, r5, sl
 8013d98:	b2b6      	uxth	r6, r6
 8013d9a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8013d9e:	fb07 5702 	mla	r7, r7, r2, r5
 8013da2:	f10c 0201 	add.w	r2, ip, #1
 8013da6:	1c75      	adds	r5, r6, #1
 8013da8:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8013dac:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8013db0:	b2bf      	uxth	r7, r7
 8013db2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8013db6:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8013dba:	ea45 0c0c 	orr.w	ip, r5, ip
 8013dbe:	1c7d      	adds	r5, r7, #1
 8013dc0:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8013dc4:	096d      	lsrs	r5, r5, #5
 8013dc6:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8013dca:	ea4c 0c05 	orr.w	ip, ip, r5
 8013dce:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8013dd2:	e7ba      	b.n	8013d4a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8013dd4:	b007      	add	sp, #28
 8013dd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013dda:	bf00      	nop
 8013ddc:	200130a0 	.word	0x200130a0

08013de0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013de0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013de4:	b087      	sub	sp, #28
 8013de6:	f8df 830c 	ldr.w	r8, [pc, #780]	@ 80140f4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8013dea:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8013dec:	9205      	str	r2, [sp, #20]
 8013dee:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8013df2:	9101      	str	r1, [sp, #4]
 8013df4:	6841      	ldr	r1, [r0, #4]
 8013df6:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
 8013dfa:	fb01 2404 	mla	r4, r1, r4, r2
 8013dfe:	6802      	ldr	r2, [r0, #0]
 8013e00:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013e04:	f8db 2008 	ldr.w	r2, [fp, #8]
 8013e08:	3201      	adds	r2, #1
 8013e0a:	f022 0201 	bic.w	r2, r2, #1
 8013e0e:	9202      	str	r2, [sp, #8]
 8013e10:	f8db 2000 	ldr.w	r2, [fp]
 8013e14:	9203      	str	r2, [sp, #12]
 8013e16:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8013e1a:	9a01      	ldr	r2, [sp, #4]
 8013e1c:	2a00      	cmp	r2, #0
 8013e1e:	dc03      	bgt.n	8013e28 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8013e20:	9a05      	ldr	r2, [sp, #20]
 8013e22:	2a00      	cmp	r2, #0
 8013e24:	f340 8162 	ble.w	80140ec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8013e28:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8013e2a:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 8013e2e:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8013e32:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8013e36:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8013e38:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8013e3c:	2b00      	cmp	r3, #0
 8013e3e:	dd0e      	ble.n	8013e5e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013e40:	1402      	asrs	r2, r0, #16
 8013e42:	d405      	bmi.n	8013e50 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013e44:	42ba      	cmp	r2, r7
 8013e46:	da03      	bge.n	8013e50 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013e48:	140a      	asrs	r2, r1, #16
 8013e4a:	d401      	bmi.n	8013e50 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013e4c:	42b2      	cmp	r2, r6
 8013e4e:	db07      	blt.n	8013e60 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8013e50:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8013e52:	4410      	add	r0, r2
 8013e54:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8013e56:	3b01      	subs	r3, #1
 8013e58:	4411      	add	r1, r2
 8013e5a:	3402      	adds	r4, #2
 8013e5c:	e7ee      	b.n	8013e3c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8013e5e:	d017      	beq.n	8013e90 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8013e60:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8013e62:	1e5a      	subs	r2, r3, #1
 8013e64:	fb05 0502 	mla	r5, r5, r2, r0
 8013e68:	142d      	asrs	r5, r5, #16
 8013e6a:	d409      	bmi.n	8013e80 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8013e6c:	42bd      	cmp	r5, r7
 8013e6e:	da07      	bge.n	8013e80 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8013e70:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8013e72:	fb05 1202 	mla	r2, r5, r2, r1
 8013e76:	1412      	asrs	r2, r2, #16
 8013e78:	d402      	bmi.n	8013e80 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8013e7a:	42b2      	cmp	r2, r6
 8013e7c:	f2c0 80c3 	blt.w	8014006 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8013e80:	2500      	movs	r5, #0
 8013e82:	195a      	adds	r2, r3, r5
 8013e84:	2a00      	cmp	r2, #0
 8013e86:	dc3f      	bgt.n	8013f08 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8013e88:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013e8c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013e90:	9b01      	ldr	r3, [sp, #4]
 8013e92:	2b00      	cmp	r3, #0
 8013e94:	f340 812a 	ble.w	80140ec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8013e98:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013e9c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013ea0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013ea4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013ea6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013eaa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013eae:	eeb0 6a62 	vmov.f32	s12, s5
 8013eb2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013eb6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013eba:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013ebe:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8013ec2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013ec6:	eeb0 6a43 	vmov.f32	s12, s6
 8013eca:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013ece:	ee12 2a90 	vmov	r2, s5
 8013ed2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013ed6:	fb92 f3f3 	sdiv	r3, r2, r3
 8013eda:	ee13 2a10 	vmov	r2, s6
 8013ede:	9313      	str	r3, [sp, #76]	@ 0x4c
 8013ee0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013ee2:	fb92 f3f3 	sdiv	r3, r2, r3
 8013ee6:	9314      	str	r3, [sp, #80]	@ 0x50
 8013ee8:	9b01      	ldr	r3, [sp, #4]
 8013eea:	9a05      	ldr	r2, [sp, #20]
 8013eec:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013ef0:	3b01      	subs	r3, #1
 8013ef2:	9301      	str	r3, [sp, #4]
 8013ef4:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8013ef8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013efa:	eeb0 3a67 	vmov.f32	s6, s15
 8013efe:	bf08      	it	eq
 8013f00:	4613      	moveq	r3, r2
 8013f02:	eef0 2a47 	vmov.f32	s5, s14
 8013f06:	e788      	b.n	8013e1a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8013f08:	1406      	asrs	r6, r0, #16
 8013f0a:	d42c      	bmi.n	8013f66 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8013f0c:	f8db 2008 	ldr.w	r2, [fp, #8]
 8013f10:	42b2      	cmp	r2, r6
 8013f12:	dd28      	ble.n	8013f66 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8013f14:	140f      	asrs	r7, r1, #16
 8013f16:	d426      	bmi.n	8013f66 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8013f18:	f8db 200c 	ldr.w	r2, [fp, #12]
 8013f1c:	42ba      	cmp	r2, r7
 8013f1e:	dd22      	ble.n	8013f66 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8013f20:	9a02      	ldr	r2, [sp, #8]
 8013f22:	fb07 6602 	mla	r6, r7, r2, r6
 8013f26:	0872      	lsrs	r2, r6, #1
 8013f28:	9f03      	ldr	r7, [sp, #12]
 8013f2a:	5cba      	ldrb	r2, [r7, r2]
 8013f2c:	07f6      	lsls	r6, r6, #31
 8013f2e:	bf54      	ite	pl
 8013f30:	f002 020f 	andpl.w	r2, r2, #15
 8013f34:	1112      	asrmi	r2, r2, #4
 8013f36:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8013f3a:	b2d2      	uxtb	r2, r2
 8013f3c:	2aff      	cmp	r2, #255	@ 0xff
 8013f3e:	d118      	bne.n	8013f72 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8013f40:	f8d8 2000 	ldr.w	r2, [r8]
 8013f44:	f06f 0601 	mvn.w	r6, #1
 8013f48:	fb06 f705 	mul.w	r7, r6, r5
 8013f4c:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
 8013f50:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8013f54:	0956      	lsrs	r6, r2, #5
 8013f56:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8013f5a:	ea4c 0606 	orr.w	r6, ip, r6
 8013f5e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8013f62:	4316      	orrs	r6, r2
 8013f64:	53e6      	strh	r6, [r4, r7]
 8013f66:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8013f68:	4410      	add	r0, r2
 8013f6a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8013f6c:	3d01      	subs	r5, #1
 8013f6e:	4411      	add	r1, r2
 8013f70:	e787      	b.n	8013e82 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8013f72:	2a00      	cmp	r2, #0
 8013f74:	d0f7      	beq.n	8013f66 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8013f76:	f06f 0601 	mvn.w	r6, #1
 8013f7a:	436e      	muls	r6, r5
 8013f7c:	f8d8 c000 	ldr.w	ip, [r8]
 8013f80:	f834 e006 	ldrh.w	lr, [r4, r6]
 8013f84:	9604      	str	r6, [sp, #16]
 8013f86:	fa1f f982 	uxth.w	r9, r2
 8013f8a:	ea4f 272e 	mov.w	r7, lr, asr #8
 8013f8e:	f3cc 4607 	ubfx	r6, ip, #16, #8
 8013f92:	43d2      	mvns	r2, r2
 8013f94:	b2d2      	uxtb	r2, r2
 8013f96:	fb16 f609 	smulbb	r6, r6, r9
 8013f9a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013f9e:	fb07 6702 	mla	r7, r7, r2, r6
 8013fa2:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8013fa6:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8013faa:	fa5f fc8c 	uxtb.w	ip, ip
 8013fae:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013fb2:	fa5f fe8e 	uxtb.w	lr, lr
 8013fb6:	fb1c fc09 	smulbb	ip, ip, r9
 8013fba:	fb0e cc02 	mla	ip, lr, r2, ip
 8013fbe:	b2bf      	uxth	r7, r7
 8013fc0:	fb1a fa09 	smulbb	sl, sl, r9
 8013fc4:	fa1f fc8c 	uxth.w	ip, ip
 8013fc8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013fcc:	fb06 a602 	mla	r6, r6, r2, sl
 8013fd0:	1c7a      	adds	r2, r7, #1
 8013fd2:	f10c 0a01 	add.w	sl, ip, #1
 8013fd6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8013fda:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8013fde:	b2b6      	uxth	r6, r6
 8013fe0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013fe4:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8013fe8:	ea4a 0707 	orr.w	r7, sl, r7
 8013fec:	f106 0a01 	add.w	sl, r6, #1
 8013ff0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013ff4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013ff8:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013ffc:	9a04      	ldr	r2, [sp, #16]
 8013ffe:	ea47 070a 	orr.w	r7, r7, sl
 8014002:	52a7      	strh	r7, [r4, r2]
 8014004:	e7af      	b.n	8013f66 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8014006:	f04f 0e00 	mov.w	lr, #0
 801400a:	eba3 020e 	sub.w	r2, r3, lr
 801400e:	2a00      	cmp	r2, #0
 8014010:	f77f af3a 	ble.w	8013e88 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8014014:	9e02      	ldr	r6, [sp, #8]
 8014016:	1402      	asrs	r2, r0, #16
 8014018:	140d      	asrs	r5, r1, #16
 801401a:	fb06 2505 	mla	r5, r6, r5, r2
 801401e:	086a      	lsrs	r2, r5, #1
 8014020:	9e03      	ldr	r6, [sp, #12]
 8014022:	5cb2      	ldrb	r2, [r6, r2]
 8014024:	07ed      	lsls	r5, r5, #31
 8014026:	bf54      	ite	pl
 8014028:	f002 020f 	andpl.w	r2, r2, #15
 801402c:	1112      	asrmi	r2, r2, #4
 801402e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8014032:	b2d2      	uxtb	r2, r2
 8014034:	2aff      	cmp	r2, #255	@ 0xff
 8014036:	d115      	bne.n	8014064 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8014038:	f8d8 5000 	ldr.w	r5, [r8]
 801403c:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
 8014040:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8014044:	096a      	lsrs	r2, r5, #5
 8014046:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801404a:	4332      	orrs	r2, r6
 801404c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8014050:	432a      	orrs	r2, r5
 8014052:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 8014056:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014058:	4410      	add	r0, r2
 801405a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801405c:	f10e 0e01 	add.w	lr, lr, #1
 8014060:	4411      	add	r1, r2
 8014062:	e7d2      	b.n	801400a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8014064:	2a00      	cmp	r2, #0
 8014066:	d0f6      	beq.n	8014056 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8014068:	f8d8 7000 	ldr.w	r7, [r8]
 801406c:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8014070:	fa1f f982 	uxth.w	r9, r2
 8014074:	ea4f 262c 	mov.w	r6, ip, asr #8
 8014078:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801407c:	43d2      	mvns	r2, r2
 801407e:	b2d2      	uxtb	r2, r2
 8014080:	fb15 f509 	smulbb	r5, r5, r9
 8014084:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8014088:	fb06 5602 	mla	r6, r6, r2, r5
 801408c:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8014090:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8014094:	b2ff      	uxtb	r7, r7
 8014096:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801409a:	fa5f fc8c 	uxtb.w	ip, ip
 801409e:	fb17 f709 	smulbb	r7, r7, r9
 80140a2:	fb0c 7702 	mla	r7, ip, r2, r7
 80140a6:	b2b6      	uxth	r6, r6
 80140a8:	fb1a fa09 	smulbb	sl, sl, r9
 80140ac:	b2bf      	uxth	r7, r7
 80140ae:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80140b2:	fb05 a502 	mla	r5, r5, r2, sl
 80140b6:	1c72      	adds	r2, r6, #1
 80140b8:	f107 0a01 	add.w	sl, r7, #1
 80140bc:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80140c0:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80140c4:	b2ad      	uxth	r5, r5
 80140c6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80140ca:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 80140ce:	ea4a 0606 	orr.w	r6, sl, r6
 80140d2:	f105 0a01 	add.w	sl, r5, #1
 80140d6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80140da:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80140de:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80140e2:	ea46 060a 	orr.w	r6, r6, sl
 80140e6:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 80140ea:	e7b4      	b.n	8014056 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80140ec:	b007      	add	sp, #28
 80140ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80140f2:	bf00      	nop
 80140f4:	200130a0 	.word	0x200130a0

080140f8 <_ZN8touchgfx8LCD16bppD1Ev>:
 80140f8:	4770      	bx	lr

080140fa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID1Ev>:
 80140fa:	4770      	bx	lr

080140fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 80140fc:	4770      	bx	lr

080140fe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 80140fe:	4770      	bx	lr

08014100 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 8014100:	4770      	bx	lr

08014102 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8014102:	4770      	bx	lr

08014104 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8014104:	4770      	bx	lr

08014106 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8014106:	4770      	bx	lr

08014108 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8014108:	4770      	bx	lr

0801410a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801410a:	4770      	bx	lr

0801410c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801410c:	4770      	bx	lr

0801410e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801410e:	4770      	bx	lr

08014110 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8014110:	4770      	bx	lr

08014112 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8014112:	4770      	bx	lr

08014114 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8014114:	4770      	bx	lr

08014116 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8014116:	4770      	bx	lr

08014118 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8014118:	4770      	bx	lr

0801411a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801411a:	4770      	bx	lr

0801411c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801411c:	4770      	bx	lr

0801411e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801411e:	4770      	bx	lr

08014120 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8014120:	4770      	bx	lr

08014122 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8014122:	4770      	bx	lr

08014124 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8014124:	4770      	bx	lr

08014126 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8014126:	4770      	bx	lr

08014128 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8014128:	4770      	bx	lr

0801412a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801412a:	4770      	bx	lr

0801412c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801412c:	4770      	bx	lr

0801412e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801412e:	4770      	bx	lr

08014130 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8014130:	4770      	bx	lr

08014132 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8014132:	4770      	bx	lr

08014134 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8014134:	4770      	bx	lr

08014136 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8014136:	4770      	bx	lr

08014138 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8014138:	4770      	bx	lr

0801413a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801413a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801413e:	b088      	sub	sp, #32
 8014140:	ac08      	add	r4, sp, #32
 8014142:	4606      	mov	r6, r0
 8014144:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8014148:	4620      	mov	r0, r4
 801414a:	4688      	mov	r8, r1
 801414c:	4691      	mov	r9, r2
 801414e:	f7fd fc31 	bl	80119b4 <_ZNK8touchgfx6Bitmap7getDataEv>
 8014152:	6833      	ldr	r3, [r6, #0]
 8014154:	4605      	mov	r5, r0
 8014156:	4620      	mov	r0, r4
 8014158:	699f      	ldr	r7, [r3, #24]
 801415a:	f7fd fb39 	bl	80117d0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801415e:	4682      	mov	sl, r0
 8014160:	4620      	mov	r0, r4
 8014162:	f7fd fb69 	bl	8011838 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8014166:	9500      	str	r5, [sp, #0]
 8014168:	e9cd a001 	strd	sl, r0, [sp, #4]
 801416c:	464b      	mov	r3, r9
 801416e:	a806      	add	r0, sp, #24
 8014170:	4642      	mov	r2, r8
 8014172:	4631      	mov	r1, r6
 8014174:	47b8      	blx	r7
 8014176:	4628      	mov	r0, r5
 8014178:	b008      	add	sp, #32
 801417a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

08014180 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8014180:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8014184:	2300      	movs	r3, #0
 8014186:	9300      	str	r3, [sp, #0]
 8014188:	4b3d      	ldr	r3, [pc, #244]	@ (8014280 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801418a:	781b      	ldrb	r3, [r3, #0]
 801418c:	2b00      	cmp	r3, #0
 801418e:	d137      	bne.n	8014200 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8014190:	4a3c      	ldr	r2, [pc, #240]	@ (8014284 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8014192:	f9b2 2000 	ldrsh.w	r2, [r2]
 8014196:	f8ad 2004 	strh.w	r2, [sp, #4]
 801419a:	2b00      	cmp	r3, #0
 801419c:	d132      	bne.n	8014204 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801419e:	4b3a      	ldr	r3, [pc, #232]	@ (8014288 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 80141a0:	f9b3 3000 	ldrsh.w	r3, [r3]
 80141a4:	6808      	ldr	r0, [r1, #0]
 80141a6:	6849      	ldr	r1, [r1, #4]
 80141a8:	f8ad 3006 	strh.w	r3, [sp, #6]
 80141ac:	ac02      	add	r4, sp, #8
 80141ae:	ab02      	add	r3, sp, #8
 80141b0:	c303      	stmia	r3!, {r0, r1}
 80141b2:	4669      	mov	r1, sp
 80141b4:	4620      	mov	r0, r4
 80141b6:	f7fa f811 	bl	800e1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80141ba:	4668      	mov	r0, sp
 80141bc:	f7f9 ffe6 	bl	800e18c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80141c0:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80141c4:	f8bd 2000 	ldrh.w	r2, [sp]
 80141c8:	4d30      	ldr	r5, [pc, #192]	@ (801428c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 80141ca:	4413      	add	r3, r2
 80141cc:	f8ad 3008 	strh.w	r3, [sp, #8]
 80141d0:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 80141d4:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80141d8:	6828      	ldr	r0, [r5, #0]
 80141da:	4413      	add	r3, r2
 80141dc:	f8ad 300a 	strh.w	r3, [sp, #10]
 80141e0:	6803      	ldr	r3, [r0, #0]
 80141e2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80141e4:	4798      	blx	r3
 80141e6:	f010 0f01 	tst.w	r0, #1
 80141ea:	462f      	mov	r7, r5
 80141ec:	d00c      	beq.n	8014208 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 80141ee:	6828      	ldr	r0, [r5, #0]
 80141f0:	6803      	ldr	r3, [r0, #0]
 80141f2:	e894 0006 	ldmia.w	r4, {r1, r2}
 80141f6:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80141f8:	4798      	blx	r3
 80141fa:	b004      	add	sp, #16
 80141fc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8014200:	4a21      	ldr	r2, [pc, #132]	@ (8014288 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8014202:	e7c6      	b.n	8014192 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8014204:	4b1f      	ldr	r3, [pc, #124]	@ (8014284 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8014206:	e7cb      	b.n	80141a0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8014208:	6838      	ldr	r0, [r7, #0]
 801420a:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801420e:	6803      	ldr	r3, [r0, #0]
 8014210:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8014214:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8014216:	4798      	blx	r3
 8014218:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801421c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8014220:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8014224:	fb16 3602 	smlabb	r6, r6, r2, r3
 8014228:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801422c:	6838      	ldr	r0, [r7, #0]
 801422e:	6803      	ldr	r3, [r0, #0]
 8014230:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014232:	4798      	blx	r3
 8014234:	4a13      	ldr	r2, [pc, #76]	@ (8014284 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8014236:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801423a:	8813      	ldrh	r3, [r2, #0]
 801423c:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8014240:	fb03 1404 	mla	r4, r3, r4, r1
 8014244:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8014248:	435d      	muls	r5, r3
 801424a:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801424e:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8014252:	4691      	mov	r9, r2
 8014254:	6838      	ldr	r0, [r7, #0]
 8014256:	42ac      	cmp	r4, r5
 8014258:	6803      	ldr	r3, [r0, #0]
 801425a:	d20e      	bcs.n	801427a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801425c:	f8d3 a038 	ldr.w	sl, [r3, #56]	@ 0x38
 8014260:	4632      	mov	r2, r6
 8014262:	4643      	mov	r3, r8
 8014264:	4621      	mov	r1, r4
 8014266:	47d0      	blx	sl
 8014268:	f8b9 3000 	ldrh.w	r3, [r9]
 801426c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014270:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8014274:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8014278:	e7ec      	b.n	8014254 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801427a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801427c:	4798      	blx	r3
 801427e:	e7bc      	b.n	80141fa <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8014280:	20013086 	.word	0x20013086
 8014284:	20013088 	.word	0x20013088
 8014288:	2001308a 	.word	0x2001308a
 801428c:	20013090 	.word	0x20013090

08014290 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8014290:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014294:	b08b      	sub	sp, #44	@ 0x2c
 8014296:	460f      	mov	r7, r1
 8014298:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
 801429c:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
 80142a0:	4616      	mov	r6, r2
 80142a2:	f1bb 0f00 	cmp.w	fp, #0
 80142a6:	d04a      	beq.n	801433e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 80142a8:	6810      	ldr	r0, [r2, #0]
 80142aa:	6851      	ldr	r1, [r2, #4]
 80142ac:	ad06      	add	r5, sp, #24
 80142ae:	c503      	stmia	r5!, {r0, r1}
 80142b0:	6818      	ldr	r0, [r3, #0]
 80142b2:	6859      	ldr	r1, [r3, #4]
 80142b4:	ad08      	add	r5, sp, #32
 80142b6:	c503      	stmia	r5!, {r0, r1}
 80142b8:	a806      	add	r0, sp, #24
 80142ba:	f7f9 ff67 	bl	800e18c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80142be:	4631      	mov	r1, r6
 80142c0:	a808      	add	r0, sp, #32
 80142c2:	f7f9 ff8b 	bl	800e1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80142c6:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80142ca:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 80142ce:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 80142d2:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
 80142d6:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
 80142da:	fb16 2103 	smlabb	r1, r6, r3, r2
 80142de:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 80142e2:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 80142e6:	4f5f      	ldr	r7, [pc, #380]	@ (8014464 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 80142e8:	440a      	add	r2, r1
 80142ea:	f8ad 2020 	strh.w	r2, [sp, #32]
 80142ee:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80142f2:	6838      	ldr	r0, [r7, #0]
 80142f4:	4413      	add	r3, r2
 80142f6:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 80142fa:	6803      	ldr	r3, [r0, #0]
 80142fc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80142fe:	4798      	blx	r3
 8014300:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 8014304:	46b9      	mov	r9, r7
 8014306:	d11d      	bne.n	8014344 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8014308:	b9fc      	cbnz	r4, 801434a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801430a:	f010 0f01 	tst.w	r0, #1
 801430e:	d01c      	beq.n	801434a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8014310:	f8d9 0000 	ldr.w	r0, [r9]
 8014314:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 8014318:	6801      	ldr	r1, [r0, #0]
 801431a:	f8cd b00c 	str.w	fp, [sp, #12]
 801431e:	2700      	movs	r7, #0
 8014320:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8014324:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8014328:	9402      	str	r4, [sp, #8]
 801432a:	b2ad      	uxth	r5, r5
 801432c:	fa1f f488 	uxth.w	r4, r8
 8014330:	9501      	str	r5, [sp, #4]
 8014332:	9400      	str	r4, [sp, #0]
 8014334:	6c8c      	ldr	r4, [r1, #72]	@ 0x48
 8014336:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801433a:	4631      	mov	r1, r6
 801433c:	47a0      	blx	r4
 801433e:	b00b      	add	sp, #44	@ 0x2c
 8014340:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014344:	f010 0f04 	tst.w	r0, #4
 8014348:	e7e1      	b.n	801430e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801434a:	f8d9 0000 	ldr.w	r0, [r9]
 801434e:	6803      	ldr	r3, [r0, #0]
 8014350:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014352:	4798      	blx	r3
 8014354:	4b44      	ldr	r3, [pc, #272]	@ (8014468 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 8014356:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
 801435a:	881a      	ldrh	r2, [r3, #0]
 801435c:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8014360:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 8014364:	fb02 1404 	mla	r4, r2, r4, r1
 8014368:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801436c:	469a      	mov	sl, r3
 801436e:	fb05 f502 	mul.w	r5, r5, r2
 8014372:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8014376:	d059      	beq.n	801442c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8014378:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
 801437c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8014380:	fa1f f28b 	uxth.w	r2, fp
 8014384:	fa1f f989 	uxth.w	r9, r9
 8014388:	469e      	mov	lr, r3
 801438a:	42ac      	cmp	r4, r5
 801438c:	d264      	bcs.n	8014458 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801438e:	eb04 0a07 	add.w	sl, r4, r7
 8014392:	4554      	cmp	r4, sl
 8014394:	d23d      	bcs.n	8014412 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 8014396:	8821      	ldrh	r1, [r4, #0]
 8014398:	f836 3b02 	ldrh.w	r3, [r6], #2
 801439c:	1208      	asrs	r0, r1, #8
 801439e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80143a2:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80143a6:	fb10 f009 	smulbb	r0, r0, r9
 80143aa:	ea4f 0be1 	mov.w	fp, r1, asr #3
 80143ae:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80143b2:	00c9      	lsls	r1, r1, #3
 80143b4:	fb0c 0c02 	mla	ip, ip, r2, r0
 80143b8:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 80143bc:	10d8      	asrs	r0, r3, #3
 80143be:	b2c9      	uxtb	r1, r1
 80143c0:	00db      	lsls	r3, r3, #3
 80143c2:	fa1f fc8c 	uxth.w	ip, ip
 80143c6:	fb1b fb09 	smulbb	fp, fp, r9
 80143ca:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80143ce:	b2db      	uxtb	r3, r3
 80143d0:	fb11 f109 	smulbb	r1, r1, r9
 80143d4:	fb00 b002 	mla	r0, r0, r2, fp
 80143d8:	fb03 1302 	mla	r3, r3, r2, r1
 80143dc:	f10c 0b01 	add.w	fp, ip, #1
 80143e0:	b29b      	uxth	r3, r3
 80143e2:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 80143e6:	b280      	uxth	r0, r0
 80143e8:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
 80143ec:	f103 0c01 	add.w	ip, r3, #1
 80143f0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80143f4:	1c43      	adds	r3, r0, #1
 80143f6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80143fa:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80143fe:	0940      	lsrs	r0, r0, #5
 8014400:	ea4c 0c0b 	orr.w	ip, ip, fp
 8014404:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8014408:	ea4c 0c00 	orr.w	ip, ip, r0
 801440c:	f824 cb02 	strh.w	ip, [r4], #2
 8014410:	e7bf      	b.n	8014392 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 8014412:	f8be 3000 	ldrh.w	r3, [lr]
 8014416:	eba3 0308 	sub.w	r3, r3, r8
 801441a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801441e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8014422:	eba3 0308 	sub.w	r3, r3, r8
 8014426:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801442a:	e7ae      	b.n	801438a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801442c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8014430:	f8d9 0000 	ldr.w	r0, [r9]
 8014434:	42ac      	cmp	r4, r5
 8014436:	6803      	ldr	r3, [r0, #0]
 8014438:	d20e      	bcs.n	8014458 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801443a:	f8d3 8038 	ldr.w	r8, [r3, #56]	@ 0x38
 801443e:	4632      	mov	r2, r6
 8014440:	463b      	mov	r3, r7
 8014442:	4621      	mov	r1, r4
 8014444:	47c0      	blx	r8
 8014446:	f8ba 3000 	ldrh.w	r3, [sl]
 801444a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801444e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8014452:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8014456:	e7eb      	b.n	8014430 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8014458:	4b02      	ldr	r3, [pc, #8]	@ (8014464 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801445a:	6818      	ldr	r0, [r3, #0]
 801445c:	6803      	ldr	r3, [r0, #0]
 801445e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8014460:	4798      	blx	r3
 8014462:	e76c      	b.n	801433e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8014464:	20013090 	.word	0x20013090
 8014468:	20013088 	.word	0x20013088

0801446c <_ZN8touchgfx8LCD16bppD0Ev>:
 801446c:	b510      	push	{r4, lr}
 801446e:	218c      	movs	r1, #140	@ 0x8c
 8014470:	4604      	mov	r4, r0
 8014472:	f00c fa2c 	bl	80208ce <_ZdlPvj>
 8014476:	4620      	mov	r0, r4
 8014478:	bd10      	pop	{r4, pc}

0801447a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801447a:	b510      	push	{r4, lr}
 801447c:	2104      	movs	r1, #4
 801447e:	4604      	mov	r4, r0
 8014480:	f00c fa25 	bl	80208ce <_ZdlPvj>
 8014484:	4620      	mov	r0, r4
 8014486:	bd10      	pop	{r4, pc}

08014488 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 8014488:	b510      	push	{r4, lr}
 801448a:	2104      	movs	r1, #4
 801448c:	4604      	mov	r4, r0
 801448e:	f00c fa1e 	bl	80208ce <_ZdlPvj>
 8014492:	4620      	mov	r0, r4
 8014494:	bd10      	pop	{r4, pc}

08014496 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 8014496:	b510      	push	{r4, lr}
 8014498:	f640 0144 	movw	r1, #2116	@ 0x844
 801449c:	4604      	mov	r4, r0
 801449e:	f00c fa16 	bl	80208ce <_ZdlPvj>
 80144a2:	4620      	mov	r0, r4
 80144a4:	bd10      	pop	{r4, pc}

080144a6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID0Ev>:
 80144a6:	b510      	push	{r4, lr}
 80144a8:	f44f 7182 	mov.w	r1, #260	@ 0x104
 80144ac:	4604      	mov	r4, r0
 80144ae:	f00c fa0e 	bl	80208ce <_ZdlPvj>
 80144b2:	4620      	mov	r0, r4
 80144b4:	bd10      	pop	{r4, pc}

080144b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80144b6:	b510      	push	{r4, lr}
 80144b8:	2104      	movs	r1, #4
 80144ba:	4604      	mov	r4, r0
 80144bc:	f00c fa07 	bl	80208ce <_ZdlPvj>
 80144c0:	4620      	mov	r0, r4
 80144c2:	bd10      	pop	{r4, pc}

080144c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80144c4:	b510      	push	{r4, lr}
 80144c6:	2104      	movs	r1, #4
 80144c8:	4604      	mov	r4, r0
 80144ca:	f00c fa00 	bl	80208ce <_ZdlPvj>
 80144ce:	4620      	mov	r0, r4
 80144d0:	bd10      	pop	{r4, pc}

080144d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 80144d2:	b510      	push	{r4, lr}
 80144d4:	2104      	movs	r1, #4
 80144d6:	4604      	mov	r4, r0
 80144d8:	f00c f9f9 	bl	80208ce <_ZdlPvj>
 80144dc:	4620      	mov	r0, r4
 80144de:	bd10      	pop	{r4, pc}

080144e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 80144e0:	b510      	push	{r4, lr}
 80144e2:	2104      	movs	r1, #4
 80144e4:	4604      	mov	r4, r0
 80144e6:	f00c f9f2 	bl	80208ce <_ZdlPvj>
 80144ea:	4620      	mov	r0, r4
 80144ec:	bd10      	pop	{r4, pc}

080144ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80144ee:	b510      	push	{r4, lr}
 80144f0:	2104      	movs	r1, #4
 80144f2:	4604      	mov	r4, r0
 80144f4:	f00c f9eb 	bl	80208ce <_ZdlPvj>
 80144f8:	4620      	mov	r0, r4
 80144fa:	bd10      	pop	{r4, pc}

080144fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 80144fc:	b510      	push	{r4, lr}
 80144fe:	2104      	movs	r1, #4
 8014500:	4604      	mov	r4, r0
 8014502:	f00c f9e4 	bl	80208ce <_ZdlPvj>
 8014506:	4620      	mov	r0, r4
 8014508:	bd10      	pop	{r4, pc}

0801450a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801450a:	b510      	push	{r4, lr}
 801450c:	2104      	movs	r1, #4
 801450e:	4604      	mov	r4, r0
 8014510:	f00c f9dd 	bl	80208ce <_ZdlPvj>
 8014514:	4620      	mov	r0, r4
 8014516:	bd10      	pop	{r4, pc}

08014518 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8014518:	b510      	push	{r4, lr}
 801451a:	2104      	movs	r1, #4
 801451c:	4604      	mov	r4, r0
 801451e:	f00c f9d6 	bl	80208ce <_ZdlPvj>
 8014522:	4620      	mov	r0, r4
 8014524:	bd10      	pop	{r4, pc}

08014526 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8014526:	b510      	push	{r4, lr}
 8014528:	2104      	movs	r1, #4
 801452a:	4604      	mov	r4, r0
 801452c:	f00c f9cf 	bl	80208ce <_ZdlPvj>
 8014530:	4620      	mov	r0, r4
 8014532:	bd10      	pop	{r4, pc}

08014534 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8014534:	b510      	push	{r4, lr}
 8014536:	2104      	movs	r1, #4
 8014538:	4604      	mov	r4, r0
 801453a:	f00c f9c8 	bl	80208ce <_ZdlPvj>
 801453e:	4620      	mov	r0, r4
 8014540:	bd10      	pop	{r4, pc}

08014542 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8014542:	b510      	push	{r4, lr}
 8014544:	2104      	movs	r1, #4
 8014546:	4604      	mov	r4, r0
 8014548:	f00c f9c1 	bl	80208ce <_ZdlPvj>
 801454c:	4620      	mov	r0, r4
 801454e:	bd10      	pop	{r4, pc}

08014550 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8014550:	b510      	push	{r4, lr}
 8014552:	2104      	movs	r1, #4
 8014554:	4604      	mov	r4, r0
 8014556:	f00c f9ba 	bl	80208ce <_ZdlPvj>
 801455a:	4620      	mov	r0, r4
 801455c:	bd10      	pop	{r4, pc}

0801455e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801455e:	b510      	push	{r4, lr}
 8014560:	2104      	movs	r1, #4
 8014562:	4604      	mov	r4, r0
 8014564:	f00c f9b3 	bl	80208ce <_ZdlPvj>
 8014568:	4620      	mov	r0, r4
 801456a:	bd10      	pop	{r4, pc}

0801456c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801456c:	b510      	push	{r4, lr}
 801456e:	2104      	movs	r1, #4
 8014570:	4604      	mov	r4, r0
 8014572:	f00c f9ac 	bl	80208ce <_ZdlPvj>
 8014576:	4620      	mov	r0, r4
 8014578:	bd10      	pop	{r4, pc}

0801457a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801457a:	b510      	push	{r4, lr}
 801457c:	2104      	movs	r1, #4
 801457e:	4604      	mov	r4, r0
 8014580:	f00c f9a5 	bl	80208ce <_ZdlPvj>
 8014584:	4620      	mov	r0, r4
 8014586:	bd10      	pop	{r4, pc}

08014588 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8014588:	b510      	push	{r4, lr}
 801458a:	2104      	movs	r1, #4
 801458c:	4604      	mov	r4, r0
 801458e:	f00c f99e 	bl	80208ce <_ZdlPvj>
 8014592:	4620      	mov	r0, r4
 8014594:	bd10      	pop	{r4, pc}

08014596 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8014596:	b510      	push	{r4, lr}
 8014598:	2104      	movs	r1, #4
 801459a:	4604      	mov	r4, r0
 801459c:	f00c f997 	bl	80208ce <_ZdlPvj>
 80145a0:	4620      	mov	r0, r4
 80145a2:	bd10      	pop	{r4, pc}

080145a4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 80145a4:	b510      	push	{r4, lr}
 80145a6:	2104      	movs	r1, #4
 80145a8:	4604      	mov	r4, r0
 80145aa:	f00c f990 	bl	80208ce <_ZdlPvj>
 80145ae:	4620      	mov	r0, r4
 80145b0:	bd10      	pop	{r4, pc}

080145b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80145b2:	b510      	push	{r4, lr}
 80145b4:	2104      	movs	r1, #4
 80145b6:	4604      	mov	r4, r0
 80145b8:	f00c f989 	bl	80208ce <_ZdlPvj>
 80145bc:	4620      	mov	r0, r4
 80145be:	bd10      	pop	{r4, pc}

080145c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 80145c0:	b510      	push	{r4, lr}
 80145c2:	2104      	movs	r1, #4
 80145c4:	4604      	mov	r4, r0
 80145c6:	f00c f982 	bl	80208ce <_ZdlPvj>
 80145ca:	4620      	mov	r0, r4
 80145cc:	bd10      	pop	{r4, pc}

080145ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80145ce:	b510      	push	{r4, lr}
 80145d0:	2104      	movs	r1, #4
 80145d2:	4604      	mov	r4, r0
 80145d4:	f00c f97b 	bl	80208ce <_ZdlPvj>
 80145d8:	4620      	mov	r0, r4
 80145da:	bd10      	pop	{r4, pc}

080145dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80145dc:	b510      	push	{r4, lr}
 80145de:	2104      	movs	r1, #4
 80145e0:	4604      	mov	r4, r0
 80145e2:	f00c f974 	bl	80208ce <_ZdlPvj>
 80145e6:	4620      	mov	r0, r4
 80145e8:	bd10      	pop	{r4, pc}

080145ea <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80145ea:	b510      	push	{r4, lr}
 80145ec:	2104      	movs	r1, #4
 80145ee:	4604      	mov	r4, r0
 80145f0:	f00c f96d 	bl	80208ce <_ZdlPvj>
 80145f4:	4620      	mov	r0, r4
 80145f6:	bd10      	pop	{r4, pc}

080145f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80145f8:	b510      	push	{r4, lr}
 80145fa:	2104      	movs	r1, #4
 80145fc:	4604      	mov	r4, r0
 80145fe:	f00c f966 	bl	80208ce <_ZdlPvj>
 8014602:	4620      	mov	r0, r4
 8014604:	bd10      	pop	{r4, pc}

08014606 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8014606:	b510      	push	{r4, lr}
 8014608:	2104      	movs	r1, #4
 801460a:	4604      	mov	r4, r0
 801460c:	f00c f95f 	bl	80208ce <_ZdlPvj>
 8014610:	4620      	mov	r0, r4
 8014612:	bd10      	pop	{r4, pc}

08014614 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8014614:	b510      	push	{r4, lr}
 8014616:	2104      	movs	r1, #4
 8014618:	4604      	mov	r4, r0
 801461a:	f00c f958 	bl	80208ce <_ZdlPvj>
 801461e:	4620      	mov	r0, r4
 8014620:	bd10      	pop	{r4, pc}

08014622 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8014622:	b510      	push	{r4, lr}
 8014624:	2104      	movs	r1, #4
 8014626:	4604      	mov	r4, r0
 8014628:	f00c f951 	bl	80208ce <_ZdlPvj>
 801462c:	4620      	mov	r0, r4
 801462e:	bd10      	pop	{r4, pc}

08014630 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8014630:	b510      	push	{r4, lr}
 8014632:	2104      	movs	r1, #4
 8014634:	4604      	mov	r4, r0
 8014636:	f00c f94a 	bl	80208ce <_ZdlPvj>
 801463a:	4620      	mov	r0, r4
 801463c:	bd10      	pop	{r4, pc}
	...

08014640 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h>:
 8014640:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014644:	b08f      	sub	sp, #60	@ 0x3c
 8014646:	4616      	mov	r6, r2
 8014648:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
 801464c:	9205      	str	r2, [sp, #20]
 801464e:	4682      	mov	sl, r0
 8014650:	460d      	mov	r5, r1
 8014652:	2a00      	cmp	r2, #0
 8014654:	f000 82b7 	beq.w	8014bc6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x586>
 8014658:	6830      	ldr	r0, [r6, #0]
 801465a:	6871      	ldr	r1, [r6, #4]
 801465c:	ac0a      	add	r4, sp, #40	@ 0x28
 801465e:	c403      	stmia	r4!, {r0, r1}
 8014660:	6818      	ldr	r0, [r3, #0]
 8014662:	6859      	ldr	r1, [r3, #4]
 8014664:	ac0c      	add	r4, sp, #48	@ 0x30
 8014666:	c403      	stmia	r4!, {r0, r1}
 8014668:	a80a      	add	r0, sp, #40	@ 0x28
 801466a:	f7f9 fd8f 	bl	800e18c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801466e:	4631      	mov	r1, r6
 8014670:	a80c      	add	r0, sp, #48	@ 0x30
 8014672:	f7f9 fdb3 	bl	800e1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014676:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801467a:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 801467e:	bfd7      	itett	le
 8014680:	b293      	uxthle	r3, r2
 8014682:	2301      	movgt	r3, #1
 8014684:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8014688:	fb91 f3f3 	sdivle	r3, r1, r3
 801468c:	9300      	str	r3, [sp, #0]
 801468e:	f105 0308 	add.w	r3, r5, #8
 8014692:	9900      	ldr	r1, [sp, #0]
 8014694:	9306      	str	r3, [sp, #24]
 8014696:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 801469a:	440b      	add	r3, r1
 801469c:	3b01      	subs	r3, #1
 801469e:	fb93 f3f1 	sdiv	r3, r3, r1
 80146a2:	9906      	ldr	r1, [sp, #24]
 80146a4:	3b01      	subs	r3, #1
 80146a6:	b29b      	uxth	r3, r3
 80146a8:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80146ac:	9307      	str	r3, [sp, #28]
 80146ae:	9900      	ldr	r1, [sp, #0]
 80146b0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 80146b4:	fb93 f0f1 	sdiv	r0, r3, r1
 80146b8:	b284      	uxth	r4, r0
 80146ba:	9402      	str	r4, [sp, #8]
 80146bc:	9d02      	ldr	r5, [sp, #8]
 80146be:	9c00      	ldr	r4, [sp, #0]
 80146c0:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 80146c4:	fb05 3414 	mls	r4, r5, r4, r3
 80146c8:	fb14 f402 	smulbb	r4, r4, r2
 80146cc:	440c      	add	r4, r1
 80146ce:	b2a4      	uxth	r4, r4
 80146d0:	2d00      	cmp	r5, #0
 80146d2:	d06c      	beq.n	80147ae <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16e>
 80146d4:	1e6a      	subs	r2, r5, #1
 80146d6:	9806      	ldr	r0, [sp, #24]
 80146d8:	f850 6022 	ldr.w	r6, [r0, r2, lsl #2]
 80146dc:	9a07      	ldr	r2, [sp, #28]
 80146de:	ba36      	rev	r6, r6
 80146e0:	4416      	add	r6, r2
 80146e2:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 80146e6:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 80146ea:	f8df 9334 	ldr.w	r9, [pc, #820]	@ 8014a20 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>
 80146ee:	4411      	add	r1, r2
 80146f0:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 80146f4:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 80146f8:	4413      	add	r3, r2
 80146fa:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 80146fe:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8014702:	9301      	str	r3, [sp, #4]
 8014704:	4bc4      	ldr	r3, [pc, #784]	@ (8014a18 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3d8>)
 8014706:	6818      	ldr	r0, [r3, #0]
 8014708:	6803      	ldr	r3, [r0, #0]
 801470a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801470c:	4798      	blx	r3
 801470e:	4bc3      	ldr	r3, [pc, #780]	@ (8014a1c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3dc>)
 8014710:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8014714:	881b      	ldrh	r3, [r3, #0]
 8014716:	f9bd 8032 	ldrsh.w	r8, [sp, #50]	@ 0x32
 801471a:	fb03 2808 	mla	r8, r3, r8, r2
 801471e:	eb00 0848 	add.w	r8, r0, r8, lsl #1
 8014722:	436b      	muls	r3, r5
 8014724:	eb08 0343 	add.w	r3, r8, r3, lsl #1
 8014728:	9309      	str	r3, [sp, #36]	@ 0x24
 801472a:	2500      	movs	r5, #0
 801472c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8014730:	fb94 f3f3 	sdiv	r3, r4, r3
 8014734:	9304      	str	r3, [sp, #16]
 8014736:	f10a 0304 	add.w	r3, sl, #4
 801473a:	f44f 7280 	mov.w	r2, #256	@ 0x100
 801473e:	4629      	mov	r1, r5
 8014740:	4618      	mov	r0, r3
 8014742:	9308      	str	r3, [sp, #32]
 8014744:	f00d fa07 	bl	8021b56 <memset>
 8014748:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801474a:	4543      	cmp	r3, r8
 801474c:	f240 8236 	bls.w	8014bbc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x57c>
 8014750:	2203      	movs	r2, #3
 8014752:	2107      	movs	r1, #7
 8014754:	200b      	movs	r0, #11
 8014756:	2c00      	cmp	r4, #0
 8014758:	f000 8131 	beq.w	80149be <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x37e>
 801475c:	7833      	ldrb	r3, [r6, #0]
 801475e:	b2db      	uxtb	r3, r3
 8014760:	2bfe      	cmp	r3, #254	@ 0xfe
 8014762:	d126      	bne.n	80147b2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x172>
 8014764:	f896 e001 	ldrb.w	lr, [r6, #1]
 8014768:	f896 c002 	ldrb.w	ip, [r6, #2]
 801476c:	f896 b003 	ldrb.w	fp, [r6, #3]
 8014770:	fa5f fe8e 	uxtb.w	lr, lr
 8014774:	fa5f fc8c 	uxtb.w	ip, ip
 8014778:	f36e 0507 	bfi	r5, lr, #0, #8
 801477c:	f36c 250f 	bfi	r5, ip, #8, #8
 8014780:	fa5f fb8b 	uxtb.w	fp, fp
 8014784:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 8014788:	f36b 4517 	bfi	r5, fp, #16, #8
 801478c:	fb12 cc0b 	smlabb	ip, r2, fp, ip
 8014790:	0e2b      	lsrs	r3, r5, #24
 8014792:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 8014796:	fb10 c303 	smlabb	r3, r0, r3, ip
 801479a:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801479e:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 80147a2:	3c01      	subs	r4, #1
 80147a4:	1d37      	adds	r7, r6, #4
 80147a6:	b2a4      	uxth	r4, r4
 80147a8:	605d      	str	r5, [r3, #4]
 80147aa:	463e      	mov	r6, r7
 80147ac:	e7d3      	b.n	8014756 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x116>
 80147ae:	9e07      	ldr	r6, [sp, #28]
 80147b0:	e797      	b.n	80146e2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0xa2>
 80147b2:	2bff      	cmp	r3, #255	@ 0xff
 80147b4:	d127      	bne.n	8014806 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1c6>
 80147b6:	f896 c001 	ldrb.w	ip, [r6, #1]
 80147ba:	78b3      	ldrb	r3, [r6, #2]
 80147bc:	f896 e003 	ldrb.w	lr, [r6, #3]
 80147c0:	f896 b004 	ldrb.w	fp, [r6, #4]
 80147c4:	fa5f fc8c 	uxtb.w	ip, ip
 80147c8:	b2db      	uxtb	r3, r3
 80147ca:	f36c 0507 	bfi	r5, ip, #0, #8
 80147ce:	f363 250f 	bfi	r5, r3, #8, #8
 80147d2:	fa5f fe8e 	uxtb.w	lr, lr
 80147d6:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 80147da:	fb12 330e 	smlabb	r3, r2, lr, r3
 80147de:	fa5f fb8b 	uxtb.w	fp, fp
 80147e2:	f36e 4517 	bfi	r5, lr, #16, #8
 80147e6:	fb11 330c 	smlabb	r3, r1, ip, r3
 80147ea:	f36b 651f 	bfi	r5, fp, #24, #8
 80147ee:	fb10 3b0b 	smlabb	fp, r0, fp, r3
 80147f2:	f00b 0b3f 	and.w	fp, fp, #63	@ 0x3f
 80147f6:	eb0a 0b8b 	add.w	fp, sl, fp, lsl #2
 80147fa:	3c01      	subs	r4, #1
 80147fc:	1d77      	adds	r7, r6, #5
 80147fe:	b2a4      	uxth	r4, r4
 8014800:	f8cb 5004 	str.w	r5, [fp, #4]
 8014804:	e7d1      	b.n	80147aa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 8014806:	ea5f 1ca3 	movs.w	ip, r3, asr #6
 801480a:	f106 0701 	add.w	r7, r6, #1
 801480e:	d107      	bne.n	8014820 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1e0>
 8014810:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8014814:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8014818:	685d      	ldr	r5, [r3, #4]
 801481a:	3c01      	subs	r4, #1
 801481c:	b2a4      	uxth	r4, r4
 801481e:	e7c4      	b.n	80147aa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 8014820:	f1bc 0f01 	cmp.w	ip, #1
 8014824:	d12c      	bne.n	8014880 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x240>
 8014826:	f003 0e03 	and.w	lr, r3, #3
 801482a:	f1ae 0e02 	sub.w	lr, lr, #2
 801482e:	eb05 0ece 	add.w	lr, r5, lr, lsl #3
 8014832:	fa5f fe8e 	uxtb.w	lr, lr
 8014836:	f003 0c0c 	and.w	ip, r3, #12
 801483a:	f36e 0507 	bfi	r5, lr, #0, #8
 801483e:	f1ac 0c08 	sub.w	ip, ip, #8
 8014842:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 8014846:	f00c 0cff 	and.w	ip, ip, #255	@ 0xff
 801484a:	f36c 250f 	bfi	r5, ip, #8, #8
 801484e:	f3c3 1301 	ubfx	r3, r3, #4, #2
 8014852:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8014856:	3b02      	subs	r3, #2
 8014858:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 801485c:	b2db      	uxtb	r3, r3
 801485e:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 8014862:	f363 4517 	bfi	r5, r3, #16, #8
 8014866:	fb12 cc03 	smlabb	ip, r2, r3, ip
 801486a:	0e2e      	lsrs	r6, r5, #24
 801486c:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 8014870:	fb10 c606 	smlabb	r6, r0, r6, ip
 8014874:	f006 063f 	and.w	r6, r6, #63	@ 0x3f
 8014878:	eb0a 0686 	add.w	r6, sl, r6, lsl #2
 801487c:	6075      	str	r5, [r6, #4]
 801487e:	e7cc      	b.n	801481a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1da>
 8014880:	f1bc 0f02 	cmp.w	ip, #2
 8014884:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8014888:	d12a      	bne.n	80148e0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2a0>
 801488a:	1cb7      	adds	r7, r6, #2
 801488c:	7876      	ldrb	r6, [r6, #1]
 801488e:	b2f6      	uxtb	r6, r6
 8014890:	f006 0c0f 	and.w	ip, r6, #15
 8014894:	3b20      	subs	r3, #32
 8014896:	f1ac 0c08 	sub.w	ip, ip, #8
 801489a:	449c      	add	ip, r3
 801489c:	eb05 0ccc 	add.w	ip, r5, ip, lsl #3
 80148a0:	fa5f fc8c 	uxtb.w	ip, ip
 80148a4:	f36c 0507 	bfi	r5, ip, #0, #8
 80148a8:	f3c5 2e07 	ubfx	lr, r5, #8, #8
 80148ac:	eb0e 0e83 	add.w	lr, lr, r3, lsl #2
 80148b0:	fa5f fe8e 	uxtb.w	lr, lr
 80148b4:	1136      	asrs	r6, r6, #4
 80148b6:	f36e 250f 	bfi	r5, lr, #8, #8
 80148ba:	3e08      	subs	r6, #8
 80148bc:	4433      	add	r3, r6
 80148be:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80148c2:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 80148c6:	b2db      	uxtb	r3, r3
 80148c8:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
 80148cc:	f363 4517 	bfi	r5, r3, #16, #8
 80148d0:	fb12 ee03 	smlabb	lr, r2, r3, lr
 80148d4:	0e2e      	lsrs	r6, r5, #24
 80148d6:	fb11 ee0c 	smlabb	lr, r1, ip, lr
 80148da:	fb10 e606 	smlabb	r6, r0, r6, lr
 80148de:	e7c9      	b.n	8014874 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x234>
 80148e0:	1c5e      	adds	r6, r3, #1
 80148e2:	42a6      	cmp	r6, r4
 80148e4:	dd4e      	ble.n	8014984 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x344>
 80148e6:	1b36      	subs	r6, r6, r4
 80148e8:	2e00      	cmp	r6, #0
 80148ea:	dc4e      	bgt.n	801498a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x34a>
 80148ec:	f8dd b004 	ldr.w	fp, [sp, #4]
 80148f0:	2400      	movs	r4, #0
 80148f2:	f1bb 0f00 	cmp.w	fp, #0
 80148f6:	f340 8122 	ble.w	8014b3e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fe>
 80148fa:	1c7b      	adds	r3, r7, #1
 80148fc:	9303      	str	r3, [sp, #12]
 80148fe:	783b      	ldrb	r3, [r7, #0]
 8014900:	b2db      	uxtb	r3, r3
 8014902:	2bfe      	cmp	r3, #254	@ 0xfe
 8014904:	d160      	bne.n	80149c8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x388>
 8014906:	7879      	ldrb	r1, [r7, #1]
 8014908:	78ba      	ldrb	r2, [r7, #2]
 801490a:	78f8      	ldrb	r0, [r7, #3]
 801490c:	b2c9      	uxtb	r1, r1
 801490e:	f361 0507 	bfi	r5, r1, #0, #8
 8014912:	b2d2      	uxtb	r2, r2
 8014914:	1d3b      	adds	r3, r7, #4
 8014916:	f362 250f 	bfi	r5, r2, #8, #8
 801491a:	b2c0      	uxtb	r0, r0
 801491c:	9303      	str	r3, [sp, #12]
 801491e:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8014922:	2303      	movs	r3, #3
 8014924:	fb13 2200 	smlabb	r2, r3, r0, r2
 8014928:	f360 4517 	bfi	r5, r0, #16, #8
 801492c:	2307      	movs	r3, #7
 801492e:	fb13 2101 	smlabb	r1, r3, r1, r2
 8014932:	0e2e      	lsrs	r6, r5, #24
 8014934:	230b      	movs	r3, #11
 8014936:	fb13 1306 	smlabb	r3, r3, r6, r1
 801493a:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801493e:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8014942:	605d      	str	r5, [r3, #4]
 8014944:	2601      	movs	r6, #1
 8014946:	4637      	mov	r7, r6
 8014948:	0e2b      	lsrs	r3, r5, #24
 801494a:	ebab 0b07 	sub.w	fp, fp, r7
 801494e:	eba6 0607 	sub.w	r6, r6, r7
 8014952:	f040 80d3 	bne.w	8014afc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4bc>
 8014956:	b18c      	cbz	r4, 801497c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x33c>
 8014958:	4648      	mov	r0, r9
 801495a:	00a1      	lsls	r1, r4, #2
 801495c:	f7ec faf8 	bl	8000f50 <_ZN8touchgfx5paint9flushLineEPmi>
 8014960:	9b05      	ldr	r3, [sp, #20]
 8014962:	4622      	mov	r2, r4
 8014964:	4649      	mov	r1, r9
 8014966:	4640      	mov	r0, r8
 8014968:	f7ec fb40 	bl	8000fec <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 801496c:	4b2c      	ldr	r3, [pc, #176]	@ (8014a20 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>)
 801496e:	4a2d      	ldr	r2, [pc, #180]	@ (8014a24 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e4>)
 8014970:	4599      	cmp	r9, r3
 8014972:	bf08      	it	eq
 8014974:	4613      	moveq	r3, r2
 8014976:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801497a:	4699      	mov	r9, r3
 801497c:	eb08 0847 	add.w	r8, r8, r7, lsl #1
 8014980:	2400      	movs	r4, #0
 8014982:	e0da      	b.n	8014b3a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fa>
 8014984:	1ba6      	subs	r6, r4, r6
 8014986:	b2b4      	uxth	r4, r6
 8014988:	e70f      	b.n	80147aa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 801498a:	9b01      	ldr	r3, [sp, #4]
 801498c:	9a01      	ldr	r2, [sp, #4]
 801498e:	42b3      	cmp	r3, r6
 8014990:	bfa8      	it	ge
 8014992:	4633      	movge	r3, r6
 8014994:	0e2c      	lsrs	r4, r5, #24
 8014996:	eba2 0b03 	sub.w	fp, r2, r3
 801499a:	eba6 0603 	sub.w	r6, r6, r3
 801499e:	d00b      	beq.n	80149b8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x378>
 80149a0:	f1a9 0104 	sub.w	r1, r9, #4
 80149a4:	461a      	mov	r2, r3
 80149a6:	2a00      	cmp	r2, #0
 80149a8:	dc02      	bgt.n	80149b0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x370>
 80149aa:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80149ae:	e7a0      	b.n	80148f2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 80149b0:	f841 5f04 	str.w	r5, [r1, #4]!
 80149b4:	3a01      	subs	r2, #1
 80149b6:	e7f6      	b.n	80149a6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x366>
 80149b8:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 80149bc:	e799      	b.n	80148f2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 80149be:	4637      	mov	r7, r6
 80149c0:	f8dd b004 	ldr.w	fp, [sp, #4]
 80149c4:	4626      	mov	r6, r4
 80149c6:	e794      	b.n	80148f2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 80149c8:	2bff      	cmp	r3, #255	@ 0xff
 80149ca:	d11d      	bne.n	8014a08 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3c8>
 80149cc:	7878      	ldrb	r0, [r7, #1]
 80149ce:	78ba      	ldrb	r2, [r7, #2]
 80149d0:	78fe      	ldrb	r6, [r7, #3]
 80149d2:	1d7b      	adds	r3, r7, #5
 80149d4:	b2c0      	uxtb	r0, r0
 80149d6:	9303      	str	r3, [sp, #12]
 80149d8:	793b      	ldrb	r3, [r7, #4]
 80149da:	f360 0507 	bfi	r5, r0, #0, #8
 80149de:	b2d2      	uxtb	r2, r2
 80149e0:	b2d9      	uxtb	r1, r3
 80149e2:	f362 250f 	bfi	r5, r2, #8, #8
 80149e6:	b2f6      	uxtb	r6, r6
 80149e8:	2303      	movs	r3, #3
 80149ea:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 80149ee:	fb13 2206 	smlabb	r2, r3, r6, r2
 80149f2:	2307      	movs	r3, #7
 80149f4:	fb13 2000 	smlabb	r0, r3, r0, r2
 80149f8:	f366 4517 	bfi	r5, r6, #16, #8
 80149fc:	230b      	movs	r3, #11
 80149fe:	f361 651f 	bfi	r5, r1, #24, #8
 8014a02:	fb13 0301 	smlabb	r3, r3, r1, r0
 8014a06:	e798      	b.n	801493a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2fa>
 8014a08:	119e      	asrs	r6, r3, #6
 8014a0a:	d10d      	bne.n	8014a28 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e8>
 8014a0c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8014a10:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8014a14:	685d      	ldr	r5, [r3, #4]
 8014a16:	e795      	b.n	8014944 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 8014a18:	20013090 	.word	0x20013090
 8014a1c:	20013088 	.word	0x20013088
 8014a20:	20000280 	.word	0x20000280
 8014a24:	20000380 	.word	0x20000380
 8014a28:	2e01      	cmp	r6, #1
 8014a2a:	ea4f 6115 	mov.w	r1, r5, lsr #24
 8014a2e:	d12b      	bne.n	8014a88 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x448>
 8014a30:	f003 0003 	and.w	r0, r3, #3
 8014a34:	3802      	subs	r0, #2
 8014a36:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
 8014a3a:	b2c0      	uxtb	r0, r0
 8014a3c:	f003 020c 	and.w	r2, r3, #12
 8014a40:	f360 0507 	bfi	r5, r0, #0, #8
 8014a44:	3a08      	subs	r2, #8
 8014a46:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8014a4a:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 8014a4e:	f362 250f 	bfi	r5, r2, #8, #8
 8014a52:	f3c3 1301 	ubfx	r3, r3, #4, #2
 8014a56:	1e9f      	subs	r7, r3, #2
 8014a58:	f3c5 4307 	ubfx	r3, r5, #16, #8
 8014a5c:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8014a60:	b2db      	uxtb	r3, r3
 8014a62:	2703      	movs	r7, #3
 8014a64:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8014a68:	fb17 2203 	smlabb	r2, r7, r3, r2
 8014a6c:	2707      	movs	r7, #7
 8014a6e:	f363 4517 	bfi	r5, r3, #16, #8
 8014a72:	fb17 2000 	smlabb	r0, r7, r0, r2
 8014a76:	230b      	movs	r3, #11
 8014a78:	fb13 0101 	smlabb	r1, r3, r1, r0
 8014a7c:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 8014a80:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 8014a84:	604d      	str	r5, [r1, #4]
 8014a86:	e75e      	b.n	8014946 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x306>
 8014a88:	2e02      	cmp	r6, #2
 8014a8a:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8014a8e:	d12f      	bne.n	8014af0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4b0>
 8014a90:	7878      	ldrb	r0, [r7, #1]
 8014a92:	1cba      	adds	r2, r7, #2
 8014a94:	b2c0      	uxtb	r0, r0
 8014a96:	9203      	str	r2, [sp, #12]
 8014a98:	f000 020f 	and.w	r2, r0, #15
 8014a9c:	3b20      	subs	r3, #32
 8014a9e:	3a08      	subs	r2, #8
 8014aa0:	441a      	add	r2, r3
 8014aa2:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
 8014aa6:	b2d2      	uxtb	r2, r2
 8014aa8:	f362 0507 	bfi	r5, r2, #0, #8
 8014aac:	f3c5 2607 	ubfx	r6, r5, #8, #8
 8014ab0:	eb06 0683 	add.w	r6, r6, r3, lsl #2
 8014ab4:	b2f6      	uxtb	r6, r6
 8014ab6:	1100      	asrs	r0, r0, #4
 8014ab8:	f366 250f 	bfi	r5, r6, #8, #8
 8014abc:	3808      	subs	r0, #8
 8014abe:	4403      	add	r3, r0
 8014ac0:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8014ac4:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8014ac8:	b2db      	uxtb	r3, r3
 8014aca:	2003      	movs	r0, #3
 8014acc:	eb06 0686 	add.w	r6, r6, r6, lsl #2
 8014ad0:	fb10 6603 	smlabb	r6, r0, r3, r6
 8014ad4:	2007      	movs	r0, #7
 8014ad6:	f363 4517 	bfi	r5, r3, #16, #8
 8014ada:	fb10 6202 	smlabb	r2, r0, r2, r6
 8014ade:	230b      	movs	r3, #11
 8014ae0:	fb13 2101 	smlabb	r1, r3, r1, r2
 8014ae4:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 8014ae8:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 8014aec:	604d      	str	r5, [r1, #4]
 8014aee:	e729      	b.n	8014944 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 8014af0:	1c5e      	adds	r6, r3, #1
 8014af2:	45b3      	cmp	fp, r6
 8014af4:	465f      	mov	r7, fp
 8014af6:	bfa8      	it	ge
 8014af8:	4637      	movge	r7, r6
 8014afa:	e725      	b.n	8014948 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x308>
 8014afc:	193b      	adds	r3, r7, r4
 8014afe:	2b40      	cmp	r3, #64	@ 0x40
 8014b00:	dd13      	ble.n	8014b2a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4ea>
 8014b02:	4648      	mov	r0, r9
 8014b04:	00a1      	lsls	r1, r4, #2
 8014b06:	f7ec fa23 	bl	8000f50 <_ZN8touchgfx5paint9flushLineEPmi>
 8014b0a:	4649      	mov	r1, r9
 8014b0c:	9b05      	ldr	r3, [sp, #20]
 8014b0e:	4622      	mov	r2, r4
 8014b10:	4640      	mov	r0, r8
 8014b12:	f7ec fa6b 	bl	8000fec <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 8014b16:	4b2d      	ldr	r3, [pc, #180]	@ (8014bcc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>)
 8014b18:	4599      	cmp	r9, r3
 8014b1a:	bf0c      	ite	eq
 8014b1c:	f8df 90b8 	ldreq.w	r9, [pc, #184]	@ 8014bd8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x598>
 8014b20:	f8df 90a8 	ldrne.w	r9, [pc, #168]	@ 8014bcc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>
 8014b24:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8014b28:	2400      	movs	r4, #0
 8014b2a:	eb09 0284 	add.w	r2, r9, r4, lsl #2
 8014b2e:	463b      	mov	r3, r7
 8014b30:	3b01      	subs	r3, #1
 8014b32:	f842 5b04 	str.w	r5, [r2], #4
 8014b36:	d1fb      	bne.n	8014b30 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4f0>
 8014b38:	443c      	add	r4, r7
 8014b3a:	9f03      	ldr	r7, [sp, #12]
 8014b3c:	e6d9      	b.n	80148f2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8014b3e:	b15c      	cbz	r4, 8014b58 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x518>
 8014b40:	00a1      	lsls	r1, r4, #2
 8014b42:	4648      	mov	r0, r9
 8014b44:	f7ec fa04 	bl	8000f50 <_ZN8touchgfx5paint9flushLineEPmi>
 8014b48:	4640      	mov	r0, r8
 8014b4a:	9b05      	ldr	r3, [sp, #20]
 8014b4c:	4622      	mov	r2, r4
 8014b4e:	4649      	mov	r1, r9
 8014b50:	f7ec fa4c 	bl	8000fec <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 8014b54:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8014b58:	4b1d      	ldr	r3, [pc, #116]	@ (8014bd0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x590>)
 8014b5a:	9a01      	ldr	r2, [sp, #4]
 8014b5c:	881b      	ldrh	r3, [r3, #0]
 8014b5e:	1a9b      	subs	r3, r3, r2
 8014b60:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 8014b64:	9b04      	ldr	r3, [sp, #16]
 8014b66:	3301      	adds	r3, #1
 8014b68:	9304      	str	r3, [sp, #16]
 8014b6a:	9a04      	ldr	r2, [sp, #16]
 8014b6c:	9b00      	ldr	r3, [sp, #0]
 8014b6e:	4293      	cmp	r3, r2
 8014b70:	d11d      	bne.n	8014bae <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x56e>
 8014b72:	9b02      	ldr	r3, [sp, #8]
 8014b74:	9a02      	ldr	r2, [sp, #8]
 8014b76:	f8bd 4030 	ldrh.w	r4, [sp, #48]	@ 0x30
 8014b7a:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
 8014b7e:	9808      	ldr	r0, [sp, #32]
 8014b80:	f103 0b01 	add.w	fp, r3, #1
 8014b84:	9b06      	ldr	r3, [sp, #24]
 8014b86:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 8014b8a:	9b07      	ldr	r3, [sp, #28]
 8014b8c:	2500      	movs	r5, #0
 8014b8e:	ba3f      	rev	r7, r7
 8014b90:	1ba4      	subs	r4, r4, r6
 8014b92:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8014b96:	4629      	mov	r1, r5
 8014b98:	441f      	add	r7, r3
 8014b9a:	b2a4      	uxth	r4, r4
 8014b9c:	f00c ffdb 	bl	8021b56 <memset>
 8014ba0:	f8cd b008 	str.w	fp, [sp, #8]
 8014ba4:	9504      	str	r5, [sp, #16]
 8014ba6:	f7ec f9c9 	bl	8000f3c <_ZN8touchgfx5paint8tearDownEv>
 8014baa:	463e      	mov	r6, r7
 8014bac:	e5cc      	b.n	8014748 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x108>
 8014bae:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8014bb2:	9b01      	ldr	r3, [sp, #4]
 8014bb4:	1ae4      	subs	r4, r4, r3
 8014bb6:	1ba4      	subs	r4, r4, r6
 8014bb8:	b2a4      	uxth	r4, r4
 8014bba:	e7f4      	b.n	8014ba6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x566>
 8014bbc:	4b05      	ldr	r3, [pc, #20]	@ (8014bd4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x594>)
 8014bbe:	6818      	ldr	r0, [r3, #0]
 8014bc0:	6803      	ldr	r3, [r0, #0]
 8014bc2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8014bc4:	4798      	blx	r3
 8014bc6:	b00f      	add	sp, #60	@ 0x3c
 8014bc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014bcc:	20000280 	.word	0x20000280
 8014bd0:	20013088 	.word	0x20013088
 8014bd4:	20013090 	.word	0x20013090
 8014bd8:	20000380 	.word	0x20000380

08014bdc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8014bdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014be0:	b08f      	sub	sp, #60	@ 0x3c
 8014be2:	461c      	mov	r4, r3
 8014be4:	9205      	str	r2, [sp, #20]
 8014be6:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8014bea:	9100      	str	r1, [sp, #0]
 8014bec:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8014bee:	9201      	str	r2, [sp, #4]
 8014bf0:	2a00      	cmp	r2, #0
 8014bf2:	f000 8115 	beq.w	8014e20 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 8014bf6:	6820      	ldr	r0, [r4, #0]
 8014bf8:	6861      	ldr	r1, [r4, #4]
 8014bfa:	aa0a      	add	r2, sp, #40	@ 0x28
 8014bfc:	c203      	stmia	r2!, {r0, r1}
 8014bfe:	6818      	ldr	r0, [r3, #0]
 8014c00:	6859      	ldr	r1, [r3, #4]
 8014c02:	aa0c      	add	r2, sp, #48	@ 0x30
 8014c04:	c203      	stmia	r2!, {r0, r1}
 8014c06:	a80a      	add	r0, sp, #40	@ 0x28
 8014c08:	f7f9 fac0 	bl	800e18c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014c0c:	4621      	mov	r1, r4
 8014c0e:	a80c      	add	r0, sp, #48	@ 0x30
 8014c10:	f7f9 fae4 	bl	800e1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014c14:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8014c18:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8014c1c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8014c20:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8014c24:	bfde      	ittt	le
 8014c26:	b2b3      	uxthle	r3, r6
 8014c28:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8014c2c:	fb92 f3f3 	sdivle	r3, r2, r3
 8014c30:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8014c34:	bfc8      	it	gt
 8014c36:	2301      	movgt	r3, #1
 8014c38:	fb92 f1f3 	sdiv	r1, r2, r3
 8014c3c:	fa1f fc81 	uxth.w	ip, r1
 8014c40:	fb0c 2413 	mls	r4, ip, r3, r2
 8014c44:	fb14 f406 	smulbb	r4, r4, r6
 8014c48:	441d      	add	r5, r3
 8014c4a:	4404      	add	r4, r0
 8014c4c:	4661      	mov	r1, ip
 8014c4e:	3d01      	subs	r5, #1
 8014c50:	b2a4      	uxth	r4, r4
 8014c52:	fb95 f5f3 	sdiv	r5, r5, r3
 8014c56:	b131      	cbz	r1, 8014c66 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 8014c58:	9b05      	ldr	r3, [sp, #20]
 8014c5a:	9900      	ldr	r1, [sp, #0]
 8014c5c:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8014c60:	ba1b      	rev	r3, r3
 8014c62:	4419      	add	r1, r3
 8014c64:	9100      	str	r1, [sp, #0]
 8014c66:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8014c6a:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
 8014c6e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8014c72:	4418      	add	r0, r3
 8014c74:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8014c78:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8014c7c:	441a      	add	r2, r3
 8014c7e:	4b6a      	ldr	r3, [pc, #424]	@ (8014e28 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8014c80:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8014c84:	6818      	ldr	r0, [r3, #0]
 8014c86:	6803      	ldr	r3, [r0, #0]
 8014c88:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014c8a:	4798      	blx	r3
 8014c8c:	4967      	ldr	r1, [pc, #412]	@ (8014e2c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 8014c8e:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8014c92:	880b      	ldrh	r3, [r1, #0]
 8014c94:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 8014c98:	9109      	str	r1, [sp, #36]	@ 0x24
 8014c9a:	fb03 c202 	mla	r2, r3, r2, ip
 8014c9e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8014ca2:	4373      	muls	r3, r6
 8014ca4:	b2ad      	uxth	r5, r5
 8014ca6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8014caa:	00ad      	lsls	r5, r5, #2
 8014cac:	9306      	str	r3, [sp, #24]
 8014cae:	1d2b      	adds	r3, r5, #4
 8014cb0:	9307      	str	r3, [sp, #28]
 8014cb2:	9b01      	ldr	r3, [sp, #4]
 8014cb4:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8014cb8:	9103      	str	r1, [sp, #12]
 8014cba:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
 8014cbe:	2c00      	cmp	r4, #0
 8014cc0:	bf0c      	ite	eq
 8014cc2:	46c6      	moveq	lr, r8
 8014cc4:	f04f 0e00 	movne.w	lr, #0
 8014cc8:	2300      	movs	r3, #0
 8014cca:	b292      	uxth	r2, r2
 8014ccc:	fa1f fe8e 	uxth.w	lr, lr
 8014cd0:	9302      	str	r3, [sp, #8]
 8014cd2:	9204      	str	r2, [sp, #16]
 8014cd4:	9a06      	ldr	r2, [sp, #24]
 8014cd6:	4282      	cmp	r2, r0
 8014cd8:	f240 809d 	bls.w	8014e16 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 8014cdc:	b963      	cbnz	r3, 8014cf8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 8014cde:	9b00      	ldr	r3, [sp, #0]
 8014ce0:	781a      	ldrb	r2, [r3, #0]
 8014ce2:	0993      	lsrs	r3, r2, #6
 8014ce4:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8014ce8:	9202      	str	r2, [sp, #8]
 8014cea:	1e5a      	subs	r2, r3, #1
 8014cec:	2a02      	cmp	r2, #2
 8014cee:	d815      	bhi.n	8014d1c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 8014cf0:	9a00      	ldr	r2, [sp, #0]
 8014cf2:	3201      	adds	r2, #1
 8014cf4:	9200      	str	r2, [sp, #0]
 8014cf6:	b29b      	uxth	r3, r3
 8014cf8:	b1b4      	cbz	r4, 8014d28 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 8014cfa:	429c      	cmp	r4, r3
 8014cfc:	bf95      	itete	ls
 8014cfe:	1b1c      	subls	r4, r3, r4
 8014d00:	1ae4      	subhi	r4, r4, r3
 8014d02:	fa1f fa84 	uxthls.w	sl, r4
 8014d06:	b2a4      	uxthhi	r4, r4
 8014d08:	bf87      	ittee	hi
 8014d0a:	4671      	movhi	r1, lr
 8014d0c:	f04f 0a00 	movhi.w	sl, #0
 8014d10:	fa1f f188 	uxthls.w	r1, r8
 8014d14:	2400      	movls	r4, #0
 8014d16:	4653      	mov	r3, sl
 8014d18:	468e      	mov	lr, r1
 8014d1a:	e7db      	b.n	8014cd4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 8014d1c:	9a00      	ldr	r2, [sp, #0]
 8014d1e:	9b00      	ldr	r3, [sp, #0]
 8014d20:	3202      	adds	r2, #2
 8014d22:	785b      	ldrb	r3, [r3, #1]
 8014d24:	9200      	str	r2, [sp, #0]
 8014d26:	e7e7      	b.n	8014cf8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 8014d28:	2202      	movs	r2, #2
 8014d2a:	4615      	mov	r5, r2
 8014d2c:	9907      	ldr	r1, [sp, #28]
 8014d2e:	9a02      	ldr	r2, [sp, #8]
 8014d30:	fb15 1202 	smlabb	r2, r5, r2, r1
 8014d34:	9905      	ldr	r1, [sp, #20]
 8014d36:	4573      	cmp	r3, lr
 8014d38:	f831 c002 	ldrh.w	ip, [r1, r2]
 8014d3c:	9a01      	ldr	r2, [sp, #4]
 8014d3e:	bf2b      	itete	cs
 8014d40:	eba3 0a0e 	subcs.w	sl, r3, lr
 8014d44:	ebae 0103 	subcc.w	r1, lr, r3
 8014d48:	46f1      	movcs	r9, lr
 8014d4a:	4699      	movcc	r9, r3
 8014d4c:	bf27      	ittee	cs
 8014d4e:	fa1f fa8a 	uxthcs.w	sl, sl
 8014d52:	4621      	movcs	r1, r4
 8014d54:	b289      	uxthcc	r1, r1
 8014d56:	46a2      	movcc	sl, r4
 8014d58:	2aff      	cmp	r2, #255	@ 0xff
 8014d5a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8014d5e:	d105      	bne.n	8014d6c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 8014d60:	4481      	add	r9, r0
 8014d62:	4581      	cmp	r9, r0
 8014d64:	d045      	beq.n	8014df2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 8014d66:	f820 cb02 	strh.w	ip, [r0], #2
 8014d6a:	e7fa      	b.n	8014d62 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8014d6c:	9d03      	ldr	r5, [sp, #12]
 8014d6e:	ea4f 222c 	mov.w	r2, ip, asr #8
 8014d72:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8014d76:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8014d7a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8014d7e:	436a      	muls	r2, r5
 8014d80:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8014d84:	fa5f fc8c 	uxtb.w	ip, ip
 8014d88:	9208      	str	r2, [sp, #32]
 8014d8a:	fb0b fb05 	mul.w	fp, fp, r5
 8014d8e:	fb0c fc05 	mul.w	ip, ip, r5
 8014d92:	4481      	add	r9, r0
 8014d94:	4581      	cmp	r9, r0
 8014d96:	d02c      	beq.n	8014df2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 8014d98:	8802      	ldrh	r2, [r0, #0]
 8014d9a:	9d04      	ldr	r5, [sp, #16]
 8014d9c:	9f04      	ldr	r7, [sp, #16]
 8014d9e:	1216      	asrs	r6, r2, #8
 8014da0:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8014da4:	fb16 f605 	smulbb	r6, r6, r5
 8014da8:	9d08      	ldr	r5, [sp, #32]
 8014daa:	442e      	add	r6, r5
 8014dac:	10d5      	asrs	r5, r2, #3
 8014dae:	00d2      	lsls	r2, r2, #3
 8014db0:	b2d2      	uxtb	r2, r2
 8014db2:	fb12 f207 	smulbb	r2, r2, r7
 8014db6:	b2b6      	uxth	r6, r6
 8014db8:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8014dbc:	4462      	add	r2, ip
 8014dbe:	fb15 f507 	smulbb	r5, r5, r7
 8014dc2:	b292      	uxth	r2, r2
 8014dc4:	1c77      	adds	r7, r6, #1
 8014dc6:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8014dca:	1c57      	adds	r7, r2, #1
 8014dcc:	445d      	add	r5, fp
 8014dce:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 8014dd2:	b2ad      	uxth	r5, r5
 8014dd4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8014dd8:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8014ddc:	4316      	orrs	r6, r2
 8014dde:	1c6a      	adds	r2, r5, #1
 8014de0:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8014de4:	096d      	lsrs	r5, r5, #5
 8014de6:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8014dea:	432e      	orrs	r6, r5
 8014dec:	f820 6b02 	strh.w	r6, [r0], #2
 8014df0:	e7d0      	b.n	8014d94 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 8014df2:	4573      	cmp	r3, lr
 8014df4:	d38f      	bcc.n	8014d16 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 8014df6:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8014dfa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8014dfc:	fa1f f188 	uxth.w	r1, r8
 8014e00:	1a64      	subs	r4, r4, r1
 8014e02:	881b      	ldrh	r3, [r3, #0]
 8014e04:	b2a4      	uxth	r4, r4
 8014e06:	2c00      	cmp	r4, #0
 8014e08:	eba3 0308 	sub.w	r3, r3, r8
 8014e0c:	bf18      	it	ne
 8014e0e:	2100      	movne	r1, #0
 8014e10:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014e14:	e77f      	b.n	8014d16 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 8014e16:	4b04      	ldr	r3, [pc, #16]	@ (8014e28 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8014e18:	6818      	ldr	r0, [r3, #0]
 8014e1a:	6803      	ldr	r3, [r0, #0]
 8014e1c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8014e1e:	4798      	blx	r3
 8014e20:	b00f      	add	sp, #60	@ 0x3c
 8014e22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014e26:	bf00      	nop
 8014e28:	20013090 	.word	0x20013090
 8014e2c:	20013088 	.word	0x20013088

08014e30 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8014e30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014e34:	b09f      	sub	sp, #124	@ 0x7c
 8014e36:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 8014e3a:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 8014e3e:	9209      	str	r2, [sp, #36]	@ 0x24
 8014e40:	461d      	mov	r5, r3
 8014e42:	4604      	mov	r4, r0
 8014e44:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8014e46:	2a00      	cmp	r2, #0
 8014e48:	f000 81eb 	beq.w	8015222 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 8014e4c:	6828      	ldr	r0, [r5, #0]
 8014e4e:	6869      	ldr	r1, [r5, #4]
 8014e50:	aa1a      	add	r2, sp, #104	@ 0x68
 8014e52:	c203      	stmia	r2!, {r0, r1}
 8014e54:	6818      	ldr	r0, [r3, #0]
 8014e56:	6859      	ldr	r1, [r3, #4]
 8014e58:	aa1c      	add	r2, sp, #112	@ 0x70
 8014e5a:	c203      	stmia	r2!, {r0, r1}
 8014e5c:	a81a      	add	r0, sp, #104	@ 0x68
 8014e5e:	f7f9 f995 	bl	800e18c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014e62:	4629      	mov	r1, r5
 8014e64:	a81c      	add	r0, sp, #112	@ 0x70
 8014e66:	f7f9 f9b9 	bl	800e1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014e6a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8014e6e:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
 8014e72:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
 8014e76:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8014e7a:	bfd7      	itett	le
 8014e7c:	b29a      	uxthle	r2, r3
 8014e7e:	2201      	movgt	r2, #1
 8014e80:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8014e84:	fb91 f2f2 	sdivle	r2, r1, r2
 8014e88:	9202      	str	r2, [sp, #8]
 8014e8a:	9802      	ldr	r0, [sp, #8]
 8014e8c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 8014e90:	fb92 f0f0 	sdiv	r0, r2, r0
 8014e94:	b280      	uxth	r0, r0
 8014e96:	9010      	str	r0, [sp, #64]	@ 0x40
 8014e98:	9902      	ldr	r1, [sp, #8]
 8014e9a:	9802      	ldr	r0, [sp, #8]
 8014e9c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8014e9e:	4488      	add	r8, r1
 8014ea0:	fb05 2510 	mls	r5, r5, r0, r2
 8014ea4:	fb15 f503 	smulbb	r5, r5, r3
 8014ea8:	f108 38ff 	add.w	r8, r8, #4294967295
 8014eac:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8014eb0:	fb98 f8f1 	sdiv	r8, r8, r1
 8014eb4:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 8014eb8:	440d      	add	r5, r1
 8014eba:	4419      	add	r1, r3
 8014ebc:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8014ec0:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 8014ec4:	441a      	add	r2, r3
 8014ec6:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 8014eca:	9304      	str	r3, [sp, #16]
 8014ecc:	4b95      	ldr	r3, [pc, #596]	@ (8015124 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 8014ece:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 8014ed2:	6818      	ldr	r0, [r3, #0]
 8014ed4:	6803      	ldr	r3, [r0, #0]
 8014ed6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014ed8:	4798      	blx	r3
 8014eda:	4b93      	ldr	r3, [pc, #588]	@ (8015128 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8014edc:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 8014ee0:	881a      	ldrh	r2, [r3, #0]
 8014ee2:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 8014ee6:	9318      	str	r3, [sp, #96]	@ 0x60
 8014ee8:	fb02 7101 	mla	r1, r2, r1, r7
 8014eec:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8014ef0:	4356      	muls	r6, r2
 8014ef2:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 8014ef6:	f108 0801 	add.w	r8, r8, #1
 8014efa:	920a      	str	r2, [sp, #40]	@ 0x28
 8014efc:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014efe:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 8014f02:	930f      	str	r3, [sp, #60]	@ 0x3c
 8014f04:	fa1f f888 	uxth.w	r8, r8
 8014f08:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 8014f0c:	f108 0204 	add.w	r2, r8, #4
 8014f10:	9211      	str	r2, [sp, #68]	@ 0x44
 8014f12:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8014f14:	4b85      	ldr	r3, [pc, #532]	@ (801512c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8014f16:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 8014f1a:	b2ad      	uxth	r5, r5
 8014f1c:	9215      	str	r2, [sp, #84]	@ 0x54
 8014f1e:	2d00      	cmp	r5, #0
 8014f20:	9a04      	ldr	r2, [sp, #16]
 8014f22:	f04f 0100 	mov.w	r1, #0
 8014f26:	bf18      	it	ne
 8014f28:	2200      	movne	r2, #0
 8014f2a:	1b1b      	subs	r3, r3, r4
 8014f2c:	b292      	uxth	r2, r2
 8014f2e:	910d      	str	r1, [sp, #52]	@ 0x34
 8014f30:	9319      	str	r3, [sp, #100]	@ 0x64
 8014f32:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8014f34:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8014f36:	fa11 f383 	uxtah	r3, r1, r3
 8014f3a:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8014f3c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8014f40:	3304      	adds	r3, #4
 8014f42:	9306      	str	r3, [sp, #24]
 8014f44:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8014f46:	4283      	cmp	r3, r0
 8014f48:	f240 8166 	bls.w	8015218 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 8014f4c:	9902      	ldr	r1, [sp, #8]
 8014f4e:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8014f52:	fbb5 f3f3 	udiv	r3, r5, r3
 8014f56:	1acb      	subs	r3, r1, r3
 8014f58:	b29b      	uxth	r3, r3
 8014f5a:	9316      	str	r3, [sp, #88]	@ 0x58
 8014f5c:	9b06      	ldr	r3, [sp, #24]
 8014f5e:	9e06      	ldr	r6, [sp, #24]
 8014f60:	7859      	ldrb	r1, [r3, #1]
 8014f62:	789b      	ldrb	r3, [r3, #2]
 8014f64:	7836      	ldrb	r6, [r6, #0]
 8014f66:	9612      	str	r6, [sp, #72]	@ 0x48
 8014f68:	021b      	lsls	r3, r3, #8
 8014f6a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8014f6e:	9906      	ldr	r1, [sp, #24]
 8014f70:	78c9      	ldrb	r1, [r1, #3]
 8014f72:	430b      	orrs	r3, r1
 8014f74:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8014f76:	3601      	adds	r6, #1
 8014f78:	4419      	add	r1, r3
 8014f7a:	9605      	str	r6, [sp, #20]
 8014f7c:	1c4e      	adds	r6, r1, #1
 8014f7e:	9603      	str	r6, [sp, #12]
 8014f80:	7849      	ldrb	r1, [r1, #1]
 8014f82:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8014f84:	0209      	lsls	r1, r1, #8
 8014f86:	5cf3      	ldrb	r3, [r6, r3]
 8014f88:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
 8014f8c:	4319      	orrs	r1, r3
 8014f8e:	b28b      	uxth	r3, r1
 8014f90:	930c      	str	r3, [sp, #48]	@ 0x30
 8014f92:	2300      	movs	r3, #0
 8014f94:	f04f 0a01 	mov.w	sl, #1
 8014f98:	9307      	str	r3, [sp, #28]
 8014f9a:	469c      	mov	ip, r3
 8014f9c:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8014fa0:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 8014fa4:	46d3      	mov	fp, sl
 8014fa6:	4657      	mov	r7, sl
 8014fa8:	930e      	str	r3, [sp, #56]	@ 0x38
 8014faa:	2d00      	cmp	r5, #0
 8014fac:	d07e      	beq.n	80150ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 8014fae:	42af      	cmp	r7, r5
 8014fb0:	d26e      	bcs.n	8015090 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 8014fb2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8014fb4:	9201      	str	r2, [sp, #4]
 8014fb6:	1bed      	subs	r5, r5, r7
 8014fb8:	4283      	cmp	r3, r0
 8014fba:	b2ad      	uxth	r5, r5
 8014fbc:	d802      	bhi.n	8014fc4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 8014fbe:	e073      	b.n	80150a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 8014fc0:	2b00      	cmp	r3, #0
 8014fc2:	d15f      	bne.n	8015084 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 8014fc4:	9b03      	ldr	r3, [sp, #12]
 8014fc6:	785b      	ldrb	r3, [r3, #1]
 8014fc8:	f1cb 0207 	rsb	r2, fp, #7
 8014fcc:	4093      	lsls	r3, r2
 8014fce:	005b      	lsls	r3, r3, #1
 8014fd0:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8014fd4:	9b03      	ldr	r3, [sp, #12]
 8014fd6:	781b      	ldrb	r3, [r3, #0]
 8014fd8:	fa43 f30b 	asr.w	r3, r3, fp
 8014fdc:	b2db      	uxtb	r3, r3
 8014fde:	4313      	orrs	r3, r2
 8014fe0:	f10b 0201 	add.w	r2, fp, #1
 8014fe4:	fa5f fb82 	uxtb.w	fp, r2
 8014fe8:	9a03      	ldr	r2, [sp, #12]
 8014fea:	f1bb 0f08 	cmp.w	fp, #8
 8014fee:	bf15      	itete	ne
 8014ff0:	3201      	addne	r2, #1
 8014ff2:	3202      	addeq	r2, #2
 8014ff4:	9203      	strne	r2, [sp, #12]
 8014ff6:	9203      	streq	r2, [sp, #12]
 8014ff8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8014ffa:	b29f      	uxth	r7, r3
 8014ffc:	bf08      	it	eq
 8014ffe:	f04f 0b00 	moveq.w	fp, #0
 8015002:	42ba      	cmp	r2, r7
 8015004:	d309      	bcc.n	801501a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 8015006:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 801500a:	2301      	movs	r3, #1
 801500c:	9a05      	ldr	r2, [sp, #20]
 801500e:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
 8015012:	d30e      	bcc.n	8015032 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 8015014:	469a      	mov	sl, r3
 8015016:	2600      	movs	r6, #0
 8015018:	e035      	b.n	8015086 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801501a:	9b05      	ldr	r3, [sp, #20]
 801501c:	429f      	cmp	r7, r3
 801501e:	d318      	bcc.n	8015052 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 8015020:	eb04 030a 	add.w	r3, r4, sl
 8015024:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
 8015028:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
 801502c:	f10a 0301 	add.w	r3, sl, #1
 8015030:	b29b      	uxth	r3, r3
 8015032:	9a05      	ldr	r2, [sp, #20]
 8015034:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 8015038:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801503a:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801503e:	7116      	strb	r6, [r2, #4]
 8015040:	f10a 0601 	add.w	r6, sl, #1
 8015044:	80d1      	strh	r1, [r2, #6]
 8015046:	7156      	strb	r6, [r2, #5]
 8015048:	9a05      	ldr	r2, [sp, #20]
 801504a:	3201      	adds	r2, #1
 801504c:	b292      	uxth	r2, r2
 801504e:	9205      	str	r2, [sp, #20]
 8015050:	e7e0      	b.n	8015014 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 8015052:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 8015056:	463a      	mov	r2, r7
 8015058:	795b      	ldrb	r3, [r3, #5]
 801505a:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 801505e:	4426      	add	r6, r4
 8015060:	9919      	ldr	r1, [sp, #100]	@ 0x64
 8015062:	eb01 0c06 	add.w	ip, r1, r6
 8015066:	f1bc 0f00 	cmp.w	ip, #0
 801506a:	dd07      	ble.n	801507c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801506c:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8015070:	f892 c004 	ldrb.w	ip, [r2, #4]
 8015074:	f806 cd01 	strb.w	ip, [r6, #-1]!
 8015078:	88d2      	ldrh	r2, [r2, #6]
 801507a:	e7f1      	b.n	8015060 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801507c:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 8015080:	b29b      	uxth	r3, r3
 8015082:	e7c3      	b.n	801500c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 8015084:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8015086:	970c      	str	r7, [sp, #48]	@ 0x30
 8015088:	9a01      	ldr	r2, [sp, #4]
 801508a:	46b4      	mov	ip, r6
 801508c:	461f      	mov	r7, r3
 801508e:	e78c      	b.n	8014faa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 8015090:	1b7b      	subs	r3, r7, r5
 8015092:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8015096:	9201      	str	r2, [sp, #4]
 8015098:	eb0c 0605 	add.w	r6, ip, r5
 801509c:	b29b      	uxth	r3, r3
 801509e:	b2b6      	uxth	r6, r6
 80150a0:	2500      	movs	r5, #0
 80150a2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80150a4:	4282      	cmp	r2, r0
 80150a6:	d88b      	bhi.n	8014fc0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 80150a8:	9a01      	ldr	r2, [sp, #4]
 80150aa:	e74b      	b.n	8014f44 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 80150ac:	4297      	cmp	r7, r2
 80150ae:	d332      	bcc.n	8015116 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 80150b0:	1abb      	subs	r3, r7, r2
 80150b2:	b29b      	uxth	r3, r3
 80150b4:	9208      	str	r2, [sp, #32]
 80150b6:	9501      	str	r5, [sp, #4]
 80150b8:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80150ba:	29ff      	cmp	r1, #255	@ 0xff
 80150bc:	9908      	ldr	r1, [sp, #32]
 80150be:	eb0c 0601 	add.w	r6, ip, r1
 80150c2:	d135      	bne.n	8015130 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 80150c4:	f1a0 0e02 	sub.w	lr, r0, #2
 80150c8:	b2b6      	uxth	r6, r6
 80150ca:	45b4      	cmp	ip, r6
 80150cc:	f040 808c 	bne.w	80151e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 80150d0:	9908      	ldr	r1, [sp, #32]
 80150d2:	4297      	cmp	r7, r2
 80150d4:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80150d8:	d3e2      	bcc.n	80150a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 80150da:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 80150dc:	9904      	ldr	r1, [sp, #16]
 80150de:	8812      	ldrh	r2, [r2, #0]
 80150e0:	1a52      	subs	r2, r2, r1
 80150e2:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80150e6:	9a07      	ldr	r2, [sp, #28]
 80150e8:	9916      	ldr	r1, [sp, #88]	@ 0x58
 80150ea:	3201      	adds	r2, #1
 80150ec:	428a      	cmp	r2, r1
 80150ee:	9207      	str	r2, [sp, #28]
 80150f0:	f040 8087 	bne.w	8015202 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 80150f4:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 80150f8:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 80150fc:	9b04      	ldr	r3, [sp, #16]
 80150fe:	1bed      	subs	r5, r5, r7
 8015100:	b2ad      	uxth	r5, r5
 8015102:	2d00      	cmp	r5, #0
 8015104:	bf08      	it	eq
 8015106:	461a      	moveq	r2, r3
 8015108:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801510a:	bf18      	it	ne
 801510c:	2200      	movne	r2, #0
 801510e:	3301      	adds	r3, #1
 8015110:	930d      	str	r3, [sp, #52]	@ 0x34
 8015112:	b292      	uxth	r2, r2
 8015114:	e70d      	b.n	8014f32 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 8015116:	1bd1      	subs	r1, r2, r7
 8015118:	b28b      	uxth	r3, r1
 801511a:	9301      	str	r3, [sp, #4]
 801511c:	9708      	str	r7, [sp, #32]
 801511e:	462b      	mov	r3, r5
 8015120:	e7ca      	b.n	80150b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 8015122:	bf00      	nop
 8015124:	20013090 	.word	0x20013090
 8015128:	20013088 	.word	0x20013088
 801512c:	fffff7fb 	.word	0xfffff7fb
 8015130:	b2b6      	uxth	r6, r6
 8015132:	900b      	str	r0, [sp, #44]	@ 0x2c
 8015134:	45b4      	cmp	ip, r6
 8015136:	d0cb      	beq.n	80150d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 8015138:	f10c 0101 	add.w	r1, ip, #1
 801513c:	44a4      	add	ip, r4
 801513e:	9117      	str	r1, [sp, #92]	@ 0x5c
 8015140:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 8015144:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8015146:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801514a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801514c:	f8b1 c000 	ldrh.w	ip, [r1]
 8015150:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8015152:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 8015156:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801515a:	fb1e fe01 	smulbb	lr, lr, r1
 801515e:	ea4f 2825 	mov.w	r8, r5, asr #8
 8015162:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8015164:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 8015168:	fb08 e801 	mla	r8, r8, r1, lr
 801516c:	ea4f 09ec 	mov.w	r9, ip, asr #3
 8015170:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8015172:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8015176:	fb19 f901 	smulbb	r9, r9, r1
 801517a:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801517e:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8015180:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8015184:	fb0e 9e01 	mla	lr, lr, r1, r9
 8015188:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801518c:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801518e:	fa5f fc8c 	uxtb.w	ip, ip
 8015192:	fb1c fc01 	smulbb	ip, ip, r1
 8015196:	00ed      	lsls	r5, r5, #3
 8015198:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801519a:	b2ed      	uxtb	r5, r5
 801519c:	fb05 c501 	mla	r5, r5, r1, ip
 80151a0:	fa1f f888 	uxth.w	r8, r8
 80151a4:	fa1f fe8e 	uxth.w	lr, lr
 80151a8:	b2ad      	uxth	r5, r5
 80151aa:	f108 0c01 	add.w	ip, r8, #1
 80151ae:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 80151b2:	f10e 0901 	add.w	r9, lr, #1
 80151b6:	f105 0c01 	add.w	ip, r5, #1
 80151ba:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 80151be:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 80151c2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80151c6:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 80151ca:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80151ce:	ea4c 0808 	orr.w	r8, ip, r8
 80151d2:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80151d4:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
 80151d8:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80151dc:	ea48 0809 	orr.w	r8, r8, r9
 80151e0:	f821 8b02 	strh.w	r8, [r1], #2
 80151e4:	910b      	str	r1, [sp, #44]	@ 0x2c
 80151e6:	e7a5      	b.n	8015134 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 80151e8:	f10c 0801 	add.w	r8, ip, #1
 80151ec:	44a4      	add	ip, r4
 80151ee:	9911      	ldr	r1, [sp, #68]	@ 0x44
 80151f0:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 80151f4:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 80151f8:	f82e 5f02 	strh.w	r5, [lr, #2]!
 80151fc:	fa1f fc88 	uxth.w	ip, r8
 8015200:	e763      	b.n	80150ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 8015202:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8015206:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 801520a:	1aad      	subs	r5, r5, r2
 801520c:	b2ad      	uxth	r5, r5
 801520e:	2d00      	cmp	r5, #0
 8015210:	bf18      	it	ne
 8015212:	2200      	movne	r2, #0
 8015214:	9201      	str	r2, [sp, #4]
 8015216:	e744      	b.n	80150a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 8015218:	4b03      	ldr	r3, [pc, #12]	@ (8015228 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801521a:	6818      	ldr	r0, [r3, #0]
 801521c:	6803      	ldr	r3, [r0, #0]
 801521e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8015220:	4798      	blx	r3
 8015222:	b01f      	add	sp, #124	@ 0x7c
 8015224:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015228:	20013090 	.word	0x20013090

0801522c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h>:
 801522c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015230:	b093      	sub	sp, #76	@ 0x4c
 8015232:	4616      	mov	r6, r2
 8015234:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
 8015238:	9003      	str	r0, [sp, #12]
 801523a:	460d      	mov	r5, r1
 801523c:	9201      	str	r2, [sp, #4]
 801523e:	2a00      	cmp	r2, #0
 8015240:	f000 8304 	beq.w	801584c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x620>
 8015244:	6830      	ldr	r0, [r6, #0]
 8015246:	6871      	ldr	r1, [r6, #4]
 8015248:	ac0e      	add	r4, sp, #56	@ 0x38
 801524a:	c403      	stmia	r4!, {r0, r1}
 801524c:	6818      	ldr	r0, [r3, #0]
 801524e:	6859      	ldr	r1, [r3, #4]
 8015250:	ac10      	add	r4, sp, #64	@ 0x40
 8015252:	c403      	stmia	r4!, {r0, r1}
 8015254:	a80e      	add	r0, sp, #56	@ 0x38
 8015256:	f7f8 ff99 	bl	800e18c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801525a:	4631      	mov	r1, r6
 801525c:	a810      	add	r0, sp, #64	@ 0x40
 801525e:	f7f8 ffbd 	bl	800e1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015262:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8015266:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 801526a:	bfd7      	itett	le
 801526c:	b293      	uxthle	r3, r2
 801526e:	2301      	movgt	r3, #1
 8015270:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8015274:	fb91 f3f3 	sdivle	r3, r1, r3
 8015278:	9304      	str	r3, [sp, #16]
 801527a:	f105 0308 	add.w	r3, r5, #8
 801527e:	9904      	ldr	r1, [sp, #16]
 8015280:	9308      	str	r3, [sp, #32]
 8015282:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
 8015286:	440b      	add	r3, r1
 8015288:	3b01      	subs	r3, #1
 801528a:	fb93 f3f1 	sdiv	r3, r3, r1
 801528e:	9908      	ldr	r1, [sp, #32]
 8015290:	3b01      	subs	r3, #1
 8015292:	b29b      	uxth	r3, r3
 8015294:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8015298:	9309      	str	r3, [sp, #36]	@ 0x24
 801529a:	9904      	ldr	r1, [sp, #16]
 801529c:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 80152a0:	fb93 f0f1 	sdiv	r0, r3, r1
 80152a4:	b284      	uxth	r4, r0
 80152a6:	9405      	str	r4, [sp, #20]
 80152a8:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 80152ac:	f8bd 1040 	ldrh.w	r1, [sp, #64]	@ 0x40
 80152b0:	fb05 3914 	mls	r9, r5, r4, r3
 80152b4:	fb19 f902 	smulbb	r9, r9, r2
 80152b8:	4489      	add	r9, r1
 80152ba:	fa1f f989 	uxth.w	r9, r9
 80152be:	2d00      	cmp	r5, #0
 80152c0:	d05d      	beq.n	801537e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x152>
 80152c2:	1e6a      	subs	r2, r5, #1
 80152c4:	9808      	ldr	r0, [sp, #32]
 80152c6:	f850 a022 	ldr.w	sl, [r0, r2, lsl #2]
 80152ca:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80152cc:	fa9a fa8a 	rev.w	sl, sl
 80152d0:	4492      	add	sl, r2
 80152d2:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 80152d6:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 80152da:	4411      	add	r1, r2
 80152dc:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 80152e0:	f8ad 1040 	strh.w	r1, [sp, #64]	@ 0x40
 80152e4:	4413      	add	r3, r2
 80152e6:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 80152ea:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
 80152ee:	9302      	str	r3, [sp, #8]
 80152f0:	4bcb      	ldr	r3, [pc, #812]	@ (8015620 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f4>)
 80152f2:	6818      	ldr	r0, [r3, #0]
 80152f4:	6803      	ldr	r3, [r0, #0]
 80152f6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80152f8:	4798      	blx	r3
 80152fa:	4bca      	ldr	r3, [pc, #808]	@ (8015624 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f8>)
 80152fc:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 8015300:	881b      	ldrh	r3, [r3, #0]
 8015302:	f9bd 4042 	ldrsh.w	r4, [sp, #66]	@ 0x42
 8015306:	fb03 2404 	mla	r4, r3, r4, r2
 801530a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801530e:	436b      	muls	r3, r5
 8015310:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8015314:	930d      	str	r3, [sp, #52]	@ 0x34
 8015316:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 801531a:	fb99 f3f3 	sdiv	r3, r9, r3
 801531e:	9306      	str	r3, [sp, #24]
 8015320:	9b01      	ldr	r3, [sp, #4]
 8015322:	43db      	mvns	r3, r3
 8015324:	b2db      	uxtb	r3, r3
 8015326:	930a      	str	r3, [sp, #40]	@ 0x28
 8015328:	9b03      	ldr	r3, [sp, #12]
 801532a:	3304      	adds	r3, #4
 801532c:	4618      	mov	r0, r3
 801532e:	2280      	movs	r2, #128	@ 0x80
 8015330:	2100      	movs	r1, #0
 8015332:	930b      	str	r3, [sp, #44]	@ 0x2c
 8015334:	f00c fc0f 	bl	8021b56 <memset>
 8015338:	4bbb      	ldr	r3, [pc, #748]	@ (8015628 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3fc>)
 801533a:	9300      	str	r3, [sp, #0]
 801533c:	2300      	movs	r3, #0
 801533e:	f04f 0600 	mov.w	r6, #0
 8015342:	9307      	str	r3, [sp, #28]
 8015344:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8015346:	42a3      	cmp	r3, r4
 8015348:	f240 827b 	bls.w	8015842 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x616>
 801534c:	f04f 0e07 	mov.w	lr, #7
 8015350:	f1b9 0f00 	cmp.w	r9, #0
 8015354:	f000 8159 	beq.w	801560a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3de>
 8015358:	f89a 5000 	ldrb.w	r5, [sl]
 801535c:	b2ed      	uxtb	r5, r5
 801535e:	11aa      	asrs	r2, r5, #6
 8015360:	f10a 0701 	add.w	r7, sl, #1
 8015364:	d10e      	bne.n	8015384 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x158>
 8015366:	9b03      	ldr	r3, [sp, #12]
 8015368:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 801536c:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8015370:	88ae      	ldrh	r6, [r5, #4]
 8015372:	f109 39ff 	add.w	r9, r9, #4294967295
 8015376:	fa1f f989 	uxth.w	r9, r9
 801537a:	46ba      	mov	sl, r7
 801537c:	e7e8      	b.n	8015350 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x124>
 801537e:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 8015382:	e7a6      	b.n	80152d2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0xa6>
 8015384:	2a01      	cmp	r2, #1
 8015386:	d129      	bne.n	80153dc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1b0>
 8015388:	f3c6 0304 	ubfx	r3, r6, #0, #5
 801538c:	f005 0203 	and.w	r2, r5, #3
 8015390:	3b02      	subs	r3, #2
 8015392:	4413      	add	r3, r2
 8015394:	f003 031f 	and.w	r3, r3, #31
 8015398:	f3c5 0281 	ubfx	r2, r5, #2, #2
 801539c:	f363 0604 	bfi	r6, r3, #0, #5
 80153a0:	3a02      	subs	r2, #2
 80153a2:	eb02 1256 	add.w	r2, r2, r6, lsr #5
 80153a6:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80153aa:	f3c5 1501 	ubfx	r5, r5, #4, #2
 80153ae:	f362 164a 	bfi	r6, r2, #5, #6
 80153b2:	3d02      	subs	r5, #2
 80153b4:	eb05 25d6 	add.w	r5, r5, r6, lsr #11
 80153b8:	f005 051f 	and.w	r5, r5, #31
 80153bc:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 80153c0:	2103      	movs	r1, #3
 80153c2:	fb11 2205 	smlabb	r2, r1, r5, r2
 80153c6:	fb1e 2303 	smlabb	r3, lr, r3, r2
 80153ca:	9a03      	ldr	r2, [sp, #12]
 80153cc:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80153d0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80153d4:	f365 26cf 	bfi	r6, r5, #11, #5
 80153d8:	809e      	strh	r6, [r3, #4]
 80153da:	e7ca      	b.n	8015372 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x146>
 80153dc:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 80153e0:	2a02      	cmp	r2, #2
 80153e2:	b2ab      	uxth	r3, r5
 80153e4:	d136      	bne.n	8015454 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x228>
 80153e6:	2101      	movs	r1, #1
 80153e8:	fb12 1205 	smlabb	r2, r2, r5, r1
 80153ec:	4492      	add	sl, r2
 80153ee:	463a      	mov	r2, r7
 80153f0:	4552      	cmp	r2, sl
 80153f2:	d01c      	beq.n	801542e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x202>
 80153f4:	4694      	mov	ip, r2
 80153f6:	f04f 0b03 	mov.w	fp, #3
 80153fa:	f81c 1b02 	ldrb.w	r1, [ip], #2
 80153fe:	7852      	ldrb	r2, [r2, #1]
 8015400:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 8015404:	f3c1 1045 	ubfx	r0, r1, #5, #6
 8015408:	ea4f 28d1 	mov.w	r8, r1, lsr #11
 801540c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8015410:	f001 021f 	and.w	r2, r1, #31
 8015414:	fb1b 0008 	smlabb	r0, fp, r8, r0
 8015418:	fb1e 0002 	smlabb	r0, lr, r2, r0
 801541c:	9a03      	ldr	r2, [sp, #12]
 801541e:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 8015422:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8015426:	460e      	mov	r6, r1
 8015428:	8081      	strh	r1, [r0, #4]
 801542a:	4662      	mov	r2, ip
 801542c:	e7e0      	b.n	80153f0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1c4>
 801542e:	4599      	cmp	r9, r3
 8015430:	d20b      	bcs.n	801544a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21e>
 8015432:	eba5 0509 	sub.w	r5, r5, r9
 8015436:	2d00      	cmp	r5, #0
 8015438:	eb07 0749 	add.w	r7, r7, r9, lsl #1
 801543c:	f300 8209 	bgt.w	8015852 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x626>
 8015440:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8015444:	2301      	movs	r3, #1
 8015446:	9307      	str	r3, [sp, #28]
 8015448:	e00c      	b.n	8015464 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801544a:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801544e:	eba9 0903 	sub.w	r9, r9, r3
 8015452:	e790      	b.n	8015376 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x14a>
 8015454:	4599      	cmp	r9, r3
 8015456:	d2fa      	bcs.n	801544e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x222>
 8015458:	eba5 0509 	sub.w	r5, r5, r9
 801545c:	2d00      	cmp	r5, #0
 801545e:	dc1d      	bgt.n	801549c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x270>
 8015460:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8015464:	f04f 0b00 	mov.w	fp, #0
 8015468:	f1b8 0f00 	cmp.w	r8, #0
 801546c:	f340 81a1 	ble.w	80157b2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x586>
 8015470:	783b      	ldrb	r3, [r7, #0]
 8015472:	b2db      	uxtb	r3, r3
 8015474:	119a      	asrs	r2, r3, #6
 8015476:	f107 0a01 	add.w	sl, r7, #1
 801547a:	f040 80d7 	bne.w	801562c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x400>
 801547e:	9a03      	ldr	r2, [sp, #12]
 8015480:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8015484:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015488:	889e      	ldrh	r6, [r3, #4]
 801548a:	9b01      	ldr	r3, [sp, #4]
 801548c:	2bff      	cmp	r3, #255	@ 0xff
 801548e:	f040 81e9 	bne.w	8015864 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x638>
 8015492:	8026      	strh	r6, [r4, #0]
 8015494:	f108 38ff 	add.w	r8, r8, #4294967295
 8015498:	3402      	adds	r4, #2
 801549a:	e0be      	b.n	801561a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 801549c:	9b02      	ldr	r3, [sp, #8]
 801549e:	9a02      	ldr	r2, [sp, #8]
 80154a0:	42ab      	cmp	r3, r5
 80154a2:	bfa8      	it	ge
 80154a4:	462b      	movge	r3, r5
 80154a6:	eba2 0803 	sub.w	r8, r2, r3
 80154aa:	9a07      	ldr	r2, [sp, #28]
 80154ac:	1aed      	subs	r5, r5, r3
 80154ae:	2a00      	cmp	r2, #0
 80154b0:	d05a      	beq.n	8015568 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x33c>
 80154b2:	9a01      	ldr	r2, [sp, #4]
 80154b4:	2aff      	cmp	r2, #255	@ 0xff
 80154b6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80154ba:	d049      	beq.n	8015550 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 80154bc:	f8bd e004 	ldrh.w	lr, [sp, #4]
 80154c0:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
 80154c4:	42a3      	cmp	r3, r4
 80154c6:	f240 80a5 	bls.w	8015614 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 80154ca:	46bc      	mov	ip, r7
 80154cc:	8820      	ldrh	r0, [r4, #0]
 80154ce:	f81c 2b02 	ldrb.w	r2, [ip], #2
 80154d2:	7879      	ldrb	r1, [r7, #1]
 80154d4:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80154d8:	b212      	sxth	r2, r2
 80154da:	b291      	uxth	r1, r2
 80154dc:	ea4f 2a20 	mov.w	sl, r0, asr #8
 80154e0:	120f      	asrs	r7, r1, #8
 80154e2:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 80154e6:	fb1a fa09 	smulbb	sl, sl, r9
 80154ea:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80154ee:	fb07 a70e 	mla	r7, r7, lr, sl
 80154f2:	ea4f 0ae0 	mov.w	sl, r0, asr #3
 80154f6:	00c0      	lsls	r0, r0, #3
 80154f8:	10c9      	asrs	r1, r1, #3
 80154fa:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 80154fe:	00d2      	lsls	r2, r2, #3
 8015500:	b2c0      	uxtb	r0, r0
 8015502:	fb1a fa09 	smulbb	sl, sl, r9
 8015506:	fb10 f009 	smulbb	r0, r0, r9
 801550a:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801550e:	b2d2      	uxtb	r2, r2
 8015510:	b2bf      	uxth	r7, r7
 8015512:	fb01 a10e 	mla	r1, r1, lr, sl
 8015516:	fb02 020e 	mla	r2, r2, lr, r0
 801551a:	b289      	uxth	r1, r1
 801551c:	b292      	uxth	r2, r2
 801551e:	1c78      	adds	r0, r7, #1
 8015520:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8015524:	f101 0a01 	add.w	sl, r1, #1
 8015528:	1c50      	adds	r0, r2, #1
 801552a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801552e:	eb0a 2a11 	add.w	sl, sl, r1, lsr #8
 8015532:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8015536:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801553a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801553e:	4307      	orrs	r7, r0
 8015540:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8015544:	ea47 070a 	orr.w	r7, r7, sl
 8015548:	f824 7b02 	strh.w	r7, [r4], #2
 801554c:	4667      	mov	r7, ip
 801554e:	e7b9      	b.n	80154c4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x298>
 8015550:	42a3      	cmp	r3, r4
 8015552:	d95f      	bls.n	8015614 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 8015554:	463a      	mov	r2, r7
 8015556:	f812 1b02 	ldrb.w	r1, [r2], #2
 801555a:	7878      	ldrb	r0, [r7, #1]
 801555c:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
 8015560:	f824 1b02 	strh.w	r1, [r4], #2
 8015564:	4617      	mov	r7, r2
 8015566:	e7f3      	b.n	8015550 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 8015568:	9901      	ldr	r1, [sp, #4]
 801556a:	29ff      	cmp	r1, #255	@ 0xff
 801556c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8015570:	b2b2      	uxth	r2, r6
 8015572:	d044      	beq.n	80155fe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 8015574:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8015578:	f8bd a028 	ldrh.w	sl, [sp, #40]	@ 0x28
 801557c:	ea4f 2922 	mov.w	r9, r2, asr #8
 8015580:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8015584:	f009 09f8 	and.w	r9, r9, #248	@ 0xf8
 8015588:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801558c:	4608      	mov	r0, r1
 801558e:	fb09 f901 	mul.w	r9, r9, r1
 8015592:	fb0e fe01 	mul.w	lr, lr, r1
 8015596:	00d1      	lsls	r1, r2, #3
 8015598:	b2c9      	uxtb	r1, r1
 801559a:	4341      	muls	r1, r0
 801559c:	429c      	cmp	r4, r3
 801559e:	f4bf af61 	bcs.w	8015464 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 80155a2:	8822      	ldrh	r2, [r4, #0]
 80155a4:	1210      	asrs	r0, r2, #8
 80155a6:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 80155aa:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80155ae:	00d2      	lsls	r2, r2, #3
 80155b0:	fb00 900a 	mla	r0, r0, sl, r9
 80155b4:	b2d2      	uxtb	r2, r2
 80155b6:	b280      	uxth	r0, r0
 80155b8:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 80155bc:	fb02 120a 	mla	r2, r2, sl, r1
 80155c0:	b292      	uxth	r2, r2
 80155c2:	f100 0b01 	add.w	fp, r0, #1
 80155c6:	fb0c ec0a 	mla	ip, ip, sl, lr
 80155ca:	fa1f fc8c 	uxth.w	ip, ip
 80155ce:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 80155d2:	1c50      	adds	r0, r2, #1
 80155d4:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80155d8:	f10c 0201 	add.w	r2, ip, #1
 80155dc:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80155e0:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 80155e4:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80155e8:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80155ec:	ea40 0b0b 	orr.w	fp, r0, fp
 80155f0:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 80155f4:	ea4b 0b0c 	orr.w	fp, fp, ip
 80155f8:	f824 bb02 	strh.w	fp, [r4], #2
 80155fc:	e7ce      	b.n	801559c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x370>
 80155fe:	429c      	cmp	r4, r3
 8015600:	f4bf af30 	bcs.w	8015464 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 8015604:	f824 2b02 	strh.w	r2, [r4], #2
 8015608:	e7f9      	b.n	80155fe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 801560a:	f8dd 8008 	ldr.w	r8, [sp, #8]
 801560e:	4657      	mov	r7, sl
 8015610:	464d      	mov	r5, r9
 8015612:	e727      	b.n	8015464 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 8015614:	2300      	movs	r3, #0
 8015616:	e716      	b.n	8015446 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21a>
 8015618:	44bb      	add	fp, r7
 801561a:	4657      	mov	r7, sl
 801561c:	e724      	b.n	8015468 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x23c>
 801561e:	bf00      	nop
 8015620:	20013090 	.word	0x20013090
 8015624:	20013088 	.word	0x20013088
 8015628:	20000280 	.word	0x20000280
 801562c:	2a01      	cmp	r2, #1
 801562e:	d12a      	bne.n	8015686 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x45a>
 8015630:	f3c6 0104 	ubfx	r1, r6, #0, #5
 8015634:	f003 0203 	and.w	r2, r3, #3
 8015638:	3902      	subs	r1, #2
 801563a:	4411      	add	r1, r2
 801563c:	f001 011f 	and.w	r1, r1, #31
 8015640:	f3c3 0081 	ubfx	r0, r3, #2, #2
 8015644:	f361 0604 	bfi	r6, r1, #0, #5
 8015648:	3802      	subs	r0, #2
 801564a:	eb00 1056 	add.w	r0, r0, r6, lsr #5
 801564e:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 8015652:	f3c3 1301 	ubfx	r3, r3, #4, #2
 8015656:	f360 164a 	bfi	r6, r0, #5, #6
 801565a:	3b02      	subs	r3, #2
 801565c:	eb03 22d6 	add.w	r2, r3, r6, lsr #11
 8015660:	f002 031f 	and.w	r3, r2, #31
 8015664:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8015668:	2203      	movs	r2, #3
 801566a:	f363 26cf 	bfi	r6, r3, #11, #5
 801566e:	fb12 0303 	smlabb	r3, r2, r3, r0
 8015672:	2207      	movs	r2, #7
 8015674:	fb12 3301 	smlabb	r3, r2, r1, r3
 8015678:	9a03      	ldr	r2, [sp, #12]
 801567a:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801567e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015682:	809e      	strh	r6, [r3, #4]
 8015684:	e701      	b.n	801548a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x25e>
 8015686:	f003 053f 	and.w	r5, r3, #63	@ 0x3f
 801568a:	45a8      	cmp	r8, r5
 801568c:	4647      	mov	r7, r8
 801568e:	bfa8      	it	ge
 8015690:	462f      	movge	r7, r5
 8015692:	2a02      	cmp	r2, #2
 8015694:	d154      	bne.n	8015740 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x514>
 8015696:	9b01      	ldr	r3, [sp, #4]
 8015698:	2bff      	cmp	r3, #255	@ 0xff
 801569a:	d01a      	beq.n	80156d2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 801569c:	eb0b 0307 	add.w	r3, fp, r7
 80156a0:	2b40      	cmp	r3, #64	@ 0x40
 80156a2:	dd16      	ble.n	80156d2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 80156a4:	ea4f 094b 	mov.w	r9, fp, lsl #1
 80156a8:	4649      	mov	r1, r9
 80156aa:	9800      	ldr	r0, [sp, #0]
 80156ac:	f7eb fc50 	bl	8000f50 <_ZN8touchgfx5paint9flushLineEPmi>
 80156b0:	465a      	mov	r2, fp
 80156b2:	9b01      	ldr	r3, [sp, #4]
 80156b4:	9900      	ldr	r1, [sp, #0]
 80156b6:	4620      	mov	r0, r4
 80156b8:	f7eb fc74 	bl	8000fa4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 80156bc:	9b00      	ldr	r3, [sp, #0]
 80156be:	461a      	mov	r2, r3
 80156c0:	4b6c      	ldr	r3, [pc, #432]	@ (8015874 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 80156c2:	429a      	cmp	r2, r3
 80156c4:	bf0c      	ite	eq
 80156c6:	4b6c      	ldreq	r3, [pc, #432]	@ (8015878 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 80156c8:	4b6a      	ldrne	r3, [pc, #424]	@ (8015874 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 80156ca:	9300      	str	r3, [sp, #0]
 80156cc:	444c      	add	r4, r9
 80156ce:	f04f 0b00 	mov.w	fp, #0
 80156d2:	4652      	mov	r2, sl
 80156d4:	2100      	movs	r1, #0
 80156d6:	42a9      	cmp	r1, r5
 80156d8:	da2c      	bge.n	8015734 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x508>
 80156da:	4694      	mov	ip, r2
 80156dc:	f04f 0903 	mov.w	r9, #3
 80156e0:	f81c 3b02 	ldrb.w	r3, [ip], #2
 80156e4:	7852      	ldrb	r2, [r2, #1]
 80156e6:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80156ea:	f3c3 1045 	ubfx	r0, r3, #5, #6
 80156ee:	ea4f 2ed3 	mov.w	lr, r3, lsr #11
 80156f2:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80156f6:	f003 021f 	and.w	r2, r3, #31
 80156fa:	fb19 000e 	smlabb	r0, r9, lr, r0
 80156fe:	f04f 0e07 	mov.w	lr, #7
 8015702:	fb1e 0002 	smlabb	r0, lr, r2, r0
 8015706:	9a03      	ldr	r2, [sp, #12]
 8015708:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 801570c:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8015710:	42b9      	cmp	r1, r7
 8015712:	461e      	mov	r6, r3
 8015714:	8083      	strh	r3, [r0, #4]
 8015716:	da0a      	bge.n	801572e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x502>
 8015718:	9a01      	ldr	r2, [sp, #4]
 801571a:	2aff      	cmp	r2, #255	@ 0xff
 801571c:	bf15      	itete	ne
 801571e:	9a00      	ldrne	r2, [sp, #0]
 8015720:	8023      	strheq	r3, [r4, #0]
 8015722:	f822 301b 	strhne.w	r3, [r2, fp, lsl #1]
 8015726:	3402      	addeq	r4, #2
 8015728:	bf18      	it	ne
 801572a:	f10b 0b01 	addne.w	fp, fp, #1
 801572e:	3101      	adds	r1, #1
 8015730:	4662      	mov	r2, ip
 8015732:	e7d0      	b.n	80156d6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4aa>
 8015734:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 8015738:	eba8 0807 	sub.w	r8, r8, r7
 801573c:	1bed      	subs	r5, r5, r7
 801573e:	e76c      	b.n	801561a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 8015740:	9b01      	ldr	r3, [sp, #4]
 8015742:	2bff      	cmp	r3, #255	@ 0xff
 8015744:	eba8 0807 	sub.w	r8, r8, r7
 8015748:	eba5 0507 	sub.w	r5, r5, r7
 801574c:	fa1f f986 	uxth.w	r9, r6
 8015750:	d027      	beq.n	80157a2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x576>
 8015752:	eb0b 0307 	add.w	r3, fp, r7
 8015756:	2b40      	cmp	r3, #64	@ 0x40
 8015758:	dd18      	ble.n	801578c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x560>
 801575a:	ea4f 034b 	mov.w	r3, fp, lsl #1
 801575e:	4619      	mov	r1, r3
 8015760:	9800      	ldr	r0, [sp, #0]
 8015762:	930c      	str	r3, [sp, #48]	@ 0x30
 8015764:	f7eb fbf4 	bl	8000f50 <_ZN8touchgfx5paint9flushLineEPmi>
 8015768:	465a      	mov	r2, fp
 801576a:	9b01      	ldr	r3, [sp, #4]
 801576c:	9900      	ldr	r1, [sp, #0]
 801576e:	4620      	mov	r0, r4
 8015770:	f7eb fc18 	bl	8000fa4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 8015774:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8015776:	441c      	add	r4, r3
 8015778:	9b00      	ldr	r3, [sp, #0]
 801577a:	461a      	mov	r2, r3
 801577c:	4b3d      	ldr	r3, [pc, #244]	@ (8015874 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801577e:	429a      	cmp	r2, r3
 8015780:	bf0c      	ite	eq
 8015782:	4b3d      	ldreq	r3, [pc, #244]	@ (8015878 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 8015784:	4b3b      	ldrne	r3, [pc, #236]	@ (8015874 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 8015786:	9300      	str	r3, [sp, #0]
 8015788:	f04f 0b00 	mov.w	fp, #0
 801578c:	9b00      	ldr	r3, [sp, #0]
 801578e:	eb03 024b 	add.w	r2, r3, fp, lsl #1
 8015792:	463b      	mov	r3, r7
 8015794:	2b00      	cmp	r3, #0
 8015796:	f43f af3f 	beq.w	8015618 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ec>
 801579a:	f822 9b02 	strh.w	r9, [r2], #2
 801579e:	3b01      	subs	r3, #1
 80157a0:	e7f8      	b.n	8015794 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x568>
 80157a2:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 80157a6:	42a7      	cmp	r7, r4
 80157a8:	f67f af37 	bls.w	801561a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 80157ac:	f824 9b02 	strh.w	r9, [r4], #2
 80157b0:	e7f9      	b.n	80157a6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x57a>
 80157b2:	f1bb 0f00 	cmp.w	fp, #0
 80157b6:	d00c      	beq.n	80157d2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5a6>
 80157b8:	ea4f 084b 	mov.w	r8, fp, lsl #1
 80157bc:	4641      	mov	r1, r8
 80157be:	9800      	ldr	r0, [sp, #0]
 80157c0:	f7eb fbc6 	bl	8000f50 <_ZN8touchgfx5paint9flushLineEPmi>
 80157c4:	4620      	mov	r0, r4
 80157c6:	9b01      	ldr	r3, [sp, #4]
 80157c8:	9900      	ldr	r1, [sp, #0]
 80157ca:	465a      	mov	r2, fp
 80157cc:	f7eb fbea 	bl	8000fa4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 80157d0:	4444      	add	r4, r8
 80157d2:	4b2a      	ldr	r3, [pc, #168]	@ (801587c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x650>)
 80157d4:	9a02      	ldr	r2, [sp, #8]
 80157d6:	881b      	ldrh	r3, [r3, #0]
 80157d8:	1a9b      	subs	r3, r3, r2
 80157da:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80157de:	9b06      	ldr	r3, [sp, #24]
 80157e0:	3301      	adds	r3, #1
 80157e2:	9306      	str	r3, [sp, #24]
 80157e4:	9a06      	ldr	r2, [sp, #24]
 80157e6:	9b04      	ldr	r3, [sp, #16]
 80157e8:	4293      	cmp	r3, r2
 80157ea:	d120      	bne.n	801582e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x602>
 80157ec:	9b05      	ldr	r3, [sp, #20]
 80157ee:	9a05      	ldr	r2, [sp, #20]
 80157f0:	f8bd 9040 	ldrh.w	r9, [sp, #64]	@ 0x40
 80157f4:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 80157f8:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 80157fa:	f103 0801 	add.w	r8, r3, #1
 80157fe:	9b08      	ldr	r3, [sp, #32]
 8015800:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 8015804:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015806:	ba3f      	rev	r7, r7
 8015808:	2280      	movs	r2, #128	@ 0x80
 801580a:	2100      	movs	r1, #0
 801580c:	441f      	add	r7, r3
 801580e:	eba9 0905 	sub.w	r9, r9, r5
 8015812:	f00c f9a0 	bl	8021b56 <memset>
 8015816:	2300      	movs	r3, #0
 8015818:	fa1f f989 	uxth.w	r9, r9
 801581c:	f04f 0600 	mov.w	r6, #0
 8015820:	f8cd 8014 	str.w	r8, [sp, #20]
 8015824:	9306      	str	r3, [sp, #24]
 8015826:	f7eb fb89 	bl	8000f3c <_ZN8touchgfx5paint8tearDownEv>
 801582a:	46ba      	mov	sl, r7
 801582c:	e58a      	b.n	8015344 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x118>
 801582e:	f8bd 903c 	ldrh.w	r9, [sp, #60]	@ 0x3c
 8015832:	9b02      	ldr	r3, [sp, #8]
 8015834:	eba9 0903 	sub.w	r9, r9, r3
 8015838:	eba9 0505 	sub.w	r5, r9, r5
 801583c:	fa1f f985 	uxth.w	r9, r5
 8015840:	e7f1      	b.n	8015826 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5fa>
 8015842:	4b0f      	ldr	r3, [pc, #60]	@ (8015880 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x654>)
 8015844:	6818      	ldr	r0, [r3, #0]
 8015846:	6803      	ldr	r3, [r0, #0]
 8015848:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801584a:	4798      	blx	r3
 801584c:	b013      	add	sp, #76	@ 0x4c
 801584e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015852:	9b02      	ldr	r3, [sp, #8]
 8015854:	9a02      	ldr	r2, [sp, #8]
 8015856:	42ab      	cmp	r3, r5
 8015858:	bfa8      	it	ge
 801585a:	462b      	movge	r3, r5
 801585c:	eba2 0803 	sub.w	r8, r2, r3
 8015860:	1aed      	subs	r5, r5, r3
 8015862:	e626      	b.n	80154b2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x286>
 8015864:	f108 38ff 	add.w	r8, r8, #4294967295
 8015868:	fa1f f986 	uxth.w	r9, r6
 801586c:	2500      	movs	r5, #0
 801586e:	2701      	movs	r7, #1
 8015870:	e76f      	b.n	8015752 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x526>
 8015872:	bf00      	nop
 8015874:	20000280 	.word	0x20000280
 8015878:	20000380 	.word	0x20000380
 801587c:	20013088 	.word	0x20013088
 8015880:	20013090 	.word	0x20013090

08015884 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8015884:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015888:	b08f      	sub	sp, #60	@ 0x3c
 801588a:	461c      	mov	r4, r3
 801588c:	9203      	str	r2, [sp, #12]
 801588e:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8015892:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8015894:	9202      	str	r2, [sp, #8]
 8015896:	460f      	mov	r7, r1
 8015898:	2a00      	cmp	r2, #0
 801589a:	f000 8128 	beq.w	8015aee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801589e:	6820      	ldr	r0, [r4, #0]
 80158a0:	6861      	ldr	r1, [r4, #4]
 80158a2:	aa0a      	add	r2, sp, #40	@ 0x28
 80158a4:	c203      	stmia	r2!, {r0, r1}
 80158a6:	6818      	ldr	r0, [r3, #0]
 80158a8:	6859      	ldr	r1, [r3, #4]
 80158aa:	aa0c      	add	r2, sp, #48	@ 0x30
 80158ac:	c203      	stmia	r2!, {r0, r1}
 80158ae:	a80a      	add	r0, sp, #40	@ 0x28
 80158b0:	f7f8 fc6c 	bl	800e18c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80158b4:	4621      	mov	r1, r4
 80158b6:	a80c      	add	r0, sp, #48	@ 0x30
 80158b8:	f7f8 fc90 	bl	800e1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80158bc:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 80158c0:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 80158c4:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 80158c8:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 80158cc:	bfde      	ittt	le
 80158ce:	b2b3      	uxthle	r3, r6
 80158d0:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 80158d4:	fb92 f3f3 	sdivle	r3, r2, r3
 80158d8:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 80158dc:	bfc8      	it	gt
 80158de:	2301      	movgt	r3, #1
 80158e0:	fb92 f1f3 	sdiv	r1, r2, r3
 80158e4:	fa1f fc81 	uxth.w	ip, r1
 80158e8:	fb0c 2413 	mls	r4, ip, r3, r2
 80158ec:	fb14 f406 	smulbb	r4, r4, r6
 80158f0:	441d      	add	r5, r3
 80158f2:	4404      	add	r4, r0
 80158f4:	4661      	mov	r1, ip
 80158f6:	3d01      	subs	r5, #1
 80158f8:	b2a4      	uxth	r4, r4
 80158fa:	fb95 f5f3 	sdiv	r5, r5, r3
 80158fe:	b121      	cbz	r1, 801590a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 8015900:	9b03      	ldr	r3, [sp, #12]
 8015902:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8015906:	ba1b      	rev	r3, r3
 8015908:	441f      	add	r7, r3
 801590a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801590e:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 8015912:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8015916:	4418      	add	r0, r3
 8015918:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801591c:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8015920:	441a      	add	r2, r3
 8015922:	4b74      	ldr	r3, [pc, #464]	@ (8015af4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 8015924:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8015928:	6818      	ldr	r0, [r3, #0]
 801592a:	6803      	ldr	r3, [r0, #0]
 801592c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801592e:	4798      	blx	r3
 8015930:	4a71      	ldr	r2, [pc, #452]	@ (8015af8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 8015932:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8015936:	8813      	ldrh	r3, [r2, #0]
 8015938:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 801593c:	9209      	str	r2, [sp, #36]	@ 0x24
 801593e:	fb03 c101 	mla	r1, r3, r1, ip
 8015942:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8015946:	4373      	muls	r3, r6
 8015948:	b2ad      	uxth	r5, r5
 801594a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801594e:	00ad      	lsls	r5, r5, #2
 8015950:	2c00      	cmp	r4, #0
 8015952:	9304      	str	r3, [sp, #16]
 8015954:	f105 0304 	add.w	r3, r5, #4
 8015958:	9305      	str	r3, [sp, #20]
 801595a:	bf0c      	ite	eq
 801595c:	46c8      	moveq	r8, r9
 801595e:	f04f 0800 	movne.w	r8, #0
 8015962:	2300      	movs	r3, #0
 8015964:	fa1f f888 	uxth.w	r8, r8
 8015968:	9301      	str	r3, [sp, #4]
 801596a:	9a04      	ldr	r2, [sp, #16]
 801596c:	4282      	cmp	r2, r0
 801596e:	f240 80b9 	bls.w	8015ae4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 8015972:	b95b      	cbnz	r3, 801598c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 8015974:	783a      	ldrb	r2, [r7, #0]
 8015976:	0993      	lsrs	r3, r2, #6
 8015978:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801597c:	9201      	str	r2, [sp, #4]
 801597e:	1e5a      	subs	r2, r3, #1
 8015980:	2a02      	cmp	r2, #2
 8015982:	bf8d      	iteet	hi
 8015984:	787b      	ldrbhi	r3, [r7, #1]
 8015986:	3701      	addls	r7, #1
 8015988:	b29b      	uxthls	r3, r3
 801598a:	3702      	addhi	r7, #2
 801598c:	b184      	cbz	r4, 80159b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801598e:	429c      	cmp	r4, r3
 8015990:	bf95      	itete	ls
 8015992:	1b1c      	subls	r4, r3, r4
 8015994:	1ae4      	subhi	r4, r4, r3
 8015996:	fa1f fa84 	uxthls.w	sl, r4
 801599a:	b2a4      	uxthhi	r4, r4
 801599c:	bf87      	ittee	hi
 801599e:	46c4      	movhi	ip, r8
 80159a0:	f04f 0a00 	movhi.w	sl, #0
 80159a4:	fa1f fc89 	uxthls.w	ip, r9
 80159a8:	2400      	movls	r4, #0
 80159aa:	4653      	mov	r3, sl
 80159ac:	46e0      	mov	r8, ip
 80159ae:	e7dc      	b.n	801596a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 80159b0:	2204      	movs	r2, #4
 80159b2:	4615      	mov	r5, r2
 80159b4:	9905      	ldr	r1, [sp, #20]
 80159b6:	9a01      	ldr	r2, [sp, #4]
 80159b8:	fb15 1202 	smlabb	r2, r5, r2, r1
 80159bc:	9903      	ldr	r1, [sp, #12]
 80159be:	588a      	ldr	r2, [r1, r2]
 80159c0:	4543      	cmp	r3, r8
 80159c2:	bf27      	ittee	cs
 80159c4:	eba3 0a08 	subcs.w	sl, r3, r8
 80159c8:	46c6      	movcs	lr, r8
 80159ca:	eba8 0c03 	subcc.w	ip, r8, r3
 80159ce:	469e      	movcc	lr, r3
 80159d0:	ea4f 6112 	mov.w	r1, r2, lsr #24
 80159d4:	bf27      	ittee	cs
 80159d6:	fa1f fa8a 	uxthcs.w	sl, sl
 80159da:	46a4      	movcs	ip, r4
 80159dc:	fa1f fc8c 	uxthcc.w	ip, ip
 80159e0:	46a2      	movcc	sl, r4
 80159e2:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 80159e6:	2900      	cmp	r1, #0
 80159e8:	d066      	beq.n	8015ab8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 80159ea:	29ff      	cmp	r1, #255	@ 0xff
 80159ec:	ea4f 2612 	mov.w	r6, r2, lsr #8
 80159f0:	d114      	bne.n	8015a1c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 80159f2:	9d02      	ldr	r5, [sp, #8]
 80159f4:	2dff      	cmp	r5, #255	@ 0xff
 80159f6:	d111      	bne.n	8015a1c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 80159f8:	0951      	lsrs	r1, r2, #5
 80159fa:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80159fe:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8015a02:	f026 0607 	bic.w	r6, r6, #7
 8015a06:	430e      	orrs	r6, r1
 8015a08:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8015a0c:	4316      	orrs	r6, r2
 8015a0e:	b2b6      	uxth	r6, r6
 8015a10:	4486      	add	lr, r0
 8015a12:	4586      	cmp	lr, r0
 8015a14:	d051      	beq.n	8015aba <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8015a16:	f820 6b02 	strh.w	r6, [r0], #2
 8015a1a:	e7fa      	b.n	8015a12 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 8015a1c:	9d02      	ldr	r5, [sp, #8]
 8015a1e:	4369      	muls	r1, r5
 8015a20:	1c4d      	adds	r5, r1, #1
 8015a22:	eb05 2521 	add.w	r5, r5, r1, asr #8
 8015a26:	122d      	asrs	r5, r5, #8
 8015a28:	ea6f 0b05 	mvn.w	fp, r5
 8015a2c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8015a30:	b2ad      	uxth	r5, r5
 8015a32:	b2f6      	uxtb	r6, r6
 8015a34:	b2d2      	uxtb	r2, r2
 8015a36:	fb11 f105 	smulbb	r1, r1, r5
 8015a3a:	fb16 f605 	smulbb	r6, r6, r5
 8015a3e:	fb12 f205 	smulbb	r2, r2, r5
 8015a42:	b289      	uxth	r1, r1
 8015a44:	b2b6      	uxth	r6, r6
 8015a46:	b292      	uxth	r2, r2
 8015a48:	9106      	str	r1, [sp, #24]
 8015a4a:	9607      	str	r6, [sp, #28]
 8015a4c:	9208      	str	r2, [sp, #32]
 8015a4e:	4486      	add	lr, r0
 8015a50:	fa5f fb8b 	uxtb.w	fp, fp
 8015a54:	4586      	cmp	lr, r0
 8015a56:	d030      	beq.n	8015aba <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8015a58:	8802      	ldrh	r2, [r0, #0]
 8015a5a:	9906      	ldr	r1, [sp, #24]
 8015a5c:	1216      	asrs	r6, r2, #8
 8015a5e:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8015a62:	10d5      	asrs	r5, r2, #3
 8015a64:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8015a68:	fb06 160b 	mla	r6, r6, fp, r1
 8015a6c:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8015a70:	9907      	ldr	r1, [sp, #28]
 8015a72:	00d2      	lsls	r2, r2, #3
 8015a74:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8015a78:	fb05 150b 	mla	r5, r5, fp, r1
 8015a7c:	b2d2      	uxtb	r2, r2
 8015a7e:	9908      	ldr	r1, [sp, #32]
 8015a80:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8015a84:	b2b6      	uxth	r6, r6
 8015a86:	fb02 120b 	mla	r2, r2, fp, r1
 8015a8a:	b292      	uxth	r2, r2
 8015a8c:	1c71      	adds	r1, r6, #1
 8015a8e:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 8015a92:	1c51      	adds	r1, r2, #1
 8015a94:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8015a98:	b2ad      	uxth	r5, r5
 8015a9a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015a9e:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8015aa2:	4316      	orrs	r6, r2
 8015aa4:	1c6a      	adds	r2, r5, #1
 8015aa6:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8015aaa:	096d      	lsrs	r5, r5, #5
 8015aac:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8015ab0:	432e      	orrs	r6, r5
 8015ab2:	f820 6b02 	strh.w	r6, [r0], #2
 8015ab6:	e7cd      	b.n	8015a54 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 8015ab8:	4470      	add	r0, lr
 8015aba:	4543      	cmp	r3, r8
 8015abc:	f4ff af75 	bcc.w	80159aa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 8015ac0:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8015ac4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015ac6:	fa1f fc89 	uxth.w	ip, r9
 8015aca:	eba4 040c 	sub.w	r4, r4, ip
 8015ace:	881b      	ldrh	r3, [r3, #0]
 8015ad0:	b2a4      	uxth	r4, r4
 8015ad2:	2c00      	cmp	r4, #0
 8015ad4:	eba3 0309 	sub.w	r3, r3, r9
 8015ad8:	bf18      	it	ne
 8015ada:	f04f 0c00 	movne.w	ip, #0
 8015ade:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015ae2:	e762      	b.n	80159aa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 8015ae4:	4b03      	ldr	r3, [pc, #12]	@ (8015af4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 8015ae6:	6818      	ldr	r0, [r3, #0]
 8015ae8:	6803      	ldr	r3, [r0, #0]
 8015aea:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8015aec:	4798      	blx	r3
 8015aee:	b00f      	add	sp, #60	@ 0x3c
 8015af0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015af4:	20013090 	.word	0x20013090
 8015af8:	20013088 	.word	0x20013088

08015afc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8015afc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015b00:	b093      	sub	sp, #76	@ 0x4c
 8015b02:	461c      	mov	r4, r3
 8015b04:	9205      	str	r2, [sp, #20]
 8015b06:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
 8015b0a:	9101      	str	r1, [sp, #4]
 8015b0c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8015b0e:	9202      	str	r2, [sp, #8]
 8015b10:	2a00      	cmp	r2, #0
 8015b12:	f000 812c 	beq.w	8015d6e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 8015b16:	6820      	ldr	r0, [r4, #0]
 8015b18:	6861      	ldr	r1, [r4, #4]
 8015b1a:	aa0e      	add	r2, sp, #56	@ 0x38
 8015b1c:	c203      	stmia	r2!, {r0, r1}
 8015b1e:	6818      	ldr	r0, [r3, #0]
 8015b20:	6859      	ldr	r1, [r3, #4]
 8015b22:	aa10      	add	r2, sp, #64	@ 0x40
 8015b24:	c203      	stmia	r2!, {r0, r1}
 8015b26:	a80e      	add	r0, sp, #56	@ 0x38
 8015b28:	f7f8 fb30 	bl	800e18c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015b2c:	4621      	mov	r1, r4
 8015b2e:	a810      	add	r0, sp, #64	@ 0x40
 8015b30:	f7f8 fb54 	bl	800e1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015b34:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 8015b38:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 8015b3c:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 8015b40:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8015b44:	bfde      	ittt	le
 8015b46:	b2b3      	uxthle	r3, r6
 8015b48:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8015b4c:	fb92 f3f3 	sdivle	r3, r2, r3
 8015b50:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8015b54:	bfc8      	it	gt
 8015b56:	2301      	movgt	r3, #1
 8015b58:	fb92 f1f3 	sdiv	r1, r2, r3
 8015b5c:	fa1f fc81 	uxth.w	ip, r1
 8015b60:	fb0c 2413 	mls	r4, ip, r3, r2
 8015b64:	fb14 f406 	smulbb	r4, r4, r6
 8015b68:	441d      	add	r5, r3
 8015b6a:	4404      	add	r4, r0
 8015b6c:	4661      	mov	r1, ip
 8015b6e:	3d01      	subs	r5, #1
 8015b70:	b2a4      	uxth	r4, r4
 8015b72:	fb95 f5f3 	sdiv	r5, r5, r3
 8015b76:	b131      	cbz	r1, 8015b86 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 8015b78:	9b05      	ldr	r3, [sp, #20]
 8015b7a:	9901      	ldr	r1, [sp, #4]
 8015b7c:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8015b80:	ba1b      	rev	r3, r3
 8015b82:	4419      	add	r1, r3
 8015b84:	9101      	str	r1, [sp, #4]
 8015b86:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8015b8a:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 8015b8e:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
 8015b92:	4418      	add	r0, r3
 8015b94:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 8015b98:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
 8015b9c:	441a      	add	r2, r3
 8015b9e:	4b75      	ldr	r3, [pc, #468]	@ (8015d74 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 8015ba0:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 8015ba4:	6818      	ldr	r0, [r3, #0]
 8015ba6:	6803      	ldr	r3, [r0, #0]
 8015ba8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015baa:	4798      	blx	r3
 8015bac:	4972      	ldr	r1, [pc, #456]	@ (8015d78 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 8015bae:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 8015bb2:	880b      	ldrh	r3, [r1, #0]
 8015bb4:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8015bb8:	910d      	str	r1, [sp, #52]	@ 0x34
 8015bba:	fb03 c202 	mla	r2, r3, r2, ip
 8015bbe:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8015bc2:	4373      	muls	r3, r6
 8015bc4:	b2ad      	uxth	r5, r5
 8015bc6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8015bca:	00ad      	lsls	r5, r5, #2
 8015bcc:	9308      	str	r3, [sp, #32]
 8015bce:	1d2b      	adds	r3, r5, #4
 8015bd0:	9309      	str	r3, [sp, #36]	@ 0x24
 8015bd2:	9b02      	ldr	r3, [sp, #8]
 8015bd4:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8015bd8:	9106      	str	r1, [sp, #24]
 8015bda:	43da      	mvns	r2, r3
 8015bdc:	2c00      	cmp	r4, #0
 8015bde:	bf0c      	ite	eq
 8015be0:	46dc      	moveq	ip, fp
 8015be2:	f04f 0c00 	movne.w	ip, #0
 8015be6:	2300      	movs	r3, #0
 8015be8:	b2d2      	uxtb	r2, r2
 8015bea:	fa1f fc8c 	uxth.w	ip, ip
 8015bee:	9303      	str	r3, [sp, #12]
 8015bf0:	9207      	str	r2, [sp, #28]
 8015bf2:	9a08      	ldr	r2, [sp, #32]
 8015bf4:	4282      	cmp	r2, r0
 8015bf6:	f240 80b5 	bls.w	8015d64 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 8015bfa:	b963      	cbnz	r3, 8015c16 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 8015bfc:	9b01      	ldr	r3, [sp, #4]
 8015bfe:	781a      	ldrb	r2, [r3, #0]
 8015c00:	0993      	lsrs	r3, r2, #6
 8015c02:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8015c06:	9203      	str	r2, [sp, #12]
 8015c08:	1e5a      	subs	r2, r3, #1
 8015c0a:	2a02      	cmp	r2, #2
 8015c0c:	d815      	bhi.n	8015c3a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 8015c0e:	9a01      	ldr	r2, [sp, #4]
 8015c10:	3201      	adds	r2, #1
 8015c12:	9201      	str	r2, [sp, #4]
 8015c14:	b29b      	uxth	r3, r3
 8015c16:	b1b4      	cbz	r4, 8015c46 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 8015c18:	429c      	cmp	r4, r3
 8015c1a:	bf95      	itete	ls
 8015c1c:	1b1c      	subls	r4, r3, r4
 8015c1e:	1ae4      	subhi	r4, r4, r3
 8015c20:	fa1f f884 	uxthls.w	r8, r4
 8015c24:	b2a4      	uxthhi	r4, r4
 8015c26:	bf87      	ittee	hi
 8015c28:	4666      	movhi	r6, ip
 8015c2a:	f04f 0800 	movhi.w	r8, #0
 8015c2e:	fa1f f68b 	uxthls.w	r6, fp
 8015c32:	2400      	movls	r4, #0
 8015c34:	4643      	mov	r3, r8
 8015c36:	46b4      	mov	ip, r6
 8015c38:	e7db      	b.n	8015bf2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 8015c3a:	9a01      	ldr	r2, [sp, #4]
 8015c3c:	9b01      	ldr	r3, [sp, #4]
 8015c3e:	3202      	adds	r2, #2
 8015c40:	785b      	ldrb	r3, [r3, #1]
 8015c42:	9201      	str	r2, [sp, #4]
 8015c44:	e7e7      	b.n	8015c16 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 8015c46:	2203      	movs	r2, #3
 8015c48:	4615      	mov	r5, r2
 8015c4a:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8015c4c:	9a03      	ldr	r2, [sp, #12]
 8015c4e:	fb15 1202 	smlabb	r2, r5, r2, r1
 8015c52:	9905      	ldr	r1, [sp, #20]
 8015c54:	4563      	cmp	r3, ip
 8015c56:	eb01 0502 	add.w	r5, r1, r2
 8015c5a:	9902      	ldr	r1, [sp, #8]
 8015c5c:	bf29      	itett	cs
 8015c5e:	eba3 080c 	subcs.w	r8, r3, ip
 8015c62:	ebac 0603 	subcc.w	r6, ip, r3
 8015c66:	fa1f f888 	uxthcs.w	r8, r8
 8015c6a:	46e1      	movcs	r9, ip
 8015c6c:	bf2f      	iteee	cs
 8015c6e:	4626      	movcs	r6, r4
 8015c70:	b2b6      	uxthcc	r6, r6
 8015c72:	4699      	movcc	r9, r3
 8015c74:	46a0      	movcc	r8, r4
 8015c76:	29ff      	cmp	r1, #255	@ 0xff
 8015c78:	d04a      	beq.n	8015d10 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 8015c7a:	9f06      	ldr	r7, [sp, #24]
 8015c7c:	78a9      	ldrb	r1, [r5, #2]
 8015c7e:	9004      	str	r0, [sp, #16]
 8015c80:	4379      	muls	r1, r7
 8015c82:	910a      	str	r1, [sp, #40]	@ 0x28
 8015c84:	7869      	ldrb	r1, [r5, #1]
 8015c86:	4379      	muls	r1, r7
 8015c88:	910b      	str	r1, [sp, #44]	@ 0x2c
 8015c8a:	9905      	ldr	r1, [sp, #20]
 8015c8c:	5c8a      	ldrb	r2, [r1, r2]
 8015c8e:	437a      	muls	r2, r7
 8015c90:	920c      	str	r2, [sp, #48]	@ 0x30
 8015c92:	46ca      	mov	sl, r9
 8015c94:	f1ba 0f00 	cmp.w	sl, #0
 8015c98:	d03d      	beq.n	8015d16 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 8015c9a:	9a04      	ldr	r2, [sp, #16]
 8015c9c:	9f07      	ldr	r7, [sp, #28]
 8015c9e:	8812      	ldrh	r2, [r2, #0]
 8015ca0:	1215      	asrs	r5, r2, #8
 8015ca2:	46be      	mov	lr, r7
 8015ca4:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8015ca8:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8015caa:	10d1      	asrs	r1, r2, #3
 8015cac:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8015cb0:	fb05 750e 	mla	r5, r5, lr, r7
 8015cb4:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8015cb8:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8015cba:	00d2      	lsls	r2, r2, #3
 8015cbc:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8015cc0:	fb01 710e 	mla	r1, r1, lr, r7
 8015cc4:	b2d2      	uxtb	r2, r2
 8015cc6:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8015cc8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8015ccc:	b2ad      	uxth	r5, r5
 8015cce:	fb02 720e 	mla	r2, r2, lr, r7
 8015cd2:	b292      	uxth	r2, r2
 8015cd4:	f105 0e01 	add.w	lr, r5, #1
 8015cd8:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8015cdc:	f102 0e01 	add.w	lr, r2, #1
 8015ce0:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 8015ce4:	b289      	uxth	r1, r1
 8015ce6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015cea:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8015cee:	4315      	orrs	r5, r2
 8015cf0:	1c4a      	adds	r2, r1, #1
 8015cf2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8015cf6:	0949      	lsrs	r1, r1, #5
 8015cf8:	9a04      	ldr	r2, [sp, #16]
 8015cfa:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8015cfe:	430d      	orrs	r5, r1
 8015d00:	f822 5b02 	strh.w	r5, [r2], #2
 8015d04:	f10a 3aff 	add.w	sl, sl, #4294967295
 8015d08:	9204      	str	r2, [sp, #16]
 8015d0a:	fa1f fa8a 	uxth.w	sl, sl
 8015d0e:	e7c1      	b.n	8015c94 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 8015d10:	4649      	mov	r1, r9
 8015d12:	4686      	mov	lr, r0
 8015d14:	b999      	cbnz	r1, 8015d3e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 8015d16:	4563      	cmp	r3, ip
 8015d18:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 8015d1c:	d38a      	bcc.n	8015c34 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 8015d1e:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
 8015d22:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8015d24:	fa1f f68b 	uxth.w	r6, fp
 8015d28:	1ba4      	subs	r4, r4, r6
 8015d2a:	881b      	ldrh	r3, [r3, #0]
 8015d2c:	b2a4      	uxth	r4, r4
 8015d2e:	2c00      	cmp	r4, #0
 8015d30:	eba3 030b 	sub.w	r3, r3, fp
 8015d34:	bf18      	it	ne
 8015d36:	2600      	movne	r6, #0
 8015d38:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015d3c:	e77a      	b.n	8015c34 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 8015d3e:	78aa      	ldrb	r2, [r5, #2]
 8015d40:	4f0e      	ldr	r7, [pc, #56]	@ (8015d7c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 8015d42:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 8015d46:	786a      	ldrb	r2, [r5, #1]
 8015d48:	00d2      	lsls	r2, r2, #3
 8015d4a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8015d4e:	ea4a 0202 	orr.w	r2, sl, r2
 8015d52:	f895 a000 	ldrb.w	sl, [r5]
 8015d56:	3901      	subs	r1, #1
 8015d58:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 8015d5c:	f82e 2b02 	strh.w	r2, [lr], #2
 8015d60:	b289      	uxth	r1, r1
 8015d62:	e7d7      	b.n	8015d14 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 8015d64:	4b03      	ldr	r3, [pc, #12]	@ (8015d74 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 8015d66:	6818      	ldr	r0, [r3, #0]
 8015d68:	6803      	ldr	r3, [r0, #0]
 8015d6a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8015d6c:	4798      	blx	r3
 8015d6e:	b013      	add	sp, #76	@ 0x4c
 8015d70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015d74:	20013090 	.word	0x20013090
 8015d78:	20013088 	.word	0x20013088
 8015d7c:	fffff800 	.word	0xfffff800

08015d80 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8015d80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015d84:	b09d      	sub	sp, #116	@ 0x74
 8015d86:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
 8015d8a:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
 8015d8e:	920e      	str	r2, [sp, #56]	@ 0x38
 8015d90:	461c      	mov	r4, r3
 8015d92:	4683      	mov	fp, r0
 8015d94:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8015d96:	2a00      	cmp	r2, #0
 8015d98:	f000 81e0 	beq.w	801615c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 8015d9c:	6820      	ldr	r0, [r4, #0]
 8015d9e:	6861      	ldr	r1, [r4, #4]
 8015da0:	aa18      	add	r2, sp, #96	@ 0x60
 8015da2:	c203      	stmia	r2!, {r0, r1}
 8015da4:	6818      	ldr	r0, [r3, #0]
 8015da6:	6859      	ldr	r1, [r3, #4]
 8015da8:	aa1a      	add	r2, sp, #104	@ 0x68
 8015daa:	c203      	stmia	r2!, {r0, r1}
 8015dac:	a818      	add	r0, sp, #96	@ 0x60
 8015dae:	f7f8 f9ed 	bl	800e18c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015db2:	4621      	mov	r1, r4
 8015db4:	a81a      	add	r0, sp, #104	@ 0x68
 8015db6:	f7f8 fa11 	bl	800e1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015dba:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
 8015dbe:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
 8015dc2:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 8015dc6:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8015dca:	bfd7      	itett	le
 8015dcc:	b29a      	uxthle	r2, r3
 8015dce:	2201      	movgt	r2, #1
 8015dd0:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8015dd4:	fb91 f2f2 	sdivle	r2, r1, r2
 8015dd8:	9202      	str	r2, [sp, #8]
 8015dda:	9802      	ldr	r0, [sp, #8]
 8015ddc:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 8015de0:	fb92 f0f0 	sdiv	r0, r2, r0
 8015de4:	b280      	uxth	r0, r0
 8015de6:	900f      	str	r0, [sp, #60]	@ 0x3c
 8015de8:	9902      	ldr	r1, [sp, #8]
 8015dea:	9802      	ldr	r0, [sp, #8]
 8015dec:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8015dee:	440c      	add	r4, r1
 8015df0:	fb05 2510 	mls	r5, r5, r0, r2
 8015df4:	fb15 f503 	smulbb	r5, r5, r3
 8015df8:	3c01      	subs	r4, #1
 8015dfa:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 8015dfe:	fb94 f4f1 	sdiv	r4, r4, r1
 8015e02:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 8015e06:	440d      	add	r5, r1
 8015e08:	4419      	add	r1, r3
 8015e0a:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
 8015e0e:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 8015e12:	441a      	add	r2, r3
 8015e14:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8015e18:	9306      	str	r3, [sp, #24]
 8015e1a:	4bb3      	ldr	r3, [pc, #716]	@ (80160e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 8015e1c:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
 8015e20:	6818      	ldr	r0, [r3, #0]
 8015e22:	6803      	ldr	r3, [r0, #0]
 8015e24:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015e26:	4798      	blx	r3
 8015e28:	4bb0      	ldr	r3, [pc, #704]	@ (80160ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 8015e2a:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 8015e2e:	881a      	ldrh	r2, [r3, #0]
 8015e30:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 8015e34:	9316      	str	r3, [sp, #88]	@ 0x58
 8015e36:	fb02 7101 	mla	r1, r2, r1, r7
 8015e3a:	3401      	adds	r4, #1
 8015e3c:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 8015e40:	b2a4      	uxth	r4, r4
 8015e42:	4356      	muls	r6, r2
 8015e44:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 8015e48:	00a4      	lsls	r4, r4, #2
 8015e4a:	920a      	str	r2, [sp, #40]	@ 0x28
 8015e4c:	1d22      	adds	r2, r4, #4
 8015e4e:	b2ad      	uxth	r5, r5
 8015e50:	9213      	str	r2, [sp, #76]	@ 0x4c
 8015e52:	4ba7      	ldr	r3, [pc, #668]	@ (80160f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 8015e54:	9a06      	ldr	r2, [sp, #24]
 8015e56:	2d00      	cmp	r5, #0
 8015e58:	bf0c      	ite	eq
 8015e5a:	4611      	moveq	r1, r2
 8015e5c:	2100      	movne	r1, #0
 8015e5e:	2200      	movs	r2, #0
 8015e60:	eba3 030b 	sub.w	r3, r3, fp
 8015e64:	b289      	uxth	r1, r1
 8015e66:	920d      	str	r2, [sp, #52]	@ 0x34
 8015e68:	9317      	str	r3, [sp, #92]	@ 0x5c
 8015e6a:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8015e6c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8015e6e:	fa12 f383 	uxtah	r3, r2, r3
 8015e72:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8015e74:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8015e78:	3304      	adds	r3, #4
 8015e7a:	9308      	str	r3, [sp, #32]
 8015e7c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8015e7e:	4543      	cmp	r3, r8
 8015e80:	f240 8167 	bls.w	8016152 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 8015e84:	9a02      	ldr	r2, [sp, #8]
 8015e86:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 8015e8a:	fbb5 f3f3 	udiv	r3, r5, r3
 8015e8e:	1ad3      	subs	r3, r2, r3
 8015e90:	b29b      	uxth	r3, r3
 8015e92:	9314      	str	r3, [sp, #80]	@ 0x50
 8015e94:	9b08      	ldr	r3, [sp, #32]
 8015e96:	9808      	ldr	r0, [sp, #32]
 8015e98:	785a      	ldrb	r2, [r3, #1]
 8015e9a:	789b      	ldrb	r3, [r3, #2]
 8015e9c:	7800      	ldrb	r0, [r0, #0]
 8015e9e:	9010      	str	r0, [sp, #64]	@ 0x40
 8015ea0:	021b      	lsls	r3, r3, #8
 8015ea2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8015ea6:	9a08      	ldr	r2, [sp, #32]
 8015ea8:	78d2      	ldrb	r2, [r2, #3]
 8015eaa:	4313      	orrs	r3, r2
 8015eac:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8015eae:	3001      	adds	r0, #1
 8015eb0:	441a      	add	r2, r3
 8015eb2:	9007      	str	r0, [sp, #28]
 8015eb4:	1c50      	adds	r0, r2, #1
 8015eb6:	9005      	str	r0, [sp, #20]
 8015eb8:	7852      	ldrb	r2, [r2, #1]
 8015eba:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8015ebc:	0212      	lsls	r2, r2, #8
 8015ebe:	5cc3      	ldrb	r3, [r0, r3]
 8015ec0:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8015ec4:	431a      	orrs	r2, r3
 8015ec6:	b293      	uxth	r3, r2
 8015ec8:	930b      	str	r3, [sp, #44]	@ 0x2c
 8015eca:	2300      	movs	r3, #0
 8015ecc:	9309      	str	r3, [sp, #36]	@ 0x24
 8015ece:	2301      	movs	r3, #1
 8015ed0:	9301      	str	r3, [sp, #4]
 8015ed2:	9304      	str	r3, [sp, #16]
 8015ed4:	2300      	movs	r3, #0
 8015ed6:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
 8015eda:	9303      	str	r3, [sp, #12]
 8015edc:	f04f 0e01 	mov.w	lr, #1
 8015ee0:	2d00      	cmp	r5, #0
 8015ee2:	d07c      	beq.n	8015fde <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 8015ee4:	45ae      	cmp	lr, r5
 8015ee6:	d26b      	bcs.n	8015fc0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 8015ee8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8015eea:	eba5 050e 	sub.w	r5, r5, lr
 8015eee:	4543      	cmp	r3, r8
 8015ef0:	b2ad      	uxth	r5, r5
 8015ef2:	460c      	mov	r4, r1
 8015ef4:	d802      	bhi.n	8015efc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 8015ef6:	e070      	b.n	8015fda <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 8015ef8:	2b00      	cmp	r3, #0
 8015efa:	d15c      	bne.n	8015fb6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8015efc:	9b05      	ldr	r3, [sp, #20]
 8015efe:	9a04      	ldr	r2, [sp, #16]
 8015f00:	785b      	ldrb	r3, [r3, #1]
 8015f02:	9904      	ldr	r1, [sp, #16]
 8015f04:	f1c2 0207 	rsb	r2, r2, #7
 8015f08:	4093      	lsls	r3, r2
 8015f0a:	005b      	lsls	r3, r3, #1
 8015f0c:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8015f10:	9b05      	ldr	r3, [sp, #20]
 8015f12:	781b      	ldrb	r3, [r3, #0]
 8015f14:	410b      	asrs	r3, r1
 8015f16:	3101      	adds	r1, #1
 8015f18:	b2c9      	uxtb	r1, r1
 8015f1a:	2908      	cmp	r1, #8
 8015f1c:	9104      	str	r1, [sp, #16]
 8015f1e:	9905      	ldr	r1, [sp, #20]
 8015f20:	bf0a      	itet	eq
 8015f22:	3102      	addeq	r1, #2
 8015f24:	3101      	addne	r1, #1
 8015f26:	9105      	streq	r1, [sp, #20]
 8015f28:	b2db      	uxtb	r3, r3
 8015f2a:	bf0a      	itet	eq
 8015f2c:	2100      	moveq	r1, #0
 8015f2e:	9105      	strne	r1, [sp, #20]
 8015f30:	9104      	streq	r1, [sp, #16]
 8015f32:	4313      	orrs	r3, r2
 8015f34:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8015f36:	b29a      	uxth	r2, r3
 8015f38:	4291      	cmp	r1, r2
 8015f3a:	d30a      	bcc.n	8015f52 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 8015f3c:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
 8015f40:	2301      	movs	r3, #1
 8015f42:	9907      	ldr	r1, [sp, #28]
 8015f44:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8015f48:	d30f      	bcc.n	8015f6a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 8015f4a:	2100      	movs	r1, #0
 8015f4c:	9301      	str	r3, [sp, #4]
 8015f4e:	9103      	str	r1, [sp, #12]
 8015f50:	e032      	b.n	8015fb8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 8015f52:	9b07      	ldr	r3, [sp, #28]
 8015f54:	429a      	cmp	r2, r3
 8015f56:	d318      	bcc.n	8015f8a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 8015f58:	9b01      	ldr	r3, [sp, #4]
 8015f5a:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
 8015f5e:	445b      	add	r3, fp
 8015f60:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 8015f64:	9b01      	ldr	r3, [sp, #4]
 8015f66:	3301      	adds	r3, #1
 8015f68:	b29b      	uxth	r3, r3
 8015f6a:	9907      	ldr	r1, [sp, #28]
 8015f6c:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
 8015f70:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8015f74:	7108      	strb	r0, [r1, #4]
 8015f76:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8015f78:	80c8      	strh	r0, [r1, #6]
 8015f7a:	9801      	ldr	r0, [sp, #4]
 8015f7c:	3001      	adds	r0, #1
 8015f7e:	7148      	strb	r0, [r1, #5]
 8015f80:	9907      	ldr	r1, [sp, #28]
 8015f82:	3101      	adds	r1, #1
 8015f84:	b289      	uxth	r1, r1
 8015f86:	9107      	str	r1, [sp, #28]
 8015f88:	e7df      	b.n	8015f4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 8015f8a:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 8015f8e:	4611      	mov	r1, r2
 8015f90:	795b      	ldrb	r3, [r3, #5]
 8015f92:	f603 0004 	addw	r0, r3, #2052	@ 0x804
 8015f96:	4458      	add	r0, fp
 8015f98:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
 8015f9a:	4406      	add	r6, r0
 8015f9c:	2e00      	cmp	r6, #0
 8015f9e:	dd06      	ble.n	8015fae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 8015fa0:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8015fa4:	790e      	ldrb	r6, [r1, #4]
 8015fa6:	f800 6d01 	strb.w	r6, [r0, #-1]!
 8015faa:	88c9      	ldrh	r1, [r1, #6]
 8015fac:	e7f4      	b.n	8015f98 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 8015fae:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
 8015fb2:	b29b      	uxth	r3, r3
 8015fb4:	e7c5      	b.n	8015f42 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 8015fb6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8015fb8:	920b      	str	r2, [sp, #44]	@ 0x2c
 8015fba:	4621      	mov	r1, r4
 8015fbc:	469e      	mov	lr, r3
 8015fbe:	e78f      	b.n	8015ee0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 8015fc0:	9a03      	ldr	r2, [sp, #12]
 8015fc2:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8015fc6:	442a      	add	r2, r5
 8015fc8:	ebae 0305 	sub.w	r3, lr, r5
 8015fcc:	b292      	uxth	r2, r2
 8015fce:	b29b      	uxth	r3, r3
 8015fd0:	9203      	str	r2, [sp, #12]
 8015fd2:	2500      	movs	r5, #0
 8015fd4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8015fd6:	4542      	cmp	r2, r8
 8015fd8:	d88e      	bhi.n	8015ef8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 8015fda:	4621      	mov	r1, r4
 8015fdc:	e74e      	b.n	8015e7c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 8015fde:	458e      	cmp	lr, r1
 8015fe0:	bf29      	itett	cs
 8015fe2:	ebae 0301 	subcs.w	r3, lr, r1
 8015fe6:	eba1 040e 	subcc.w	r4, r1, lr
 8015fea:	b29b      	uxthcs	r3, r3
 8015fec:	910c      	strcs	r1, [sp, #48]	@ 0x30
 8015fee:	bf2f      	iteee	cs
 8015ff0:	462c      	movcs	r4, r5
 8015ff2:	b2a4      	uxthcc	r4, r4
 8015ff4:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
 8015ff8:	462b      	movcc	r3, r5
 8015ffa:	f04f 0900 	mov.w	r9, #0
 8015ffe:	9a03      	ldr	r2, [sp, #12]
 8016000:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8016002:	444a      	add	r2, r9
 8016004:	4548      	cmp	r0, r9
 8016006:	b292      	uxth	r2, r2
 8016008:	d074      	beq.n	80160f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801600a:	445a      	add	r2, fp
 801600c:	2004      	movs	r0, #4
 801600e:	4605      	mov	r5, r0
 8016010:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
 8016014:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8016016:	fb15 0202 	smlabb	r2, r5, r2, r0
 801601a:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801601c:	5880      	ldr	r0, [r0, r2]
 801601e:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 8016022:	d014      	beq.n	801604e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 8016024:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8016028:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801602c:	d112      	bne.n	8016054 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801602e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8016030:	2aff      	cmp	r2, #255	@ 0xff
 8016032:	d10f      	bne.n	8016054 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 8016034:	0942      	lsrs	r2, r0, #5
 8016036:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 801603a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801603e:	f025 0507 	bic.w	r5, r5, #7
 8016042:	4315      	orrs	r5, r2
 8016044:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8016048:	4305      	orrs	r5, r0
 801604a:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801604e:	f109 0901 	add.w	r9, r9, #1
 8016052:	e7d4      	b.n	8015ffe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 8016054:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 8016058:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801605c:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
 8016060:	9215      	str	r2, [sp, #84]	@ 0x54
 8016062:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8016064:	fb02 fa0a 	mul.w	sl, r2, sl
 8016068:	f10a 0201 	add.w	r2, sl, #1
 801606c:	eb02 222a 	add.w	r2, r2, sl, asr #8
 8016070:	ea4f 272c 	mov.w	r7, ip, asr #8
 8016074:	1212      	asrs	r2, r2, #8
 8016076:	fa1f fa82 	uxth.w	sl, r2
 801607a:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801607e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8016082:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016086:	43d2      	mvns	r2, r2
 8016088:	b2d2      	uxtb	r2, r2
 801608a:	fb16 f60a 	smulbb	r6, r6, sl
 801608e:	fa5f fc8c 	uxtb.w	ip, ip
 8016092:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8016096:	b2c0      	uxtb	r0, r0
 8016098:	fb07 6702 	mla	r7, r7, r2, r6
 801609c:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 80160a0:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 80160a2:	fb10 f00a 	smulbb	r0, r0, sl
 80160a6:	fb0c 0002 	mla	r0, ip, r2, r0
 80160aa:	b2ed      	uxtb	r5, r5
 80160ac:	b2bf      	uxth	r7, r7
 80160ae:	fb15 f50a 	smulbb	r5, r5, sl
 80160b2:	b280      	uxth	r0, r0
 80160b4:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80160b8:	fb06 5602 	mla	r6, r6, r2, r5
 80160bc:	1c7a      	adds	r2, r7, #1
 80160be:	1c45      	adds	r5, r0, #1
 80160c0:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80160c4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80160c8:	b2b6      	uxth	r6, r6
 80160ca:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80160ce:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80160d2:	432f      	orrs	r7, r5
 80160d4:	1c75      	adds	r5, r6, #1
 80160d6:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 80160da:	096d      	lsrs	r5, r5, #5
 80160dc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80160e0:	432f      	orrs	r7, r5
 80160e2:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 80160e6:	e7b2      	b.n	801604e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 80160e8:	20013090 	.word	0x20013090
 80160ec:	20013088 	.word	0x20013088
 80160f0:	fffff7fb 	.word	0xfffff7fb
 80160f4:	9203      	str	r2, [sp, #12]
 80160f6:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80160f8:	458e      	cmp	lr, r1
 80160fa:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 80160fe:	f4ff af68 	bcc.w	8015fd2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 8016102:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8016104:	9906      	ldr	r1, [sp, #24]
 8016106:	8812      	ldrh	r2, [r2, #0]
 8016108:	1a52      	subs	r2, r2, r1
 801610a:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801610e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8016110:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8016112:	3201      	adds	r2, #1
 8016114:	428a      	cmp	r2, r1
 8016116:	9209      	str	r2, [sp, #36]	@ 0x24
 8016118:	d111      	bne.n	801613e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801611a:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
 801611e:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
 8016122:	9b06      	ldr	r3, [sp, #24]
 8016124:	eba5 0509 	sub.w	r5, r5, r9
 8016128:	b2ad      	uxth	r5, r5
 801612a:	2d00      	cmp	r5, #0
 801612c:	bf08      	it	eq
 801612e:	4619      	moveq	r1, r3
 8016130:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016132:	bf18      	it	ne
 8016134:	2100      	movne	r1, #0
 8016136:	3301      	adds	r3, #1
 8016138:	930d      	str	r3, [sp, #52]	@ 0x34
 801613a:	b289      	uxth	r1, r1
 801613c:	e695      	b.n	8015e6a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801613e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8016142:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 8016146:	1b2d      	subs	r5, r5, r4
 8016148:	b2ad      	uxth	r5, r5
 801614a:	2d00      	cmp	r5, #0
 801614c:	bf18      	it	ne
 801614e:	2400      	movne	r4, #0
 8016150:	e740      	b.n	8015fd4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 8016152:	4b04      	ldr	r3, [pc, #16]	@ (8016164 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 8016154:	6818      	ldr	r0, [r3, #0]
 8016156:	6803      	ldr	r3, [r0, #0]
 8016158:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801615a:	4798      	blx	r3
 801615c:	b01d      	add	sp, #116	@ 0x74
 801615e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016162:	bf00      	nop
 8016164:	20013090 	.word	0x20013090

08016168 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8016168:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801616c:	b09f      	sub	sp, #124	@ 0x7c
 801616e:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 8016172:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 8016176:	920a      	str	r2, [sp, #40]	@ 0x28
 8016178:	461d      	mov	r5, r3
 801617a:	4604      	mov	r4, r0
 801617c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801617e:	2a00      	cmp	r2, #0
 8016180:	f000 81fa 	beq.w	8016578 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 8016184:	6828      	ldr	r0, [r5, #0]
 8016186:	6869      	ldr	r1, [r5, #4]
 8016188:	aa1a      	add	r2, sp, #104	@ 0x68
 801618a:	c203      	stmia	r2!, {r0, r1}
 801618c:	6818      	ldr	r0, [r3, #0]
 801618e:	6859      	ldr	r1, [r3, #4]
 8016190:	aa1c      	add	r2, sp, #112	@ 0x70
 8016192:	c203      	stmia	r2!, {r0, r1}
 8016194:	a81a      	add	r0, sp, #104	@ 0x68
 8016196:	f7f7 fff9 	bl	800e18c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801619a:	4629      	mov	r1, r5
 801619c:	a81c      	add	r0, sp, #112	@ 0x70
 801619e:	f7f8 f81d 	bl	800e1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80161a2:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 80161a6:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 80161aa:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
 80161ae:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80161b2:	bfd7      	itett	le
 80161b4:	b29a      	uxthle	r2, r3
 80161b6:	2201      	movgt	r2, #1
 80161b8:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 80161bc:	fb91 f2f2 	sdivle	r2, r1, r2
 80161c0:	9201      	str	r2, [sp, #4]
 80161c2:	9801      	ldr	r0, [sp, #4]
 80161c4:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 80161c8:	fb92 f0f0 	sdiv	r0, r2, r0
 80161cc:	b280      	uxth	r0, r0
 80161ce:	9010      	str	r0, [sp, #64]	@ 0x40
 80161d0:	9901      	ldr	r1, [sp, #4]
 80161d2:	9801      	ldr	r0, [sp, #4]
 80161d4:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80161d6:	440e      	add	r6, r1
 80161d8:	fb05 2510 	mls	r5, r5, r0, r2
 80161dc:	fb15 f503 	smulbb	r5, r5, r3
 80161e0:	3e01      	subs	r6, #1
 80161e2:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 80161e6:	fb96 f6f1 	sdiv	r6, r6, r1
 80161ea:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 80161ee:	440d      	add	r5, r1
 80161f0:	4419      	add	r1, r3
 80161f2:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 80161f6:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 80161fa:	441a      	add	r2, r3
 80161fc:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 8016200:	9304      	str	r3, [sp, #16]
 8016202:	4b96      	ldr	r3, [pc, #600]	@ (801645c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 8016204:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 8016208:	6818      	ldr	r0, [r3, #0]
 801620a:	6803      	ldr	r3, [r0, #0]
 801620c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801620e:	4798      	blx	r3
 8016210:	4b93      	ldr	r3, [pc, #588]	@ (8016460 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8016212:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 8016216:	881a      	ldrh	r2, [r3, #0]
 8016218:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
 801621c:	9318      	str	r3, [sp, #96]	@ 0x60
 801621e:	fb02 c101 	mla	r1, r2, r1, ip
 8016222:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 8016226:	4357      	muls	r7, r2
 8016228:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801622c:	3601      	adds	r6, #1
 801622e:	920b      	str	r2, [sp, #44]	@ 0x2c
 8016230:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8016232:	4b8c      	ldr	r3, [pc, #560]	@ (8016464 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8016234:	b2b6      	uxth	r6, r6
 8016236:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801623a:	1d32      	adds	r2, r6, #4
 801623c:	9206      	str	r2, [sp, #24]
 801623e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8016240:	43d2      	mvns	r2, r2
 8016242:	b2d2      	uxtb	r2, r2
 8016244:	b2ad      	uxth	r5, r5
 8016246:	9215      	str	r2, [sp, #84]	@ 0x54
 8016248:	9a04      	ldr	r2, [sp, #16]
 801624a:	2d00      	cmp	r5, #0
 801624c:	bf0c      	ite	eq
 801624e:	4611      	moveq	r1, r2
 8016250:	2100      	movne	r1, #0
 8016252:	2200      	movs	r2, #0
 8016254:	1b1b      	subs	r3, r3, r4
 8016256:	b289      	uxth	r1, r1
 8016258:	920d      	str	r2, [sp, #52]	@ 0x34
 801625a:	9319      	str	r3, [sp, #100]	@ 0x64
 801625c:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801625e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016260:	fa12 f383 	uxtah	r3, r2, r3
 8016264:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8016266:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801626a:	3304      	adds	r3, #4
 801626c:	9307      	str	r3, [sp, #28]
 801626e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8016270:	455b      	cmp	r3, fp
 8016272:	f240 817c 	bls.w	801656e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 8016276:	9a01      	ldr	r2, [sp, #4]
 8016278:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 801627c:	fbb5 f3f3 	udiv	r3, r5, r3
 8016280:	1ad3      	subs	r3, r2, r3
 8016282:	b29b      	uxth	r3, r3
 8016284:	9316      	str	r3, [sp, #88]	@ 0x58
 8016286:	9b07      	ldr	r3, [sp, #28]
 8016288:	9807      	ldr	r0, [sp, #28]
 801628a:	785a      	ldrb	r2, [r3, #1]
 801628c:	789b      	ldrb	r3, [r3, #2]
 801628e:	7800      	ldrb	r0, [r0, #0]
 8016290:	9011      	str	r0, [sp, #68]	@ 0x44
 8016292:	021b      	lsls	r3, r3, #8
 8016294:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8016298:	9a07      	ldr	r2, [sp, #28]
 801629a:	78d2      	ldrb	r2, [r2, #3]
 801629c:	4313      	orrs	r3, r2
 801629e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80162a0:	3001      	adds	r0, #1
 80162a2:	441a      	add	r2, r3
 80162a4:	9005      	str	r0, [sp, #20]
 80162a6:	1c50      	adds	r0, r2, #1
 80162a8:	9003      	str	r0, [sp, #12]
 80162aa:	7852      	ldrb	r2, [r2, #1]
 80162ac:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80162ae:	0212      	lsls	r2, r2, #8
 80162b0:	5cc3      	ldrb	r3, [r0, r3]
 80162b2:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 80162b6:	431a      	orrs	r2, r3
 80162b8:	b293      	uxth	r3, r2
 80162ba:	930c      	str	r3, [sp, #48]	@ 0x30
 80162bc:	2300      	movs	r3, #0
 80162be:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 80162c2:	9308      	str	r3, [sp, #32]
 80162c4:	461a      	mov	r2, r3
 80162c6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 80162ca:	930e      	str	r3, [sp, #56]	@ 0x38
 80162cc:	f04f 0801 	mov.w	r8, #1
 80162d0:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 80162d4:	f8cd 8008 	str.w	r8, [sp, #8]
 80162d8:	46c4      	mov	ip, r8
 80162da:	930f      	str	r3, [sp, #60]	@ 0x3c
 80162dc:	2d00      	cmp	r5, #0
 80162de:	d07c      	beq.n	80163da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 80162e0:	45ac      	cmp	ip, r5
 80162e2:	d26c      	bcs.n	80163be <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 80162e4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80162e6:	eba5 050c 	sub.w	r5, r5, ip
 80162ea:	455b      	cmp	r3, fp
 80162ec:	b2ad      	uxth	r5, r5
 80162ee:	4608      	mov	r0, r1
 80162f0:	d802      	bhi.n	80162f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 80162f2:	e070      	b.n	80163d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 80162f4:	2b00      	cmp	r3, #0
 80162f6:	d15c      	bne.n	80163b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 80162f8:	9b03      	ldr	r3, [sp, #12]
 80162fa:	9a02      	ldr	r2, [sp, #8]
 80162fc:	785b      	ldrb	r3, [r3, #1]
 80162fe:	9902      	ldr	r1, [sp, #8]
 8016300:	f1c2 0207 	rsb	r2, r2, #7
 8016304:	4093      	lsls	r3, r2
 8016306:	005b      	lsls	r3, r3, #1
 8016308:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 801630c:	9b03      	ldr	r3, [sp, #12]
 801630e:	781b      	ldrb	r3, [r3, #0]
 8016310:	410b      	asrs	r3, r1
 8016312:	3101      	adds	r1, #1
 8016314:	b2c9      	uxtb	r1, r1
 8016316:	2908      	cmp	r1, #8
 8016318:	9102      	str	r1, [sp, #8]
 801631a:	9903      	ldr	r1, [sp, #12]
 801631c:	bf0a      	itet	eq
 801631e:	3102      	addeq	r1, #2
 8016320:	3101      	addne	r1, #1
 8016322:	9103      	streq	r1, [sp, #12]
 8016324:	b2db      	uxtb	r3, r3
 8016326:	bf0a      	itet	eq
 8016328:	2100      	moveq	r1, #0
 801632a:	9103      	strne	r1, [sp, #12]
 801632c:	9102      	streq	r1, [sp, #8]
 801632e:	4313      	orrs	r3, r2
 8016330:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8016332:	b29a      	uxth	r2, r3
 8016334:	4291      	cmp	r1, r2
 8016336:	d30a      	bcc.n	801634e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 8016338:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 801633c:	2301      	movs	r3, #1
 801633e:	9905      	ldr	r1, [sp, #20]
 8016340:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8016344:	d30f      	bcc.n	8016366 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 8016346:	2100      	movs	r1, #0
 8016348:	4698      	mov	r8, r3
 801634a:	9100      	str	r1, [sp, #0]
 801634c:	e032      	b.n	80163b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801634e:	9b05      	ldr	r3, [sp, #20]
 8016350:	429a      	cmp	r2, r3
 8016352:	d318      	bcc.n	8016386 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 8016354:	eb04 0308 	add.w	r3, r4, r8
 8016358:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
 801635c:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 8016360:	f108 0301 	add.w	r3, r8, #1
 8016364:	b29b      	uxth	r3, r3
 8016366:	9905      	ldr	r1, [sp, #20]
 8016368:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 801636c:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8016370:	710e      	strb	r6, [r1, #4]
 8016372:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8016374:	80ce      	strh	r6, [r1, #6]
 8016376:	f108 0601 	add.w	r6, r8, #1
 801637a:	714e      	strb	r6, [r1, #5]
 801637c:	9905      	ldr	r1, [sp, #20]
 801637e:	3101      	adds	r1, #1
 8016380:	b289      	uxth	r1, r1
 8016382:	9105      	str	r1, [sp, #20]
 8016384:	e7df      	b.n	8016346 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 8016386:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801638a:	4611      	mov	r1, r2
 801638c:	795b      	ldrb	r3, [r3, #5]
 801638e:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 8016392:	4426      	add	r6, r4
 8016394:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 8016396:	4437      	add	r7, r6
 8016398:	2f00      	cmp	r7, #0
 801639a:	dd06      	ble.n	80163aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801639c:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 80163a0:	790f      	ldrb	r7, [r1, #4]
 80163a2:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80163a6:	88c9      	ldrh	r1, [r1, #6]
 80163a8:	e7f4      	b.n	8016394 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 80163aa:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 80163ae:	b29b      	uxth	r3, r3
 80163b0:	e7c5      	b.n	801633e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 80163b2:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80163b4:	920c      	str	r2, [sp, #48]	@ 0x30
 80163b6:	4601      	mov	r1, r0
 80163b8:	9a00      	ldr	r2, [sp, #0]
 80163ba:	469c      	mov	ip, r3
 80163bc:	e78e      	b.n	80162dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 80163be:	1957      	adds	r7, r2, r5
 80163c0:	ebac 0305 	sub.w	r3, ip, r5
 80163c4:	b2ba      	uxth	r2, r7
 80163c6:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 80163ca:	9200      	str	r2, [sp, #0]
 80163cc:	b29b      	uxth	r3, r3
 80163ce:	2500      	movs	r5, #0
 80163d0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80163d2:	455a      	cmp	r2, fp
 80163d4:	d88e      	bhi.n	80162f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 80163d6:	4601      	mov	r1, r0
 80163d8:	e749      	b.n	801626e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 80163da:	458c      	cmp	ip, r1
 80163dc:	bf2c      	ite	cs
 80163de:	4628      	movcs	r0, r5
 80163e0:	462b      	movcc	r3, r5
 80163e2:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 80163e4:	bf27      	ittee	cs
 80163e6:	9109      	strcs	r1, [sp, #36]	@ 0x24
 80163e8:	ebac 0301 	subcs.w	r3, ip, r1
 80163ec:	eba1 000c 	subcc.w	r0, r1, ip
 80163f0:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
 80163f4:	bf2c      	ite	cs
 80163f6:	b29b      	uxthcs	r3, r3
 80163f8:	b280      	uxthcc	r0, r0
 80163fa:	2dff      	cmp	r5, #255	@ 0xff
 80163fc:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80163fe:	eb02 0705 	add.w	r7, r2, r5
 8016402:	b2bd      	uxth	r5, r7
 8016404:	9500      	str	r5, [sp, #0]
 8016406:	d12f      	bne.n	8016468 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 8016408:	465e      	mov	r6, fp
 801640a:	9d00      	ldr	r5, [sp, #0]
 801640c:	42aa      	cmp	r2, r5
 801640e:	f040 8084 	bne.w	801651a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 8016412:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8016414:	458c      	cmp	ip, r1
 8016416:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801641a:	d3d8      	bcc.n	80163ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801641c:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801641e:	9904      	ldr	r1, [sp, #16]
 8016420:	8812      	ldrh	r2, [r2, #0]
 8016422:	1a52      	subs	r2, r2, r1
 8016424:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8016428:	9a08      	ldr	r2, [sp, #32]
 801642a:	9916      	ldr	r1, [sp, #88]	@ 0x58
 801642c:	3201      	adds	r2, #1
 801642e:	428a      	cmp	r2, r1
 8016430:	9208      	str	r2, [sp, #32]
 8016432:	f040 8092 	bne.w	801655a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 8016436:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 801643a:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
 801643e:	9b04      	ldr	r3, [sp, #16]
 8016440:	eba5 050c 	sub.w	r5, r5, ip
 8016444:	b2ad      	uxth	r5, r5
 8016446:	2d00      	cmp	r5, #0
 8016448:	bf08      	it	eq
 801644a:	4619      	moveq	r1, r3
 801644c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801644e:	bf18      	it	ne
 8016450:	2100      	movne	r1, #0
 8016452:	3301      	adds	r3, #1
 8016454:	930d      	str	r3, [sp, #52]	@ 0x34
 8016456:	b289      	uxth	r1, r1
 8016458:	e700      	b.n	801625c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801645a:	bf00      	nop
 801645c:	20013090 	.word	0x20013090
 8016460:	20013088 	.word	0x20013088
 8016464:	fffff7fb 	.word	0xfffff7fb
 8016468:	46d9      	mov	r9, fp
 801646a:	9d00      	ldr	r5, [sp, #0]
 801646c:	42aa      	cmp	r2, r5
 801646e:	d0d0      	beq.n	8016412 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 8016470:	1c55      	adds	r5, r2, #1
 8016472:	4422      	add	r2, r4
 8016474:	9517      	str	r5, [sp, #92]	@ 0x5c
 8016476:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
 801647a:	9a06      	ldr	r2, [sp, #24]
 801647c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8016480:	4472      	add	r2, lr
 8016482:	9212      	str	r2, [sp, #72]	@ 0x48
 8016484:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 8016486:	f8b9 2000 	ldrh.w	r2, [r9]
 801648a:	f897 a002 	ldrb.w	sl, [r7, #2]
 801648e:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8016490:	1216      	asrs	r6, r2, #8
 8016492:	fb1a fa07 	smulbb	sl, sl, r7
 8016496:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801649a:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801649c:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80164a0:	fb06 a607 	mla	r6, r6, r7, sl
 80164a4:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 80164a6:	f897 a001 	ldrb.w	sl, [r7, #1]
 80164aa:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 80164ac:	10d5      	asrs	r5, r2, #3
 80164ae:	fb1a fa07 	smulbb	sl, sl, r7
 80164b2:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80164b6:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 80164b8:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80164bc:	fb05 a507 	mla	r5, r5, r7, sl
 80164c0:	9f06      	ldr	r7, [sp, #24]
 80164c2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80164c6:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 80164c8:	00d2      	lsls	r2, r2, #3
 80164ca:	fb1e fe07 	smulbb	lr, lr, r7
 80164ce:	b2d2      	uxtb	r2, r2
 80164d0:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 80164d2:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80164d6:	b2b6      	uxth	r6, r6
 80164d8:	fb02 e207 	mla	r2, r2, r7, lr
 80164dc:	b292      	uxth	r2, r2
 80164de:	b2ad      	uxth	r5, r5
 80164e0:	f106 0a01 	add.w	sl, r6, #1
 80164e4:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 80164e8:	f102 0e01 	add.w	lr, r2, #1
 80164ec:	f105 0a01 	add.w	sl, r5, #1
 80164f0:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 80164f4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80164f8:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 80164fc:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8016500:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016504:	ea4e 0606 	orr.w	r6, lr, r6
 8016508:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801650c:	ea46 060a 	orr.w	r6, r6, sl
 8016510:	f829 6b02 	strh.w	r6, [r9], #2
 8016514:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8016518:	e7a7      	b.n	801646a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801651a:	f102 0e01 	add.w	lr, r2, #1
 801651e:	4422      	add	r2, r4
 8016520:	9f06      	ldr	r7, [sp, #24]
 8016522:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
 8016526:	9a06      	ldr	r2, [sp, #24]
 8016528:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801652c:	eb02 0a05 	add.w	sl, r2, r5
 8016530:	4a13      	ldr	r2, [pc, #76]	@ (8016580 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 8016532:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8016536:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801653a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801653e:	00d2      	lsls	r2, r2, #3
 8016540:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8016544:	ea49 0202 	orr.w	r2, r9, r2
 8016548:	f817 9005 	ldrb.w	r9, [r7, r5]
 801654c:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8016550:	f826 2b02 	strh.w	r2, [r6], #2
 8016554:	fa1f f28e 	uxth.w	r2, lr
 8016558:	e757      	b.n	801640a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801655a:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801655e:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 8016562:	1a2d      	subs	r5, r5, r0
 8016564:	b2ad      	uxth	r5, r5
 8016566:	2d00      	cmp	r5, #0
 8016568:	bf18      	it	ne
 801656a:	2000      	movne	r0, #0
 801656c:	e730      	b.n	80163d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801656e:	4b05      	ldr	r3, [pc, #20]	@ (8016584 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 8016570:	6818      	ldr	r0, [r3, #0]
 8016572:	6803      	ldr	r3, [r0, #0]
 8016574:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8016576:	4798      	blx	r3
 8016578:	b01f      	add	sp, #124	@ 0x7c
 801657a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801657e:	bf00      	nop
 8016580:	fffff800 	.word	0xfffff800
 8016584:	20013090 	.word	0x20013090

08016588 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8016588:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801658c:	b091      	sub	sp, #68	@ 0x44
 801658e:	469b      	mov	fp, r3
 8016590:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
 8016594:	4616      	mov	r6, r2
 8016596:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
 801659a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801659e:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 80165a2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80165a6:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 80165aa:	4604      	mov	r4, r0
 80165ac:	460d      	mov	r5, r1
 80165ae:	4640      	mov	r0, r8
 80165b0:	4659      	mov	r1, fp
 80165b2:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 80165b6:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 80165ba:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
 80165be:	f7f3 fb53 	bl	8009c68 <_ZN8touchgfx4RectaNERKS0_>
 80165c2:	4631      	mov	r1, r6
 80165c4:	4640      	mov	r0, r8
 80165c6:	f7f3 fb4f 	bl	8009c68 <_ZN8touchgfx4RectaNERKS0_>
 80165ca:	4b74      	ldr	r3, [pc, #464]	@ (801679c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 80165cc:	8818      	ldrh	r0, [r3, #0]
 80165ce:	4b74      	ldr	r3, [pc, #464]	@ (80167a0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 80165d0:	8819      	ldrh	r1, [r3, #0]
 80165d2:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 80165d6:	2b00      	cmp	r3, #0
 80165d8:	b202      	sxth	r2, r0
 80165da:	b20e      	sxth	r6, r1
 80165dc:	da07      	bge.n	80165ee <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 80165de:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 80165e2:	4463      	add	r3, ip
 80165e4:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 80165e8:	2300      	movs	r3, #0
 80165ea:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 80165ee:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 80165f2:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 80165f6:	1ad2      	subs	r2, r2, r3
 80165f8:	4594      	cmp	ip, r2
 80165fa:	bfc4      	itt	gt
 80165fc:	1ac2      	subgt	r2, r0, r3
 80165fe:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
 8016602:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8016606:	2a00      	cmp	r2, #0
 8016608:	da07      	bge.n	801661a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801660a:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
 801660e:	4462      	add	r2, ip
 8016610:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 8016614:	2200      	movs	r2, #0
 8016616:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 801661a:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
 801661e:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 8016622:	eba6 060a 	sub.w	r6, r6, sl
 8016626:	42b2      	cmp	r2, r6
 8016628:	bfc4      	itt	gt
 801662a:	eba1 020a 	subgt.w	r2, r1, sl
 801662e:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
 8016632:	4a5c      	ldr	r2, [pc, #368]	@ (80167a4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 8016634:	7812      	ldrb	r2, [r2, #0]
 8016636:	b9a2      	cbnz	r2, 8016662 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 8016638:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 801663c:	4286      	cmp	r6, r0
 801663e:	4640      	mov	r0, r8
 8016640:	9303      	str	r3, [sp, #12]
 8016642:	bf14      	ite	ne
 8016644:	2600      	movne	r6, #0
 8016646:	2601      	moveq	r6, #1
 8016648:	f7f3 fb51 	bl	8009cee <_ZNK8touchgfx4Rect7isEmptyEv>
 801664c:	9b03      	ldr	r3, [sp, #12]
 801664e:	b160      	cbz	r0, 801666a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 8016650:	2300      	movs	r3, #0
 8016652:	8023      	strh	r3, [r4, #0]
 8016654:	8063      	strh	r3, [r4, #2]
 8016656:	80a3      	strh	r3, [r4, #4]
 8016658:	4620      	mov	r0, r4
 801665a:	80e3      	strh	r3, [r4, #6]
 801665c:	b011      	add	sp, #68	@ 0x44
 801665e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016662:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 8016666:	428e      	cmp	r6, r1
 8016668:	e7e9      	b.n	801663e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801666a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801666e:	9205      	str	r2, [sp, #20]
 8016670:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 8016674:	9206      	str	r2, [sp, #24]
 8016676:	f8bb 2000 	ldrh.w	r2, [fp]
 801667a:	900e      	str	r0, [sp, #56]	@ 0x38
 801667c:	1a9b      	subs	r3, r3, r2
 801667e:	b21b      	sxth	r3, r3
 8016680:	9303      	str	r3, [sp, #12]
 8016682:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8016686:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
 801668a:	ebaa 0a03 	sub.w	sl, sl, r3
 801668e:	fa0f f38a 	sxth.w	r3, sl
 8016692:	9304      	str	r3, [sp, #16]
 8016694:	9b03      	ldr	r3, [sp, #12]
 8016696:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 801669a:	9b04      	ldr	r3, [sp, #16]
 801669c:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 80166a0:	9b05      	ldr	r3, [sp, #20]
 80166a2:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 80166a6:	a90e      	add	r1, sp, #56	@ 0x38
 80166a8:	9b06      	ldr	r3, [sp, #24]
 80166aa:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 80166ae:	a80c      	add	r0, sp, #48	@ 0x30
 80166b0:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
 80166b4:	f7f7 fd92 	bl	800e1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80166b8:	4640      	mov	r0, r8
 80166ba:	f7f7 fd67 	bl	800e18c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80166be:	a80e      	add	r0, sp, #56	@ 0x38
 80166c0:	f7f7 fd64 	bl	800e18c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80166c4:	4b38      	ldr	r3, [pc, #224]	@ (80167a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 80166c6:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
 80166ca:	881b      	ldrh	r3, [r3, #0]
 80166cc:	9307      	str	r3, [sp, #28]
 80166ce:	682b      	ldr	r3, [r5, #0]
 80166d0:	f8df b0d8 	ldr.w	fp, [pc, #216]	@ 80167ac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 80166d4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80166d6:	4628      	mov	r0, r5
 80166d8:	4798      	blx	r3
 80166da:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
 80166de:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 80166e2:	4681      	mov	r9, r0
 80166e4:	fb1a 3305 	smlabb	r3, sl, r5, r3
 80166e8:	f8db 0000 	ldr.w	r0, [fp]
 80166ec:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 80166ee:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80166f2:	6803      	ldr	r3, [r0, #0]
 80166f4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80166f6:	4798      	blx	r3
 80166f8:	4607      	mov	r7, r0
 80166fa:	f8db 0000 	ldr.w	r0, [fp]
 80166fe:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 8016702:	6803      	ldr	r3, [r0, #0]
 8016704:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8016708:	9109      	str	r1, [sp, #36]	@ 0x24
 801670a:	9208      	str	r2, [sp, #32]
 801670c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801670e:	4798      	blx	r3
 8016710:	f010 0f01 	tst.w	r0, #1
 8016714:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8016718:	d012      	beq.n	8016740 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801671a:	f8db 0000 	ldr.w	r0, [fp]
 801671e:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 8016722:	6803      	ldr	r3, [r0, #0]
 8016724:	9200      	str	r2, [sp, #0]
 8016726:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
 8016728:	e898 0006 	ldmia.w	r8, {r1, r2}
 801672c:	462b      	mov	r3, r5
 801672e:	47b0      	blx	r6
 8016730:	9b03      	ldr	r3, [sp, #12]
 8016732:	8023      	strh	r3, [r4, #0]
 8016734:	9b04      	ldr	r3, [sp, #16]
 8016736:	8063      	strh	r3, [r4, #2]
 8016738:	9b05      	ldr	r3, [sp, #20]
 801673a:	80a3      	strh	r3, [r4, #4]
 801673c:	9b06      	ldr	r3, [sp, #24]
 801673e:	e78b      	b.n	8016658 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 8016740:	fb09 f202 	mul.w	r2, r9, r2
 8016744:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8016748:	440f      	add	r7, r1
 801674a:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
 801674e:	b166      	cbz	r6, 801676a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8016750:	9a07      	ldr	r2, [sp, #28]
 8016752:	4592      	cmp	sl, r2
 8016754:	d109      	bne.n	801676a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8016756:	f8db 0000 	ldr.w	r0, [fp]
 801675a:	6802      	ldr	r2, [r0, #0]
 801675c:	fb09 f303 	mul.w	r3, r9, r3
 8016760:	6b96      	ldr	r6, [r2, #56]	@ 0x38
 8016762:	4629      	mov	r1, r5
 8016764:	463a      	mov	r2, r7
 8016766:	47b0      	blx	r6
 8016768:	e7e2      	b.n	8016730 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801676a:	fb0a f303 	mul.w	r3, sl, r3
 801676e:	f8df b03c 	ldr.w	fp, [pc, #60]	@ 80167ac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8016772:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 8016776:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801677a:	4545      	cmp	r5, r8
 801677c:	d2d8      	bcs.n	8016730 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801677e:	f8db 0000 	ldr.w	r0, [fp]
 8016782:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8016786:	6802      	ldr	r2, [r0, #0]
 8016788:	4629      	mov	r1, r5
 801678a:	f8d2 a038 	ldr.w	sl, [r2, #56]	@ 0x38
 801678e:	005b      	lsls	r3, r3, #1
 8016790:	463a      	mov	r2, r7
 8016792:	47d0      	blx	sl
 8016794:	444f      	add	r7, r9
 8016796:	4435      	add	r5, r6
 8016798:	e7ef      	b.n	801677a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801679a:	bf00      	nop
 801679c:	20013082 	.word	0x20013082
 80167a0:	20013084 	.word	0x20013084
 80167a4:	20013086 	.word	0x20013086
 80167a8:	20013088 	.word	0x20013088
 80167ac:	20013090 	.word	0x20013090

080167b0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 80167b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80167b2:	4606      	mov	r6, r0
 80167b4:	b087      	sub	sp, #28
 80167b6:	460c      	mov	r4, r1
 80167b8:	4617      	mov	r7, r2
 80167ba:	461d      	mov	r5, r3
 80167bc:	b333      	cbz	r3, 801680c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80167be:	4608      	mov	r0, r1
 80167c0:	f7f3 fa95 	bl	8009cee <_ZNK8touchgfx4Rect7isEmptyEv>
 80167c4:	bb10      	cbnz	r0, 801680c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80167c6:	6820      	ldr	r0, [r4, #0]
 80167c8:	6861      	ldr	r1, [r4, #4]
 80167ca:	4c1c      	ldr	r4, [pc, #112]	@ (801683c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 80167cc:	ab04      	add	r3, sp, #16
 80167ce:	c303      	stmia	r3!, {r0, r1}
 80167d0:	a804      	add	r0, sp, #16
 80167d2:	f7f7 fcdb 	bl	800e18c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80167d6:	6820      	ldr	r0, [r4, #0]
 80167d8:	6803      	ldr	r3, [r0, #0]
 80167da:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80167dc:	4798      	blx	r3
 80167de:	2dff      	cmp	r5, #255	@ 0xff
 80167e0:	d016      	beq.n	8016810 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 80167e2:	f010 0f08 	tst.w	r0, #8
 80167e6:	6820      	ldr	r0, [r4, #0]
 80167e8:	d015      	beq.n	8016816 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 80167ea:	2400      	movs	r4, #0
 80167ec:	6801      	ldr	r1, [r0, #0]
 80167ee:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80167f2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80167f6:	e9cd 5402 	strd	r5, r4, [sp, #8]
 80167fa:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 80167fe:	9401      	str	r4, [sp, #4]
 8016800:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8016804:	9400      	str	r4, [sp, #0]
 8016806:	6e4c      	ldr	r4, [r1, #100]	@ 0x64
 8016808:	4639      	mov	r1, r7
 801680a:	47a0      	blx	r4
 801680c:	b007      	add	sp, #28
 801680e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8016810:	f010 0f02 	tst.w	r0, #2
 8016814:	e7e7      	b.n	80167e6 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8016816:	6803      	ldr	r3, [r0, #0]
 8016818:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801681a:	4798      	blx	r3
 801681c:	4b08      	ldr	r3, [pc, #32]	@ (8016840 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801681e:	881a      	ldrh	r2, [r3, #0]
 8016820:	6833      	ldr	r3, [r6, #0]
 8016822:	e9cd 7500 	strd	r7, r5, [sp]
 8016826:	4601      	mov	r1, r0
 8016828:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
 801682a:	4630      	mov	r0, r6
 801682c:	ab04      	add	r3, sp, #16
 801682e:	47a8      	blx	r5
 8016830:	6820      	ldr	r0, [r4, #0]
 8016832:	6803      	ldr	r3, [r0, #0]
 8016834:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8016836:	4798      	blx	r3
 8016838:	e7e8      	b.n	801680c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801683a:	bf00      	nop
 801683c:	20013090 	.word	0x20013090
 8016840:	20013088 	.word	0x20013088

08016844 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8016844:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016848:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
 801684c:	9e08      	ldr	r6, [sp, #32]
 801684e:	4688      	mov	r8, r1
 8016850:	4614      	mov	r4, r2
 8016852:	461d      	mov	r5, r3
 8016854:	2f00      	cmp	r7, #0
 8016856:	f000 80a9 	beq.w	80169ac <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801685a:	4618      	mov	r0, r3
 801685c:	f7f3 fa47 	bl	8009cee <_ZNK8touchgfx4Rect7isEmptyEv>
 8016860:	2800      	cmp	r0, #0
 8016862:	f040 80a3 	bne.w	80169ac <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8016866:	f9b5 1000 	ldrsh.w	r1, [r5]
 801686a:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801686e:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8016872:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8016876:	fb04 1303 	mla	r3, r4, r3, r1
 801687a:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801687e:	4365      	muls	r5, r4
 8016880:	2fff      	cmp	r7, #255	@ 0xff
 8016882:	eba4 0200 	sub.w	r2, r4, r0
 8016886:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801688a:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801688e:	d04a      	beq.n	8016926 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 8016890:	b2bc      	uxth	r4, r7
 8016892:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
 8016896:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801689a:	fa5f f788 	uxtb.w	r7, r8
 801689e:	b2f3      	uxtb	r3, r6
 80168a0:	0040      	lsls	r0, r0, #1
 80168a2:	fb0e fe04 	mul.w	lr, lr, r4
 80168a6:	4367      	muls	r7, r4
 80168a8:	4363      	muls	r3, r4
 80168aa:	ea4f 0842 	mov.w	r8, r2, lsl #1
 80168ae:	fa1f fc8c 	uxth.w	ip, ip
 80168b2:	42a9      	cmp	r1, r5
 80168b4:	d27a      	bcs.n	80169ac <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80168b6:	eb01 0900 	add.w	r9, r1, r0
 80168ba:	4549      	cmp	r1, r9
 80168bc:	d231      	bcs.n	8016922 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 80168be:	880a      	ldrh	r2, [r1, #0]
 80168c0:	1214      	asrs	r4, r2, #8
 80168c2:	10d6      	asrs	r6, r2, #3
 80168c4:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 80168c8:	00d2      	lsls	r2, r2, #3
 80168ca:	b2d2      	uxtb	r2, r2
 80168cc:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80168d0:	fb14 f40c 	smulbb	r4, r4, ip
 80168d4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80168d8:	4474      	add	r4, lr
 80168da:	fb12 f20c 	smulbb	r2, r2, ip
 80168de:	b2a4      	uxth	r4, r4
 80168e0:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80168e4:	441a      	add	r2, r3
 80168e6:	b292      	uxth	r2, r2
 80168e8:	f104 0a01 	add.w	sl, r4, #1
 80168ec:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80168f0:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80168f4:	fb16 f60c 	smulbb	r6, r6, ip
 80168f8:	f102 0a01 	add.w	sl, r2, #1
 80168fc:	443e      	add	r6, r7
 80168fe:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 8016902:	b2b6      	uxth	r6, r6
 8016904:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8016908:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801690c:	4322      	orrs	r2, r4
 801690e:	1c74      	adds	r4, r6, #1
 8016910:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8016914:	0976      	lsrs	r6, r6, #5
 8016916:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801691a:	4332      	orrs	r2, r6
 801691c:	f821 2b02 	strh.w	r2, [r1], #2
 8016920:	e7cb      	b.n	80168ba <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 8016922:	4441      	add	r1, r8
 8016924:	e7c5      	b.n	80168b2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 8016926:	4f22      	ldr	r7, [pc, #136]	@ (80169b0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 8016928:	0973      	lsrs	r3, r6, #5
 801692a:	ea08 0707 	and.w	r7, r8, r7
 801692e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8016932:	433b      	orrs	r3, r7
 8016934:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8016938:	4333      	orrs	r3, r6
 801693a:	07e7      	lsls	r7, r4, #31
 801693c:	b29b      	uxth	r3, r3
 801693e:	d50b      	bpl.n	8016958 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 8016940:	0040      	lsls	r0, r0, #1
 8016942:	0052      	lsls	r2, r2, #1
 8016944:	42a9      	cmp	r1, r5
 8016946:	d231      	bcs.n	80169ac <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8016948:	180c      	adds	r4, r1, r0
 801694a:	42a1      	cmp	r1, r4
 801694c:	d202      	bcs.n	8016954 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801694e:	f821 3b02 	strh.w	r3, [r1], #2
 8016952:	e7fa      	b.n	801694a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 8016954:	4411      	add	r1, r2
 8016956:	e7f5      	b.n	8016944 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 8016958:	078e      	lsls	r6, r1, #30
 801695a:	d008      	beq.n	801696e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801695c:	0066      	lsls	r6, r4, #1
 801695e:	460a      	mov	r2, r1
 8016960:	42aa      	cmp	r2, r5
 8016962:	d202      	bcs.n	801696a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 8016964:	8013      	strh	r3, [r2, #0]
 8016966:	4432      	add	r2, r6
 8016968:	e7fa      	b.n	8016960 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801696a:	3102      	adds	r1, #2
 801696c:	3801      	subs	r0, #1
 801696e:	07c2      	lsls	r2, r0, #31
 8016970:	d50b      	bpl.n	801698a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 8016972:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
 8016976:	3a01      	subs	r2, #1
 8016978:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801697c:	0066      	lsls	r6, r4, #1
 801697e:	42aa      	cmp	r2, r5
 8016980:	d202      	bcs.n	8016988 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 8016982:	8013      	strh	r3, [r2, #0]
 8016984:	4432      	add	r2, r6
 8016986:	e7fa      	b.n	801697e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 8016988:	3801      	subs	r0, #1
 801698a:	b178      	cbz	r0, 80169ac <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801698c:	1040      	asrs	r0, r0, #1
 801698e:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 8016992:	0080      	lsls	r0, r0, #2
 8016994:	0064      	lsls	r4, r4, #1
 8016996:	42a9      	cmp	r1, r5
 8016998:	d208      	bcs.n	80169ac <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801699a:	180e      	adds	r6, r1, r0
 801699c:	460a      	mov	r2, r1
 801699e:	42b2      	cmp	r2, r6
 80169a0:	d202      	bcs.n	80169a8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 80169a2:	f842 3b04 	str.w	r3, [r2], #4
 80169a6:	e7fa      	b.n	801699e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 80169a8:	4421      	add	r1, r4
 80169aa:	e7f4      	b.n	8016996 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 80169ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80169b0:	00fff800 	.word	0x00fff800

080169b4 <_ZN8touchgfx8LCD16bppC1Ev>:
 80169b4:	2200      	movs	r2, #0
 80169b6:	4912      	ldr	r1, [pc, #72]	@ (8016a00 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 80169b8:	6001      	str	r1, [r0, #0]
 80169ba:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80169be:	e9c0 2203 	strd	r2, r2, [r0, #12]
 80169c2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80169c6:	e9c0 2207 	strd	r2, r2, [r0, #28]
 80169ca:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
 80169ce:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
 80169d2:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
 80169d6:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 80169da:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
 80169de:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
 80169e2:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
 80169e6:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
 80169ea:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
 80169ee:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
 80169f2:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
 80169f6:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
 80169fa:	e9c0 2221 	strd	r2, r2, [r0, #132]	@ 0x84
 80169fe:	4770      	bx	lr
 8016a00:	08023e38 	.word	0x08023e38

08016a04 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8016a04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016a08:	460d      	mov	r5, r1
 8016a0a:	b08d      	sub	sp, #52	@ 0x34
 8016a0c:	4604      	mov	r4, r0
 8016a0e:	6808      	ldr	r0, [r1, #0]
 8016a10:	6849      	ldr	r1, [r1, #4]
 8016a12:	4699      	mov	r9, r3
 8016a14:	ab08      	add	r3, sp, #32
 8016a16:	c303      	stmia	r3!, {r0, r1}
 8016a18:	6810      	ldr	r0, [r2, #0]
 8016a1a:	6851      	ldr	r1, [r2, #4]
 8016a1c:	ab0a      	add	r3, sp, #40	@ 0x28
 8016a1e:	c303      	stmia	r3!, {r0, r1}
 8016a20:	a808      	add	r0, sp, #32
 8016a22:	f7f7 fbb3 	bl	800e18c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016a26:	4629      	mov	r1, r5
 8016a28:	a80a      	add	r0, sp, #40	@ 0x28
 8016a2a:	f7f7 fbd7 	bl	800e1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016a2e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 8016a32:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 8016a36:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
 8016a3a:	4d63      	ldr	r5, [pc, #396]	@ (8016bc8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8016a3c:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
 8016a40:	6828      	ldr	r0, [r5, #0]
 8016a42:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 8016a46:	fb11 2103 	smlabb	r1, r1, r3, r2
 8016a4a:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8016a4e:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8016a52:	440a      	add	r2, r1
 8016a54:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8016a58:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 8016a5c:	4413      	add	r3, r2
 8016a5e:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8016a62:	6803      	ldr	r3, [r0, #0]
 8016a64:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8016a66:	4798      	blx	r3
 8016a68:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8016a6c:	d119      	bne.n	8016aa2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8016a6e:	f010 0f20 	tst.w	r0, #32
 8016a72:	6828      	ldr	r0, [r5, #0]
 8016a74:	d018      	beq.n	8016aa8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8016a76:	2500      	movs	r5, #0
 8016a78:	6801      	ldr	r1, [r0, #0]
 8016a7a:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8016a7e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8016a82:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8016a86:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
 8016a8a:	9502      	str	r5, [sp, #8]
 8016a8c:	b2b6      	uxth	r6, r6
 8016a8e:	fa1f f588 	uxth.w	r5, r8
 8016a92:	9601      	str	r6, [sp, #4]
 8016a94:	9500      	str	r5, [sp, #0]
 8016a96:	6d4d      	ldr	r5, [r1, #84]	@ 0x54
 8016a98:	4621      	mov	r1, r4
 8016a9a:	47a8      	blx	r5
 8016a9c:	b00d      	add	sp, #52	@ 0x34
 8016a9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016aa2:	f010 0f40 	tst.w	r0, #64	@ 0x40
 8016aa6:	e7e4      	b.n	8016a72 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8016aa8:	6803      	ldr	r3, [r0, #0]
 8016aaa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016aac:	4798      	blx	r3
 8016aae:	4947      	ldr	r1, [pc, #284]	@ (8016bcc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8016ab0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8016ab4:	880b      	ldrh	r3, [r1, #0]
 8016ab6:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
 8016aba:	fb03 5202 	mla	r2, r3, r2, r5
 8016abe:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8016ac2:	4373      	muls	r3, r6
 8016ac4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8016ac8:	9307      	str	r3, [sp, #28]
 8016aca:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8016ace:	9306      	str	r3, [sp, #24]
 8016ad0:	468a      	mov	sl, r1
 8016ad2:	9b07      	ldr	r3, [sp, #28]
 8016ad4:	4298      	cmp	r0, r3
 8016ad6:	d270      	bcs.n	8016bba <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8016ad8:	9b06      	ldr	r3, [sp, #24]
 8016ada:	4621      	mov	r1, r4
 8016adc:	eb00 0b03 	add.w	fp, r0, r3
 8016ae0:	4558      	cmp	r0, fp
 8016ae2:	d25d      	bcs.n	8016ba0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8016ae4:	f851 4b04 	ldr.w	r4, [r1], #4
 8016ae8:	0e23      	lsrs	r3, r4, #24
 8016aea:	d014      	beq.n	8016b16 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8016aec:	2bff      	cmp	r3, #255	@ 0xff
 8016aee:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 8016af2:	d112      	bne.n	8016b1a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8016af4:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8016af8:	d10f      	bne.n	8016b1a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8016afa:	0963      	lsrs	r3, r4, #5
 8016afc:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 8016b00:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8016b04:	f02c 0c07 	bic.w	ip, ip, #7
 8016b08:	ea43 0c0c 	orr.w	ip, r3, ip
 8016b0c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8016b10:	ea4c 0404 	orr.w	r4, ip, r4
 8016b14:	8004      	strh	r4, [r0, #0]
 8016b16:	3002      	adds	r0, #2
 8016b18:	e7e2      	b.n	8016ae0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 8016b1a:	fb09 f303 	mul.w	r3, r9, r3
 8016b1e:	8807      	ldrh	r7, [r0, #0]
 8016b20:	1c5a      	adds	r2, r3, #1
 8016b22:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8016b26:	1212      	asrs	r2, r2, #8
 8016b28:	123e      	asrs	r6, r7, #8
 8016b2a:	b293      	uxth	r3, r2
 8016b2c:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8016b30:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8016b34:	43d2      	mvns	r2, r2
 8016b36:	b2d2      	uxtb	r2, r2
 8016b38:	10fd      	asrs	r5, r7, #3
 8016b3a:	fb1e fe03 	smulbb	lr, lr, r3
 8016b3e:	00ff      	lsls	r7, r7, #3
 8016b40:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8016b44:	fb06 e602 	mla	r6, r6, r2, lr
 8016b48:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8016b4c:	b2ff      	uxtb	r7, r7
 8016b4e:	fa5f fc8c 	uxtb.w	ip, ip
 8016b52:	b2e4      	uxtb	r4, r4
 8016b54:	b2b6      	uxth	r6, r6
 8016b56:	fb1c fc03 	smulbb	ip, ip, r3
 8016b5a:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8016b5e:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8016b62:	fb14 f403 	smulbb	r4, r4, r3
 8016b66:	fb05 c502 	mla	r5, r5, r2, ip
 8016b6a:	f106 0e01 	add.w	lr, r6, #1
 8016b6e:	fb07 4702 	mla	r7, r7, r2, r4
 8016b72:	b2ad      	uxth	r5, r5
 8016b74:	b2bf      	uxth	r7, r7
 8016b76:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8016b7a:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
 8016b7e:	f105 0c01 	add.w	ip, r5, #1
 8016b82:	1c7e      	adds	r6, r7, #1
 8016b84:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8016b88:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8016b8c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016b90:	096d      	lsrs	r5, r5, #5
 8016b92:	ea46 060e 	orr.w	r6, r6, lr
 8016b96:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8016b9a:	432e      	orrs	r6, r5
 8016b9c:	8006      	strh	r6, [r0, #0]
 8016b9e:	e7ba      	b.n	8016b16 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8016ba0:	f8ba 3000 	ldrh.w	r3, [sl]
 8016ba4:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
 8016ba8:	eba3 0308 	sub.w	r3, r3, r8
 8016bac:	eba4 0408 	sub.w	r4, r4, r8
 8016bb0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016bb4:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8016bb8:	e78b      	b.n	8016ad2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8016bba:	4b03      	ldr	r3, [pc, #12]	@ (8016bc8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8016bbc:	6818      	ldr	r0, [r3, #0]
 8016bbe:	6803      	ldr	r3, [r0, #0]
 8016bc0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8016bc2:	4798      	blx	r3
 8016bc4:	e76a      	b.n	8016a9c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8016bc6:	bf00      	nop
 8016bc8:	20013090 	.word	0x20013090
 8016bcc:	20013088 	.word	0x20013088

08016bd0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8016bd0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8016bd4:	460c      	mov	r4, r1
 8016bd6:	b085      	sub	sp, #20
 8016bd8:	6810      	ldr	r0, [r2, #0]
 8016bda:	6851      	ldr	r1, [r2, #4]
 8016bdc:	466d      	mov	r5, sp
 8016bde:	c503      	stmia	r5!, {r0, r1}
 8016be0:	6818      	ldr	r0, [r3, #0]
 8016be2:	6859      	ldr	r1, [r3, #4]
 8016be4:	4616      	mov	r6, r2
 8016be6:	c503      	stmia	r5!, {r0, r1}
 8016be8:	4668      	mov	r0, sp
 8016bea:	f7f7 facf 	bl	800e18c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016bee:	4631      	mov	r1, r6
 8016bf0:	a802      	add	r0, sp, #8
 8016bf2:	f7f7 faf3 	bl	800e1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016bf6:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8016bfa:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8016bfe:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8016c02:	4d28      	ldr	r5, [pc, #160]	@ (8016ca4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8016c04:	4e28      	ldr	r6, [pc, #160]	@ (8016ca8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 8016c06:	6828      	ldr	r0, [r5, #0]
 8016c08:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8016c0c:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8016c10:	fb11 2103 	smlabb	r1, r1, r3, r2
 8016c14:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8016c18:	f8bd 1000 	ldrh.w	r1, [sp]
 8016c1c:	440a      	add	r2, r1
 8016c1e:	f8ad 2008 	strh.w	r2, [sp, #8]
 8016c22:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8016c26:	4413      	add	r3, r2
 8016c28:	f8ad 300a 	strh.w	r3, [sp, #10]
 8016c2c:	6803      	ldr	r3, [r0, #0]
 8016c2e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016c30:	4798      	blx	r3
 8016c32:	8833      	ldrh	r3, [r6, #0]
 8016c34:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8016c38:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8016c3c:	f8df e06c 	ldr.w	lr, [pc, #108]	@ 8016cac <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8016c40:	fb03 1202 	mla	r2, r3, r2, r1
 8016c44:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8016c48:	fb08 f303 	mul.w	r3, r8, r3
 8016c4c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8016c50:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8016c54:	4298      	cmp	r0, r3
 8016c56:	d21d      	bcs.n	8016c94 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8016c58:	eb00 080c 	add.w	r8, r0, ip
 8016c5c:	4540      	cmp	r0, r8
 8016c5e:	d20f      	bcs.n	8016c80 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8016c60:	f854 1b04 	ldr.w	r1, [r4], #4
 8016c64:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8016c68:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8016c6c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8016c70:	ea42 0209 	orr.w	r2, r2, r9
 8016c74:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8016c78:	430a      	orrs	r2, r1
 8016c7a:	f820 2b02 	strh.w	r2, [r0], #2
 8016c7e:	e7ed      	b.n	8016c5c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8016c80:	8832      	ldrh	r2, [r6, #0]
 8016c82:	1bd2      	subs	r2, r2, r7
 8016c84:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8016c88:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8016c8c:	1bd2      	subs	r2, r2, r7
 8016c8e:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8016c92:	e7df      	b.n	8016c54 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8016c94:	6828      	ldr	r0, [r5, #0]
 8016c96:	6803      	ldr	r3, [r0, #0]
 8016c98:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8016c9a:	4798      	blx	r3
 8016c9c:	b005      	add	sp, #20
 8016c9e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8016ca2:	bf00      	nop
 8016ca4:	20013090 	.word	0x20013090
 8016ca8:	20013088 	.word	0x20013088
 8016cac:	fffff800 	.word	0xfffff800

08016cb0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8016cb0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016cb4:	460e      	mov	r6, r1
 8016cb6:	b08e      	sub	sp, #56	@ 0x38
 8016cb8:	4604      	mov	r4, r0
 8016cba:	6808      	ldr	r0, [r1, #0]
 8016cbc:	6849      	ldr	r1, [r1, #4]
 8016cbe:	f8df 81d8 	ldr.w	r8, [pc, #472]	@ 8016e98 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8016cc2:	f8df 91d8 	ldr.w	r9, [pc, #472]	@ 8016e9c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 8016cc6:	461d      	mov	r5, r3
 8016cc8:	ab0a      	add	r3, sp, #40	@ 0x28
 8016cca:	c303      	stmia	r3!, {r0, r1}
 8016ccc:	6810      	ldr	r0, [r2, #0]
 8016cce:	6851      	ldr	r1, [r2, #4]
 8016cd0:	ab0c      	add	r3, sp, #48	@ 0x30
 8016cd2:	c303      	stmia	r3!, {r0, r1}
 8016cd4:	a80a      	add	r0, sp, #40	@ 0x28
 8016cd6:	f7f7 fa59 	bl	800e18c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016cda:	4631      	mov	r1, r6
 8016cdc:	a80c      	add	r0, sp, #48	@ 0x30
 8016cde:	f7f7 fa7d 	bl	800e1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016ce2:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8016ce6:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8016cea:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8016cee:	f8d8 0000 	ldr.w	r0, [r8]
 8016cf2:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
 8016cf6:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8016cfa:	fb11 2103 	smlabb	r1, r1, r3, r2
 8016cfe:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8016d02:	440c      	add	r4, r1
 8016d04:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 8016d08:	440a      	add	r2, r1
 8016d0a:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8016d0e:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 8016d12:	4413      	add	r3, r2
 8016d14:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8016d18:	6803      	ldr	r3, [r0, #0]
 8016d1a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8016d1c:	4798      	blx	r3
 8016d1e:	2dff      	cmp	r5, #255	@ 0xff
 8016d20:	d124      	bne.n	8016d6c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 8016d22:	f010 0f01 	tst.w	r0, #1
 8016d26:	f8d8 0000 	ldr.w	r0, [r8]
 8016d2a:	d022      	beq.n	8016d72 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8016d2c:	2100      	movs	r1, #0
 8016d2e:	f8d0 c000 	ldr.w	ip, [r0]
 8016d32:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8016d36:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8016d3a:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8016d3e:	f04f 0e01 	mov.w	lr, #1
 8016d42:	f8cd e018 	str.w	lr, [sp, #24]
 8016d46:	f8b9 e000 	ldrh.w	lr, [r9]
 8016d4a:	9503      	str	r5, [sp, #12]
 8016d4c:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8016d50:	b2b6      	uxth	r6, r6
 8016d52:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8016d56:	9102      	str	r1, [sp, #8]
 8016d58:	b2bf      	uxth	r7, r7
 8016d5a:	9601      	str	r6, [sp, #4]
 8016d5c:	9700      	str	r7, [sp, #0]
 8016d5e:	f8dc 5044 	ldr.w	r5, [ip, #68]	@ 0x44
 8016d62:	4621      	mov	r1, r4
 8016d64:	47a8      	blx	r5
 8016d66:	b00e      	add	sp, #56	@ 0x38
 8016d68:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8016d6c:	f010 0f04 	tst.w	r0, #4
 8016d70:	e7d9      	b.n	8016d26 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8016d72:	6803      	ldr	r3, [r0, #0]
 8016d74:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016d76:	4798      	blx	r3
 8016d78:	f8b9 3000 	ldrh.w	r3, [r9]
 8016d7c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8016d80:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 8016d84:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 8016d88:	fb03 1202 	mla	r2, r3, r2, r1
 8016d8c:	ebac 0c07 	sub.w	ip, ip, r7
 8016d90:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8016d94:	435e      	muls	r6, r3
 8016d96:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8016d9a:	2dff      	cmp	r5, #255	@ 0xff
 8016d9c:	eba3 0707 	sub.w	r7, r3, r7
 8016da0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8016da4:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8016da8:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8016dac:	d049      	beq.n	8016e42 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8016dae:	43eb      	mvns	r3, r5
 8016db0:	fa1f f985 	uxth.w	r9, r5
 8016db4:	b2db      	uxtb	r3, r3
 8016db6:	42b0      	cmp	r0, r6
 8016db8:	d266      	bcs.n	8016e88 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8016dba:	eb00 0a0e 	add.w	sl, r0, lr
 8016dbe:	4550      	cmp	r0, sl
 8016dc0:	4621      	mov	r1, r4
 8016dc2:	f104 0403 	add.w	r4, r4, #3
 8016dc6:	d25b      	bcs.n	8016e80 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8016dc8:	8802      	ldrh	r2, [r0, #0]
 8016dca:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8016dce:	ea4f 2822 	mov.w	r8, r2, asr #8
 8016dd2:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 8016dd6:	fb11 f109 	smulbb	r1, r1, r9
 8016dda:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8016dde:	10d5      	asrs	r5, r2, #3
 8016de0:	fb08 1803 	mla	r8, r8, r3, r1
 8016de4:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8016de8:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8016dec:	fb11 f109 	smulbb	r1, r1, r9
 8016df0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8016df4:	fb05 1503 	mla	r5, r5, r3, r1
 8016df8:	00d2      	lsls	r2, r2, #3
 8016dfa:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8016dfe:	b2d2      	uxtb	r2, r2
 8016e00:	fb11 f109 	smulbb	r1, r1, r9
 8016e04:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8016e08:	fa1f f888 	uxth.w	r8, r8
 8016e0c:	fb02 1203 	mla	r2, r2, r3, r1
 8016e10:	b292      	uxth	r2, r2
 8016e12:	f108 0101 	add.w	r1, r8, #1
 8016e16:	b2ad      	uxth	r5, r5
 8016e18:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8016e1c:	1c51      	adds	r1, r2, #1
 8016e1e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8016e22:	1c69      	adds	r1, r5, #1
 8016e24:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8016e28:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 8016e2c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016e30:	096d      	lsrs	r5, r5, #5
 8016e32:	ea42 0208 	orr.w	r2, r2, r8
 8016e36:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8016e3a:	432a      	orrs	r2, r5
 8016e3c:	f820 2b02 	strh.w	r2, [r0], #2
 8016e40:	e7bd      	b.n	8016dbe <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8016e42:	4a14      	ldr	r2, [pc, #80]	@ (8016e94 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8016e44:	42b0      	cmp	r0, r6
 8016e46:	d21f      	bcs.n	8016e88 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8016e48:	eb00 050e 	add.w	r5, r0, lr
 8016e4c:	42a8      	cmp	r0, r5
 8016e4e:	4621      	mov	r1, r4
 8016e50:	f104 0403 	add.w	r4, r4, #3
 8016e54:	d210      	bcs.n	8016e78 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8016e56:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8016e5a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8016e5e:	00db      	lsls	r3, r3, #3
 8016e60:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8016e64:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8016e68:	430b      	orrs	r3, r1
 8016e6a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8016e6e:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8016e72:	f820 3b02 	strh.w	r3, [r0], #2
 8016e76:	e7e9      	b.n	8016e4c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8016e78:	4438      	add	r0, r7
 8016e7a:	eb01 040c 	add.w	r4, r1, ip
 8016e7e:	e7e1      	b.n	8016e44 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8016e80:	4438      	add	r0, r7
 8016e82:	eb01 040c 	add.w	r4, r1, ip
 8016e86:	e796      	b.n	8016db6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8016e88:	4b03      	ldr	r3, [pc, #12]	@ (8016e98 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 8016e8a:	6818      	ldr	r0, [r3, #0]
 8016e8c:	6803      	ldr	r3, [r0, #0]
 8016e8e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8016e90:	4798      	blx	r3
 8016e92:	e768      	b.n	8016d66 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8016e94:	fffff800 	.word	0xfffff800
 8016e98:	20013090 	.word	0x20013090
 8016e9c:	20013088 	.word	0x20013088

08016ea0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8016ea0:	b4f0      	push	{r4, r5, r6, r7}
 8016ea2:	4616      	mov	r6, r2
 8016ea4:	2e01      	cmp	r6, #1
 8016ea6:	461c      	mov	r4, r3
 8016ea8:	460d      	mov	r5, r1
 8016eaa:	9a04      	ldr	r2, [sp, #16]
 8016eac:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8016eb0:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8016eb4:	d012      	beq.n	8016edc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 8016eb6:	d303      	bcc.n	8016ec0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8016eb8:	2e02      	cmp	r6, #2
 8016eba:	d00a      	beq.n	8016ed2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8016ebc:	bcf0      	pop	{r4, r5, r6, r7}
 8016ebe:	4770      	bx	lr
 8016ec0:	6805      	ldr	r5, [r0, #0]
 8016ec2:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8016ec6:	68ed      	ldr	r5, [r5, #12]
 8016ec8:	4613      	mov	r3, r2
 8016eca:	46ac      	mov	ip, r5
 8016ecc:	4622      	mov	r2, r4
 8016ece:	bcf0      	pop	{r4, r5, r6, r7}
 8016ed0:	4760      	bx	ip
 8016ed2:	4621      	mov	r1, r4
 8016ed4:	4628      	mov	r0, r5
 8016ed6:	bcf0      	pop	{r4, r5, r6, r7}
 8016ed8:	f7ff bd94 	b.w	8016a04 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8016edc:	4621      	mov	r1, r4
 8016ede:	4628      	mov	r0, r5
 8016ee0:	bcf0      	pop	{r4, r5, r6, r7}
 8016ee2:	f7ff bee5 	b.w	8016cb0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08016ee8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8016ee8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016eec:	4681      	mov	r9, r0
 8016eee:	b093      	sub	sp, #76	@ 0x4c
 8016ef0:	6810      	ldr	r0, [r2, #0]
 8016ef2:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
 8016ef6:	4f6d      	ldr	r7, [pc, #436]	@ (80170ac <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8016ef8:	4688      	mov	r8, r1
 8016efa:	6851      	ldr	r1, [r2, #4]
 8016efc:	ac0e      	add	r4, sp, #56	@ 0x38
 8016efe:	c403      	stmia	r4!, {r0, r1}
 8016f00:	6818      	ldr	r0, [r3, #0]
 8016f02:	6859      	ldr	r1, [r3, #4]
 8016f04:	ac10      	add	r4, sp, #64	@ 0x40
 8016f06:	4616      	mov	r6, r2
 8016f08:	c403      	stmia	r4!, {r0, r1}
 8016f0a:	a80e      	add	r0, sp, #56	@ 0x38
 8016f0c:	f7f7 f93e 	bl	800e18c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016f10:	4631      	mov	r1, r6
 8016f12:	a810      	add	r0, sp, #64	@ 0x40
 8016f14:	f7f7 f962 	bl	800e1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016f18:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 8016f1c:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 8016f20:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 8016f24:	4e62      	ldr	r6, [pc, #392]	@ (80170b0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8016f26:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
 8016f2a:	6830      	ldr	r0, [r6, #0]
 8016f2c:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8016f30:	fb11 2103 	smlabb	r1, r1, r3, r2
 8016f34:	4489      	add	r9, r1
 8016f36:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 8016f3a:	440a      	add	r2, r1
 8016f3c:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 8016f40:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8016f44:	4413      	add	r3, r2
 8016f46:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8016f4a:	6803      	ldr	r3, [r0, #0]
 8016f4c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8016f4e:	4798      	blx	r3
 8016f50:	f010 0f80 	tst.w	r0, #128	@ 0x80
 8016f54:	6830      	ldr	r0, [r6, #0]
 8016f56:	d01d      	beq.n	8016f94 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8016f58:	2200      	movs	r2, #0
 8016f5a:	6801      	ldr	r1, [r0, #0]
 8016f5c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8016f60:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8016f64:	220b      	movs	r2, #11
 8016f66:	9207      	str	r2, [sp, #28]
 8016f68:	883a      	ldrh	r2, [r7, #0]
 8016f6a:	9206      	str	r2, [sp, #24]
 8016f6c:	2201      	movs	r2, #1
 8016f6e:	e9cd a204 	strd	sl, r2, [sp, #16]
 8016f72:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
 8016f76:	9203      	str	r2, [sp, #12]
 8016f78:	b2a4      	uxth	r4, r4
 8016f7a:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
 8016f7e:	9200      	str	r2, [sp, #0]
 8016f80:	b2ad      	uxth	r5, r5
 8016f82:	9502      	str	r5, [sp, #8]
 8016f84:	9401      	str	r4, [sp, #4]
 8016f86:	6c0c      	ldr	r4, [r1, #64]	@ 0x40
 8016f88:	4642      	mov	r2, r8
 8016f8a:	4649      	mov	r1, r9
 8016f8c:	47a0      	blx	r4
 8016f8e:	b013      	add	sp, #76	@ 0x4c
 8016f90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016f94:	6803      	ldr	r3, [r0, #0]
 8016f96:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016f98:	4798      	blx	r3
 8016f9a:	883b      	ldrh	r3, [r7, #0]
 8016f9c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8016fa0:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 8016fa4:	fb03 1202 	mla	r2, r3, r2, r1
 8016fa8:	435d      	muls	r5, r3
 8016faa:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8016fae:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8016fb2:	920c      	str	r2, [sp, #48]	@ 0x30
 8016fb4:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8016fb8:	1b12      	subs	r2, r2, r4
 8016fba:	920d      	str	r2, [sp, #52]	@ 0x34
 8016fbc:	0062      	lsls	r2, r4, #1
 8016fbe:	1b1c      	subs	r4, r3, r4
 8016fc0:	0063      	lsls	r3, r4, #1
 8016fc2:	920a      	str	r2, [sp, #40]	@ 0x28
 8016fc4:	930b      	str	r3, [sp, #44]	@ 0x2c
 8016fc6:	f04f 0e04 	mov.w	lr, #4
 8016fca:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8016fcc:	4298      	cmp	r0, r3
 8016fce:	d266      	bcs.n	801709e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8016fd0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8016fd2:	eb00 0b03 	add.w	fp, r0, r3
 8016fd6:	4558      	cmp	r0, fp
 8016fd8:	d25c      	bcs.n	8017094 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8016fda:	f819 3b01 	ldrb.w	r3, [r9], #1
 8016fde:	fb1e e303 	smlabb	r3, lr, r3, lr
 8016fe2:	f858 2003 	ldr.w	r2, [r8, r3]
 8016fe6:	0e11      	lsrs	r1, r2, #24
 8016fe8:	d012      	beq.n	8017010 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8016fea:	29ff      	cmp	r1, #255	@ 0xff
 8016fec:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8016ff0:	d110      	bne.n	8017014 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8016ff2:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8016ff6:	d10d      	bne.n	8017014 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8016ff8:	0953      	lsrs	r3, r2, #5
 8016ffa:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
 8016ffe:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8017002:	f027 0707 	bic.w	r7, r7, #7
 8017006:	431f      	orrs	r7, r3
 8017008:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801700c:	433a      	orrs	r2, r7
 801700e:	8002      	strh	r2, [r0, #0]
 8017010:	3002      	adds	r0, #2
 8017012:	e7e0      	b.n	8016fd6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8017014:	fb0a f101 	mul.w	r1, sl, r1
 8017018:	8806      	ldrh	r6, [r0, #0]
 801701a:	1c4b      	adds	r3, r1, #1
 801701c:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8017020:	1235      	asrs	r5, r6, #8
 8017022:	10f4      	asrs	r4, r6, #3
 8017024:	121b      	asrs	r3, r3, #8
 8017026:	00f6      	lsls	r6, r6, #3
 8017028:	b299      	uxth	r1, r3
 801702a:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801702e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8017032:	b2f6      	uxtb	r6, r6
 8017034:	43db      	mvns	r3, r3
 8017036:	b2d2      	uxtb	r2, r2
 8017038:	b2db      	uxtb	r3, r3
 801703a:	fb1c fc01 	smulbb	ip, ip, r1
 801703e:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8017042:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017046:	fb12 f201 	smulbb	r2, r2, r1
 801704a:	fb05 c503 	mla	r5, r5, r3, ip
 801704e:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8017052:	b2ff      	uxtb	r7, r7
 8017054:	fb06 2203 	mla	r2, r6, r3, r2
 8017058:	b2ad      	uxth	r5, r5
 801705a:	fb17 f701 	smulbb	r7, r7, r1
 801705e:	b292      	uxth	r2, r2
 8017060:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8017064:	fb04 7403 	mla	r4, r4, r3, r7
 8017068:	f105 0c01 	add.w	ip, r5, #1
 801706c:	1c57      	adds	r7, r2, #1
 801706e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8017072:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8017076:	b2a4      	uxth	r4, r4
 8017078:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801707c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8017080:	433d      	orrs	r5, r7
 8017082:	1c67      	adds	r7, r4, #1
 8017084:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8017088:	0964      	lsrs	r4, r4, #5
 801708a:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801708e:	4325      	orrs	r5, r4
 8017090:	8005      	strh	r5, [r0, #0]
 8017092:	e7bd      	b.n	8017010 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8017094:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8017096:	4418      	add	r0, r3
 8017098:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801709a:	4499      	add	r9, r3
 801709c:	e795      	b.n	8016fca <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801709e:	4b04      	ldr	r3, [pc, #16]	@ (80170b0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 80170a0:	6818      	ldr	r0, [r3, #0]
 80170a2:	6803      	ldr	r3, [r0, #0]
 80170a4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80170a6:	4798      	blx	r3
 80170a8:	e771      	b.n	8016f8e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 80170aa:	bf00      	nop
 80170ac:	20013088 	.word	0x20013088
 80170b0:	20013090 	.word	0x20013090

080170b4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 80170b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80170b8:	b087      	sub	sp, #28
 80170ba:	4680      	mov	r8, r0
 80170bc:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 80170c0:	460d      	mov	r5, r1
 80170c2:	4614      	mov	r4, r2
 80170c4:	2e00      	cmp	r6, #0
 80170c6:	f000 80b9 	beq.w	801723c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 80170ca:	6810      	ldr	r0, [r2, #0]
 80170cc:	6851      	ldr	r1, [r2, #4]
 80170ce:	af02      	add	r7, sp, #8
 80170d0:	c703      	stmia	r7!, {r0, r1}
 80170d2:	6818      	ldr	r0, [r3, #0]
 80170d4:	6859      	ldr	r1, [r3, #4]
 80170d6:	af04      	add	r7, sp, #16
 80170d8:	c703      	stmia	r7!, {r0, r1}
 80170da:	a802      	add	r0, sp, #8
 80170dc:	f7f7 f856 	bl	800e18c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80170e0:	4621      	mov	r1, r4
 80170e2:	a804      	add	r0, sp, #16
 80170e4:	f7f7 f87a 	bl	800e1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80170e8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80170ec:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80170f0:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 80170f4:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 80170f8:	fb14 2103 	smlabb	r1, r4, r3, r2
 80170fc:	eb08 0401 	add.w	r4, r8, r1
 8017100:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8017104:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8017108:	440a      	add	r2, r1
 801710a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801710e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8017112:	4413      	add	r3, r2
 8017114:	f8ad 3012 	strh.w	r3, [sp, #18]
 8017118:	4b4a      	ldr	r3, [pc, #296]	@ (8017244 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801711a:	6818      	ldr	r0, [r3, #0]
 801711c:	6803      	ldr	r3, [r0, #0]
 801711e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017120:	4798      	blx	r3
 8017122:	4b49      	ldr	r3, [pc, #292]	@ (8017248 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8017124:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8017128:	881a      	ldrh	r2, [r3, #0]
 801712a:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801712e:	2eff      	cmp	r6, #255	@ 0xff
 8017130:	fb02 c101 	mla	r1, r2, r1, ip
 8017134:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8017138:	fb02 f207 	mul.w	r2, r2, r7
 801713c:	f105 0104 	add.w	r1, r5, #4
 8017140:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8017144:	461d      	mov	r5, r3
 8017146:	d05a      	beq.n	80171fe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8017148:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
 801714c:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8017150:	b2b6      	uxth	r6, r6
 8017152:	fa1f fe8e 	uxth.w	lr, lr
 8017156:	9301      	str	r3, [sp, #4]
 8017158:	4282      	cmp	r2, r0
 801715a:	d96a      	bls.n	8017232 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801715c:	eb00 0b0a 	add.w	fp, r0, sl
 8017160:	4583      	cmp	fp, r0
 8017162:	d940      	bls.n	80171e6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8017164:	f814 3b01 	ldrb.w	r3, [r4], #1
 8017168:	8805      	ldrh	r5, [r0, #0]
 801716a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801716e:	122f      	asrs	r7, r5, #8
 8017170:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8017174:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8017178:	fb17 f70e 	smulbb	r7, r7, lr
 801717c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8017180:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8017184:	00ed      	lsls	r5, r5, #3
 8017186:	fb0c 7c06 	mla	ip, ip, r6, r7
 801718a:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801718e:	10df      	asrs	r7, r3, #3
 8017190:	b2ed      	uxtb	r5, r5
 8017192:	00db      	lsls	r3, r3, #3
 8017194:	fa1f fc8c 	uxth.w	ip, ip
 8017198:	fb19 f90e 	smulbb	r9, r9, lr
 801719c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80171a0:	b2db      	uxtb	r3, r3
 80171a2:	fb15 f50e 	smulbb	r5, r5, lr
 80171a6:	fb07 9706 	mla	r7, r7, r6, r9
 80171aa:	fb03 5306 	mla	r3, r3, r6, r5
 80171ae:	f10c 0901 	add.w	r9, ip, #1
 80171b2:	b29b      	uxth	r3, r3
 80171b4:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 80171b8:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
 80171bc:	f103 0c01 	add.w	ip, r3, #1
 80171c0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80171c4:	b2bf      	uxth	r7, r7
 80171c6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80171ca:	ea4c 0c09 	orr.w	ip, ip, r9
 80171ce:	f107 0901 	add.w	r9, r7, #1
 80171d2:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 80171d6:	097f      	lsrs	r7, r7, #5
 80171d8:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80171dc:	ea4c 0c07 	orr.w	ip, ip, r7
 80171e0:	f820 cb02 	strh.w	ip, [r0], #2
 80171e4:	e7bc      	b.n	8017160 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 80171e6:	9b01      	ldr	r3, [sp, #4]
 80171e8:	881b      	ldrh	r3, [r3, #0]
 80171ea:	eba3 0308 	sub.w	r3, r3, r8
 80171ee:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80171f2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80171f6:	eba3 0308 	sub.w	r3, r3, r8
 80171fa:	441c      	add	r4, r3
 80171fc:	e7ac      	b.n	8017158 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 80171fe:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8017202:	4282      	cmp	r2, r0
 8017204:	d915      	bls.n	8017232 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8017206:	eb00 060a 	add.w	r6, r0, sl
 801720a:	4286      	cmp	r6, r0
 801720c:	d906      	bls.n	801721c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801720e:	f814 3b01 	ldrb.w	r3, [r4], #1
 8017212:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8017216:	f820 3b02 	strh.w	r3, [r0], #2
 801721a:	e7f6      	b.n	801720a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801721c:	882b      	ldrh	r3, [r5, #0]
 801721e:	eba3 0308 	sub.w	r3, r3, r8
 8017222:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017226:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801722a:	eba3 0308 	sub.w	r3, r3, r8
 801722e:	441c      	add	r4, r3
 8017230:	e7e7      	b.n	8017202 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 8017232:	4b04      	ldr	r3, [pc, #16]	@ (8017244 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8017234:	6818      	ldr	r0, [r3, #0]
 8017236:	6803      	ldr	r3, [r0, #0]
 8017238:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801723a:	4798      	blx	r3
 801723c:	b007      	add	sp, #28
 801723e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017242:	bf00      	nop
 8017244:	20013090 	.word	0x20013090
 8017248:	20013088 	.word	0x20013088

0801724c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801724c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017250:	b091      	sub	sp, #68	@ 0x44
 8017252:	4680      	mov	r8, r0
 8017254:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
 8017258:	460f      	mov	r7, r1
 801725a:	4614      	mov	r4, r2
 801725c:	2d00      	cmp	r5, #0
 801725e:	d051      	beq.n	8017304 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8017260:	6810      	ldr	r0, [r2, #0]
 8017262:	6851      	ldr	r1, [r2, #4]
 8017264:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 8017468 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8017268:	ae0c      	add	r6, sp, #48	@ 0x30
 801726a:	c603      	stmia	r6!, {r0, r1}
 801726c:	6818      	ldr	r0, [r3, #0]
 801726e:	6859      	ldr	r1, [r3, #4]
 8017270:	ae0e      	add	r6, sp, #56	@ 0x38
 8017272:	c603      	stmia	r6!, {r0, r1}
 8017274:	a80c      	add	r0, sp, #48	@ 0x30
 8017276:	f7f6 ff89 	bl	800e18c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801727a:	4621      	mov	r1, r4
 801727c:	a80e      	add	r0, sp, #56	@ 0x38
 801727e:	f7f6 ffad 	bl	800e1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017282:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
 8017286:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 801728a:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 801728e:	f8d9 0000 	ldr.w	r0, [r9]
 8017292:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 8017296:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
 801729a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801729e:	eb08 0401 	add.w	r4, r8, r1
 80172a2:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 80172a6:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 801746c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 80172aa:	440a      	add	r2, r1
 80172ac:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 80172b0:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 80172b4:	4413      	add	r3, r2
 80172b6:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 80172ba:	6803      	ldr	r3, [r0, #0]
 80172bc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80172be:	4798      	blx	r3
 80172c0:	f010 0f80 	tst.w	r0, #128	@ 0x80
 80172c4:	f8d9 0000 	ldr.w	r0, [r9]
 80172c8:	d01f      	beq.n	801730a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 80172ca:	2200      	movs	r2, #0
 80172cc:	6801      	ldr	r1, [r0, #0]
 80172ce:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 80172d2:	e9cd 2208 	strd	r2, r2, [sp, #32]
 80172d6:	220b      	movs	r2, #11
 80172d8:	9207      	str	r2, [sp, #28]
 80172da:	f8b8 2000 	ldrh.w	r2, [r8]
 80172de:	9206      	str	r2, [sp, #24]
 80172e0:	2201      	movs	r2, #1
 80172e2:	e9cd 5204 	strd	r5, r2, [sp, #16]
 80172e6:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 80172ea:	9203      	str	r2, [sp, #12]
 80172ec:	fa1f f28a 	uxth.w	r2, sl
 80172f0:	9202      	str	r2, [sp, #8]
 80172f2:	b2b6      	uxth	r6, r6
 80172f4:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 80172f8:	9200      	str	r2, [sp, #0]
 80172fa:	9601      	str	r6, [sp, #4]
 80172fc:	6c0d      	ldr	r5, [r1, #64]	@ 0x40
 80172fe:	463a      	mov	r2, r7
 8017300:	4621      	mov	r1, r4
 8017302:	47a8      	blx	r5
 8017304:	b011      	add	sp, #68	@ 0x44
 8017306:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801730a:	6803      	ldr	r3, [r0, #0]
 801730c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801730e:	4798      	blx	r3
 8017310:	f8b8 2000 	ldrh.w	r2, [r8]
 8017314:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 8017318:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
 801731c:	2dff      	cmp	r5, #255	@ 0xff
 801731e:	fb02 1303 	mla	r3, r2, r3, r1
 8017322:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017326:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801732a:	fb0a fa02 	mul.w	sl, sl, r2
 801732e:	d062      	beq.n	80173f6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8017330:	ea6f 0c05 	mvn.w	ip, r5
 8017334:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8017338:	930a      	str	r3, [sp, #40]	@ 0x28
 801733a:	b2ad      	uxth	r5, r5
 801733c:	fa5f fc8c 	uxtb.w	ip, ip
 8017340:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 8017344:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8017346:	4298      	cmp	r0, r3
 8017348:	f080 8085 	bcs.w	8017456 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801734c:	eb00 0b09 	add.w	fp, r0, r9
 8017350:	4558      	cmp	r0, fp
 8017352:	d246      	bcs.n	80173e2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8017354:	f814 eb01 	ldrb.w	lr, [r4], #1
 8017358:	2303      	movs	r3, #3
 801735a:	2204      	movs	r2, #4
 801735c:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8017360:	eb07 0a0e 	add.w	sl, r7, lr
 8017364:	8803      	ldrh	r3, [r0, #0]
 8017366:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801736a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801736e:	1219      	asrs	r1, r3, #8
 8017370:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8017374:	fb18 f805 	smulbb	r8, r8, r5
 8017378:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801737c:	10da      	asrs	r2, r3, #3
 801737e:	fb01 810c 	mla	r1, r1, ip, r8
 8017382:	00db      	lsls	r3, r3, #3
 8017384:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8017388:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801738c:	b2db      	uxtb	r3, r3
 801738e:	fb18 f805 	smulbb	r8, r8, r5
 8017392:	fb1e fe05 	smulbb	lr, lr, r5
 8017396:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801739a:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801739e:	b289      	uxth	r1, r1
 80173a0:	fb02 820c 	mla	r2, r2, ip, r8
 80173a4:	fb03 e30c 	mla	r3, r3, ip, lr
 80173a8:	b292      	uxth	r2, r2
 80173aa:	b29b      	uxth	r3, r3
 80173ac:	f101 0801 	add.w	r8, r1, #1
 80173b0:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 80173b4:	f103 0e01 	add.w	lr, r3, #1
 80173b8:	f102 0801 	add.w	r8, r2, #1
 80173bc:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 80173c0:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 80173c4:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 80173c8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80173cc:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80173d0:	ea4e 0101 	orr.w	r1, lr, r1
 80173d4:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 80173d8:	ea41 0108 	orr.w	r1, r1, r8
 80173dc:	f820 1b02 	strh.w	r1, [r0], #2
 80173e0:	e7b6      	b.n	8017350 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 80173e2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80173e4:	881b      	ldrh	r3, [r3, #0]
 80173e6:	1b9b      	subs	r3, r3, r6
 80173e8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80173ec:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 80173f0:	1b9b      	subs	r3, r3, r6
 80173f2:	441c      	add	r4, r3
 80173f4:	e7a6      	b.n	8017344 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 80173f6:	491b      	ldr	r1, [pc, #108]	@ (8017464 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 80173f8:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 80173fc:	2203      	movs	r2, #3
 80173fe:	2504      	movs	r5, #4
 8017400:	4550      	cmp	r0, sl
 8017402:	d228      	bcs.n	8017456 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8017404:	eb00 0c09 	add.w	ip, r0, r9
 8017408:	4560      	cmp	r0, ip
 801740a:	4623      	mov	r3, r4
 801740c:	d219      	bcs.n	8017442 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801740e:	f893 e000 	ldrb.w	lr, [r3]
 8017412:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8017416:	eb07 0b0e 	add.w	fp, r7, lr
 801741a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801741e:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8017422:	f89b b001 	ldrb.w	fp, [fp, #1]
 8017426:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801742a:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801742e:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8017432:	ea43 030b 	orr.w	r3, r3, fp
 8017436:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801743a:	3401      	adds	r4, #1
 801743c:	f820 3b02 	strh.w	r3, [r0], #2
 8017440:	e7e2      	b.n	8017408 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 8017442:	f8b8 3000 	ldrh.w	r3, [r8]
 8017446:	1b9b      	subs	r3, r3, r6
 8017448:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801744c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8017450:	1b9b      	subs	r3, r3, r6
 8017452:	441c      	add	r4, r3
 8017454:	e7d4      	b.n	8017400 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 8017456:	4b04      	ldr	r3, [pc, #16]	@ (8017468 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8017458:	6818      	ldr	r0, [r3, #0]
 801745a:	6803      	ldr	r3, [r0, #0]
 801745c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801745e:	4798      	blx	r3
 8017460:	e750      	b.n	8017304 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8017462:	bf00      	nop
 8017464:	fffff800 	.word	0xfffff800
 8017468:	20013090 	.word	0x20013090
 801746c:	20013088 	.word	0x20013088

08017470 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8017470:	b4f0      	push	{r4, r5, r6, r7}
 8017472:	460c      	mov	r4, r1
 8017474:	4611      	mov	r1, r2
 8017476:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801747a:	780f      	ldrb	r7, [r1, #0]
 801747c:	784e      	ldrb	r6, [r1, #1]
 801747e:	2f01      	cmp	r7, #1
 8017480:	461a      	mov	r2, r3
 8017482:	9b04      	ldr	r3, [sp, #16]
 8017484:	d038      	beq.n	80174f8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
 8017486:	d31f      	bcc.n	80174c8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
 8017488:	2f02      	cmp	r7, #2
 801748a:	d14d      	bne.n	8017528 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801748c:	2e03      	cmp	r6, #3
 801748e:	d84b      	bhi.n	8017528 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8017490:	e8df f006 	tbb	[pc, r6]
 8017494:	17140702 	.word	0x17140702
 8017498:	9504      	str	r5, [sp, #16]
 801749a:	4620      	mov	r0, r4
 801749c:	bcf0      	pop	{r4, r5, r6, r7}
 801749e:	f7ff be09 	b.w	80170b4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 80174a2:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 80174a4:	2800      	cmp	r0, #0
 80174a6:	d03f      	beq.n	8017528 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80174a8:	6806      	ldr	r6, [r0, #0]
 80174aa:	e9cd 3504 	strd	r3, r5, [sp, #16]
 80174ae:	68b5      	ldr	r5, [r6, #8]
 80174b0:	4613      	mov	r3, r2
 80174b2:	46ac      	mov	ip, r5
 80174b4:	460a      	mov	r2, r1
 80174b6:	4621      	mov	r1, r4
 80174b8:	bcf0      	pop	{r4, r5, r6, r7}
 80174ba:	4760      	bx	ip
 80174bc:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 80174c0:	e7f0      	b.n	80174a4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 80174c2:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 80174c6:	e7ed      	b.n	80174a4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 80174c8:	2e03      	cmp	r6, #3
 80174ca:	d82d      	bhi.n	8017528 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80174cc:	e8df f006 	tbb	[pc, r6]
 80174d0:	110e0702 	.word	0x110e0702
 80174d4:	9504      	str	r5, [sp, #16]
 80174d6:	4620      	mov	r0, r4
 80174d8:	bcf0      	pop	{r4, r5, r6, r7}
 80174da:	f7ff bd05 	b.w	8016ee8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 80174de:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 80174e0:	b310      	cbz	r0, 8017528 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80174e2:	6806      	ldr	r6, [r0, #0]
 80174e4:	e9cd 3504 	strd	r3, r5, [sp, #16]
 80174e8:	68f5      	ldr	r5, [r6, #12]
 80174ea:	e7e1      	b.n	80174b0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 80174ec:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 80174f0:	e7f6      	b.n	80174e0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 80174f2:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 80174f6:	e7f3      	b.n	80174e0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 80174f8:	2e03      	cmp	r6, #3
 80174fa:	d815      	bhi.n	8017528 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80174fc:	e8df f006 	tbb	[pc, r6]
 8017500:	110e0702 	.word	0x110e0702
 8017504:	9504      	str	r5, [sp, #16]
 8017506:	4620      	mov	r0, r4
 8017508:	bcf0      	pop	{r4, r5, r6, r7}
 801750a:	f7ff be9f 	b.w	801724c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801750e:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8017510:	b150      	cbz	r0, 8017528 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8017512:	6806      	ldr	r6, [r0, #0]
 8017514:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8017518:	6935      	ldr	r5, [r6, #16]
 801751a:	e7c9      	b.n	80174b0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801751c:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8017520:	e7f6      	b.n	8017510 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 8017522:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 8017526:	e7f3      	b.n	8017510 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 8017528:	bcf0      	pop	{r4, r5, r6, r7}
 801752a:	4770      	bx	lr

0801752c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801752c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017530:	4604      	mov	r4, r0
 8017532:	b087      	sub	sp, #28
 8017534:	6810      	ldr	r0, [r2, #0]
 8017536:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
 801753a:	f8df 9238 	ldr.w	r9, [pc, #568]	@ 8017774 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801753e:	460e      	mov	r6, r1
 8017540:	6851      	ldr	r1, [r2, #4]
 8017542:	ad02      	add	r5, sp, #8
 8017544:	c503      	stmia	r5!, {r0, r1}
 8017546:	6818      	ldr	r0, [r3, #0]
 8017548:	6859      	ldr	r1, [r3, #4]
 801754a:	ad04      	add	r5, sp, #16
 801754c:	4617      	mov	r7, r2
 801754e:	c503      	stmia	r5!, {r0, r1}
 8017550:	a802      	add	r0, sp, #8
 8017552:	f7f6 fe1b 	bl	800e18c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017556:	4639      	mov	r1, r7
 8017558:	a804      	add	r0, sp, #16
 801755a:	f7f6 fe3f 	bl	800e1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801755e:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8017562:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8017566:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801756a:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801756e:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 8017572:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017576:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801757a:	440e      	add	r6, r1
 801757c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8017580:	440a      	add	r2, r1
 8017582:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017586:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801758a:	4413      	add	r3, r2
 801758c:	f8ad 3012 	strh.w	r3, [sp, #18]
 8017590:	4b77      	ldr	r3, [pc, #476]	@ (8017770 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8017592:	6818      	ldr	r0, [r3, #0]
 8017594:	6803      	ldr	r3, [r0, #0]
 8017596:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017598:	4798      	blx	r3
 801759a:	f8b9 b000 	ldrh.w	fp, [r9]
 801759e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80175a2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80175a6:	fb0b 2303 	mla	r3, fp, r3, r2
 80175aa:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80175ae:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 80175b2:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80175b6:	fb05 f50b 	mul.w	r5, r5, fp
 80175ba:	9300      	str	r3, [sp, #0]
 80175bc:	d069      	beq.n	8017692 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 80175be:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 80175c2:	4558      	cmp	r0, fp
 80175c4:	f080 80cc 	bcs.w	8017760 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80175c8:	9b00      	ldr	r3, [sp, #0]
 80175ca:	18c3      	adds	r3, r0, r3
 80175cc:	9301      	str	r3, [sp, #4]
 80175ce:	4631      	mov	r1, r6
 80175d0:	9b01      	ldr	r3, [sp, #4]
 80175d2:	4298      	cmp	r0, r3
 80175d4:	d24f      	bcs.n	8017676 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 80175d6:	f811 2b01 	ldrb.w	r2, [r1], #1
 80175da:	2a00      	cmp	r2, #0
 80175dc:	d048      	beq.n	8017670 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 80175de:	fb0a f202 	mul.w	r2, sl, r2
 80175e2:	1c53      	adds	r3, r2, #1
 80175e4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80175e8:	121b      	asrs	r3, r3, #8
 80175ea:	d041      	beq.n	8017670 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 80175ec:	8802      	ldrh	r2, [r0, #0]
 80175ee:	f8b4 c000 	ldrh.w	ip, [r4]
 80175f2:	b29e      	uxth	r6, r3
 80175f4:	1215      	asrs	r5, r2, #8
 80175f6:	43db      	mvns	r3, r3
 80175f8:	b2db      	uxtb	r3, r3
 80175fa:	ea4f 272c 	mov.w	r7, ip, asr #8
 80175fe:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8017602:	fb15 f503 	smulbb	r5, r5, r3
 8017606:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801760a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801760e:	00d2      	lsls	r2, r2, #3
 8017610:	fb07 5706 	mla	r7, r7, r6, r5
 8017614:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8017618:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801761c:	b2d2      	uxtb	r2, r2
 801761e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8017622:	b2bf      	uxth	r7, r7
 8017624:	fb1e fe03 	smulbb	lr, lr, r3
 8017628:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801762c:	fa5f fc8c 	uxtb.w	ip, ip
 8017630:	fb12 f203 	smulbb	r2, r2, r3
 8017634:	fb05 e506 	mla	r5, r5, r6, lr
 8017638:	fb0c 2c06 	mla	ip, ip, r6, r2
 801763c:	f107 0e01 	add.w	lr, r7, #1
 8017640:	fa1f fc8c 	uxth.w	ip, ip
 8017644:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8017648:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
 801764c:	f10c 0701 	add.w	r7, ip, #1
 8017650:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8017654:	b2ad      	uxth	r5, r5
 8017656:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801765a:	ea47 070e 	orr.w	r7, r7, lr
 801765e:	f105 0e01 	add.w	lr, r5, #1
 8017662:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8017666:	096d      	lsrs	r5, r5, #5
 8017668:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801766c:	432f      	orrs	r7, r5
 801766e:	8007      	strh	r7, [r0, #0]
 8017670:	3002      	adds	r0, #2
 8017672:	3402      	adds	r4, #2
 8017674:	e7ac      	b.n	80175d0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 8017676:	f8b9 3000 	ldrh.w	r3, [r9]
 801767a:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801767e:	eba3 0308 	sub.w	r3, r3, r8
 8017682:	eba6 0608 	sub.w	r6, r6, r8
 8017686:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801768a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801768e:	440e      	add	r6, r1
 8017690:	e797      	b.n	80175c2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8017692:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8017696:	42a8      	cmp	r0, r5
 8017698:	d262      	bcs.n	8017760 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801769a:	9b00      	ldr	r3, [sp, #0]
 801769c:	4631      	mov	r1, r6
 801769e:	eb00 0b03 	add.w	fp, r0, r3
 80176a2:	4558      	cmp	r0, fp
 80176a4:	d24e      	bcs.n	8017744 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 80176a6:	f811 3b01 	ldrb.w	r3, [r1], #1
 80176aa:	b12b      	cbz	r3, 80176b8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80176ac:	2bff      	cmp	r3, #255	@ 0xff
 80176ae:	f8b4 e000 	ldrh.w	lr, [r4]
 80176b2:	d104      	bne.n	80176be <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 80176b4:	f8a0 e000 	strh.w	lr, [r0]
 80176b8:	3002      	adds	r0, #2
 80176ba:	3402      	adds	r4, #2
 80176bc:	e7f1      	b.n	80176a2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 80176be:	8802      	ldrh	r2, [r0, #0]
 80176c0:	b29f      	uxth	r7, r3
 80176c2:	1216      	asrs	r6, r2, #8
 80176c4:	43db      	mvns	r3, r3
 80176c6:	b2db      	uxtb	r3, r3
 80176c8:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80176cc:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80176d0:	fb16 f603 	smulbb	r6, r6, r3
 80176d4:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 80176d8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80176dc:	00d2      	lsls	r2, r2, #3
 80176de:	fb0c 6c07 	mla	ip, ip, r7, r6
 80176e2:	b2d2      	uxtb	r2, r2
 80176e4:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80176e8:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 80176ec:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80176f0:	fb1a fa03 	smulbb	sl, sl, r3
 80176f4:	fa1f fc8c 	uxth.w	ip, ip
 80176f8:	fb12 f303 	smulbb	r3, r2, r3
 80176fc:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8017700:	fa5f fe8e 	uxtb.w	lr, lr
 8017704:	fb06 a607 	mla	r6, r6, r7, sl
 8017708:	f10c 0201 	add.w	r2, ip, #1
 801770c:	fb0e 3307 	mla	r3, lr, r7, r3
 8017710:	b2b6      	uxth	r6, r6
 8017712:	b29b      	uxth	r3, r3
 8017714:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8017718:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
 801771c:	f106 0a01 	add.w	sl, r6, #1
 8017720:	f103 0c01 	add.w	ip, r3, #1
 8017724:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8017728:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801772c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8017730:	0976      	lsrs	r6, r6, #5
 8017732:	ea4c 0c02 	orr.w	ip, ip, r2
 8017736:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801773a:	ea4c 0c06 	orr.w	ip, ip, r6
 801773e:	f8a0 c000 	strh.w	ip, [r0]
 8017742:	e7b9      	b.n	80176b8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8017744:	f8b9 3000 	ldrh.w	r3, [r9]
 8017748:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801774c:	eba3 0308 	sub.w	r3, r3, r8
 8017750:	eba6 0608 	sub.w	r6, r6, r8
 8017754:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8017758:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801775c:	440e      	add	r6, r1
 801775e:	e79a      	b.n	8017696 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8017760:	4b03      	ldr	r3, [pc, #12]	@ (8017770 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8017762:	6818      	ldr	r0, [r3, #0]
 8017764:	6803      	ldr	r3, [r0, #0]
 8017766:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8017768:	4798      	blx	r3
 801776a:	b007      	add	sp, #28
 801776c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017770:	20013090 	.word	0x20013090
 8017774:	20013088 	.word	0x20013088

08017778 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8017778:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801777c:	b089      	sub	sp, #36	@ 0x24
 801777e:	4607      	mov	r7, r0
 8017780:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
 8017784:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8017786:	4688      	mov	r8, r1
 8017788:	4692      	mov	sl, r2
 801778a:	4699      	mov	r9, r3
 801778c:	2e00      	cmp	r6, #0
 801778e:	d048      	beq.n	8017822 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8017790:	4608      	mov	r0, r1
 8017792:	f7fa f81d 	bl	80117d0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8017796:	4605      	mov	r5, r0
 8017798:	4640      	mov	r0, r8
 801779a:	f7fa f84d 	bl	8011838 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801779e:	f8ad 000e 	strh.w	r0, [sp, #14]
 80177a2:	4640      	mov	r0, r8
 80177a4:	f8ad a008 	strh.w	sl, [sp, #8]
 80177a8:	f8ad 500c 	strh.w	r5, [sp, #12]
 80177ac:	f8ad 900a 	strh.w	r9, [sp, #10]
 80177b0:	f7fa f900 	bl	80119b4 <_ZNK8touchgfx6Bitmap7getDataEv>
 80177b4:	4605      	mov	r5, r0
 80177b6:	4640      	mov	r0, r8
 80177b8:	f7fa f92c 	bl	8011a14 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80177bc:	4682      	mov	sl, r0
 80177be:	4640      	mov	r0, r8
 80177c0:	f7fa f97c 	bl	8011abc <_ZNK8touchgfx6Bitmap9getFormatEv>
 80177c4:	2810      	cmp	r0, #16
 80177c6:	d82c      	bhi.n	8017822 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 80177c8:	e8df f010 	tbh	[pc, r0, lsl #1]
 80177cc:	00ba00ca 	.word	0x00ba00ca
 80177d0:	002b0011 	.word	0x002b0011
 80177d4:	002b002b 	.word	0x002b002b
 80177d8:	002b002b 	.word	0x002b002b
 80177dc:	002b002b 	.word	0x002b002b
 80177e0:	00c1002b 	.word	0x00c1002b
 80177e4:	002b002b 	.word	0x002b002b
 80177e8:	002b0180 	.word	0x002b0180
 80177ec:	0173      	.short	0x0173
 80177ee:	4bbc      	ldr	r3, [pc, #752]	@ (8017ae0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x368>)
 80177f0:	6818      	ldr	r0, [r3, #0]
 80177f2:	6803      	ldr	r3, [r0, #0]
 80177f4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80177f6:	4798      	blx	r3
 80177f8:	2eff      	cmp	r6, #255	@ 0xff
 80177fa:	d101      	bne.n	8017800 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 80177fc:	0683      	lsls	r3, r0, #26
 80177fe:	d506      	bpl.n	801780e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x96>
 8017800:	4633      	mov	r3, r6
 8017802:	4622      	mov	r2, r4
 8017804:	a902      	add	r1, sp, #8
 8017806:	4628      	mov	r0, r5
 8017808:	f7ff f8fc 	bl	8016a04 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801780c:	e009      	b.n	8017822 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801780e:	4640      	mov	r0, r8
 8017810:	f7fa f898 	bl	8011944 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8017814:	b940      	cbnz	r0, 8017828 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb0>
 8017816:	4623      	mov	r3, r4
 8017818:	aa02      	add	r2, sp, #8
 801781a:	4629      	mov	r1, r5
 801781c:	4638      	mov	r0, r7
 801781e:	f7ff f9d7 	bl	8016bd0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8017822:	b009      	add	sp, #36	@ 0x24
 8017824:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017828:	f10d 0918 	add.w	r9, sp, #24
 801782c:	4641      	mov	r1, r8
 801782e:	4648      	mov	r0, r9
 8017830:	f7fa f836 	bl	80118a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8017834:	e899 0003 	ldmia.w	r9, {r0, r1}
 8017838:	f10d 0810 	add.w	r8, sp, #16
 801783c:	e888 0003 	stmia.w	r8, {r0, r1}
 8017840:	4640      	mov	r0, r8
 8017842:	4621      	mov	r1, r4
 8017844:	f7f2 fa10 	bl	8009c68 <_ZN8touchgfx4RectaNERKS0_>
 8017848:	4640      	mov	r0, r8
 801784a:	f7f2 fa50 	bl	8009cee <_ZNK8touchgfx4Rect7isEmptyEv>
 801784e:	2800      	cmp	r0, #0
 8017850:	d1d6      	bne.n	8017800 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 8017852:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8017856:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801785a:	4293      	cmp	r3, r2
 801785c:	dd12      	ble.n	8017884 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x10c>
 801785e:	1a9b      	subs	r3, r3, r2
 8017860:	f9b4 0000 	ldrsh.w	r0, [r4]
 8017864:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8017868:	f8ad 0018 	strh.w	r0, [sp, #24]
 801786c:	f8ad 201a 	strh.w	r2, [sp, #26]
 8017870:	f8ad 101c 	strh.w	r1, [sp, #28]
 8017874:	f8ad 301e 	strh.w	r3, [sp, #30]
 8017878:	464a      	mov	r2, r9
 801787a:	4633      	mov	r3, r6
 801787c:	a902      	add	r1, sp, #8
 801787e:	4628      	mov	r0, r5
 8017880:	f7ff f8c0 	bl	8016a04 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8017884:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8017888:	f9b4 2000 	ldrsh.w	r2, [r4]
 801788c:	4293      	cmp	r3, r2
 801788e:	dd12      	ble.n	80178b6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x13e>
 8017890:	1a9b      	subs	r3, r3, r2
 8017892:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8017896:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801789a:	f8ad 2018 	strh.w	r2, [sp, #24]
 801789e:	f8ad 001a 	strh.w	r0, [sp, #26]
 80178a2:	f8ad 301c 	strh.w	r3, [sp, #28]
 80178a6:	f8ad 101e 	strh.w	r1, [sp, #30]
 80178aa:	23ff      	movs	r3, #255	@ 0xff
 80178ac:	464a      	mov	r2, r9
 80178ae:	a902      	add	r1, sp, #8
 80178b0:	4628      	mov	r0, r5
 80178b2:	f7ff f8a7 	bl	8016a04 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80178b6:	4643      	mov	r3, r8
 80178b8:	aa02      	add	r2, sp, #8
 80178ba:	4629      	mov	r1, r5
 80178bc:	4638      	mov	r0, r7
 80178be:	f7ff f987 	bl	8016bd0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 80178c2:	88a2      	ldrh	r2, [r4, #4]
 80178c4:	8823      	ldrh	r3, [r4, #0]
 80178c6:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80178ca:	4413      	add	r3, r2
 80178cc:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80178d0:	440a      	add	r2, r1
 80178d2:	b29b      	uxth	r3, r3
 80178d4:	b292      	uxth	r2, r2
 80178d6:	b211      	sxth	r1, r2
 80178d8:	b218      	sxth	r0, r3
 80178da:	4288      	cmp	r0, r1
 80178dc:	dd12      	ble.n	8017904 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x18c>
 80178de:	1a9b      	subs	r3, r3, r2
 80178e0:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 80178e4:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 80178e8:	f8ad 1018 	strh.w	r1, [sp, #24]
 80178ec:	f8ad 301c 	strh.w	r3, [sp, #28]
 80178f0:	f8ad 001e 	strh.w	r0, [sp, #30]
 80178f4:	23ff      	movs	r3, #255	@ 0xff
 80178f6:	464a      	mov	r2, r9
 80178f8:	a902      	add	r1, sp, #8
 80178fa:	4628      	mov	r0, r5
 80178fc:	f8ad 601a 	strh.w	r6, [sp, #26]
 8017900:	f7ff f880 	bl	8016a04 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8017904:	88e2      	ldrh	r2, [r4, #6]
 8017906:	8863      	ldrh	r3, [r4, #2]
 8017908:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801790c:	4413      	add	r3, r2
 801790e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8017912:	440a      	add	r2, r1
 8017914:	b29b      	uxth	r3, r3
 8017916:	b292      	uxth	r2, r2
 8017918:	b211      	sxth	r1, r2
 801791a:	b218      	sxth	r0, r3
 801791c:	4288      	cmp	r0, r1
 801791e:	dd80      	ble.n	8017822 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8017920:	1a9b      	subs	r3, r3, r2
 8017922:	f9b4 6000 	ldrsh.w	r6, [r4]
 8017926:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801792a:	f8ad 301e 	strh.w	r3, [sp, #30]
 801792e:	f8ad 6018 	strh.w	r6, [sp, #24]
 8017932:	f8ad 101a 	strh.w	r1, [sp, #26]
 8017936:	f8ad 001c 	strh.w	r0, [sp, #28]
 801793a:	23ff      	movs	r3, #255	@ 0xff
 801793c:	464a      	mov	r2, r9
 801793e:	e761      	b.n	8017804 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 8017940:	4633      	mov	r3, r6
 8017942:	4622      	mov	r2, r4
 8017944:	a902      	add	r1, sp, #8
 8017946:	4628      	mov	r0, r5
 8017948:	f7ff f9b2 	bl	8016cb0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801794c:	e769      	b.n	8017822 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801794e:	e9cd 4600 	strd	r4, r6, [sp]
 8017952:	ab02      	add	r3, sp, #8
 8017954:	4652      	mov	r2, sl
 8017956:	4629      	mov	r1, r5
 8017958:	4638      	mov	r0, r7
 801795a:	f7ff fd89 	bl	8017470 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801795e:	e760      	b.n	8017822 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8017960:	4640      	mov	r0, r8
 8017962:	f7f9 ffef 	bl	8011944 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8017966:	b948      	cbnz	r0, 801797c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x204>
 8017968:	683b      	ldr	r3, [r7, #0]
 801796a:	e9cd 6000 	strd	r6, r0, [sp]
 801796e:	aa02      	add	r2, sp, #8
 8017970:	68de      	ldr	r6, [r3, #12]
 8017972:	4629      	mov	r1, r5
 8017974:	4623      	mov	r3, r4
 8017976:	4638      	mov	r0, r7
 8017978:	47b0      	blx	r6
 801797a:	e752      	b.n	8017822 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801797c:	f10d 0918 	add.w	r9, sp, #24
 8017980:	4641      	mov	r1, r8
 8017982:	4648      	mov	r0, r9
 8017984:	f7f9 ff8c 	bl	80118a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8017988:	e899 0003 	ldmia.w	r9, {r0, r1}
 801798c:	f10d 0810 	add.w	r8, sp, #16
 8017990:	e888 0003 	stmia.w	r8, {r0, r1}
 8017994:	4640      	mov	r0, r8
 8017996:	4621      	mov	r1, r4
 8017998:	f7f2 f966 	bl	8009c68 <_ZN8touchgfx4RectaNERKS0_>
 801799c:	4640      	mov	r0, r8
 801799e:	f7f2 f9a6 	bl	8009cee <_ZNK8touchgfx4Rect7isEmptyEv>
 80179a2:	b138      	cbz	r0, 80179b4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x23c>
 80179a4:	9600      	str	r6, [sp, #0]
 80179a6:	4623      	mov	r3, r4
 80179a8:	aa02      	add	r2, sp, #8
 80179aa:	4651      	mov	r1, sl
 80179ac:	4628      	mov	r0, r5
 80179ae:	f7ff fdbd 	bl	801752c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80179b2:	e736      	b.n	8017822 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 80179b4:	683b      	ldr	r3, [r7, #0]
 80179b6:	e9cd 6000 	strd	r6, r0, [sp]
 80179ba:	aa02      	add	r2, sp, #8
 80179bc:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 80179c0:	4629      	mov	r1, r5
 80179c2:	4643      	mov	r3, r8
 80179c4:	4638      	mov	r0, r7
 80179c6:	47d8      	blx	fp
 80179c8:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80179cc:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80179d0:	4293      	cmp	r3, r2
 80179d2:	dd13      	ble.n	80179fc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x284>
 80179d4:	f9b4 0000 	ldrsh.w	r0, [r4]
 80179d8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80179dc:	f8ad 0018 	strh.w	r0, [sp, #24]
 80179e0:	1a9b      	subs	r3, r3, r2
 80179e2:	f8ad 201a 	strh.w	r2, [sp, #26]
 80179e6:	f8ad 101c 	strh.w	r1, [sp, #28]
 80179ea:	f8ad 301e 	strh.w	r3, [sp, #30]
 80179ee:	9600      	str	r6, [sp, #0]
 80179f0:	464b      	mov	r3, r9
 80179f2:	aa02      	add	r2, sp, #8
 80179f4:	4651      	mov	r1, sl
 80179f6:	4628      	mov	r0, r5
 80179f8:	f7ff fd98 	bl	801752c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80179fc:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8017a00:	f9b4 2000 	ldrsh.w	r2, [r4]
 8017a04:	4293      	cmp	r3, r2
 8017a06:	dd13      	ble.n	8017a30 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2b8>
 8017a08:	1a9b      	subs	r3, r3, r2
 8017a0a:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8017a0e:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8017a12:	f8ad 2018 	strh.w	r2, [sp, #24]
 8017a16:	f8ad 001a 	strh.w	r0, [sp, #26]
 8017a1a:	f8ad 301c 	strh.w	r3, [sp, #28]
 8017a1e:	f8ad 101e 	strh.w	r1, [sp, #30]
 8017a22:	9600      	str	r6, [sp, #0]
 8017a24:	464b      	mov	r3, r9
 8017a26:	aa02      	add	r2, sp, #8
 8017a28:	4651      	mov	r1, sl
 8017a2a:	4628      	mov	r0, r5
 8017a2c:	f7ff fd7e 	bl	801752c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8017a30:	88a2      	ldrh	r2, [r4, #4]
 8017a32:	8823      	ldrh	r3, [r4, #0]
 8017a34:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8017a38:	4413      	add	r3, r2
 8017a3a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8017a3e:	440a      	add	r2, r1
 8017a40:	b29b      	uxth	r3, r3
 8017a42:	b292      	uxth	r2, r2
 8017a44:	b211      	sxth	r1, r2
 8017a46:	b218      	sxth	r0, r3
 8017a48:	4288      	cmp	r0, r1
 8017a4a:	dd13      	ble.n	8017a74 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2fc>
 8017a4c:	1a9b      	subs	r3, r3, r2
 8017a4e:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8017a52:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8017a56:	f8ad 1018 	strh.w	r1, [sp, #24]
 8017a5a:	f8ad 301c 	strh.w	r3, [sp, #28]
 8017a5e:	f8ad 001e 	strh.w	r0, [sp, #30]
 8017a62:	9600      	str	r6, [sp, #0]
 8017a64:	464b      	mov	r3, r9
 8017a66:	aa02      	add	r2, sp, #8
 8017a68:	4651      	mov	r1, sl
 8017a6a:	4628      	mov	r0, r5
 8017a6c:	f8ad 701a 	strh.w	r7, [sp, #26]
 8017a70:	f7ff fd5c 	bl	801752c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8017a74:	88e2      	ldrh	r2, [r4, #6]
 8017a76:	8863      	ldrh	r3, [r4, #2]
 8017a78:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8017a7c:	4413      	add	r3, r2
 8017a7e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8017a82:	440a      	add	r2, r1
 8017a84:	b29b      	uxth	r3, r3
 8017a86:	b292      	uxth	r2, r2
 8017a88:	b211      	sxth	r1, r2
 8017a8a:	b218      	sxth	r0, r3
 8017a8c:	4288      	cmp	r0, r1
 8017a8e:	f77f aec8 	ble.w	8017822 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8017a92:	f9b4 7000 	ldrsh.w	r7, [r4]
 8017a96:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8017a9a:	f8ad 7018 	strh.w	r7, [sp, #24]
 8017a9e:	1a9b      	subs	r3, r3, r2
 8017aa0:	f8ad 301e 	strh.w	r3, [sp, #30]
 8017aa4:	f8ad 101a 	strh.w	r1, [sp, #26]
 8017aa8:	f8ad 001c 	strh.w	r0, [sp, #28]
 8017aac:	9600      	str	r6, [sp, #0]
 8017aae:	464b      	mov	r3, r9
 8017ab0:	e77a      	b.n	80179a8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 8017ab2:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 8017ab6:	2800      	cmp	r0, #0
 8017ab8:	f43f aeb3 	beq.w	8017822 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8017abc:	6803      	ldr	r3, [r0, #0]
 8017abe:	9600      	str	r6, [sp, #0]
 8017ac0:	68de      	ldr	r6, [r3, #12]
 8017ac2:	4623      	mov	r3, r4
 8017ac4:	aa02      	add	r2, sp, #8
 8017ac6:	4629      	mov	r1, r5
 8017ac8:	47b0      	blx	r6
 8017aca:	e6aa      	b.n	8017822 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8017acc:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 8017ad0:	2800      	cmp	r0, #0
 8017ad2:	f43f aea6 	beq.w	8017822 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8017ad6:	6803      	ldr	r3, [r0, #0]
 8017ad8:	9600      	str	r6, [sp, #0]
 8017ada:	689e      	ldr	r6, [r3, #8]
 8017adc:	e7f1      	b.n	8017ac2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x34a>
 8017ade:	bf00      	nop
 8017ae0:	20013090 	.word	0x20013090

08017ae4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8017ae4:	b180      	cbz	r0, 8017b08 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 8017ae6:	2903      	cmp	r1, #3
 8017ae8:	d81c      	bhi.n	8017b24 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8017aea:	e8df f001 	tbb	[pc, r1]
 8017aee:	1d02      	.short	0x1d02
 8017af0:	1f08      	.short	0x1f08
 8017af2:	4b10      	ldr	r3, [pc, #64]	@ (8017b34 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8017af4:	8818      	ldrh	r0, [r3, #0]
 8017af6:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8017afa:	4240      	negs	r0, r0
 8017afc:	4770      	bx	lr
 8017afe:	4b0d      	ldr	r3, [pc, #52]	@ (8017b34 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8017b00:	8818      	ldrh	r0, [r3, #0]
 8017b02:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8017b06:	4770      	bx	lr
 8017b08:	2903      	cmp	r1, #3
 8017b0a:	d80b      	bhi.n	8017b24 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8017b0c:	a301      	add	r3, pc, #4	@ (adr r3, 8017b14 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 8017b0e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8017b12:	bf00      	nop
 8017b14:	08017b29 	.word	0x08017b29
 8017b18:	08017aff 	.word	0x08017aff
 8017b1c:	08017b2d 	.word	0x08017b2d
 8017b20:	08017af3 	.word	0x08017af3
 8017b24:	2000      	movs	r0, #0
 8017b26:	4770      	bx	lr
 8017b28:	2001      	movs	r0, #1
 8017b2a:	4770      	bx	lr
 8017b2c:	f04f 30ff 	mov.w	r0, #4294967295
 8017b30:	4770      	bx	lr
 8017b32:	bf00      	nop
 8017b34:	20013088 	.word	0x20013088

08017b38 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8017b38:	b180      	cbz	r0, 8017b5c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 8017b3a:	2903      	cmp	r1, #3
 8017b3c:	d81c      	bhi.n	8017b78 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8017b3e:	e8df f001 	tbb	[pc, r1]
 8017b42:	021d      	.short	0x021d
 8017b44:	071f      	.short	0x071f
 8017b46:	4b10      	ldr	r3, [pc, #64]	@ (8017b88 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8017b48:	8818      	ldrh	r0, [r3, #0]
 8017b4a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8017b4e:	4770      	bx	lr
 8017b50:	4b0d      	ldr	r3, [pc, #52]	@ (8017b88 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8017b52:	8818      	ldrh	r0, [r3, #0]
 8017b54:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8017b58:	4240      	negs	r0, r0
 8017b5a:	4770      	bx	lr
 8017b5c:	2903      	cmp	r1, #3
 8017b5e:	d80b      	bhi.n	8017b78 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8017b60:	a301      	add	r3, pc, #4	@ (adr r3, 8017b68 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 8017b62:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8017b66:	bf00      	nop
 8017b68:	08017b47 	.word	0x08017b47
 8017b6c:	08017b81 	.word	0x08017b81
 8017b70:	08017b51 	.word	0x08017b51
 8017b74:	08017b7d 	.word	0x08017b7d
 8017b78:	2000      	movs	r0, #0
 8017b7a:	4770      	bx	lr
 8017b7c:	2001      	movs	r0, #1
 8017b7e:	4770      	bx	lr
 8017b80:	f04f 30ff 	mov.w	r0, #4294967295
 8017b84:	4770      	bx	lr
 8017b86:	bf00      	nop
 8017b88:	20013088 	.word	0x20013088

08017b8c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8017b8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017b90:	b099      	sub	sp, #100	@ 0x64
 8017b92:	910d      	str	r1, [sp, #52]	@ 0x34
 8017b94:	a914      	add	r1, sp, #80	@ 0x50
 8017b96:	e881 000c 	stmia.w	r1, {r2, r3}
 8017b9a:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
 8017b9e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8017ba0:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
 8017ba4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8017ba8:	9310      	str	r3, [sp, #64]	@ 0x40
 8017baa:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 8017bae:	9308      	str	r3, [sp, #32]
 8017bb0:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
 8017bb4:	9309      	str	r3, [sp, #36]	@ 0x24
 8017bb6:	7b4b      	ldrb	r3, [r1, #13]
 8017bb8:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
 8017bbc:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
 8017bc0:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
 8017bc4:	9f28      	ldr	r7, [sp, #160]	@ 0xa0
 8017bc6:	f8dd 90a8 	ldr.w	r9, [sp, #168]	@ 0xa8
 8017bca:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
 8017bce:	ea4f 1843 	mov.w	r8, r3, lsl #5
 8017bd2:	f408 7080 	and.w	r0, r8, #256	@ 0x100
 8017bd6:	f891 8006 	ldrb.w	r8, [r1, #6]
 8017bda:	ea58 0800 	orrs.w	r8, r8, r0
 8017bde:	f000 81ce 	beq.w	8017f7e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8017be2:	011b      	lsls	r3, r3, #4
 8017be4:	79c8      	ldrb	r0, [r1, #7]
 8017be6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8017bea:	4303      	orrs	r3, r0
 8017bec:	930c      	str	r3, [sp, #48]	@ 0x30
 8017bee:	f000 81c6 	beq.w	8017f7e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8017bf2:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8017bf6:	b29b      	uxth	r3, r3
 8017bf8:	2d00      	cmp	r5, #0
 8017bfa:	f000 812c 	beq.w	8017e56 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ca>
 8017bfe:	1aed      	subs	r5, r5, r3
 8017c00:	b2ad      	uxth	r5, r5
 8017c02:	0429      	lsls	r1, r5, #16
 8017c04:	d502      	bpl.n	8017c0c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
 8017c06:	1b64      	subs	r4, r4, r5
 8017c08:	b224      	sxth	r4, r4
 8017c0a:	2500      	movs	r5, #0
 8017c0c:	f9b2 0000 	ldrsh.w	r0, [r2]
 8017c10:	8891      	ldrh	r1, [r2, #4]
 8017c12:	4284      	cmp	r4, r0
 8017c14:	b283      	uxth	r3, r0
 8017c16:	bfb8      	it	lt
 8017c18:	18ed      	addlt	r5, r5, r3
 8017c1a:	440b      	add	r3, r1
 8017c1c:	b21b      	sxth	r3, r3
 8017c1e:	930a      	str	r3, [sp, #40]	@ 0x28
 8017c20:	88d3      	ldrh	r3, [r2, #6]
 8017c22:	8852      	ldrh	r2, [r2, #2]
 8017c24:	4413      	add	r3, r2
 8017c26:	b21b      	sxth	r3, r3
 8017c28:	930f      	str	r3, [sp, #60]	@ 0x3c
 8017c2a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8017c2c:	930e      	str	r3, [sp, #56]	@ 0x38
 8017c2e:	bfb8      	it	lt
 8017c30:	1b2c      	sublt	r4, r5, r4
 8017c32:	4bb5      	ldr	r3, [pc, #724]	@ (8017f08 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>)
 8017c34:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8017c36:	f893 b000 	ldrb.w	fp, [r3]
 8017c3a:	bfbc      	itt	lt
 8017c3c:	b2a5      	uxthlt	r5, r4
 8017c3e:	4604      	movlt	r4, r0
 8017c40:	4653      	mov	r3, sl
 8017c42:	4621      	mov	r1, r4
 8017c44:	a814      	add	r0, sp, #80	@ 0x50
 8017c46:	f7f6 f915 	bl	800de74 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8017c4a:	4621      	mov	r1, r4
 8017c4c:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
 8017c50:	4653      	mov	r3, sl
 8017c52:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8017c54:	a814      	add	r0, sp, #80	@ 0x50
 8017c56:	f7f6 f92a 	bl	800deae <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8017c5a:	a918      	add	r1, sp, #96	@ 0x60
 8017c5c:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8017c60:	a817      	add	r0, sp, #92	@ 0x5c
 8017c62:	f7f6 fa51 	bl	800e108 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8017c66:	f1ba 0f00 	cmp.w	sl, #0
 8017c6a:	f040 80f7 	bne.w	8017e5c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2d0>
 8017c6e:	f1bb 0f01 	cmp.w	fp, #1
 8017c72:	f040 80fb 	bne.w	8017e6c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e0>
 8017c76:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017c78:	2b00      	cmp	r3, #0
 8017c7a:	f040 81a8 	bne.w	8017fce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x442>
 8017c7e:	fa1f f288 	uxth.w	r2, r8
 8017c82:	b905      	cbnz	r5, 8017c86 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfa>
 8017c84:	b15e      	cbz	r6, 8017c9e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x112>
 8017c86:	9808      	ldr	r0, [sp, #32]
 8017c88:	fb06 5302 	mla	r3, r6, r2, r5
 8017c8c:	4343      	muls	r3, r0
 8017c8e:	4631      	mov	r1, r6
 8017c90:	eb07 07d3 	add.w	r7, r7, r3, lsr #3
 8017c94:	f003 0607 	and.w	r6, r3, #7
 8017c98:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8017c9a:	1a5b      	subs	r3, r3, r1
 8017c9c:	930e      	str	r3, [sp, #56]	@ 0x38
 8017c9e:	f10b 31ff 	add.w	r1, fp, #4294967295
 8017ca2:	424b      	negs	r3, r1
 8017ca4:	414b      	adcs	r3, r1
 8017ca6:	4618      	mov	r0, r3
 8017ca8:	4651      	mov	r1, sl
 8017caa:	930c      	str	r3, [sp, #48]	@ 0x30
 8017cac:	f7ff ff1a 	bl	8017ae4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8017cb0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8017cb2:	4683      	mov	fp, r0
 8017cb4:	4618      	mov	r0, r3
 8017cb6:	f7ff ff3f 	bl	8017b38 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8017cba:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8017cbc:	4603      	mov	r3, r0
 8017cbe:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8017cc0:	eba1 0a00 	sub.w	sl, r1, r0
 8017cc4:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8017cc6:	458a      	cmp	sl, r1
 8017cc8:	bfa8      	it	ge
 8017cca:	468a      	movge	sl, r1
 8017ccc:	f1ba 0f00 	cmp.w	sl, #0
 8017cd0:	f340 8155 	ble.w	8017f7e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8017cd4:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8017cd6:	1b64      	subs	r4, r4, r5
 8017cd8:	1b0c      	subs	r4, r1, r4
 8017cda:	4544      	cmp	r4, r8
 8017cdc:	bfd4      	ite	le
 8017cde:	ebc5 0504 	rsble	r5, r5, r4
 8017ce2:	ebc5 0508 	rsbgt	r5, r5, r8
 8017ce6:	2d00      	cmp	r5, #0
 8017ce8:	f340 8149 	ble.w	8017f7e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8017cec:	9908      	ldr	r1, [sp, #32]
 8017cee:	1b52      	subs	r2, r2, r5
 8017cf0:	434a      	muls	r2, r1
 8017cf2:	920e      	str	r2, [sp, #56]	@ 0x38
 8017cf4:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8017cf6:	2a00      	cmp	r2, #0
 8017cf8:	f040 8175 	bne.w	8017fe6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x45a>
 8017cfc:	4a83      	ldr	r2, [pc, #524]	@ (8017f0c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
 8017cfe:	930a      	str	r3, [sp, #40]	@ 0x28
 8017d00:	6810      	ldr	r0, [r2, #0]
 8017d02:	6802      	ldr	r2, [r0, #0]
 8017d04:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8017d06:	4790      	blx	r2
 8017d08:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8017d0a:	9908      	ldr	r1, [sp, #32]
 8017d0c:	2201      	movs	r2, #1
 8017d0e:	408a      	lsls	r2, r1
 8017d10:	3a01      	subs	r2, #1
 8017d12:	497f      	ldr	r1, [pc, #508]	@ (8017f10 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x384>)
 8017d14:	b2d2      	uxtb	r2, r2
 8017d16:	880c      	ldrh	r4, [r1, #0]
 8017d18:	920c      	str	r2, [sp, #48]	@ 0x30
 8017d1a:	f9bd 105c 	ldrsh.w	r1, [sp, #92]	@ 0x5c
 8017d1e:	f9bd 205e 	ldrsh.w	r2, [sp, #94]	@ 0x5e
 8017d22:	fb04 1202 	mla	r2, r4, r2, r1
 8017d26:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8017d2a:	ea4f 2419 	mov.w	r4, r9, lsr #8
 8017d2e:	920a      	str	r2, [sp, #40]	@ 0x28
 8017d30:	f3c9 4207 	ubfx	r2, r9, #16, #8
 8017d34:	9212      	str	r2, [sp, #72]	@ 0x48
 8017d36:	b2e2      	uxtb	r2, r4
 8017d38:	9211      	str	r2, [sp, #68]	@ 0x44
 8017d3a:	fa5f f289 	uxtb.w	r2, r9
 8017d3e:	9210      	str	r2, [sp, #64]	@ 0x40
 8017d40:	4a74      	ldr	r2, [pc, #464]	@ (8017f14 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x388>)
 8017d42:	ea4f 1159 	mov.w	r1, r9, lsr #5
 8017d46:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8017d4a:	4022      	ands	r2, r4
 8017d4c:	430a      	orrs	r2, r1
 8017d4e:	f3c9 09c4 	ubfx	r9, r9, #3, #5
 8017d52:	ea42 0209 	orr.w	r2, r2, r9
 8017d56:	ea4f 014b 	mov.w	r1, fp, lsl #1
 8017d5a:	b292      	uxth	r2, r2
 8017d5c:	fb05 3b1b 	mls	fp, r5, fp, r3
 8017d60:	920f      	str	r2, [sp, #60]	@ 0x3c
 8017d62:	460b      	mov	r3, r1
 8017d64:	783a      	ldrb	r2, [r7, #0]
 8017d66:	910b      	str	r1, [sp, #44]	@ 0x2c
 8017d68:	436b      	muls	r3, r5
 8017d6a:	4132      	asrs	r2, r6
 8017d6c:	eb03 034b 	add.w	r3, r3, fp, lsl #1
 8017d70:	b2d2      	uxtb	r2, r2
 8017d72:	9313      	str	r3, [sp, #76]	@ 0x4c
 8017d74:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8017d78:	f0c0 8149 	bcc.w	801800e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x482>
 8017d7c:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 8017d80:	46a9      	mov	r9, r5
 8017d82:	f119 39ff 	adds.w	r9, r9, #4294967295
 8017d86:	f0c0 8132 	bcc.w	8017fee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x462>
 8017d8a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8017d8c:	4013      	ands	r3, r2
 8017d8e:	d054      	beq.n	8017e3a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ae>
 8017d90:	20ff      	movs	r0, #255	@ 0xff
 8017d92:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8017d94:	fb90 f1f1 	sdiv	r1, r0, r1
 8017d98:	434b      	muls	r3, r1
 8017d9a:	2bfe      	cmp	r3, #254	@ 0xfe
 8017d9c:	dd03      	ble.n	8017da6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x21a>
 8017d9e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8017da0:	4281      	cmp	r1, r0
 8017da2:	f000 8122 	beq.w	8017fea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x45e>
 8017da6:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8017da8:	f8b8 4000 	ldrh.w	r4, [r8]
 8017dac:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8017dae:	fb11 f303 	smulbb	r3, r1, r3
 8017db2:	b29b      	uxth	r3, r3
 8017db4:	1c59      	adds	r1, r3, #1
 8017db6:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8017dba:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017dbe:	fa1f fe83 	uxth.w	lr, r3
 8017dc2:	1221      	asrs	r1, r4, #8
 8017dc4:	fb10 fb0e 	smulbb	fp, r0, lr
 8017dc8:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8017dcc:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8017dce:	43db      	mvns	r3, r3
 8017dd0:	b2db      	uxtb	r3, r3
 8017dd2:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8017dd6:	fb01 b103 	mla	r1, r1, r3, fp
 8017dda:	ea4f 0ce4 	mov.w	ip, r4, asr #3
 8017dde:	fb10 fb0e 	smulbb	fp, r0, lr
 8017de2:	00e4      	lsls	r4, r4, #3
 8017de4:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8017de6:	b2e4      	uxtb	r4, r4
 8017de8:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8017dec:	fb10 fe0e 	smulbb	lr, r0, lr
 8017df0:	fb04 e403 	mla	r4, r4, r3, lr
 8017df4:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8017df8:	b289      	uxth	r1, r1
 8017dfa:	b2a4      	uxth	r4, r4
 8017dfc:	ea4c 1c9c 	orr.w	ip, ip, ip, lsr #6
 8017e00:	fb0c bc03 	mla	ip, ip, r3, fp
 8017e04:	1c4b      	adds	r3, r1, #1
 8017e06:	f104 0b01 	add.w	fp, r4, #1
 8017e0a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8017e0e:	eb0b 2b14 	add.w	fp, fp, r4, lsr #8
 8017e12:	fa1f fc8c 	uxth.w	ip, ip
 8017e16:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8017e1a:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8017e1e:	ea4b 0101 	orr.w	r1, fp, r1
 8017e22:	f10c 0b01 	add.w	fp, ip, #1
 8017e26:	eb0b 2b1c 	add.w	fp, fp, ip, lsr #8
 8017e2a:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8017e2e:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8017e32:	ea41 010b 	orr.w	r1, r1, fp
 8017e36:	f8a8 1000 	strh.w	r1, [r8]
 8017e3a:	9b08      	ldr	r3, [sp, #32]
 8017e3c:	441e      	add	r6, r3
 8017e3e:	b2b6      	uxth	r6, r6
 8017e40:	2e07      	cmp	r6, #7
 8017e42:	bf98      	it	ls
 8017e44:	411a      	asrls	r2, r3
 8017e46:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8017e48:	bf89      	itett	hi
 8017e4a:	787a      	ldrbhi	r2, [r7, #1]
 8017e4c:	b2d2      	uxtbls	r2, r2
 8017e4e:	3701      	addhi	r7, #1
 8017e50:	2600      	movhi	r6, #0
 8017e52:	4498      	add	r8, r3
 8017e54:	e795      	b.n	8017d82 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1f6>
 8017e56:	441c      	add	r4, r3
 8017e58:	b224      	sxth	r4, r4
 8017e5a:	e6d7      	b.n	8017c0c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
 8017e5c:	f1ba 0f01 	cmp.w	sl, #1
 8017e60:	f47f af09 	bne.w	8017c76 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 8017e64:	f1bb 0f01 	cmp.w	fp, #1
 8017e68:	f47f af05 	bne.w	8017c76 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 8017e6c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8017e6e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8017e70:	1a99      	subs	r1, r3, r2
 8017e72:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8017e74:	1b9b      	subs	r3, r3, r6
 8017e76:	4299      	cmp	r1, r3
 8017e78:	bfa8      	it	ge
 8017e7a:	4619      	movge	r1, r3
 8017e7c:	2900      	cmp	r1, #0
 8017e7e:	9112      	str	r1, [sp, #72]	@ 0x48
 8017e80:	dd7d      	ble.n	8017f7e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8017e82:	4a22      	ldr	r2, [pc, #136]	@ (8017f0c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
 8017e84:	9211      	str	r2, [sp, #68]	@ 0x44
 8017e86:	6810      	ldr	r0, [r2, #0]
 8017e88:	6803      	ldr	r3, [r0, #0]
 8017e8a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8017e8c:	4798      	blx	r3
 8017e8e:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
 8017e92:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8017e94:	d006      	beq.n	8017ea4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8017e96:	9b08      	ldr	r3, [sp, #32]
 8017e98:	2b04      	cmp	r3, #4
 8017e9a:	d133      	bne.n	8017f04 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x378>
 8017e9c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017e9e:	3300      	adds	r3, #0
 8017ea0:	bf18      	it	ne
 8017ea2:	2301      	movne	r3, #1
 8017ea4:	0582      	lsls	r2, r0, #22
 8017ea6:	fa1f fc88 	uxth.w	ip, r8
 8017eaa:	f140 80b9 	bpl.w	8018020 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x494>
 8017eae:	9808      	ldr	r0, [sp, #32]
 8017eb0:	2808      	cmp	r0, #8
 8017eb2:	f040 80b5 	bne.w	8018020 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x494>
 8017eb6:	2b00      	cmp	r3, #0
 8017eb8:	d064      	beq.n	8017f84 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f8>
 8017eba:	f10c 0c01 	add.w	ip, ip, #1
 8017ebe:	f02c 0301 	bic.w	r3, ip, #1
 8017ec2:	b29b      	uxth	r3, r3
 8017ec4:	bb45      	cbnz	r5, 8017f18 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>
 8017ec6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8017ec8:	eb08 0004 	add.w	r0, r8, r4
 8017ecc:	4290      	cmp	r0, r2
 8017ece:	dc23      	bgt.n	8017f18 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>
 8017ed0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8017ed2:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
 8017ed6:	6810      	ldr	r0, [r2, #0]
 8017ed8:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8017edc:	6804      	ldr	r4, [r0, #0]
 8017ede:	9506      	str	r5, [sp, #24]
 8017ee0:	f44f 7580 	mov.w	r5, #256	@ 0x100
 8017ee4:	9505      	str	r5, [sp, #20]
 8017ee6:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8017ee8:	9302      	str	r3, [sp, #8]
 8017eea:	b289      	uxth	r1, r1
 8017eec:	e9cd 3100 	strd	r3, r1, [sp]
 8017ef0:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8017ef4:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 8017ef8:	6da4      	ldr	r4, [r4, #88]	@ 0x58
 8017efa:	4673      	mov	r3, lr
 8017efc:	fb06 710c 	mla	r1, r6, ip, r7
 8017f00:	47a0      	blx	r4
 8017f02:	e03c      	b.n	8017f7e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8017f04:	2300      	movs	r3, #0
 8017f06:	e7cd      	b.n	8017ea4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8017f08:	20013086 	.word	0x20013086
 8017f0c:	20013090 	.word	0x20013090
 8017f10:	20013088 	.word	0x20013088
 8017f14:	00fff800 	.word	0x00fff800
 8017f18:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8017f1a:	eba4 0e05 	sub.w	lr, r4, r5
 8017f1e:	eba2 0e0e 	sub.w	lr, r2, lr
 8017f22:	45c6      	cmp	lr, r8
 8017f24:	bfd4      	ite	le
 8017f26:	ebc5 0e0e 	rsble	lr, r5, lr
 8017f2a:	ebc5 0e08 	rsbgt	lr, r5, r8
 8017f2e:	f1be 0f00 	cmp.w	lr, #0
 8017f32:	d024      	beq.n	8017f7e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8017f34:	07e8      	lsls	r0, r5, #31
 8017f36:	f53f ae9e 	bmi.w	8017c76 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 8017f3a:	f01e 0001 	ands.w	r0, lr, #1
 8017f3e:	f47f ae9a 	bne.w	8017c76 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 8017f42:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8017f44:	f8bd 805e 	ldrh.w	r8, [sp, #94]	@ 0x5e
 8017f48:	6814      	ldr	r4, [r2, #0]
 8017f4a:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8017f4e:	086d      	lsrs	r5, r5, #1
 8017f50:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 8017f54:	fb06 560c 	mla	r6, r6, ip, r5
 8017f58:	6825      	ldr	r5, [r4, #0]
 8017f5a:	9006      	str	r0, [sp, #24]
 8017f5c:	f44f 7080 	mov.w	r0, #256	@ 0x100
 8017f60:	9005      	str	r0, [sp, #20]
 8017f62:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8017f64:	9302      	str	r3, [sp, #8]
 8017f66:	e9cd 9003 	strd	r9, r0, [sp, #12]
 8017f6a:	b289      	uxth	r1, r1
 8017f6c:	fa1f f38e 	uxth.w	r3, lr
 8017f70:	9101      	str	r1, [sp, #4]
 8017f72:	9300      	str	r3, [sp, #0]
 8017f74:	6dad      	ldr	r5, [r5, #88]	@ 0x58
 8017f76:	4643      	mov	r3, r8
 8017f78:	19b9      	adds	r1, r7, r6
 8017f7a:	4620      	mov	r0, r4
 8017f7c:	47a8      	blx	r5
 8017f7e:	b019      	add	sp, #100	@ 0x64
 8017f80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017f84:	4a28      	ldr	r2, [pc, #160]	@ (8018028 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x49c>)
 8017f86:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
 8017f8a:	6810      	ldr	r0, [r2, #0]
 8017f8c:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8017f90:	f8d0 a000 	ldr.w	sl, [r0]
 8017f94:	9306      	str	r3, [sp, #24]
 8017f96:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8017f9a:	9305      	str	r3, [sp, #20]
 8017f9c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017f9e:	f8cd c008 	str.w	ip, [sp, #8]
 8017fa2:	e9cd 9303 	strd	r9, r3, [sp, #12]
 8017fa6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8017fa8:	1b64      	subs	r4, r4, r5
 8017faa:	1b1c      	subs	r4, r3, r4
 8017fac:	fb06 5608 	mla	r6, r6, r8, r5
 8017fb0:	4544      	cmp	r4, r8
 8017fb2:	bfd4      	ite	le
 8017fb4:	ebc5 0504 	rsble	r5, r5, r4
 8017fb8:	ebc5 0508 	rsbgt	r5, r5, r8
 8017fbc:	b289      	uxth	r1, r1
 8017fbe:	b2ad      	uxth	r5, r5
 8017fc0:	9101      	str	r1, [sp, #4]
 8017fc2:	9500      	str	r5, [sp, #0]
 8017fc4:	f8da 4058 	ldr.w	r4, [sl, #88]	@ 0x58
 8017fc8:	4673      	mov	r3, lr
 8017fca:	19b9      	adds	r1, r7, r6
 8017fcc:	e798      	b.n	8017f00 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x374>
 8017fce:	2208      	movs	r2, #8
 8017fd0:	9b08      	ldr	r3, [sp, #32]
 8017fd2:	fb92 f3f3 	sdiv	r3, r2, r3
 8017fd6:	1e5a      	subs	r2, r3, #1
 8017fd8:	4442      	add	r2, r8
 8017fda:	fb92 f2f3 	sdiv	r2, r2, r3
 8017fde:	fb12 f203 	smulbb	r2, r2, r3
 8017fe2:	b292      	uxth	r2, r2
 8017fe4:	e64d      	b.n	8017c82 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf6>
 8017fe6:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8017fe8:	e68f      	b.n	8017d0a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x17e>
 8017fea:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8017fec:	e723      	b.n	8017e36 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2aa>
 8017fee:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8017ff0:	b143      	cbz	r3, 8018004 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x478>
 8017ff2:	441e      	add	r6, r3
 8017ff4:	b2b6      	uxth	r6, r6
 8017ff6:	eb07 07d6 	add.w	r7, r7, r6, lsr #3
 8017ffa:	f006 0607 	and.w	r6, r6, #7
 8017ffe:	783a      	ldrb	r2, [r7, #0]
 8018000:	4132      	asrs	r2, r6
 8018002:	b2d2      	uxtb	r2, r2
 8018004:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8018006:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8018008:	4419      	add	r1, r3
 801800a:	910a      	str	r1, [sp, #40]	@ 0x28
 801800c:	e6b2      	b.n	8017d74 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e8>
 801800e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8018010:	2b00      	cmp	r3, #0
 8018012:	d1b4      	bne.n	8017f7e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8018014:	4b04      	ldr	r3, [pc, #16]	@ (8018028 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x49c>)
 8018016:	6818      	ldr	r0, [r3, #0]
 8018018:	6803      	ldr	r3, [r0, #0]
 801801a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801801c:	4798      	blx	r3
 801801e:	e7ae      	b.n	8017f7e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f2>
 8018020:	2b00      	cmp	r3, #0
 8018022:	f47f af4a 	bne.w	8017eba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x32e>
 8018026:	e626      	b.n	8017c76 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xea>
 8018028:	20013090 	.word	0x20013090

0801802c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801802c:	b538      	push	{r3, r4, r5, lr}
 801802e:	4c15      	ldr	r4, [pc, #84]	@ (8018084 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8018030:	7823      	ldrb	r3, [r4, #0]
 8018032:	f3bf 8f5b 	dmb	ish
 8018036:	07da      	lsls	r2, r3, #31
 8018038:	4605      	mov	r5, r0
 801803a:	d40b      	bmi.n	8018054 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801803c:	4620      	mov	r0, r4
 801803e:	f008 fc48 	bl	80208d2 <__cxa_guard_acquire>
 8018042:	b138      	cbz	r0, 8018054 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8018044:	4620      	mov	r0, r4
 8018046:	f008 fc50 	bl	80208ea <__cxa_guard_release>
 801804a:	4a0f      	ldr	r2, [pc, #60]	@ (8018088 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801804c:	490f      	ldr	r1, [pc, #60]	@ (801808c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801804e:	4810      	ldr	r0, [pc, #64]	@ (8018090 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8018050:	f008 fc38 	bl	80208c4 <__aeabi_atexit>
 8018054:	4c0f      	ldr	r4, [pc, #60]	@ (8018094 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8018056:	7823      	ldrb	r3, [r4, #0]
 8018058:	f3bf 8f5b 	dmb	ish
 801805c:	07db      	lsls	r3, r3, #31
 801805e:	d40b      	bmi.n	8018078 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8018060:	4620      	mov	r0, r4
 8018062:	f008 fc36 	bl	80208d2 <__cxa_guard_acquire>
 8018066:	b138      	cbz	r0, 8018078 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8018068:	4620      	mov	r0, r4
 801806a:	f008 fc3e 	bl	80208ea <__cxa_guard_release>
 801806e:	4a06      	ldr	r2, [pc, #24]	@ (8018088 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8018070:	4909      	ldr	r1, [pc, #36]	@ (8018098 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8018072:	480a      	ldr	r0, [pc, #40]	@ (801809c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8018074:	f008 fc26 	bl	80208c4 <__aeabi_atexit>
 8018078:	4b05      	ldr	r3, [pc, #20]	@ (8018090 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801807a:	616b      	str	r3, [r5, #20]
 801807c:	4b07      	ldr	r3, [pc, #28]	@ (801809c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801807e:	61ab      	str	r3, [r5, #24]
 8018080:	bd38      	pop	{r3, r4, r5, pc}
 8018082:	bf00      	nop
 8018084:	20013174 	.word	0x20013174
 8018088:	20000000 	.word	0x20000000
 801808c:	08014135 	.word	0x08014135
 8018090:	200001e0 	.word	0x200001e0
 8018094:	20013178 	.word	0x20013178
 8018098:	08014133 	.word	0x08014133
 801809c:	200001e4 	.word	0x200001e4

080180a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 80180a0:	b538      	push	{r3, r4, r5, lr}
 80180a2:	4c15      	ldr	r4, [pc, #84]	@ (80180f8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 80180a4:	7823      	ldrb	r3, [r4, #0]
 80180a6:	f3bf 8f5b 	dmb	ish
 80180aa:	07da      	lsls	r2, r3, #31
 80180ac:	4605      	mov	r5, r0
 80180ae:	d40b      	bmi.n	80180c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80180b0:	4620      	mov	r0, r4
 80180b2:	f008 fc0e 	bl	80208d2 <__cxa_guard_acquire>
 80180b6:	b138      	cbz	r0, 80180c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80180b8:	4620      	mov	r0, r4
 80180ba:	f008 fc16 	bl	80208ea <__cxa_guard_release>
 80180be:	4a0f      	ldr	r2, [pc, #60]	@ (80180fc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 80180c0:	490f      	ldr	r1, [pc, #60]	@ (8018100 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 80180c2:	4810      	ldr	r0, [pc, #64]	@ (8018104 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 80180c4:	f008 fbfe 	bl	80208c4 <__aeabi_atexit>
 80180c8:	4c0f      	ldr	r4, [pc, #60]	@ (8018108 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 80180ca:	7823      	ldrb	r3, [r4, #0]
 80180cc:	f3bf 8f5b 	dmb	ish
 80180d0:	07db      	lsls	r3, r3, #31
 80180d2:	d40b      	bmi.n	80180ec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 80180d4:	4620      	mov	r0, r4
 80180d6:	f008 fbfc 	bl	80208d2 <__cxa_guard_acquire>
 80180da:	b138      	cbz	r0, 80180ec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 80180dc:	4620      	mov	r0, r4
 80180de:	f008 fc04 	bl	80208ea <__cxa_guard_release>
 80180e2:	4a06      	ldr	r2, [pc, #24]	@ (80180fc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 80180e4:	4909      	ldr	r1, [pc, #36]	@ (801810c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 80180e6:	480a      	ldr	r0, [pc, #40]	@ (8018110 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 80180e8:	f008 fbec 	bl	80208c4 <__aeabi_atexit>
 80180ec:	4b05      	ldr	r3, [pc, #20]	@ (8018104 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 80180ee:	60eb      	str	r3, [r5, #12]
 80180f0:	4b07      	ldr	r3, [pc, #28]	@ (8018110 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 80180f2:	612b      	str	r3, [r5, #16]
 80180f4:	bd38      	pop	{r3, r4, r5, pc}
 80180f6:	bf00      	nop
 80180f8:	2001314c 	.word	0x2001314c
 80180fc:	20000000 	.word	0x20000000
 8018100:	08014139 	.word	0x08014139
 8018104:	200001b8 	.word	0x200001b8
 8018108:	20013150 	.word	0x20013150
 801810c:	08014137 	.word	0x08014137
 8018110:	200001bc 	.word	0x200001bc

08018114 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8018114:	b510      	push	{r4, lr}
 8018116:	4604      	mov	r4, r0
 8018118:	f7ff ff88 	bl	801802c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801811c:	4620      	mov	r0, r4
 801811e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018122:	f7ff bfbd 	b.w	80180a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08018128 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8018128:	b538      	push	{r3, r4, r5, lr}
 801812a:	4c15      	ldr	r4, [pc, #84]	@ (8018180 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801812c:	7823      	ldrb	r3, [r4, #0]
 801812e:	f3bf 8f5b 	dmb	ish
 8018132:	07da      	lsls	r2, r3, #31
 8018134:	4605      	mov	r5, r0
 8018136:	d40b      	bmi.n	8018150 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8018138:	4620      	mov	r0, r4
 801813a:	f008 fbca 	bl	80208d2 <__cxa_guard_acquire>
 801813e:	b138      	cbz	r0, 8018150 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8018140:	4620      	mov	r0, r4
 8018142:	f008 fbd2 	bl	80208ea <__cxa_guard_release>
 8018146:	4a0f      	ldr	r2, [pc, #60]	@ (8018184 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8018148:	490f      	ldr	r1, [pc, #60]	@ (8018188 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801814a:	4810      	ldr	r0, [pc, #64]	@ (801818c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801814c:	f008 fbba 	bl	80208c4 <__aeabi_atexit>
 8018150:	4c0f      	ldr	r4, [pc, #60]	@ (8018190 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8018152:	7823      	ldrb	r3, [r4, #0]
 8018154:	f3bf 8f5b 	dmb	ish
 8018158:	07db      	lsls	r3, r3, #31
 801815a:	d40b      	bmi.n	8018174 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801815c:	4620      	mov	r0, r4
 801815e:	f008 fbb8 	bl	80208d2 <__cxa_guard_acquire>
 8018162:	b138      	cbz	r0, 8018174 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8018164:	4620      	mov	r0, r4
 8018166:	f008 fbc0 	bl	80208ea <__cxa_guard_release>
 801816a:	4a06      	ldr	r2, [pc, #24]	@ (8018184 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801816c:	4909      	ldr	r1, [pc, #36]	@ (8018194 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801816e:	480a      	ldr	r0, [pc, #40]	@ (8018198 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8018170:	f008 fba8 	bl	80208c4 <__aeabi_atexit>
 8018174:	4b05      	ldr	r3, [pc, #20]	@ (801818c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8018176:	626b      	str	r3, [r5, #36]	@ 0x24
 8018178:	4b07      	ldr	r3, [pc, #28]	@ (8018198 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801817a:	62ab      	str	r3, [r5, #40]	@ 0x28
 801817c:	bd38      	pop	{r3, r4, r5, pc}
 801817e:	bf00      	nop
 8018180:	2001317c 	.word	0x2001317c
 8018184:	20000000 	.word	0x20000000
 8018188:	0801412d 	.word	0x0801412d
 801818c:	200001e8 	.word	0x200001e8
 8018190:	20013180 	.word	0x20013180
 8018194:	0801412b 	.word	0x0801412b
 8018198:	200001ec 	.word	0x200001ec

0801819c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801819c:	b538      	push	{r3, r4, r5, lr}
 801819e:	4c15      	ldr	r4, [pc, #84]	@ (80181f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 80181a0:	7823      	ldrb	r3, [r4, #0]
 80181a2:	f3bf 8f5b 	dmb	ish
 80181a6:	07da      	lsls	r2, r3, #31
 80181a8:	4605      	mov	r5, r0
 80181aa:	d40b      	bmi.n	80181c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 80181ac:	4620      	mov	r0, r4
 80181ae:	f008 fb90 	bl	80208d2 <__cxa_guard_acquire>
 80181b2:	b138      	cbz	r0, 80181c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 80181b4:	4620      	mov	r0, r4
 80181b6:	f008 fb98 	bl	80208ea <__cxa_guard_release>
 80181ba:	4a0f      	ldr	r2, [pc, #60]	@ (80181f8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 80181bc:	490f      	ldr	r1, [pc, #60]	@ (80181fc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 80181be:	4810      	ldr	r0, [pc, #64]	@ (8018200 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 80181c0:	f008 fb80 	bl	80208c4 <__aeabi_atexit>
 80181c4:	4c0f      	ldr	r4, [pc, #60]	@ (8018204 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 80181c6:	7823      	ldrb	r3, [r4, #0]
 80181c8:	f3bf 8f5b 	dmb	ish
 80181cc:	07db      	lsls	r3, r3, #31
 80181ce:	d40b      	bmi.n	80181e8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 80181d0:	4620      	mov	r0, r4
 80181d2:	f008 fb7e 	bl	80208d2 <__cxa_guard_acquire>
 80181d6:	b138      	cbz	r0, 80181e8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 80181d8:	4620      	mov	r0, r4
 80181da:	f008 fb86 	bl	80208ea <__cxa_guard_release>
 80181de:	4a06      	ldr	r2, [pc, #24]	@ (80181f8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 80181e0:	4909      	ldr	r1, [pc, #36]	@ (8018208 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 80181e2:	480a      	ldr	r0, [pc, #40]	@ (801820c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 80181e4:	f008 fb6e 	bl	80208c4 <__aeabi_atexit>
 80181e8:	4b05      	ldr	r3, [pc, #20]	@ (8018200 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 80181ea:	61eb      	str	r3, [r5, #28]
 80181ec:	4b07      	ldr	r3, [pc, #28]	@ (801820c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 80181ee:	622b      	str	r3, [r5, #32]
 80181f0:	bd38      	pop	{r3, r4, r5, pc}
 80181f2:	bf00      	nop
 80181f4:	20013154 	.word	0x20013154
 80181f8:	20000000 	.word	0x20000000
 80181fc:	08014131 	.word	0x08014131
 8018200:	200001c0 	.word	0x200001c0
 8018204:	20013158 	.word	0x20013158
 8018208:	0801412f 	.word	0x0801412f
 801820c:	200001c4 	.word	0x200001c4

08018210 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8018210:	b510      	push	{r4, lr}
 8018212:	4604      	mov	r4, r0
 8018214:	f7ff ff88 	bl	8018128 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8018218:	4620      	mov	r0, r4
 801821a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801821e:	f7ff bfbd 	b.w	801819c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08018224 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8018224:	b538      	push	{r3, r4, r5, lr}
 8018226:	4c15      	ldr	r4, [pc, #84]	@ (801827c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8018228:	7823      	ldrb	r3, [r4, #0]
 801822a:	f3bf 8f5b 	dmb	ish
 801822e:	07da      	lsls	r2, r3, #31
 8018230:	4605      	mov	r5, r0
 8018232:	d40b      	bmi.n	801824c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8018234:	4620      	mov	r0, r4
 8018236:	f008 fb4c 	bl	80208d2 <__cxa_guard_acquire>
 801823a:	b138      	cbz	r0, 801824c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801823c:	4620      	mov	r0, r4
 801823e:	f008 fb54 	bl	80208ea <__cxa_guard_release>
 8018242:	4a0f      	ldr	r2, [pc, #60]	@ (8018280 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8018244:	490f      	ldr	r1, [pc, #60]	@ (8018284 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8018246:	4810      	ldr	r0, [pc, #64]	@ (8018288 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8018248:	f008 fb3c 	bl	80208c4 <__aeabi_atexit>
 801824c:	4c0f      	ldr	r4, [pc, #60]	@ (801828c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801824e:	7823      	ldrb	r3, [r4, #0]
 8018250:	f3bf 8f5b 	dmb	ish
 8018254:	07db      	lsls	r3, r3, #31
 8018256:	d40b      	bmi.n	8018270 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8018258:	4620      	mov	r0, r4
 801825a:	f008 fb3a 	bl	80208d2 <__cxa_guard_acquire>
 801825e:	b138      	cbz	r0, 8018270 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8018260:	4620      	mov	r0, r4
 8018262:	f008 fb42 	bl	80208ea <__cxa_guard_release>
 8018266:	4a06      	ldr	r2, [pc, #24]	@ (8018280 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8018268:	4909      	ldr	r1, [pc, #36]	@ (8018290 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801826a:	480a      	ldr	r0, [pc, #40]	@ (8018294 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801826c:	f008 fb2a 	bl	80208c4 <__aeabi_atexit>
 8018270:	4b05      	ldr	r3, [pc, #20]	@ (8018288 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8018272:	636b      	str	r3, [r5, #52]	@ 0x34
 8018274:	4b07      	ldr	r3, [pc, #28]	@ (8018294 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8018276:	63ab      	str	r3, [r5, #56]	@ 0x38
 8018278:	bd38      	pop	{r3, r4, r5, pc}
 801827a:	bf00      	nop
 801827c:	2001318c 	.word	0x2001318c
 8018280:	20000000 	.word	0x20000000
 8018284:	08014125 	.word	0x08014125
 8018288:	200001f8 	.word	0x200001f8
 801828c:	20013190 	.word	0x20013190
 8018290:	08014123 	.word	0x08014123
 8018294:	200001fc 	.word	0x200001fc

08018298 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8018298:	b538      	push	{r3, r4, r5, lr}
 801829a:	4c15      	ldr	r4, [pc, #84]	@ (80182f0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801829c:	7823      	ldrb	r3, [r4, #0]
 801829e:	f3bf 8f5b 	dmb	ish
 80182a2:	07da      	lsls	r2, r3, #31
 80182a4:	4605      	mov	r5, r0
 80182a6:	d40b      	bmi.n	80182c0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80182a8:	4620      	mov	r0, r4
 80182aa:	f008 fb12 	bl	80208d2 <__cxa_guard_acquire>
 80182ae:	b138      	cbz	r0, 80182c0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80182b0:	4620      	mov	r0, r4
 80182b2:	f008 fb1a 	bl	80208ea <__cxa_guard_release>
 80182b6:	4a0f      	ldr	r2, [pc, #60]	@ (80182f4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80182b8:	490f      	ldr	r1, [pc, #60]	@ (80182f8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 80182ba:	4810      	ldr	r0, [pc, #64]	@ (80182fc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 80182bc:	f008 fb02 	bl	80208c4 <__aeabi_atexit>
 80182c0:	4c0f      	ldr	r4, [pc, #60]	@ (8018300 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 80182c2:	7823      	ldrb	r3, [r4, #0]
 80182c4:	f3bf 8f5b 	dmb	ish
 80182c8:	07db      	lsls	r3, r3, #31
 80182ca:	d40b      	bmi.n	80182e4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80182cc:	4620      	mov	r0, r4
 80182ce:	f008 fb00 	bl	80208d2 <__cxa_guard_acquire>
 80182d2:	b138      	cbz	r0, 80182e4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80182d4:	4620      	mov	r0, r4
 80182d6:	f008 fb08 	bl	80208ea <__cxa_guard_release>
 80182da:	4a06      	ldr	r2, [pc, #24]	@ (80182f4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80182dc:	4909      	ldr	r1, [pc, #36]	@ (8018304 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 80182de:	480a      	ldr	r0, [pc, #40]	@ (8018308 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80182e0:	f008 faf0 	bl	80208c4 <__aeabi_atexit>
 80182e4:	4b05      	ldr	r3, [pc, #20]	@ (80182fc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 80182e6:	62eb      	str	r3, [r5, #44]	@ 0x2c
 80182e8:	4b07      	ldr	r3, [pc, #28]	@ (8018308 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80182ea:	632b      	str	r3, [r5, #48]	@ 0x30
 80182ec:	bd38      	pop	{r3, r4, r5, pc}
 80182ee:	bf00      	nop
 80182f0:	2001315c 	.word	0x2001315c
 80182f4:	20000000 	.word	0x20000000
 80182f8:	08014129 	.word	0x08014129
 80182fc:	200001c8 	.word	0x200001c8
 8018300:	20013160 	.word	0x20013160
 8018304:	08014127 	.word	0x08014127
 8018308:	200001cc 	.word	0x200001cc

0801830c <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801830c:	b510      	push	{r4, lr}
 801830e:	4604      	mov	r4, r0
 8018310:	f7ff ff88 	bl	8018224 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8018314:	4620      	mov	r0, r4
 8018316:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801831a:	f7ff bfbd 	b.w	8018298 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08018320 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8018320:	b538      	push	{r3, r4, r5, lr}
 8018322:	4c15      	ldr	r4, [pc, #84]	@ (8018378 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8018324:	7823      	ldrb	r3, [r4, #0]
 8018326:	f3bf 8f5b 	dmb	ish
 801832a:	07da      	lsls	r2, r3, #31
 801832c:	4605      	mov	r5, r0
 801832e:	d40b      	bmi.n	8018348 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8018330:	4620      	mov	r0, r4
 8018332:	f008 face 	bl	80208d2 <__cxa_guard_acquire>
 8018336:	b138      	cbz	r0, 8018348 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8018338:	4620      	mov	r0, r4
 801833a:	f008 fad6 	bl	80208ea <__cxa_guard_release>
 801833e:	4a0f      	ldr	r2, [pc, #60]	@ (801837c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8018340:	490f      	ldr	r1, [pc, #60]	@ (8018380 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8018342:	4810      	ldr	r0, [pc, #64]	@ (8018384 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8018344:	f008 fabe 	bl	80208c4 <__aeabi_atexit>
 8018348:	4c0f      	ldr	r4, [pc, #60]	@ (8018388 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801834a:	7823      	ldrb	r3, [r4, #0]
 801834c:	f3bf 8f5b 	dmb	ish
 8018350:	07db      	lsls	r3, r3, #31
 8018352:	d40b      	bmi.n	801836c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8018354:	4620      	mov	r0, r4
 8018356:	f008 fabc 	bl	80208d2 <__cxa_guard_acquire>
 801835a:	b138      	cbz	r0, 801836c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801835c:	4620      	mov	r0, r4
 801835e:	f008 fac4 	bl	80208ea <__cxa_guard_release>
 8018362:	4a06      	ldr	r2, [pc, #24]	@ (801837c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8018364:	4909      	ldr	r1, [pc, #36]	@ (801838c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8018366:	480a      	ldr	r0, [pc, #40]	@ (8018390 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8018368:	f008 faac 	bl	80208c4 <__aeabi_atexit>
 801836c:	4b05      	ldr	r3, [pc, #20]	@ (8018384 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801836e:	656b      	str	r3, [r5, #84]	@ 0x54
 8018370:	4b07      	ldr	r3, [pc, #28]	@ (8018390 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8018372:	65ab      	str	r3, [r5, #88]	@ 0x58
 8018374:	bd38      	pop	{r3, r4, r5, pc}
 8018376:	bf00      	nop
 8018378:	20013194 	.word	0x20013194
 801837c:	20000000 	.word	0x20000000
 8018380:	08014115 	.word	0x08014115
 8018384:	20000200 	.word	0x20000200
 8018388:	20013198 	.word	0x20013198
 801838c:	08014113 	.word	0x08014113
 8018390:	20000204 	.word	0x20000204

08018394 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8018394:	b538      	push	{r3, r4, r5, lr}
 8018396:	4c15      	ldr	r4, [pc, #84]	@ (80183ec <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8018398:	7823      	ldrb	r3, [r4, #0]
 801839a:	f3bf 8f5b 	dmb	ish
 801839e:	07da      	lsls	r2, r3, #31
 80183a0:	4605      	mov	r5, r0
 80183a2:	d40b      	bmi.n	80183bc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80183a4:	4620      	mov	r0, r4
 80183a6:	f008 fa94 	bl	80208d2 <__cxa_guard_acquire>
 80183aa:	b138      	cbz	r0, 80183bc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80183ac:	4620      	mov	r0, r4
 80183ae:	f008 fa9c 	bl	80208ea <__cxa_guard_release>
 80183b2:	4a0f      	ldr	r2, [pc, #60]	@ (80183f0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80183b4:	490f      	ldr	r1, [pc, #60]	@ (80183f4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 80183b6:	4810      	ldr	r0, [pc, #64]	@ (80183f8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80183b8:	f008 fa84 	bl	80208c4 <__aeabi_atexit>
 80183bc:	4c0f      	ldr	r4, [pc, #60]	@ (80183fc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 80183be:	7823      	ldrb	r3, [r4, #0]
 80183c0:	f3bf 8f5b 	dmb	ish
 80183c4:	07db      	lsls	r3, r3, #31
 80183c6:	d40b      	bmi.n	80183e0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80183c8:	4620      	mov	r0, r4
 80183ca:	f008 fa82 	bl	80208d2 <__cxa_guard_acquire>
 80183ce:	b138      	cbz	r0, 80183e0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80183d0:	4620      	mov	r0, r4
 80183d2:	f008 fa8a 	bl	80208ea <__cxa_guard_release>
 80183d6:	4a06      	ldr	r2, [pc, #24]	@ (80183f0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80183d8:	4909      	ldr	r1, [pc, #36]	@ (8018400 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 80183da:	480a      	ldr	r0, [pc, #40]	@ (8018404 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80183dc:	f008 fa72 	bl	80208c4 <__aeabi_atexit>
 80183e0:	4b05      	ldr	r3, [pc, #20]	@ (80183f8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80183e2:	64eb      	str	r3, [r5, #76]	@ 0x4c
 80183e4:	4b07      	ldr	r3, [pc, #28]	@ (8018404 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80183e6:	652b      	str	r3, [r5, #80]	@ 0x50
 80183e8:	bd38      	pop	{r3, r4, r5, pc}
 80183ea:	bf00      	nop
 80183ec:	2001319c 	.word	0x2001319c
 80183f0:	20000000 	.word	0x20000000
 80183f4:	08014119 	.word	0x08014119
 80183f8:	20000208 	.word	0x20000208
 80183fc:	200131a0 	.word	0x200131a0
 8018400:	08014117 	.word	0x08014117
 8018404:	2000020c 	.word	0x2000020c

08018408 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8018408:	b538      	push	{r3, r4, r5, lr}
 801840a:	4c15      	ldr	r4, [pc, #84]	@ (8018460 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801840c:	7823      	ldrb	r3, [r4, #0]
 801840e:	f3bf 8f5b 	dmb	ish
 8018412:	07da      	lsls	r2, r3, #31
 8018414:	4605      	mov	r5, r0
 8018416:	d40b      	bmi.n	8018430 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8018418:	4620      	mov	r0, r4
 801841a:	f008 fa5a 	bl	80208d2 <__cxa_guard_acquire>
 801841e:	b138      	cbz	r0, 8018430 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8018420:	4620      	mov	r0, r4
 8018422:	f008 fa62 	bl	80208ea <__cxa_guard_release>
 8018426:	4a0f      	ldr	r2, [pc, #60]	@ (8018464 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8018428:	490f      	ldr	r1, [pc, #60]	@ (8018468 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801842a:	4810      	ldr	r0, [pc, #64]	@ (801846c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801842c:	f008 fa4a 	bl	80208c4 <__aeabi_atexit>
 8018430:	4c0f      	ldr	r4, [pc, #60]	@ (8018470 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8018432:	7823      	ldrb	r3, [r4, #0]
 8018434:	f3bf 8f5b 	dmb	ish
 8018438:	07db      	lsls	r3, r3, #31
 801843a:	d40b      	bmi.n	8018454 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801843c:	4620      	mov	r0, r4
 801843e:	f008 fa48 	bl	80208d2 <__cxa_guard_acquire>
 8018442:	b138      	cbz	r0, 8018454 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8018444:	4620      	mov	r0, r4
 8018446:	f008 fa50 	bl	80208ea <__cxa_guard_release>
 801844a:	4a06      	ldr	r2, [pc, #24]	@ (8018464 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801844c:	4909      	ldr	r1, [pc, #36]	@ (8018474 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801844e:	480a      	ldr	r0, [pc, #40]	@ (8018478 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8018450:	f008 fa38 	bl	80208c4 <__aeabi_atexit>
 8018454:	4b05      	ldr	r3, [pc, #20]	@ (801846c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8018456:	646b      	str	r3, [r5, #68]	@ 0x44
 8018458:	4b07      	ldr	r3, [pc, #28]	@ (8018478 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801845a:	64ab      	str	r3, [r5, #72]	@ 0x48
 801845c:	bd38      	pop	{r3, r4, r5, pc}
 801845e:	bf00      	nop
 8018460:	20013164 	.word	0x20013164
 8018464:	20000000 	.word	0x20000000
 8018468:	0801411d 	.word	0x0801411d
 801846c:	200001d0 	.word	0x200001d0
 8018470:	20013168 	.word	0x20013168
 8018474:	0801411b 	.word	0x0801411b
 8018478:	200001d4 	.word	0x200001d4

0801847c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801847c:	b538      	push	{r3, r4, r5, lr}
 801847e:	4c15      	ldr	r4, [pc, #84]	@ (80184d4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8018480:	7823      	ldrb	r3, [r4, #0]
 8018482:	f3bf 8f5b 	dmb	ish
 8018486:	07da      	lsls	r2, r3, #31
 8018488:	4605      	mov	r5, r0
 801848a:	d40b      	bmi.n	80184a4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801848c:	4620      	mov	r0, r4
 801848e:	f008 fa20 	bl	80208d2 <__cxa_guard_acquire>
 8018492:	b138      	cbz	r0, 80184a4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8018494:	4620      	mov	r0, r4
 8018496:	f008 fa28 	bl	80208ea <__cxa_guard_release>
 801849a:	4a0f      	ldr	r2, [pc, #60]	@ (80184d8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801849c:	490f      	ldr	r1, [pc, #60]	@ (80184dc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801849e:	4810      	ldr	r0, [pc, #64]	@ (80184e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80184a0:	f008 fa10 	bl	80208c4 <__aeabi_atexit>
 80184a4:	4c0f      	ldr	r4, [pc, #60]	@ (80184e4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 80184a6:	7823      	ldrb	r3, [r4, #0]
 80184a8:	f3bf 8f5b 	dmb	ish
 80184ac:	07db      	lsls	r3, r3, #31
 80184ae:	d40b      	bmi.n	80184c8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80184b0:	4620      	mov	r0, r4
 80184b2:	f008 fa0e 	bl	80208d2 <__cxa_guard_acquire>
 80184b6:	b138      	cbz	r0, 80184c8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80184b8:	4620      	mov	r0, r4
 80184ba:	f008 fa16 	bl	80208ea <__cxa_guard_release>
 80184be:	4a06      	ldr	r2, [pc, #24]	@ (80184d8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80184c0:	4909      	ldr	r1, [pc, #36]	@ (80184e8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 80184c2:	480a      	ldr	r0, [pc, #40]	@ (80184ec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80184c4:	f008 f9fe 	bl	80208c4 <__aeabi_atexit>
 80184c8:	4b05      	ldr	r3, [pc, #20]	@ (80184e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80184ca:	63eb      	str	r3, [r5, #60]	@ 0x3c
 80184cc:	4b07      	ldr	r3, [pc, #28]	@ (80184ec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80184ce:	642b      	str	r3, [r5, #64]	@ 0x40
 80184d0:	bd38      	pop	{r3, r4, r5, pc}
 80184d2:	bf00      	nop
 80184d4:	20013184 	.word	0x20013184
 80184d8:	20000000 	.word	0x20000000
 80184dc:	08014121 	.word	0x08014121
 80184e0:	200001f0 	.word	0x200001f0
 80184e4:	20013188 	.word	0x20013188
 80184e8:	0801411f 	.word	0x0801411f
 80184ec:	200001f4 	.word	0x200001f4

080184f0 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 80184f0:	b510      	push	{r4, lr}
 80184f2:	4604      	mov	r4, r0
 80184f4:	f7ff ff14 	bl	8018320 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 80184f8:	4620      	mov	r0, r4
 80184fa:	f7ff ff85 	bl	8018408 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 80184fe:	4620      	mov	r0, r4
 8018500:	f7ff ff48 	bl	8018394 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8018504:	4620      	mov	r0, r4
 8018506:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801850a:	f7ff bfb7 	b.w	801847c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08018510 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8018510:	b538      	push	{r3, r4, r5, lr}
 8018512:	4c15      	ldr	r4, [pc, #84]	@ (8018568 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8018514:	7823      	ldrb	r3, [r4, #0]
 8018516:	f3bf 8f5b 	dmb	ish
 801851a:	07da      	lsls	r2, r3, #31
 801851c:	4605      	mov	r5, r0
 801851e:	d40b      	bmi.n	8018538 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8018520:	4620      	mov	r0, r4
 8018522:	f008 f9d6 	bl	80208d2 <__cxa_guard_acquire>
 8018526:	b138      	cbz	r0, 8018538 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8018528:	4620      	mov	r0, r4
 801852a:	f008 f9de 	bl	80208ea <__cxa_guard_release>
 801852e:	4a0f      	ldr	r2, [pc, #60]	@ (801856c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8018530:	490f      	ldr	r1, [pc, #60]	@ (8018570 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8018532:	4810      	ldr	r0, [pc, #64]	@ (8018574 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8018534:	f008 f9c6 	bl	80208c4 <__aeabi_atexit>
 8018538:	4c0f      	ldr	r4, [pc, #60]	@ (8018578 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801853a:	7823      	ldrb	r3, [r4, #0]
 801853c:	f3bf 8f5b 	dmb	ish
 8018540:	07db      	lsls	r3, r3, #31
 8018542:	d40b      	bmi.n	801855c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8018544:	4620      	mov	r0, r4
 8018546:	f008 f9c4 	bl	80208d2 <__cxa_guard_acquire>
 801854a:	b138      	cbz	r0, 801855c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801854c:	4620      	mov	r0, r4
 801854e:	f008 f9cc 	bl	80208ea <__cxa_guard_release>
 8018552:	4a06      	ldr	r2, [pc, #24]	@ (801856c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8018554:	4909      	ldr	r1, [pc, #36]	@ (801857c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8018556:	480a      	ldr	r0, [pc, #40]	@ (8018580 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8018558:	f008 f9b4 	bl	80208c4 <__aeabi_atexit>
 801855c:	4b05      	ldr	r3, [pc, #20]	@ (8018574 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801855e:	666b      	str	r3, [r5, #100]	@ 0x64
 8018560:	4b07      	ldr	r3, [pc, #28]	@ (8018580 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8018562:	66ab      	str	r3, [r5, #104]	@ 0x68
 8018564:	bd38      	pop	{r3, r4, r5, pc}
 8018566:	bf00      	nop
 8018568:	2001316c 	.word	0x2001316c
 801856c:	20000000 	.word	0x20000000
 8018570:	0801410d 	.word	0x0801410d
 8018574:	200001d8 	.word	0x200001d8
 8018578:	20013170 	.word	0x20013170
 801857c:	0801410b 	.word	0x0801410b
 8018580:	200001dc 	.word	0x200001dc

08018584 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8018584:	b538      	push	{r3, r4, r5, lr}
 8018586:	4c15      	ldr	r4, [pc, #84]	@ (80185dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8018588:	7823      	ldrb	r3, [r4, #0]
 801858a:	f3bf 8f5b 	dmb	ish
 801858e:	07da      	lsls	r2, r3, #31
 8018590:	4605      	mov	r5, r0
 8018592:	d40b      	bmi.n	80185ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8018594:	4620      	mov	r0, r4
 8018596:	f008 f99c 	bl	80208d2 <__cxa_guard_acquire>
 801859a:	b138      	cbz	r0, 80185ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801859c:	4620      	mov	r0, r4
 801859e:	f008 f9a4 	bl	80208ea <__cxa_guard_release>
 80185a2:	4a0f      	ldr	r2, [pc, #60]	@ (80185e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80185a4:	490f      	ldr	r1, [pc, #60]	@ (80185e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 80185a6:	4810      	ldr	r0, [pc, #64]	@ (80185e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80185a8:	f008 f98c 	bl	80208c4 <__aeabi_atexit>
 80185ac:	4c0f      	ldr	r4, [pc, #60]	@ (80185ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 80185ae:	7823      	ldrb	r3, [r4, #0]
 80185b0:	f3bf 8f5b 	dmb	ish
 80185b4:	07db      	lsls	r3, r3, #31
 80185b6:	d40b      	bmi.n	80185d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80185b8:	4620      	mov	r0, r4
 80185ba:	f008 f98a 	bl	80208d2 <__cxa_guard_acquire>
 80185be:	b138      	cbz	r0, 80185d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80185c0:	4620      	mov	r0, r4
 80185c2:	f008 f992 	bl	80208ea <__cxa_guard_release>
 80185c6:	4a06      	ldr	r2, [pc, #24]	@ (80185e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80185c8:	4909      	ldr	r1, [pc, #36]	@ (80185f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 80185ca:	480a      	ldr	r0, [pc, #40]	@ (80185f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80185cc:	f008 f97a 	bl	80208c4 <__aeabi_atexit>
 80185d0:	4b05      	ldr	r3, [pc, #20]	@ (80185e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80185d2:	65eb      	str	r3, [r5, #92]	@ 0x5c
 80185d4:	4b07      	ldr	r3, [pc, #28]	@ (80185f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80185d6:	662b      	str	r3, [r5, #96]	@ 0x60
 80185d8:	bd38      	pop	{r3, r4, r5, pc}
 80185da:	bf00      	nop
 80185dc:	20013144 	.word	0x20013144
 80185e0:	20000000 	.word	0x20000000
 80185e4:	08014111 	.word	0x08014111
 80185e8:	200001b0 	.word	0x200001b0
 80185ec:	20013148 	.word	0x20013148
 80185f0:	0801410f 	.word	0x0801410f
 80185f4:	200001b4 	.word	0x200001b4

080185f8 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 80185f8:	b510      	push	{r4, lr}
 80185fa:	4604      	mov	r4, r0
 80185fc:	f7ff ff88 	bl	8018510 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8018600:	4620      	mov	r0, r4
 8018602:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018606:	f7ff bfbd 	b.w	8018584 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801860c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801860c:	b538      	push	{r3, r4, r5, lr}
 801860e:	4c15      	ldr	r4, [pc, #84]	@ (8018664 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8018610:	7823      	ldrb	r3, [r4, #0]
 8018612:	f3bf 8f5b 	dmb	ish
 8018616:	07da      	lsls	r2, r3, #31
 8018618:	4605      	mov	r5, r0
 801861a:	d40b      	bmi.n	8018634 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801861c:	4620      	mov	r0, r4
 801861e:	f008 f958 	bl	80208d2 <__cxa_guard_acquire>
 8018622:	b138      	cbz	r0, 8018634 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8018624:	4620      	mov	r0, r4
 8018626:	f008 f960 	bl	80208ea <__cxa_guard_release>
 801862a:	4a0f      	ldr	r2, [pc, #60]	@ (8018668 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801862c:	490f      	ldr	r1, [pc, #60]	@ (801866c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801862e:	4810      	ldr	r0, [pc, #64]	@ (8018670 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8018630:	f008 f948 	bl	80208c4 <__aeabi_atexit>
 8018634:	4c0f      	ldr	r4, [pc, #60]	@ (8018674 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8018636:	7823      	ldrb	r3, [r4, #0]
 8018638:	f3bf 8f5b 	dmb	ish
 801863c:	07db      	lsls	r3, r3, #31
 801863e:	d40b      	bmi.n	8018658 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8018640:	4620      	mov	r0, r4
 8018642:	f008 f946 	bl	80208d2 <__cxa_guard_acquire>
 8018646:	b138      	cbz	r0, 8018658 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8018648:	4620      	mov	r0, r4
 801864a:	f008 f94e 	bl	80208ea <__cxa_guard_release>
 801864e:	4a06      	ldr	r2, [pc, #24]	@ (8018668 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8018650:	4909      	ldr	r1, [pc, #36]	@ (8018678 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8018652:	480a      	ldr	r0, [pc, #40]	@ (801867c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8018654:	f008 f936 	bl	80208c4 <__aeabi_atexit>
 8018658:	4b05      	ldr	r3, [pc, #20]	@ (8018670 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801865a:	676b      	str	r3, [r5, #116]	@ 0x74
 801865c:	4b07      	ldr	r3, [pc, #28]	@ (801867c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801865e:	67ab      	str	r3, [r5, #120]	@ 0x78
 8018660:	bd38      	pop	{r3, r4, r5, pc}
 8018662:	bf00      	nop
 8018664:	2001313c 	.word	0x2001313c
 8018668:	20000000 	.word	0x20000000
 801866c:	08014105 	.word	0x08014105
 8018670:	200001a8 	.word	0x200001a8
 8018674:	20013140 	.word	0x20013140
 8018678:	08014103 	.word	0x08014103
 801867c:	200001ac 	.word	0x200001ac

08018680 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8018680:	b538      	push	{r3, r4, r5, lr}
 8018682:	4c15      	ldr	r4, [pc, #84]	@ (80186d8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8018684:	7823      	ldrb	r3, [r4, #0]
 8018686:	f3bf 8f5b 	dmb	ish
 801868a:	07da      	lsls	r2, r3, #31
 801868c:	4605      	mov	r5, r0
 801868e:	d40b      	bmi.n	80186a8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8018690:	4620      	mov	r0, r4
 8018692:	f008 f91e 	bl	80208d2 <__cxa_guard_acquire>
 8018696:	b138      	cbz	r0, 80186a8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8018698:	4620      	mov	r0, r4
 801869a:	f008 f926 	bl	80208ea <__cxa_guard_release>
 801869e:	4a0f      	ldr	r2, [pc, #60]	@ (80186dc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80186a0:	490f      	ldr	r1, [pc, #60]	@ (80186e0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 80186a2:	4810      	ldr	r0, [pc, #64]	@ (80186e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80186a4:	f008 f90e 	bl	80208c4 <__aeabi_atexit>
 80186a8:	4c0f      	ldr	r4, [pc, #60]	@ (80186e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 80186aa:	7823      	ldrb	r3, [r4, #0]
 80186ac:	f3bf 8f5b 	dmb	ish
 80186b0:	07db      	lsls	r3, r3, #31
 80186b2:	d40b      	bmi.n	80186cc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80186b4:	4620      	mov	r0, r4
 80186b6:	f008 f90c 	bl	80208d2 <__cxa_guard_acquire>
 80186ba:	b138      	cbz	r0, 80186cc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80186bc:	4620      	mov	r0, r4
 80186be:	f008 f914 	bl	80208ea <__cxa_guard_release>
 80186c2:	4a06      	ldr	r2, [pc, #24]	@ (80186dc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80186c4:	4909      	ldr	r1, [pc, #36]	@ (80186ec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 80186c6:	480a      	ldr	r0, [pc, #40]	@ (80186f0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80186c8:	f008 f8fc 	bl	80208c4 <__aeabi_atexit>
 80186cc:	4b05      	ldr	r3, [pc, #20]	@ (80186e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80186ce:	66eb      	str	r3, [r5, #108]	@ 0x6c
 80186d0:	4b07      	ldr	r3, [pc, #28]	@ (80186f0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80186d2:	672b      	str	r3, [r5, #112]	@ 0x70
 80186d4:	bd38      	pop	{r3, r4, r5, pc}
 80186d6:	bf00      	nop
 80186d8:	20013134 	.word	0x20013134
 80186dc:	20000000 	.word	0x20000000
 80186e0:	08014109 	.word	0x08014109
 80186e4:	200001a0 	.word	0x200001a0
 80186e8:	20013138 	.word	0x20013138
 80186ec:	08014107 	.word	0x08014107
 80186f0:	200001a4 	.word	0x200001a4

080186f4 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 80186f4:	b510      	push	{r4, lr}
 80186f6:	4604      	mov	r4, r0
 80186f8:	f7ff ff88 	bl	801860c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 80186fc:	4620      	mov	r0, r4
 80186fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018702:	f7ff bfbd 	b.w	8018680 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08018706 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8018706:	b510      	push	{r4, lr}
 8018708:	4604      	mov	r4, r0
 801870a:	f7ff fff3 	bl	80186f4 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801870e:	4620      	mov	r0, r4
 8018710:	f7ff ff72 	bl	80185f8 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8018714:	4620      	mov	r0, r4
 8018716:	f7ff fdf9 	bl	801830c <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801871a:	4620      	mov	r0, r4
 801871c:	f7ff fcfa 	bl	8018114 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8018720:	4620      	mov	r0, r4
 8018722:	f7ff fd75 	bl	8018210 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 8018726:	4620      	mov	r0, r4
 8018728:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801872c:	f7ff bee0 	b.w	80184f0 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08018730 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 8018730:	b538      	push	{r3, r4, r5, lr}
 8018732:	4c0b      	ldr	r4, [pc, #44]	@ (8018760 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 8018734:	7823      	ldrb	r3, [r4, #0]
 8018736:	f3bf 8f5b 	dmb	ish
 801873a:	07db      	lsls	r3, r3, #31
 801873c:	4605      	mov	r5, r0
 801873e:	d40b      	bmi.n	8018758 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8018740:	4620      	mov	r0, r4
 8018742:	f008 f8c6 	bl	80208d2 <__cxa_guard_acquire>
 8018746:	b138      	cbz	r0, 8018758 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8018748:	4620      	mov	r0, r4
 801874a:	f008 f8ce 	bl	80208ea <__cxa_guard_release>
 801874e:	4a05      	ldr	r2, [pc, #20]	@ (8018764 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 8018750:	4905      	ldr	r1, [pc, #20]	@ (8018768 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 8018752:	4806      	ldr	r0, [pc, #24]	@ (801876c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8018754:	f008 f8b6 	bl	80208c4 <__aeabi_atexit>
 8018758:	4b04      	ldr	r3, [pc, #16]	@ (801876c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801875a:	67eb      	str	r3, [r5, #124]	@ 0x7c
 801875c:	bd38      	pop	{r3, r4, r5, pc}
 801875e:	bf00      	nop
 8018760:	20013128 	.word	0x20013128
 8018764:	20000000 	.word	0x20000000
 8018768:	08014101 	.word	0x08014101
 801876c:	20000198 	.word	0x20000198

08018770 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 8018770:	b538      	push	{r3, r4, r5, lr}
 8018772:	4c0b      	ldr	r4, [pc, #44]	@ (80187a0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 8018774:	7823      	ldrb	r3, [r4, #0]
 8018776:	f3bf 8f5b 	dmb	ish
 801877a:	07db      	lsls	r3, r3, #31
 801877c:	4605      	mov	r5, r0
 801877e:	d40b      	bmi.n	8018798 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8018780:	4620      	mov	r0, r4
 8018782:	f008 f8a6 	bl	80208d2 <__cxa_guard_acquire>
 8018786:	b138      	cbz	r0, 8018798 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8018788:	4620      	mov	r0, r4
 801878a:	f008 f8ae 	bl	80208ea <__cxa_guard_release>
 801878e:	4a05      	ldr	r2, [pc, #20]	@ (80187a4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 8018790:	4905      	ldr	r1, [pc, #20]	@ (80187a8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 8018792:	4806      	ldr	r0, [pc, #24]	@ (80187ac <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 8018794:	f008 f896 	bl	80208c4 <__aeabi_atexit>
 8018798:	4b04      	ldr	r3, [pc, #16]	@ (80187ac <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801879a:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
 801879e:	bd38      	pop	{r3, r4, r5, pc}
 80187a0:	2001312c 	.word	0x2001312c
 80187a4:	20000000 	.word	0x20000000
 80187a8:	080140ff 	.word	0x080140ff
 80187ac:	2000019c 	.word	0x2000019c

080187b0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 80187b0:	b570      	push	{r4, r5, r6, lr}
 80187b2:	4d0d      	ldr	r5, [pc, #52]	@ (80187e8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 80187b4:	4c0d      	ldr	r4, [pc, #52]	@ (80187ec <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 80187b6:	782b      	ldrb	r3, [r5, #0]
 80187b8:	f3bf 8f5b 	dmb	ish
 80187bc:	f013 0f01 	tst.w	r3, #1
 80187c0:	4606      	mov	r6, r0
 80187c2:	d10d      	bne.n	80187e0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 80187c4:	4628      	mov	r0, r5
 80187c6:	f008 f884 	bl	80208d2 <__cxa_guard_acquire>
 80187ca:	b148      	cbz	r0, 80187e0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 80187cc:	4b08      	ldr	r3, [pc, #32]	@ (80187f0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 80187ce:	6023      	str	r3, [r4, #0]
 80187d0:	4628      	mov	r0, r5
 80187d2:	f008 f88a 	bl	80208ea <__cxa_guard_release>
 80187d6:	4a07      	ldr	r2, [pc, #28]	@ (80187f4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 80187d8:	4907      	ldr	r1, [pc, #28]	@ (80187f8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 80187da:	4620      	mov	r0, r4
 80187dc:	f008 f872 	bl	80208c4 <__aeabi_atexit>
 80187e0:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
 80187e4:	bd70      	pop	{r4, r5, r6, pc}
 80187e6:	bf00      	nop
 80187e8:	20013130 	.word	0x20013130
 80187ec:	200132a8 	.word	0x200132a8
 80187f0:	08023bd4 	.word	0x08023bd4
 80187f4:	20000000 	.word	0x20000000
 80187f8:	080140fd 	.word	0x080140fd

080187fc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 80187fc:	b510      	push	{r4, lr}
 80187fe:	4604      	mov	r4, r0
 8018800:	f7ff ff96 	bl	8018730 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 8018804:	4620      	mov	r0, r4
 8018806:	f7ff ffb3 	bl	8018770 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801880a:	4620      	mov	r0, r4
 801880c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018810:	f7ff bfce 	b.w	80187b0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

08018814 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>:
 8018814:	b570      	push	{r4, r5, r6, lr}
 8018816:	4d0d      	ldr	r5, [pc, #52]	@ (801884c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x38>)
 8018818:	4c0d      	ldr	r4, [pc, #52]	@ (8018850 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x3c>)
 801881a:	782b      	ldrb	r3, [r5, #0]
 801881c:	f3bf 8f5b 	dmb	ish
 8018820:	f013 0f01 	tst.w	r3, #1
 8018824:	4606      	mov	r6, r0
 8018826:	d10d      	bne.n	8018844 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 8018828:	4628      	mov	r0, r5
 801882a:	f008 f852 	bl	80208d2 <__cxa_guard_acquire>
 801882e:	b148      	cbz	r0, 8018844 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 8018830:	4b08      	ldr	r3, [pc, #32]	@ (8018854 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x40>)
 8018832:	6023      	str	r3, [r4, #0]
 8018834:	4628      	mov	r0, r5
 8018836:	f008 f858 	bl	80208ea <__cxa_guard_release>
 801883a:	4a07      	ldr	r2, [pc, #28]	@ (8018858 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x44>)
 801883c:	4907      	ldr	r1, [pc, #28]	@ (801885c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x48>)
 801883e:	4620      	mov	r0, r4
 8018840:	f008 f840 	bl	80208c4 <__aeabi_atexit>
 8018844:	f8c6 4088 	str.w	r4, [r6, #136]	@ 0x88
 8018848:	bd70      	pop	{r4, r5, r6, pc}
 801884a:	bf00      	nop
 801884c:	20013124 	.word	0x20013124
 8018850:	200131a4 	.word	0x200131a4
 8018854:	08023bf0 	.word	0x08023bf0
 8018858:	20000000 	.word	0x20000000
 801885c:	080140fb 	.word	0x080140fb

08018860 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8018860:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018864:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
 8018868:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
 801886c:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
 8018870:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
 8018874:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
 8018878:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
 801887c:	8808      	ldrh	r0, [r1, #0]
 801887e:	fb05 4c0e 	mla	ip, r5, lr, r4
 8018882:	2d00      	cmp	r5, #0
 8018884:	eb02 0a0c 	add.w	sl, r2, ip
 8018888:	f2c0 80b0 	blt.w	80189ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801888c:	45ab      	cmp	fp, r5
 801888e:	f340 80ad 	ble.w	80189ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8018892:	2c00      	cmp	r4, #0
 8018894:	f2c0 80a8 	blt.w	80189e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8018898:	45a6      	cmp	lr, r4
 801889a:	f340 80a5 	ble.w	80189e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801889e:	f812 200c 	ldrb.w	r2, [r2, ip]
 80188a2:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 80188a6:	1c62      	adds	r2, r4, #1
 80188a8:	f100 80a3 	bmi.w	80189f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80188ac:	4596      	cmp	lr, r2
 80188ae:	f340 80a0 	ble.w	80189f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80188b2:	f1b9 0f00 	cmp.w	r9, #0
 80188b6:	f000 809c 	beq.w	80189f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80188ba:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80188be:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 80188c2:	3501      	adds	r5, #1
 80188c4:	f100 8099 	bmi.w	80189fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80188c8:	45ab      	cmp	fp, r5
 80188ca:	f340 8096 	ble.w	80189fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80188ce:	2f00      	cmp	r7, #0
 80188d0:	f000 8093 	beq.w	80189fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80188d4:	2c00      	cmp	r4, #0
 80188d6:	f2c0 808e 	blt.w	80189f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 80188da:	45a6      	cmp	lr, r4
 80188dc:	f340 808b 	ble.w	80189f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 80188e0:	f81a 200e 	ldrb.w	r2, [sl, lr]
 80188e4:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 80188e8:	3401      	adds	r4, #1
 80188ea:	f100 8089 	bmi.w	8018a00 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80188ee:	45a6      	cmp	lr, r4
 80188f0:	f340 8086 	ble.w	8018a00 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80188f4:	f1b9 0f00 	cmp.w	r9, #0
 80188f8:	f000 8082 	beq.w	8018a00 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80188fc:	44d6      	add	lr, sl
 80188fe:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8018902:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8018906:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801890a:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801890e:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 8018912:	fb19 fe07 	smulbb	lr, r9, r7
 8018916:	ea44 0808 	orr.w	r8, r4, r8
 801891a:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801891e:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8018922:	f1c7 0210 	rsb	r2, r7, #16
 8018926:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801892a:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801892e:	ea44 0c0c 	orr.w	ip, r4, ip
 8018932:	eba2 0209 	sub.w	r2, r2, r9
 8018936:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801893a:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801893e:	fb04 f40c 	mul.w	r4, r4, ip
 8018942:	fb02 4808 	mla	r8, r2, r8, r4
 8018946:	041a      	lsls	r2, r3, #16
 8018948:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801894c:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8018950:	4313      	orrs	r3, r2
 8018952:	042a      	lsls	r2, r5, #16
 8018954:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8018958:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801895c:	fb0e 8303 	mla	r3, lr, r3, r8
 8018960:	432a      	orrs	r2, r5
 8018962:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8018966:	fb07 3202 	mla	r2, r7, r2, r3
 801896a:	0d53      	lsrs	r3, r2, #21
 801896c:	0952      	lsrs	r2, r2, #5
 801896e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8018972:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8018976:	431a      	orrs	r2, r3
 8018978:	b293      	uxth	r3, r2
 801897a:	b2b4      	uxth	r4, r6
 801897c:	1202      	asrs	r2, r0, #8
 801897e:	43f6      	mvns	r6, r6
 8018980:	b2f6      	uxtb	r6, r6
 8018982:	121d      	asrs	r5, r3, #8
 8018984:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8018988:	fb12 f206 	smulbb	r2, r2, r6
 801898c:	10c7      	asrs	r7, r0, #3
 801898e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8018992:	00c0      	lsls	r0, r0, #3
 8018994:	fb05 2504 	mla	r5, r5, r4, r2
 8018998:	b2c0      	uxtb	r0, r0
 801899a:	10da      	asrs	r2, r3, #3
 801899c:	00db      	lsls	r3, r3, #3
 801899e:	b2db      	uxtb	r3, r3
 80189a0:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80189a4:	fb10 f006 	smulbb	r0, r0, r6
 80189a8:	b2ad      	uxth	r5, r5
 80189aa:	fb03 0004 	mla	r0, r3, r4, r0
 80189ae:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80189b2:	fb17 f706 	smulbb	r7, r7, r6
 80189b6:	b280      	uxth	r0, r0
 80189b8:	1c6b      	adds	r3, r5, #1
 80189ba:	fb02 7204 	mla	r2, r2, r4, r7
 80189be:	b292      	uxth	r2, r2
 80189c0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80189c4:	1c43      	adds	r3, r0, #1
 80189c6:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80189ca:	1c50      	adds	r0, r2, #1
 80189cc:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80189d0:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80189d4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80189d8:	0952      	lsrs	r2, r2, #5
 80189da:	432b      	orrs	r3, r5
 80189dc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80189e0:	4313      	orrs	r3, r2
 80189e2:	800b      	strh	r3, [r1, #0]
 80189e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80189e8:	4680      	mov	r8, r0
 80189ea:	e75c      	b.n	80188a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 80189ec:	4684      	mov	ip, r0
 80189ee:	4680      	mov	r8, r0
 80189f0:	e767      	b.n	80188c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 80189f2:	4684      	mov	ip, r0
 80189f4:	e765      	b.n	80188c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 80189f6:	4605      	mov	r5, r0
 80189f8:	e776      	b.n	80188e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 80189fa:	4603      	mov	r3, r0
 80189fc:	4605      	mov	r5, r0
 80189fe:	e782      	b.n	8018906 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8018a00:	4603      	mov	r3, r0
 8018a02:	e780      	b.n	8018906 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08018a04 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018a04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018a08:	b099      	sub	sp, #100	@ 0x64
 8018a0a:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
 8018a0e:	9215      	str	r2, [sp, #84]	@ 0x54
 8018a10:	9309      	str	r3, [sp, #36]	@ 0x24
 8018a12:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 8018a14:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 8018a18:	930d      	str	r3, [sp, #52]	@ 0x34
 8018a1a:	910c      	str	r1, [sp, #48]	@ 0x30
 8018a1c:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
 8018a20:	9016      	str	r0, [sp, #88]	@ 0x58
 8018a22:	6850      	ldr	r0, [r2, #4]
 8018a24:	6812      	ldr	r2, [r2, #0]
 8018a26:	fb00 1303 	mla	r3, r0, r3, r1
 8018a2a:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8018a2e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8018a30:	681b      	ldr	r3, [r3, #0]
 8018a32:	930b      	str	r3, [sp, #44]	@ 0x2c
 8018a34:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8018a36:	685e      	ldr	r6, [r3, #4]
 8018a38:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8018a3a:	43db      	mvns	r3, r3
 8018a3c:	b2db      	uxtb	r3, r3
 8018a3e:	3604      	adds	r6, #4
 8018a40:	930a      	str	r3, [sp, #40]	@ 0x28
 8018a42:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8018a44:	2b00      	cmp	r3, #0
 8018a46:	dc03      	bgt.n	8018a50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8018a48:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8018a4a:	2b00      	cmp	r3, #0
 8018a4c:	f340 8225 	ble.w	8018e9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8018a50:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8018a52:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018a56:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018a5a:	1e48      	subs	r0, r1, #1
 8018a5c:	1e57      	subs	r7, r2, #1
 8018a5e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018a60:	2b00      	cmp	r3, #0
 8018a62:	f340 80e3 	ble.w	8018c2c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8018a66:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8018a6a:	ea4f 4325 	mov.w	r3, r5, asr #16
 8018a6e:	d406      	bmi.n	8018a7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8018a70:	4584      	cmp	ip, r0
 8018a72:	da04      	bge.n	8018a7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8018a74:	2b00      	cmp	r3, #0
 8018a76:	db02      	blt.n	8018a7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8018a78:	42bb      	cmp	r3, r7
 8018a7a:	f2c0 80d8 	blt.w	8018c2e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8018a7e:	f11c 0c01 	adds.w	ip, ip, #1
 8018a82:	f100 80c9 	bmi.w	8018c18 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8018a86:	4561      	cmp	r1, ip
 8018a88:	f2c0 80c6 	blt.w	8018c18 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8018a8c:	3301      	adds	r3, #1
 8018a8e:	f100 80c3 	bmi.w	8018c18 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8018a92:	429a      	cmp	r2, r3
 8018a94:	f2c0 80c0 	blt.w	8018c18 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8018a98:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 8018a9c:	4647      	mov	r7, r8
 8018a9e:	f1bb 0f00 	cmp.w	fp, #0
 8018aa2:	f340 80e3 	ble.w	8018c6c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 8018aa6:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 8018aa8:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8018aaa:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8018aae:	689b      	ldr	r3, [r3, #8]
 8018ab0:	ea5f 422a 	movs.w	r2, sl, asr #16
 8018ab4:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8018ab8:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8018abc:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8018ac0:	f100 8121 	bmi.w	8018d06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8018ac4:	f103 39ff 	add.w	r9, r3, #4294967295
 8018ac8:	454a      	cmp	r2, r9
 8018aca:	f280 811c 	bge.w	8018d06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8018ace:	f1bc 0f00 	cmp.w	ip, #0
 8018ad2:	f2c0 8118 	blt.w	8018d06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8018ad6:	f10e 39ff 	add.w	r9, lr, #4294967295
 8018ada:	45cc      	cmp	ip, r9
 8018adc:	f280 8113 	bge.w	8018d06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8018ae0:	b21b      	sxth	r3, r3
 8018ae2:	fb0c 2203 	mla	r2, ip, r3, r2
 8018ae6:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8018ae8:	eb04 0902 	add.w	r9, r4, r2
 8018aec:	5ca2      	ldrb	r2, [r4, r2]
 8018aee:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8018af2:	2800      	cmp	r0, #0
 8018af4:	f000 80fe 	beq.w	8018cf4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8018af8:	f899 2001 	ldrb.w	r2, [r9, #1]
 8018afc:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8018b00:	9211      	str	r2, [sp, #68]	@ 0x44
 8018b02:	b151      	cbz	r1, 8018b1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8018b04:	eb09 0203 	add.w	r2, r9, r3
 8018b08:	f819 3003 	ldrb.w	r3, [r9, r3]
 8018b0c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8018b10:	930f      	str	r3, [sp, #60]	@ 0x3c
 8018b12:	7853      	ldrb	r3, [r2, #1]
 8018b14:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8018b18:	9312      	str	r3, [sp, #72]	@ 0x48
 8018b1a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8018b1c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8018b1e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8018b22:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8018b26:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8018b2a:	ea4c 0c03 	orr.w	ip, ip, r3
 8018b2e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8018b30:	041b      	lsls	r3, r3, #16
 8018b32:	fb10 f201 	smulbb	r2, r0, r1
 8018b36:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 8018b3a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8018b3e:	10d2      	asrs	r2, r2, #3
 8018b40:	4323      	orrs	r3, r4
 8018b42:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8018b46:	4353      	muls	r3, r2
 8018b48:	fb09 330c 	mla	r3, r9, ip, r3
 8018b4c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8018b50:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8018b54:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8018b58:	ea4c 0e0e 	orr.w	lr, ip, lr
 8018b5c:	f1c1 0c10 	rsb	ip, r1, #16
 8018b60:	ebac 0c00 	sub.w	ip, ip, r0
 8018b64:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8018b68:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8018b6c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8018b6e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8018b70:	0418      	lsls	r0, r3, #16
 8018b72:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8018b76:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8018b7a:	4318      	orrs	r0, r3
 8018b7c:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8018b80:	fb02 c200 	mla	r2, r2, r0, ip
 8018b84:	0d53      	lsrs	r3, r2, #21
 8018b86:	0952      	lsrs	r2, r2, #5
 8018b88:	8838      	ldrh	r0, [r7, #0]
 8018b8a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8018b8e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8018b92:	431a      	orrs	r2, r3
 8018b94:	b292      	uxth	r2, r2
 8018b96:	1201      	asrs	r1, r0, #8
 8018b98:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 8018b9c:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8018ba0:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8018ba4:	fb11 f104 	smulbb	r1, r1, r4
 8018ba8:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8018bac:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8018bb0:	00c0      	lsls	r0, r0, #3
 8018bb2:	fb0c 1c03 	mla	ip, ip, r3, r1
 8018bb6:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8018bba:	10d1      	asrs	r1, r2, #3
 8018bbc:	b2c0      	uxtb	r0, r0
 8018bbe:	00d2      	lsls	r2, r2, #3
 8018bc0:	b2d2      	uxtb	r2, r2
 8018bc2:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8018bc6:	fb1e fe04 	smulbb	lr, lr, r4
 8018bca:	fb10 f004 	smulbb	r0, r0, r4
 8018bce:	fa1f fc8c 	uxth.w	ip, ip
 8018bd2:	fb01 e103 	mla	r1, r1, r3, lr
 8018bd6:	fb02 0303 	mla	r3, r2, r3, r0
 8018bda:	b29a      	uxth	r2, r3
 8018bdc:	f10c 0301 	add.w	r3, ip, #1
 8018be0:	b289      	uxth	r1, r1
 8018be2:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8018be6:	1c53      	adds	r3, r2, #1
 8018be8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018bec:	1c4a      	adds	r2, r1, #1
 8018bee:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8018bf2:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8018bf6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8018bfa:	0949      	lsrs	r1, r1, #5
 8018bfc:	ea43 030c 	orr.w	r3, r3, ip
 8018c00:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8018c04:	430b      	orrs	r3, r1
 8018c06:	803b      	strh	r3, [r7, #0]
 8018c08:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8018c0a:	449a      	add	sl, r3
 8018c0c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8018c0e:	3702      	adds	r7, #2
 8018c10:	441d      	add	r5, r3
 8018c12:	f10b 3bff 	add.w	fp, fp, #4294967295
 8018c16:	e742      	b.n	8018a9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8018c18:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8018c1a:	449a      	add	sl, r3
 8018c1c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8018c1e:	441d      	add	r5, r3
 8018c20:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018c22:	3b01      	subs	r3, #1
 8018c24:	9309      	str	r3, [sp, #36]	@ 0x24
 8018c26:	f108 0802 	add.w	r8, r8, #2
 8018c2a:	e718      	b.n	8018a5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8018c2c:	d023      	beq.n	8018c76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8018c2e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018c30:	9825      	ldr	r0, [sp, #148]	@ 0x94
 8018c32:	3b01      	subs	r3, #1
 8018c34:	fb00 a003 	mla	r0, r0, r3, sl
 8018c38:	1400      	asrs	r0, r0, #16
 8018c3a:	f53f af2d 	bmi.w	8018a98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8018c3e:	3901      	subs	r1, #1
 8018c40:	4288      	cmp	r0, r1
 8018c42:	f6bf af29 	bge.w	8018a98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8018c46:	9926      	ldr	r1, [sp, #152]	@ 0x98
 8018c48:	fb01 5303 	mla	r3, r1, r3, r5
 8018c4c:	141b      	asrs	r3, r3, #16
 8018c4e:	f53f af23 	bmi.w	8018a98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8018c52:	3a01      	subs	r2, #1
 8018c54:	4293      	cmp	r3, r2
 8018c56:	f6bf af1f 	bge.w	8018a98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8018c5a:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 8018c5e:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
 8018c62:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 8018c66:	f1be 0f00 	cmp.w	lr, #0
 8018c6a:	dc6c      	bgt.n	8018d46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8018c6c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018c6e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8018c72:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8018c76:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8018c78:	2b00      	cmp	r3, #0
 8018c7a:	f340 810e 	ble.w	8018e9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8018c7e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018c82:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8018c86:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018c8a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8018c8c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018c90:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018c94:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018c98:	eef0 6a62 	vmov.f32	s13, s5
 8018c9c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018ca0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018ca4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018ca8:	ee16 aa90 	vmov	sl, s13
 8018cac:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018cb0:	eef0 6a43 	vmov.f32	s13, s6
 8018cb4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018cb8:	ee12 2a90 	vmov	r2, s5
 8018cbc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018cc0:	fb92 f3f3 	sdiv	r3, r2, r3
 8018cc4:	ee13 2a10 	vmov	r2, s6
 8018cc8:	9325      	str	r3, [sp, #148]	@ 0x94
 8018cca:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8018ccc:	fb92 f3f3 	sdiv	r3, r2, r3
 8018cd0:	9326      	str	r3, [sp, #152]	@ 0x98
 8018cd2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8018cd4:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8018cd6:	3b01      	subs	r3, #1
 8018cd8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018cdc:	930c      	str	r3, [sp, #48]	@ 0x30
 8018cde:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8018ce0:	bf08      	it	eq
 8018ce2:	4613      	moveq	r3, r2
 8018ce4:	ee16 5a90 	vmov	r5, s13
 8018ce8:	9309      	str	r3, [sp, #36]	@ 0x24
 8018cea:	eeb0 3a67 	vmov.f32	s6, s15
 8018cee:	eef0 2a47 	vmov.f32	s5, s14
 8018cf2:	e6a6      	b.n	8018a42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8018cf4:	2900      	cmp	r1, #0
 8018cf6:	f43f af10 	beq.w	8018b1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8018cfa:	f819 3003 	ldrb.w	r3, [r9, r3]
 8018cfe:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8018d02:	930f      	str	r3, [sp, #60]	@ 0x3c
 8018d04:	e709      	b.n	8018b1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8018d06:	f112 0901 	adds.w	r9, r2, #1
 8018d0a:	f53f af7d 	bmi.w	8018c08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8018d0e:	454b      	cmp	r3, r9
 8018d10:	f6ff af7a 	blt.w	8018c08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8018d14:	f11c 0901 	adds.w	r9, ip, #1
 8018d18:	f53f af76 	bmi.w	8018c08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8018d1c:	45ce      	cmp	lr, r9
 8018d1e:	f6ff af73 	blt.w	8018c08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8018d22:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8018d24:	9202      	str	r2, [sp, #8]
 8018d26:	b21b      	sxth	r3, r3
 8018d28:	fa0f f28e 	sxth.w	r2, lr
 8018d2c:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8018d30:	e9cd c003 	strd	ip, r0, [sp, #12]
 8018d34:	9201      	str	r2, [sp, #4]
 8018d36:	9300      	str	r3, [sp, #0]
 8018d38:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8018d3a:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8018d3c:	4633      	mov	r3, r6
 8018d3e:	4639      	mov	r1, r7
 8018d40:	f7ff fd8e 	bl	8018860 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8018d44:	e760      	b.n	8018c08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8018d46:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8018d48:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8018d4a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8018d4e:	ea4f 422a 	mov.w	r2, sl, asr #16
 8018d52:	1429      	asrs	r1, r5, #16
 8018d54:	fb03 2101 	mla	r1, r3, r1, r2
 8018d58:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8018d5a:	440a      	add	r2, r1
 8018d5c:	5c61      	ldrb	r1, [r4, r1]
 8018d5e:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8018d62:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8018d66:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8018d6a:	f1bc 0f00 	cmp.w	ip, #0
 8018d6e:	f000 808c 	beq.w	8018e8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8018d72:	7857      	ldrb	r7, [r2, #1]
 8018d74:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8018d78:	9413      	str	r4, [sp, #76]	@ 0x4c
 8018d7a:	b140      	cbz	r0, 8018d8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8018d7c:	18d7      	adds	r7, r2, r3
 8018d7e:	5cd3      	ldrb	r3, [r2, r3]
 8018d80:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8018d84:	9310      	str	r3, [sp, #64]	@ 0x40
 8018d86:	787b      	ldrb	r3, [r7, #1]
 8018d88:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8018d8c:	9314      	str	r3, [sp, #80]	@ 0x50
 8018d8e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8018d90:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8018d92:	fb1c f200 	smulbb	r2, ip, r0
 8018d96:	041f      	lsls	r7, r3, #16
 8018d98:	10d2      	asrs	r2, r2, #3
 8018d9a:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8018d9e:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
 8018da2:	431f      	orrs	r7, r3
 8018da4:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8018da8:	9317      	str	r3, [sp, #92]	@ 0x5c
 8018daa:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8018dac:	041b      	lsls	r3, r3, #16
 8018dae:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
 8018db2:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8018db6:	ea43 030b 	orr.w	r3, r3, fp
 8018dba:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8018dbc:	4353      	muls	r3, r2
 8018dbe:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8018dc2:	fb04 3707 	mla	r7, r4, r7, r3
 8018dc6:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8018dca:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 8018dce:	ea43 0b01 	orr.w	fp, r3, r1
 8018dd2:	f1c0 0110 	rsb	r1, r0, #16
 8018dd6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018dd8:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8018dda:	eba1 0c0c 	sub.w	ip, r1, ip
 8018dde:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8018de2:	fb0c 770b 	mla	r7, ip, fp, r7
 8018de6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8018dea:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
 8018dee:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8018df2:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8018df6:	ea4c 0c0b 	orr.w	ip, ip, fp
 8018dfa:	fb02 770c 	mla	r7, r2, ip, r7
 8018dfe:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8018e00:	0d79      	lsrs	r1, r7, #21
 8018e02:	097f      	lsrs	r7, r7, #5
 8018e04:	8812      	ldrh	r2, [r2, #0]
 8018e06:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8018e0a:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8018e0e:	430f      	orrs	r7, r1
 8018e10:	b2bb      	uxth	r3, r7
 8018e12:	1211      	asrs	r1, r2, #8
 8018e14:	1218      	asrs	r0, r3, #8
 8018e16:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8018e1a:	fb11 f104 	smulbb	r1, r1, r4
 8018e1e:	10d7      	asrs	r7, r2, #3
 8018e20:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8018e24:	00d2      	lsls	r2, r2, #3
 8018e26:	fb00 1009 	mla	r0, r0, r9, r1
 8018e2a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8018e2e:	10d9      	asrs	r1, r3, #3
 8018e30:	b2d2      	uxtb	r2, r2
 8018e32:	00db      	lsls	r3, r3, #3
 8018e34:	fb17 f704 	smulbb	r7, r7, r4
 8018e38:	fb12 f204 	smulbb	r2, r2, r4
 8018e3c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8018e40:	b2db      	uxtb	r3, r3
 8018e42:	b280      	uxth	r0, r0
 8018e44:	fb01 7109 	mla	r1, r1, r9, r7
 8018e48:	fb03 2309 	mla	r3, r3, r9, r2
 8018e4c:	b29b      	uxth	r3, r3
 8018e4e:	b289      	uxth	r1, r1
 8018e50:	1c42      	adds	r2, r0, #1
 8018e52:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8018e56:	1c4f      	adds	r7, r1, #1
 8018e58:	1c5a      	adds	r2, r3, #1
 8018e5a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8018e5e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8018e62:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8018e66:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018e6a:	0949      	lsrs	r1, r1, #5
 8018e6c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8018e6e:	4310      	orrs	r0, r2
 8018e70:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8018e74:	4308      	orrs	r0, r1
 8018e76:	f823 0b02 	strh.w	r0, [r3], #2
 8018e7a:	930e      	str	r3, [sp, #56]	@ 0x38
 8018e7c:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8018e7e:	449a      	add	sl, r3
 8018e80:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8018e82:	f10e 3eff 	add.w	lr, lr, #4294967295
 8018e86:	441d      	add	r5, r3
 8018e88:	e6ed      	b.n	8018c66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 8018e8a:	2800      	cmp	r0, #0
 8018e8c:	f43f af7f 	beq.w	8018d8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8018e90:	5cd3      	ldrb	r3, [r2, r3]
 8018e92:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8018e96:	9310      	str	r3, [sp, #64]	@ 0x40
 8018e98:	e779      	b.n	8018d8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8018e9a:	b019      	add	sp, #100	@ 0x64
 8018e9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018ea0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8018ea0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018ea4:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
 8018ea8:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8018eac:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
 8018eb0:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
 8018eb4:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 8018eb8:	8808      	ldrh	r0, [r1, #0]
 8018eba:	fb08 470e 	mla	r7, r8, lr, r4
 8018ebe:	f1b8 0f00 	cmp.w	r8, #0
 8018ec2:	eb02 0907 	add.w	r9, r2, r7
 8018ec6:	db67      	blt.n	8018f98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8018ec8:	45c2      	cmp	sl, r8
 8018eca:	dd65      	ble.n	8018f98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8018ecc:	2c00      	cmp	r4, #0
 8018ece:	db61      	blt.n	8018f94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8018ed0:	45a6      	cmp	lr, r4
 8018ed2:	dd5f      	ble.n	8018f94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8018ed4:	5dd2      	ldrb	r2, [r2, r7]
 8018ed6:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8018eda:	1c62      	adds	r2, r4, #1
 8018edc:	d45f      	bmi.n	8018f9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8018ede:	4596      	cmp	lr, r2
 8018ee0:	dd5d      	ble.n	8018f9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8018ee2:	2d00      	cmp	r5, #0
 8018ee4:	d05b      	beq.n	8018f9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8018ee6:	f899 2001 	ldrb.w	r2, [r9, #1]
 8018eea:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8018eee:	f118 0801 	adds.w	r8, r8, #1
 8018ef2:	d458      	bmi.n	8018fa6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8018ef4:	45c2      	cmp	sl, r8
 8018ef6:	dd56      	ble.n	8018fa6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8018ef8:	2e00      	cmp	r6, #0
 8018efa:	d054      	beq.n	8018fa6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8018efc:	2c00      	cmp	r4, #0
 8018efe:	db50      	blt.n	8018fa2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8018f00:	45a6      	cmp	lr, r4
 8018f02:	dd4e      	ble.n	8018fa2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8018f04:	f819 200e 	ldrb.w	r2, [r9, lr]
 8018f08:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8018f0c:	3401      	adds	r4, #1
 8018f0e:	d407      	bmi.n	8018f20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8018f10:	45a6      	cmp	lr, r4
 8018f12:	dd05      	ble.n	8018f20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8018f14:	b125      	cbz	r5, 8018f20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8018f16:	44ce      	add	lr, r9
 8018f18:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8018f1c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8018f20:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8018f24:	fb15 f406 	smulbb	r4, r5, r6
 8018f28:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8018f2c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8018f30:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8018f34:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8018f38:	ea43 0c0c 	orr.w	ip, r3, ip
 8018f3c:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 8018f40:	f1c6 0310 	rsb	r3, r6, #16
 8018f44:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8018f48:	1b5b      	subs	r3, r3, r5
 8018f4a:	ea4e 0707 	orr.w	r7, lr, r7
 8018f4e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8018f52:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018f56:	437d      	muls	r5, r7
 8018f58:	fb03 5c0c 	mla	ip, r3, ip, r5
 8018f5c:	0403      	lsls	r3, r0, #16
 8018f5e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8018f62:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8018f66:	4318      	orrs	r0, r3
 8018f68:	0413      	lsls	r3, r2, #16
 8018f6a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8018f6e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8018f72:	4313      	orrs	r3, r2
 8018f74:	fb04 c000 	mla	r0, r4, r0, ip
 8018f78:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8018f7c:	fb06 0003 	mla	r0, r6, r3, r0
 8018f80:	0d43      	lsrs	r3, r0, #21
 8018f82:	0940      	lsrs	r0, r0, #5
 8018f84:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8018f88:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8018f8c:	4318      	orrs	r0, r3
 8018f8e:	8008      	strh	r0, [r1, #0]
 8018f90:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018f94:	4684      	mov	ip, r0
 8018f96:	e7a0      	b.n	8018eda <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 8018f98:	4607      	mov	r7, r0
 8018f9a:	4684      	mov	ip, r0
 8018f9c:	e7a7      	b.n	8018eee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8018f9e:	4607      	mov	r7, r0
 8018fa0:	e7a5      	b.n	8018eee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8018fa2:	4602      	mov	r2, r0
 8018fa4:	e7b2      	b.n	8018f0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 8018fa6:	4602      	mov	r2, r0
 8018fa8:	e7ba      	b.n	8018f20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

08018faa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018faa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018fae:	b093      	sub	sp, #76	@ 0x4c
 8018fb0:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 8018fb4:	920f      	str	r2, [sp, #60]	@ 0x3c
 8018fb6:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8018fb8:	9108      	str	r1, [sp, #32]
 8018fba:	9306      	str	r3, [sp, #24]
 8018fbc:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 8018fc0:	9010      	str	r0, [sp, #64]	@ 0x40
 8018fc2:	6850      	ldr	r0, [r2, #4]
 8018fc4:	6812      	ldr	r2, [r2, #0]
 8018fc6:	fb00 1303 	mla	r3, r0, r3, r1
 8018fca:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8018fce:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8018fd0:	681b      	ldr	r3, [r3, #0]
 8018fd2:	9307      	str	r3, [sp, #28]
 8018fd4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8018fd6:	685f      	ldr	r7, [r3, #4]
 8018fd8:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8018fdc:	3704      	adds	r7, #4
 8018fde:	9b08      	ldr	r3, [sp, #32]
 8018fe0:	2b00      	cmp	r3, #0
 8018fe2:	dc03      	bgt.n	8018fec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8018fe4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8018fe6:	2b00      	cmp	r3, #0
 8018fe8:	f340 81b2 	ble.w	8019350 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8018fec:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8018fee:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018ff2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018ff6:	1e48      	subs	r0, r1, #1
 8018ff8:	f102 3cff 	add.w	ip, r2, #4294967295
 8018ffc:	9b06      	ldr	r3, [sp, #24]
 8018ffe:	2b00      	cmp	r3, #0
 8019000:	f340 80a9 	ble.w	8019156 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8019004:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8019008:	ea4f 4326 	mov.w	r3, r6, asr #16
 801900c:	d406      	bmi.n	801901c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801900e:	4586      	cmp	lr, r0
 8019010:	da04      	bge.n	801901c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019012:	2b00      	cmp	r3, #0
 8019014:	db02      	blt.n	801901c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019016:	4563      	cmp	r3, ip
 8019018:	f2c0 809e 	blt.w	8019158 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801901c:	f11e 0e01 	adds.w	lr, lr, #1
 8019020:	f100 808f 	bmi.w	8019142 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019024:	4571      	cmp	r1, lr
 8019026:	f2c0 808c 	blt.w	8019142 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801902a:	3301      	adds	r3, #1
 801902c:	f100 8089 	bmi.w	8019142 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019030:	429a      	cmp	r2, r3
 8019032:	f2c0 8086 	blt.w	8019142 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019036:	f8dd b018 	ldr.w	fp, [sp, #24]
 801903a:	46c8      	mov	r8, r9
 801903c:	f1bb 0f00 	cmp.w	fp, #0
 8019040:	f340 80a6 	ble.w	8019190 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8019044:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8019046:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8019048:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801904c:	689b      	ldr	r3, [r3, #8]
 801904e:	1422      	asrs	r2, r4, #16
 8019050:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8019054:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8019058:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801905c:	f100 80e3 	bmi.w	8019226 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019060:	f103 3aff 	add.w	sl, r3, #4294967295
 8019064:	4552      	cmp	r2, sl
 8019066:	f280 80de 	bge.w	8019226 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801906a:	f1bc 0f00 	cmp.w	ip, #0
 801906e:	f2c0 80da 	blt.w	8019226 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019072:	f10e 3aff 	add.w	sl, lr, #4294967295
 8019076:	45d4      	cmp	ip, sl
 8019078:	f280 80d5 	bge.w	8019226 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801907c:	b21b      	sxth	r3, r3
 801907e:	fb0c 2203 	mla	r2, ip, r3, r2
 8019082:	9d07      	ldr	r5, [sp, #28]
 8019084:	eb05 0a02 	add.w	sl, r5, r2
 8019088:	5caa      	ldrb	r2, [r5, r2]
 801908a:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801908e:	2800      	cmp	r0, #0
 8019090:	f000 80c0 	beq.w	8019214 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8019094:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8019098:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801909c:	920b      	str	r2, [sp, #44]	@ 0x2c
 801909e:	b151      	cbz	r1, 80190b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 80190a0:	eb0a 0203 	add.w	r2, sl, r3
 80190a4:	f81a 3003 	ldrb.w	r3, [sl, r3]
 80190a8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80190ac:	9309      	str	r3, [sp, #36]	@ 0x24
 80190ae:	7853      	ldrb	r3, [r2, #1]
 80190b0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80190b4:	930c      	str	r3, [sp, #48]	@ 0x30
 80190b6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80190b8:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 80190ba:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80190be:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 80190c2:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80190c6:	ea4c 0c03 	orr.w	ip, ip, r3
 80190ca:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80190cc:	041b      	lsls	r3, r3, #16
 80190ce:	fb10 f201 	smulbb	r2, r0, r1
 80190d2:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 80190d6:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 80190da:	10d2      	asrs	r2, r2, #3
 80190dc:	432b      	orrs	r3, r5
 80190de:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 80190e2:	4353      	muls	r3, r2
 80190e4:	fb0a 330c 	mla	r3, sl, ip, r3
 80190e8:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 80190ec:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 80190f0:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 80190f4:	ea4c 0e0e 	orr.w	lr, ip, lr
 80190f8:	f1c1 0c10 	rsb	ip, r1, #16
 80190fc:	ebac 0c00 	sub.w	ip, ip, r0
 8019100:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019104:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8019108:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801910a:	0418      	lsls	r0, r3, #16
 801910c:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8019110:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8019114:	4318      	orrs	r0, r3
 8019116:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801911a:	fb02 c200 	mla	r2, r2, r0, ip
 801911e:	0d53      	lsrs	r3, r2, #21
 8019120:	0952      	lsrs	r2, r2, #5
 8019122:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019126:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801912a:	431a      	orrs	r2, r3
 801912c:	f8a8 2000 	strh.w	r2, [r8]
 8019130:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8019132:	441c      	add	r4, r3
 8019134:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8019136:	f108 0802 	add.w	r8, r8, #2
 801913a:	441e      	add	r6, r3
 801913c:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019140:	e77c      	b.n	801903c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019142:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8019144:	441c      	add	r4, r3
 8019146:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8019148:	441e      	add	r6, r3
 801914a:	9b06      	ldr	r3, [sp, #24]
 801914c:	3b01      	subs	r3, #1
 801914e:	9306      	str	r3, [sp, #24]
 8019150:	f109 0902 	add.w	r9, r9, #2
 8019154:	e752      	b.n	8018ffc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019156:	d020      	beq.n	801919a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019158:	9b06      	ldr	r3, [sp, #24]
 801915a:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801915c:	3b01      	subs	r3, #1
 801915e:	fb00 4003 	mla	r0, r0, r3, r4
 8019162:	1400      	asrs	r0, r0, #16
 8019164:	f53f af67 	bmi.w	8019036 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019168:	3901      	subs	r1, #1
 801916a:	4288      	cmp	r0, r1
 801916c:	f6bf af63 	bge.w	8019036 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019170:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8019172:	fb01 6303 	mla	r3, r1, r3, r6
 8019176:	141b      	asrs	r3, r3, #16
 8019178:	f53f af5d 	bmi.w	8019036 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801917c:	3a01      	subs	r2, #1
 801917e:	4293      	cmp	r3, r2
 8019180:	f6bf af59 	bge.w	8019036 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019184:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8019188:	46ca      	mov	sl, r9
 801918a:	f1b8 0f00 	cmp.w	r8, #0
 801918e:	dc67      	bgt.n	8019260 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8019190:	9b06      	ldr	r3, [sp, #24]
 8019192:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8019196:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801919a:	9b08      	ldr	r3, [sp, #32]
 801919c:	2b00      	cmp	r3, #0
 801919e:	f340 80d7 	ble.w	8019350 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80191a2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80191a6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80191aa:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80191ae:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80191b0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80191b4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80191b8:	eeb0 6a62 	vmov.f32	s12, s5
 80191bc:	ee61 7a27 	vmul.f32	s15, s2, s15
 80191c0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80191c4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80191c8:	ee16 4a10 	vmov	r4, s12
 80191cc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80191d0:	eeb0 6a43 	vmov.f32	s12, s6
 80191d4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80191d8:	ee12 2a90 	vmov	r2, s5
 80191dc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80191e0:	fb92 f3f3 	sdiv	r3, r2, r3
 80191e4:	ee13 2a10 	vmov	r2, s6
 80191e8:	931f      	str	r3, [sp, #124]	@ 0x7c
 80191ea:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80191ec:	fb92 f3f3 	sdiv	r3, r2, r3
 80191f0:	9320      	str	r3, [sp, #128]	@ 0x80
 80191f2:	9b08      	ldr	r3, [sp, #32]
 80191f4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80191f6:	3b01      	subs	r3, #1
 80191f8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80191fc:	9308      	str	r3, [sp, #32]
 80191fe:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8019200:	bf08      	it	eq
 8019202:	4613      	moveq	r3, r2
 8019204:	ee16 6a10 	vmov	r6, s12
 8019208:	9306      	str	r3, [sp, #24]
 801920a:	eeb0 3a67 	vmov.f32	s6, s15
 801920e:	eef0 2a47 	vmov.f32	s5, s14
 8019212:	e6e4      	b.n	8018fde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8019214:	2900      	cmp	r1, #0
 8019216:	f43f af4e 	beq.w	80190b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801921a:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801921e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019222:	9309      	str	r3, [sp, #36]	@ 0x24
 8019224:	e747      	b.n	80190b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8019226:	f112 0a01 	adds.w	sl, r2, #1
 801922a:	d481      	bmi.n	8019130 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801922c:	4553      	cmp	r3, sl
 801922e:	f6ff af7f 	blt.w	8019130 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019232:	f11c 0a01 	adds.w	sl, ip, #1
 8019236:	f53f af7b 	bmi.w	8019130 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801923a:	45d6      	cmp	lr, sl
 801923c:	f6ff af78 	blt.w	8019130 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019240:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8019244:	b21b      	sxth	r3, r3
 8019246:	fa0f f28e 	sxth.w	r2, lr
 801924a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801924e:	9201      	str	r2, [sp, #4]
 8019250:	9300      	str	r3, [sp, #0]
 8019252:	9a07      	ldr	r2, [sp, #28]
 8019254:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8019256:	463b      	mov	r3, r7
 8019258:	4641      	mov	r1, r8
 801925a:	f7ff fe21 	bl	8018ea0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801925e:	e767      	b.n	8019130 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019260:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8019262:	9d07      	ldr	r5, [sp, #28]
 8019264:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8019268:	1422      	asrs	r2, r4, #16
 801926a:	1431      	asrs	r1, r6, #16
 801926c:	fb03 2101 	mla	r1, r3, r1, r2
 8019270:	9a07      	ldr	r2, [sp, #28]
 8019272:	440a      	add	r2, r1
 8019274:	5c69      	ldrb	r1, [r5, r1]
 8019276:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801927a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801927e:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8019282:	f1be 0f00 	cmp.w	lr, #0
 8019286:	d05c      	beq.n	8019342 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8019288:	f892 c001 	ldrb.w	ip, [r2, #1]
 801928c:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8019290:	950d      	str	r5, [sp, #52]	@ 0x34
 8019292:	b150      	cbz	r0, 80192aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8019294:	eb02 0c03 	add.w	ip, r2, r3
 8019298:	5cd3      	ldrb	r3, [r2, r3]
 801929a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801929e:	930a      	str	r3, [sp, #40]	@ 0x28
 80192a0:	f89c 3001 	ldrb.w	r3, [ip, #1]
 80192a4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80192a8:	930e      	str	r3, [sp, #56]	@ 0x38
 80192aa:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80192ac:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80192ae:	fb1e f200 	smulbb	r2, lr, r0
 80192b2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80192b6:	10d2      	asrs	r2, r2, #3
 80192b8:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80192bc:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 80192c0:	ea4c 0c03 	orr.w	ip, ip, r3
 80192c4:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 80192c8:	9311      	str	r3, [sp, #68]	@ 0x44
 80192ca:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80192cc:	041b      	lsls	r3, r3, #16
 80192ce:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
 80192d2:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 80192d6:	ea43 030b 	orr.w	r3, r3, fp
 80192da:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80192dc:	4353      	muls	r3, r2
 80192de:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80192e2:	fb05 3c0c 	mla	ip, r5, ip, r3
 80192e6:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 80192ea:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 80192ee:	ea43 0b01 	orr.w	fp, r3, r1
 80192f2:	f1c0 0110 	rsb	r1, r0, #16
 80192f6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80192f8:	eba1 0e0e 	sub.w	lr, r1, lr
 80192fc:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8019300:	fb0e cc0b 	mla	ip, lr, fp, ip
 8019304:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8019308:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
 801930c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8019310:	ea4b 0e0e 	orr.w	lr, fp, lr
 8019314:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8019318:	fb02 cc0e 	mla	ip, r2, lr, ip
 801931c:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8019320:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8019324:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019328:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801932c:	ea43 0c0c 	orr.w	ip, r3, ip
 8019330:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8019332:	f82a cb02 	strh.w	ip, [sl], #2
 8019336:	441c      	add	r4, r3
 8019338:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801933a:	f108 38ff 	add.w	r8, r8, #4294967295
 801933e:	441e      	add	r6, r3
 8019340:	e723      	b.n	801918a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8019342:	2800      	cmp	r0, #0
 8019344:	d0b1      	beq.n	80192aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8019346:	5cd3      	ldrb	r3, [r2, r3]
 8019348:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801934c:	930a      	str	r3, [sp, #40]	@ 0x28
 801934e:	e7ac      	b.n	80192aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8019350:	b013      	add	sp, #76	@ 0x4c
 8019352:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019356 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8019356:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801935a:	880d      	ldrh	r5, [r1, #0]
 801935c:	b087      	sub	sp, #28
 801935e:	10ef      	asrs	r7, r5, #3
 8019360:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8019364:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8019368:	00ed      	lsls	r5, r5, #3
 801936a:	9701      	str	r7, [sp, #4]
 801936c:	b2ed      	uxtb	r5, r5
 801936e:	9502      	str	r5, [sp, #8]
 8019370:	9d01      	ldr	r5, [sp, #4]
 8019372:	9103      	str	r1, [sp, #12]
 8019374:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 8019378:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
 801937c:	9902      	ldr	r1, [sp, #8]
 801937e:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 8019382:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
 8019386:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
 801938a:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
 801938e:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 8019392:	022d      	lsls	r5, r5, #8
 8019394:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8019398:	fb06 0709 	mla	r7, r6, r9, r0
 801939c:	430d      	orrs	r5, r1
 801939e:	2e00      	cmp	r6, #0
 80193a0:	eb02 0c07 	add.w	ip, r2, r7
 80193a4:	9505      	str	r5, [sp, #20]
 80193a6:	f2c0 80b6 	blt.w	8019516 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 80193aa:	45b3      	cmp	fp, r6
 80193ac:	f340 80b3 	ble.w	8019516 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 80193b0:	2800      	cmp	r0, #0
 80193b2:	f2c0 80ae 	blt.w	8019512 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 80193b6:	4581      	cmp	r9, r0
 80193b8:	f340 80ab 	ble.w	8019512 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 80193bc:	5dd7      	ldrb	r7, [r2, r7]
 80193be:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80193c2:	441f      	add	r7, r3
 80193c4:	1c42      	adds	r2, r0, #1
 80193c6:	f100 80a9 	bmi.w	801951c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80193ca:	4591      	cmp	r9, r2
 80193cc:	f340 80a6 	ble.w	801951c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80193d0:	2c00      	cmp	r4, #0
 80193d2:	f000 80a3 	beq.w	801951c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80193d6:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80193da:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80193de:	441d      	add	r5, r3
 80193e0:	3601      	adds	r6, #1
 80193e2:	f100 809f 	bmi.w	8019524 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80193e6:	45b3      	cmp	fp, r6
 80193e8:	f340 809c 	ble.w	8019524 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80193ec:	f1be 0f00 	cmp.w	lr, #0
 80193f0:	f000 8098 	beq.w	8019524 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80193f4:	2800      	cmp	r0, #0
 80193f6:	f2c0 8093 	blt.w	8019520 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 80193fa:	4581      	cmp	r9, r0
 80193fc:	f340 8090 	ble.w	8019520 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8019400:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8019404:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8019408:	441e      	add	r6, r3
 801940a:	3001      	adds	r0, #1
 801940c:	f100 808d 	bmi.w	801952a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8019410:	4581      	cmp	r9, r0
 8019412:	f340 808a 	ble.w	801952a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8019416:	2c00      	cmp	r4, #0
 8019418:	f000 8087 	beq.w	801952a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801941c:	44e1      	add	r9, ip
 801941e:	f899 2001 	ldrb.w	r2, [r9, #1]
 8019422:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019426:	4413      	add	r3, r2
 8019428:	b2a4      	uxth	r4, r4
 801942a:	fa1f fe8e 	uxth.w	lr, lr
 801942e:	fb04 fb0e 	mul.w	fp, r4, lr
 8019432:	0124      	lsls	r4, r4, #4
 8019434:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8019438:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
 801943c:	eba4 040b 	sub.w	r4, r4, fp
 8019440:	fa1f f08e 	uxth.w	r0, lr
 8019444:	b2a2      	uxth	r2, r4
 8019446:	78ac      	ldrb	r4, [r5, #2]
 8019448:	f897 c002 	ldrb.w	ip, [r7, #2]
 801944c:	9901      	ldr	r1, [sp, #4]
 801944e:	eba9 0900 	sub.w	r9, r9, r0
 8019452:	fa1f f989 	uxth.w	r9, r9
 8019456:	4354      	muls	r4, r2
 8019458:	fb09 440c 	mla	r4, r9, ip, r4
 801945c:	f896 c002 	ldrb.w	ip, [r6, #2]
 8019460:	fb00 440c 	mla	r4, r0, ip, r4
 8019464:	f893 c002 	ldrb.w	ip, [r3, #2]
 8019468:	fa1f fe88 	uxth.w	lr, r8
 801946c:	ea6f 0808 	mvn.w	r8, r8
 8019470:	fa5f f888 	uxtb.w	r8, r8
 8019474:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8019478:	fb1a fa08 	smulbb	sl, sl, r8
 801947c:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8019480:	fb0c ac0e 	mla	ip, ip, lr, sl
 8019484:	f895 a001 	ldrb.w	sl, [r5, #1]
 8019488:	787c      	ldrb	r4, [r7, #1]
 801948a:	782d      	ldrb	r5, [r5, #0]
 801948c:	783f      	ldrb	r7, [r7, #0]
 801948e:	fb02 fa0a 	mul.w	sl, r2, sl
 8019492:	fb09 aa04 	mla	sl, r9, r4, sl
 8019496:	7874      	ldrb	r4, [r6, #1]
 8019498:	436a      	muls	r2, r5
 801949a:	7835      	ldrb	r5, [r6, #0]
 801949c:	fb00 aa04 	mla	sl, r0, r4, sl
 80194a0:	fb09 2207 	mla	r2, r9, r7, r2
 80194a4:	785c      	ldrb	r4, [r3, #1]
 80194a6:	781b      	ldrb	r3, [r3, #0]
 80194a8:	fb00 2005 	mla	r0, r0, r5, r2
 80194ac:	fb0b a404 	mla	r4, fp, r4, sl
 80194b0:	fb0b 0b03 	mla	fp, fp, r3, r0
 80194b4:	9b02      	ldr	r3, [sp, #8]
 80194b6:	fb11 fa08 	smulbb	sl, r1, r8
 80194ba:	fa1f fc8c 	uxth.w	ip, ip
 80194be:	fb13 f808 	smulbb	r8, r3, r8
 80194c2:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 80194c6:	f3c4 2407 	ubfx	r4, r4, #8, #8
 80194ca:	fb04 a40e 	mla	r4, r4, lr, sl
 80194ce:	f10c 0301 	add.w	r3, ip, #1
 80194d2:	fb0b 8e0e 	mla	lr, fp, lr, r8
 80194d6:	fa1f fe8e 	uxth.w	lr, lr
 80194da:	b2a4      	uxth	r4, r4
 80194dc:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80194e0:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
 80194e4:	f104 0a01 	add.w	sl, r4, #1
 80194e8:	f10e 0c01 	add.w	ip, lr, #1
 80194ec:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80194f0:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80194f4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80194f8:	0964      	lsrs	r4, r4, #5
 80194fa:	ea4c 0c03 	orr.w	ip, ip, r3
 80194fe:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8019502:	9b03      	ldr	r3, [sp, #12]
 8019504:	ea4c 0c04 	orr.w	ip, ip, r4
 8019508:	f8a3 c000 	strh.w	ip, [r3]
 801950c:	b007      	add	sp, #28
 801950e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019512:	af05      	add	r7, sp, #20
 8019514:	e756      	b.n	80193c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 8019516:	ad05      	add	r5, sp, #20
 8019518:	462f      	mov	r7, r5
 801951a:	e761      	b.n	80193e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801951c:	ad05      	add	r5, sp, #20
 801951e:	e75f      	b.n	80193e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8019520:	ae05      	add	r6, sp, #20
 8019522:	e772      	b.n	801940a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8019524:	ab05      	add	r3, sp, #20
 8019526:	461e      	mov	r6, r3
 8019528:	e77e      	b.n	8019428 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801952a:	ab05      	add	r3, sp, #20
 801952c:	e77c      	b.n	8019428 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801952e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801952e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019532:	b095      	sub	sp, #84	@ 0x54
 8019534:	9212      	str	r2, [sp, #72]	@ 0x48
 8019536:	9309      	str	r3, [sp, #36]	@ 0x24
 8019538:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801953a:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 801953e:	930f      	str	r3, [sp, #60]	@ 0x3c
 8019540:	910e      	str	r1, [sp, #56]	@ 0x38
 8019542:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
 8019546:	9013      	str	r0, [sp, #76]	@ 0x4c
 8019548:	6850      	ldr	r0, [r2, #4]
 801954a:	6812      	ldr	r2, [r2, #0]
 801954c:	fb00 1303 	mla	r3, r0, r3, r1
 8019550:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019554:	930a      	str	r3, [sp, #40]	@ 0x28
 8019556:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8019558:	681b      	ldr	r3, [r3, #0]
 801955a:	930d      	str	r3, [sp, #52]	@ 0x34
 801955c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801955e:	685c      	ldr	r4, [r3, #4]
 8019560:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8019562:	43db      	mvns	r3, r3
 8019564:	b2db      	uxtb	r3, r3
 8019566:	3404      	adds	r4, #4
 8019568:	930b      	str	r3, [sp, #44]	@ 0x2c
 801956a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801956c:	2b00      	cmp	r3, #0
 801956e:	dc03      	bgt.n	8019578 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8019570:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8019572:	2b00      	cmp	r3, #0
 8019574:	f340 8255 	ble.w	8019a22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8019578:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801957a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801957e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019582:	1e48      	subs	r0, r1, #1
 8019584:	1e55      	subs	r5, r2, #1
 8019586:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019588:	2b00      	cmp	r3, #0
 801958a:	f340 80f9 	ble.w	8019780 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801958e:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 8019590:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8019592:	1436      	asrs	r6, r6, #16
 8019594:	ea4f 4323 	mov.w	r3, r3, asr #16
 8019598:	d406      	bmi.n	80195a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801959a:	4286      	cmp	r6, r0
 801959c:	da04      	bge.n	80195a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801959e:	2b00      	cmp	r3, #0
 80195a0:	db02      	blt.n	80195a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80195a2:	42ab      	cmp	r3, r5
 80195a4:	f2c0 80ed 	blt.w	8019782 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 80195a8:	3601      	adds	r6, #1
 80195aa:	f100 80da 	bmi.w	8019762 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80195ae:	42b1      	cmp	r1, r6
 80195b0:	f2c0 80d7 	blt.w	8019762 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80195b4:	3301      	adds	r3, #1
 80195b6:	f100 80d4 	bmi.w	8019762 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80195ba:	429a      	cmp	r2, r3
 80195bc:	f2c0 80d1 	blt.w	8019762 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80195c0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80195c2:	9311      	str	r3, [sp, #68]	@ 0x44
 80195c4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80195c6:	930c      	str	r3, [sp, #48]	@ 0x30
 80195c8:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80195ca:	2b00      	cmp	r3, #0
 80195cc:	f340 80fa 	ble.w	80197c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 80195d0:	9826      	ldr	r0, [sp, #152]	@ 0x98
 80195d2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80195d4:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80195d6:	68c6      	ldr	r6, [r0, #12]
 80195d8:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 80195da:	141d      	asrs	r5, r3, #16
 80195dc:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80195e0:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80195e2:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 80195e4:	1400      	asrs	r0, r0, #16
 80195e6:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80195ea:	6892      	ldr	r2, [r2, #8]
 80195ec:	f100 813e 	bmi.w	801986c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80195f0:	1e57      	subs	r7, r2, #1
 80195f2:	42b8      	cmp	r0, r7
 80195f4:	f280 813a 	bge.w	801986c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80195f8:	2d00      	cmp	r5, #0
 80195fa:	f2c0 8137 	blt.w	801986c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80195fe:	1e77      	subs	r7, r6, #1
 8019600:	42bd      	cmp	r5, r7
 8019602:	f280 8133 	bge.w	801986c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8019606:	b212      	sxth	r2, r2
 8019608:	fb05 0002 	mla	r0, r5, r2, r0
 801960c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801960e:	f815 a000 	ldrb.w	sl, [r5, r0]
 8019612:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8019616:	182e      	adds	r6, r5, r0
 8019618:	eb04 050a 	add.w	r5, r4, sl
 801961c:	2b00      	cmp	r3, #0
 801961e:	f000 8117 	beq.w	8019850 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 8019622:	f896 c001 	ldrb.w	ip, [r6, #1]
 8019626:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801962a:	44a4      	add	ip, r4
 801962c:	2900      	cmp	r1, #0
 801962e:	f000 8117 	beq.w	8019860 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 8019632:	18b0      	adds	r0, r6, r2
 8019634:	5cb2      	ldrb	r2, [r6, r2]
 8019636:	7840      	ldrb	r0, [r0, #1]
 8019638:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801963c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8019640:	4422      	add	r2, r4
 8019642:	4420      	add	r0, r4
 8019644:	b29b      	uxth	r3, r3
 8019646:	b289      	uxth	r1, r1
 8019648:	fb03 f901 	mul.w	r9, r3, r1
 801964c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8019650:	011b      	lsls	r3, r3, #4
 8019652:	b289      	uxth	r1, r1
 8019654:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8019658:	f895 b002 	ldrb.w	fp, [r5, #2]
 801965c:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801965e:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8019662:	f8b6 e000 	ldrh.w	lr, [r6]
 8019666:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
 801966a:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
 801966e:	eba3 0309 	sub.w	r3, r3, r9
 8019672:	b29b      	uxth	r3, r3
 8019674:	eba8 0801 	sub.w	r8, r8, r1
 8019678:	fa1f f888 	uxth.w	r8, r8
 801967c:	435f      	muls	r7, r3
 801967e:	fb08 770b 	mla	r7, r8, fp, r7
 8019682:	f892 b002 	ldrb.w	fp, [r2, #2]
 8019686:	9310      	str	r3, [sp, #64]	@ 0x40
 8019688:	fb01 770b 	mla	r7, r1, fp, r7
 801968c:	f890 b002 	ldrb.w	fp, [r0, #2]
 8019690:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8019692:	fb09 770b 	mla	r7, r9, fp, r7
 8019696:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801969a:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801969e:	fb1b fb03 	smulbb	fp, fp, r3
 80196a2:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80196a6:	fb07 b706 	mla	r7, r7, r6, fp
 80196aa:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80196ac:	f895 b001 	ldrb.w	fp, [r5, #1]
 80196b0:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80196b4:	f89c c000 	ldrb.w	ip, [ip]
 80196b8:	435d      	muls	r5, r3
 80196ba:	fb08 550b 	mla	r5, r8, fp, r5
 80196be:	f892 b001 	ldrb.w	fp, [r2, #1]
 80196c2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80196c4:	fb01 550b 	mla	r5, r1, fp, r5
 80196c8:	f890 b001 	ldrb.w	fp, [r0, #1]
 80196cc:	fb09 550b 	mla	r5, r9, fp, r5
 80196d0:	ea4f 0bee 	mov.w	fp, lr, asr #3
 80196d4:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 80196d8:	fb1b fb03 	smulbb	fp, fp, r3
 80196dc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80196de:	fb03 f30c 	mul.w	r3, r3, ip
 80196e2:	f892 c000 	ldrb.w	ip, [r2]
 80196e6:	fb08 330a 	mla	r3, r8, sl, r3
 80196ea:	fb01 330c 	mla	r3, r1, ip, r3
 80196ee:	f890 c000 	ldrb.w	ip, [r0]
 80196f2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80196f6:	fb09 3c0c 	mla	ip, r9, ip, r3
 80196fa:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80196fc:	fa5f fe8e 	uxtb.w	lr, lr
 8019700:	b2bf      	uxth	r7, r7
 8019702:	fb1e fe03 	smulbb	lr, lr, r3
 8019706:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801970a:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801970e:	fb05 b506 	mla	r5, r5, r6, fp
 8019712:	1c7b      	adds	r3, r7, #1
 8019714:	fb0c e606 	mla	r6, ip, r6, lr
 8019718:	b2ad      	uxth	r5, r5
 801971a:	b2b6      	uxth	r6, r6
 801971c:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8019720:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
 8019724:	f105 0b01 	add.w	fp, r5, #1
 8019728:	1c77      	adds	r7, r6, #1
 801972a:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801972e:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8019732:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8019736:	096d      	lsrs	r5, r5, #5
 8019738:	431f      	orrs	r7, r3
 801973a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801973e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019740:	433d      	orrs	r5, r7
 8019742:	801d      	strh	r5, [r3, #0]
 8019744:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019746:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8019748:	3302      	adds	r3, #2
 801974a:	930c      	str	r3, [sp, #48]	@ 0x30
 801974c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801974e:	4413      	add	r3, r2
 8019750:	931f      	str	r3, [sp, #124]	@ 0x7c
 8019752:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8019754:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8019756:	4413      	add	r3, r2
 8019758:	9320      	str	r3, [sp, #128]	@ 0x80
 801975a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801975c:	3b01      	subs	r3, #1
 801975e:	9311      	str	r3, [sp, #68]	@ 0x44
 8019760:	e732      	b.n	80195c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8019762:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8019764:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 8019766:	4433      	add	r3, r6
 8019768:	931f      	str	r3, [sp, #124]	@ 0x7c
 801976a:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 801976c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801976e:	4433      	add	r3, r6
 8019770:	9320      	str	r3, [sp, #128]	@ 0x80
 8019772:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019774:	3b01      	subs	r3, #1
 8019776:	9309      	str	r3, [sp, #36]	@ 0x24
 8019778:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801977a:	3302      	adds	r3, #2
 801977c:	930a      	str	r3, [sp, #40]	@ 0x28
 801977e:	e702      	b.n	8019586 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8019780:	d027      	beq.n	80197d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 8019782:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019784:	9821      	ldr	r0, [sp, #132]	@ 0x84
 8019786:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 8019788:	3b01      	subs	r3, #1
 801978a:	fb00 5003 	mla	r0, r0, r3, r5
 801978e:	1400      	asrs	r0, r0, #16
 8019790:	f53f af16 	bmi.w	80195c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019794:	3901      	subs	r1, #1
 8019796:	4288      	cmp	r0, r1
 8019798:	f6bf af12 	bge.w	80195c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801979c:	9922      	ldr	r1, [sp, #136]	@ 0x88
 801979e:	9820      	ldr	r0, [sp, #128]	@ 0x80
 80197a0:	fb01 0303 	mla	r3, r1, r3, r0
 80197a4:	141b      	asrs	r3, r3, #16
 80197a6:	f53f af0b 	bmi.w	80195c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80197aa:	3a01      	subs	r2, #1
 80197ac:	4293      	cmp	r3, r2
 80197ae:	f6bf af07 	bge.w	80195c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80197b2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80197b4:	9311      	str	r3, [sp, #68]	@ 0x44
 80197b6:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 80197ba:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80197bc:	930c      	str	r3, [sp, #48]	@ 0x30
 80197be:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80197c0:	2b00      	cmp	r3, #0
 80197c2:	dc70      	bgt.n	80198a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 80197c4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80197c6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80197c8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80197cc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80197d0:	930a      	str	r3, [sp, #40]	@ 0x28
 80197d2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80197d4:	2b00      	cmp	r3, #0
 80197d6:	f340 8124 	ble.w	8019a22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 80197da:	ee30 0a04 	vadd.f32	s0, s0, s8
 80197de:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80197e2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80197e6:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 80197e8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80197ec:	ee31 1a05 	vadd.f32	s2, s2, s10
 80197f0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80197f4:	eef0 6a62 	vmov.f32	s13, s5
 80197f8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80197fc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019800:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019804:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
 8019808:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801980c:	eef0 6a43 	vmov.f32	s13, s6
 8019810:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019814:	ee12 2a90 	vmov	r2, s5
 8019818:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801981c:	fb92 f3f3 	sdiv	r3, r2, r3
 8019820:	ee13 2a10 	vmov	r2, s6
 8019824:	9321      	str	r3, [sp, #132]	@ 0x84
 8019826:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8019828:	fb92 f3f3 	sdiv	r3, r2, r3
 801982c:	9322      	str	r3, [sp, #136]	@ 0x88
 801982e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019830:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8019832:	3b01      	subs	r3, #1
 8019834:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019838:	930e      	str	r3, [sp, #56]	@ 0x38
 801983a:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801983c:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
 8019840:	bf08      	it	eq
 8019842:	4613      	moveq	r3, r2
 8019844:	9309      	str	r3, [sp, #36]	@ 0x24
 8019846:	eeb0 3a67 	vmov.f32	s6, s15
 801984a:	eef0 2a47 	vmov.f32	s5, s14
 801984e:	e68c      	b.n	801956a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8019850:	b149      	cbz	r1, 8019866 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 8019852:	5cb2      	ldrb	r2, [r6, r2]
 8019854:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019858:	4422      	add	r2, r4
 801985a:	4628      	mov	r0, r5
 801985c:	46ac      	mov	ip, r5
 801985e:	e6f1      	b.n	8019644 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019860:	4628      	mov	r0, r5
 8019862:	462a      	mov	r2, r5
 8019864:	e6ee      	b.n	8019644 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019866:	4628      	mov	r0, r5
 8019868:	462a      	mov	r2, r5
 801986a:	e7f7      	b.n	801985c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801986c:	1c47      	adds	r7, r0, #1
 801986e:	f53f af69 	bmi.w	8019744 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8019872:	42ba      	cmp	r2, r7
 8019874:	f6ff af66 	blt.w	8019744 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8019878:	1c6f      	adds	r7, r5, #1
 801987a:	f53f af63 	bmi.w	8019744 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801987e:	42be      	cmp	r6, r7
 8019880:	f6ff af60 	blt.w	8019744 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8019884:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8019886:	9002      	str	r0, [sp, #8]
 8019888:	b236      	sxth	r6, r6
 801988a:	b212      	sxth	r2, r2
 801988c:	e9cd 1705 	strd	r1, r7, [sp, #20]
 8019890:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8019894:	9200      	str	r2, [sp, #0]
 8019896:	9601      	str	r6, [sp, #4]
 8019898:	4623      	mov	r3, r4
 801989a:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
 801989e:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80198a0:	f7ff fd59 	bl	8019356 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 80198a4:	e74e      	b.n	8019744 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80198a6:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80198a8:	9820      	ldr	r0, [sp, #128]	@ 0x80
 80198aa:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 80198ac:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80198ae:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80198b2:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 80198b4:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 80198b8:	142d      	asrs	r5, r5, #16
 80198ba:	1400      	asrs	r0, r0, #16
 80198bc:	fb02 5000 	mla	r0, r2, r0, r5
 80198c0:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 80198c2:	f815 9000 	ldrb.w	r9, [r5, r0]
 80198c6:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80198ca:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 80198ce:	182e      	adds	r6, r5, r0
 80198d0:	eb04 0509 	add.w	r5, r4, r9
 80198d4:	2b00      	cmp	r3, #0
 80198d6:	f000 8096 	beq.w	8019a06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 80198da:	7877      	ldrb	r7, [r6, #1]
 80198dc:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80198e0:	4427      	add	r7, r4
 80198e2:	2900      	cmp	r1, #0
 80198e4:	f000 8097 	beq.w	8019a16 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 80198e8:	18b0      	adds	r0, r6, r2
 80198ea:	5cb2      	ldrb	r2, [r6, r2]
 80198ec:	7840      	ldrb	r0, [r0, #1]
 80198ee:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80198f2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80198f6:	4422      	add	r2, r4
 80198f8:	4420      	add	r0, r4
 80198fa:	b29b      	uxth	r3, r3
 80198fc:	b289      	uxth	r1, r1
 80198fe:	fb03 f801 	mul.w	r8, r3, r1
 8019902:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8019904:	f895 b002 	ldrb.w	fp, [r5, #2]
 8019908:	f8b6 c000 	ldrh.w	ip, [r6]
 801990c:	78be      	ldrb	r6, [r7, #2]
 801990e:	f814 9009 	ldrb.w	r9, [r4, r9]
 8019912:	011b      	lsls	r3, r3, #4
 8019914:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8019918:	b289      	uxth	r1, r1
 801991a:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801991e:	eba3 0308 	sub.w	r3, r3, r8
 8019922:	b29b      	uxth	r3, r3
 8019924:	ebae 0e01 	sub.w	lr, lr, r1
 8019928:	fa1f fe8e 	uxth.w	lr, lr
 801992c:	435e      	muls	r6, r3
 801992e:	fb0e 660b 	mla	r6, lr, fp, r6
 8019932:	f892 b002 	ldrb.w	fp, [r2, #2]
 8019936:	9310      	str	r3, [sp, #64]	@ 0x40
 8019938:	fb01 660b 	mla	r6, r1, fp, r6
 801993c:	f890 b002 	ldrb.w	fp, [r0, #2]
 8019940:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8019942:	fb08 660b 	mla	r6, r8, fp, r6
 8019946:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801994a:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801994e:	fb1b fb03 	smulbb	fp, fp, r3
 8019952:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8019956:	fb06 b60a 	mla	r6, r6, sl, fp
 801995a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801995c:	f895 b001 	ldrb.w	fp, [r5, #1]
 8019960:	787d      	ldrb	r5, [r7, #1]
 8019962:	783f      	ldrb	r7, [r7, #0]
 8019964:	435d      	muls	r5, r3
 8019966:	fb0e 550b 	mla	r5, lr, fp, r5
 801996a:	f892 b001 	ldrb.w	fp, [r2, #1]
 801996e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8019970:	fb01 550b 	mla	r5, r1, fp, r5
 8019974:	f890 b001 	ldrb.w	fp, [r0, #1]
 8019978:	fb08 550b 	mla	r5, r8, fp, r5
 801997c:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8019980:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8019984:	fb1b fb03 	smulbb	fp, fp, r3
 8019988:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801998a:	437b      	muls	r3, r7
 801998c:	7817      	ldrb	r7, [r2, #0]
 801998e:	fb0e 3309 	mla	r3, lr, r9, r3
 8019992:	fb01 3307 	mla	r3, r1, r7, r3
 8019996:	7807      	ldrb	r7, [r0, #0]
 8019998:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801999c:	fb08 3707 	mla	r7, r8, r7, r3
 80199a0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80199a2:	fa5f fc8c 	uxtb.w	ip, ip
 80199a6:	fb1c fc03 	smulbb	ip, ip, r3
 80199aa:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80199ae:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80199b2:	fb05 b50a 	mla	r5, r5, sl, fp
 80199b6:	fb07 c70a 	mla	r7, r7, sl, ip
 80199ba:	b2b6      	uxth	r6, r6
 80199bc:	b2ad      	uxth	r5, r5
 80199be:	b2bf      	uxth	r7, r7
 80199c0:	1c73      	adds	r3, r6, #1
 80199c2:	1c7a      	adds	r2, r7, #1
 80199c4:	f105 0b01 	add.w	fp, r5, #1
 80199c8:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 80199cc:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80199d0:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80199d4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80199d8:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 80199dc:	096d      	lsrs	r5, r5, #5
 80199de:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80199e0:	4316      	orrs	r6, r2
 80199e2:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80199e6:	432e      	orrs	r6, r5
 80199e8:	f823 6b02 	strh.w	r6, [r3], #2
 80199ec:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 80199ee:	930c      	str	r3, [sp, #48]	@ 0x30
 80199f0:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80199f2:	4413      	add	r3, r2
 80199f4:	931f      	str	r3, [sp, #124]	@ 0x7c
 80199f6:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 80199f8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80199fa:	4413      	add	r3, r2
 80199fc:	9320      	str	r3, [sp, #128]	@ 0x80
 80199fe:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8019a00:	3b01      	subs	r3, #1
 8019a02:	9311      	str	r3, [sp, #68]	@ 0x44
 8019a04:	e6db      	b.n	80197be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8019a06:	b149      	cbz	r1, 8019a1c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8019a08:	5cb2      	ldrb	r2, [r6, r2]
 8019a0a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019a0e:	4422      	add	r2, r4
 8019a10:	4628      	mov	r0, r5
 8019a12:	462f      	mov	r7, r5
 8019a14:	e771      	b.n	80198fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8019a16:	4628      	mov	r0, r5
 8019a18:	462a      	mov	r2, r5
 8019a1a:	e76e      	b.n	80198fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8019a1c:	4628      	mov	r0, r5
 8019a1e:	462a      	mov	r2, r5
 8019a20:	e7f7      	b.n	8019a12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8019a22:	b015      	add	sp, #84	@ 0x54
 8019a24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019a28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8019a28:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019a2c:	880f      	ldrh	r7, [r1, #0]
 8019a2e:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
 8019a32:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 8019a36:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 8019a3a:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 8019a3e:	023c      	lsls	r4, r7, #8
 8019a40:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
 8019a44:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
 8019a48:	017c      	lsls	r4, r7, #5
 8019a4a:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
 8019a4e:	00ff      	lsls	r7, r7, #3
 8019a50:	ea4b 0404 	orr.w	r4, fp, r4
 8019a54:	b2ff      	uxtb	r7, r7
 8019a56:	fb05 ca0e 	mla	sl, r5, lr, ip
 8019a5a:	4327      	orrs	r7, r4
 8019a5c:	2d00      	cmp	r5, #0
 8019a5e:	eb02 080a 	add.w	r8, r2, sl
 8019a62:	9701      	str	r7, [sp, #4]
 8019a64:	db7e      	blt.n	8019b64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8019a66:	45a9      	cmp	r9, r5
 8019a68:	dd7c      	ble.n	8019b64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8019a6a:	f1bc 0f00 	cmp.w	ip, #0
 8019a6e:	db77      	blt.n	8019b60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8019a70:	45e6      	cmp	lr, ip
 8019a72:	dd75      	ble.n	8019b60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8019a74:	f812 700a 	ldrb.w	r7, [r2, sl]
 8019a78:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8019a7c:	441f      	add	r7, r3
 8019a7e:	f11c 0201 	adds.w	r2, ip, #1
 8019a82:	d472      	bmi.n	8019b6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8019a84:	4596      	cmp	lr, r2
 8019a86:	dd70      	ble.n	8019b6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8019a88:	2800      	cmp	r0, #0
 8019a8a:	d06e      	beq.n	8019b6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8019a8c:	f898 4001 	ldrb.w	r4, [r8, #1]
 8019a90:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8019a94:	441c      	add	r4, r3
 8019a96:	3501      	adds	r5, #1
 8019a98:	d46b      	bmi.n	8019b72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8019a9a:	45a9      	cmp	r9, r5
 8019a9c:	dd69      	ble.n	8019b72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8019a9e:	2e00      	cmp	r6, #0
 8019aa0:	d067      	beq.n	8019b72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8019aa2:	f1bc 0f00 	cmp.w	ip, #0
 8019aa6:	db62      	blt.n	8019b6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8019aa8:	45e6      	cmp	lr, ip
 8019aaa:	dd60      	ble.n	8019b6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8019aac:	f818 500e 	ldrb.w	r5, [r8, lr]
 8019ab0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8019ab4:	441d      	add	r5, r3
 8019ab6:	f11c 0201 	adds.w	r2, ip, #1
 8019aba:	d45d      	bmi.n	8019b78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8019abc:	4596      	cmp	lr, r2
 8019abe:	dd5b      	ble.n	8019b78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8019ac0:	2800      	cmp	r0, #0
 8019ac2:	d059      	beq.n	8019b78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8019ac4:	44c6      	add	lr, r8
 8019ac6:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8019aca:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019ace:	4413      	add	r3, r2
 8019ad0:	b280      	uxth	r0, r0
 8019ad2:	b2b2      	uxth	r2, r6
 8019ad4:	fb00 f602 	mul.w	r6, r0, r2
 8019ad8:	0100      	lsls	r0, r0, #4
 8019ada:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 8019ade:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
 8019ae2:	1b80      	subs	r0, r0, r6
 8019ae4:	fa1f fc82 	uxth.w	ip, r2
 8019ae8:	b282      	uxth	r2, r0
 8019aea:	78a0      	ldrb	r0, [r4, #2]
 8019aec:	f897 e002 	ldrb.w	lr, [r7, #2]
 8019af0:	f897 9000 	ldrb.w	r9, [r7]
 8019af4:	787f      	ldrb	r7, [r7, #1]
 8019af6:	eba8 080c 	sub.w	r8, r8, ip
 8019afa:	fa1f f888 	uxth.w	r8, r8
 8019afe:	4350      	muls	r0, r2
 8019b00:	fb08 0e0e 	mla	lr, r8, lr, r0
 8019b04:	78a8      	ldrb	r0, [r5, #2]
 8019b06:	fb0c e000 	mla	r0, ip, r0, lr
 8019b0a:	f893 e002 	ldrb.w	lr, [r3, #2]
 8019b0e:	fb06 0e0e 	mla	lr, r6, lr, r0
 8019b12:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
 8019b16:	f894 e000 	ldrb.w	lr, [r4]
 8019b1a:	fb02 fe0e 	mul.w	lr, r2, lr
 8019b1e:	fb08 e909 	mla	r9, r8, r9, lr
 8019b22:	f895 e000 	ldrb.w	lr, [r5]
 8019b26:	fb0c 990e 	mla	r9, ip, lr, r9
 8019b2a:	f893 e000 	ldrb.w	lr, [r3]
 8019b2e:	785b      	ldrb	r3, [r3, #1]
 8019b30:	fb06 9e0e 	mla	lr, r6, lr, r9
 8019b34:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8019b38:	ea4e 0e00 	orr.w	lr, lr, r0
 8019b3c:	7860      	ldrb	r0, [r4, #1]
 8019b3e:	4350      	muls	r0, r2
 8019b40:	786a      	ldrb	r2, [r5, #1]
 8019b42:	fb08 0007 	mla	r0, r8, r7, r0
 8019b46:	fb0c 0202 	mla	r2, ip, r2, r0
 8019b4a:	fb06 2303 	mla	r3, r6, r3, r2
 8019b4e:	095b      	lsrs	r3, r3, #5
 8019b50:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019b54:	ea4e 0303 	orr.w	r3, lr, r3
 8019b58:	800b      	strh	r3, [r1, #0]
 8019b5a:	b003      	add	sp, #12
 8019b5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019b60:	af01      	add	r7, sp, #4
 8019b62:	e78c      	b.n	8019a7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 8019b64:	ac01      	add	r4, sp, #4
 8019b66:	4627      	mov	r7, r4
 8019b68:	e795      	b.n	8019a96 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8019b6a:	ac01      	add	r4, sp, #4
 8019b6c:	e793      	b.n	8019a96 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8019b6e:	ad01      	add	r5, sp, #4
 8019b70:	e7a1      	b.n	8019ab6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 8019b72:	ab01      	add	r3, sp, #4
 8019b74:	461d      	mov	r5, r3
 8019b76:	e7ab      	b.n	8019ad0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 8019b78:	ab01      	add	r3, sp, #4
 8019b7a:	e7a9      	b.n	8019ad0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

08019b7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019b7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019b80:	b08f      	sub	sp, #60	@ 0x3c
 8019b82:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
 8019b86:	920c      	str	r2, [sp, #48]	@ 0x30
 8019b88:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 8019b8a:	910a      	str	r1, [sp, #40]	@ 0x28
 8019b8c:	9306      	str	r3, [sp, #24]
 8019b8e:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
 8019b92:	900d      	str	r0, [sp, #52]	@ 0x34
 8019b94:	6850      	ldr	r0, [r2, #4]
 8019b96:	6812      	ldr	r2, [r2, #0]
 8019b98:	fb00 1303 	mla	r3, r0, r3, r1
 8019b9c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019ba0:	9307      	str	r3, [sp, #28]
 8019ba2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8019ba4:	681b      	ldr	r3, [r3, #0]
 8019ba6:	9308      	str	r3, [sp, #32]
 8019ba8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8019baa:	685c      	ldr	r4, [r3, #4]
 8019bac:	3404      	adds	r4, #4
 8019bae:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8019bb0:	2b00      	cmp	r3, #0
 8019bb2:	dc03      	bgt.n	8019bbc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8019bb4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019bb6:	2b00      	cmp	r3, #0
 8019bb8:	f340 81d6 	ble.w	8019f68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8019bbc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8019bbe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019bc2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019bc6:	1e48      	subs	r0, r1, #1
 8019bc8:	1e56      	subs	r6, r2, #1
 8019bca:	9b06      	ldr	r3, [sp, #24]
 8019bcc:	2b00      	cmp	r3, #0
 8019bce:	f340 80b7 	ble.w	8019d40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 8019bd2:	ea5f 472b 	movs.w	r7, fp, asr #16
 8019bd6:	ea4f 4325 	mov.w	r3, r5, asr #16
 8019bda:	d406      	bmi.n	8019bea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019bdc:	4287      	cmp	r7, r0
 8019bde:	da04      	bge.n	8019bea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019be0:	2b00      	cmp	r3, #0
 8019be2:	db02      	blt.n	8019bea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019be4:	42b3      	cmp	r3, r6
 8019be6:	f2c0 80ac 	blt.w	8019d42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8019bea:	3701      	adds	r7, #1
 8019bec:	f100 809d 	bmi.w	8019d2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8019bf0:	42b9      	cmp	r1, r7
 8019bf2:	f2c0 809a 	blt.w	8019d2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8019bf6:	3301      	adds	r3, #1
 8019bf8:	f100 8097 	bmi.w	8019d2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8019bfc:	429a      	cmp	r2, r3
 8019bfe:	f2c0 8094 	blt.w	8019d2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8019c02:	9b06      	ldr	r3, [sp, #24]
 8019c04:	930b      	str	r3, [sp, #44]	@ 0x2c
 8019c06:	9b07      	ldr	r3, [sp, #28]
 8019c08:	9309      	str	r3, [sp, #36]	@ 0x24
 8019c0a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8019c0c:	2b00      	cmp	r3, #0
 8019c0e:	f340 80b5 	ble.w	8019d7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8019c12:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8019c14:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8019c16:	68c7      	ldr	r7, [r0, #12]
 8019c18:	6892      	ldr	r2, [r2, #8]
 8019c1a:	ea5f 402b 	movs.w	r0, fp, asr #16
 8019c1e:	ea4f 4625 	mov.w	r6, r5, asr #16
 8019c22:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8019c26:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8019c2a:	f100 80fb 	bmi.w	8019e24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8019c2e:	f102 3cff 	add.w	ip, r2, #4294967295
 8019c32:	4560      	cmp	r0, ip
 8019c34:	f280 80f6 	bge.w	8019e24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8019c38:	2e00      	cmp	r6, #0
 8019c3a:	f2c0 80f3 	blt.w	8019e24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8019c3e:	f107 3cff 	add.w	ip, r7, #4294967295
 8019c42:	4566      	cmp	r6, ip
 8019c44:	f280 80ee 	bge.w	8019e24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8019c48:	b212      	sxth	r2, r2
 8019c4a:	fb06 0002 	mla	r0, r6, r2, r0
 8019c4e:	9e08      	ldr	r6, [sp, #32]
 8019c50:	1837      	adds	r7, r6, r0
 8019c52:	5c30      	ldrb	r0, [r6, r0]
 8019c54:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8019c58:	eb04 0c08 	add.w	ip, r4, r8
 8019c5c:	2b00      	cmp	r3, #0
 8019c5e:	f000 80d3 	beq.w	8019e08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019c62:	787e      	ldrb	r6, [r7, #1]
 8019c64:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8019c68:	4426      	add	r6, r4
 8019c6a:	2900      	cmp	r1, #0
 8019c6c:	f000 80d4 	beq.w	8019e18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8019c70:	18b8      	adds	r0, r7, r2
 8019c72:	5cba      	ldrb	r2, [r7, r2]
 8019c74:	7840      	ldrb	r0, [r0, #1]
 8019c76:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019c7a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8019c7e:	4422      	add	r2, r4
 8019c80:	4420      	add	r0, r4
 8019c82:	b29b      	uxth	r3, r3
 8019c84:	b289      	uxth	r1, r1
 8019c86:	fb03 f901 	mul.w	r9, r3, r1
 8019c8a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8019c8e:	011b      	lsls	r3, r3, #4
 8019c90:	b289      	uxth	r1, r1
 8019c92:	78b7      	ldrb	r7, [r6, #2]
 8019c94:	f89c a002 	ldrb.w	sl, [ip, #2]
 8019c98:	f89c c001 	ldrb.w	ip, [ip, #1]
 8019c9c:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 8019ca0:	eba3 0309 	sub.w	r3, r3, r9
 8019ca4:	b29b      	uxth	r3, r3
 8019ca6:	ebae 0e01 	sub.w	lr, lr, r1
 8019caa:	fa1f fe8e 	uxth.w	lr, lr
 8019cae:	435f      	muls	r7, r3
 8019cb0:	fb0e 770a 	mla	r7, lr, sl, r7
 8019cb4:	f892 a002 	ldrb.w	sl, [r2, #2]
 8019cb8:	fb01 770a 	mla	r7, r1, sl, r7
 8019cbc:	f890 a002 	ldrb.w	sl, [r0, #2]
 8019cc0:	fb09 7a0a 	mla	sl, r9, sl, r7
 8019cc4:	f814 7008 	ldrb.w	r7, [r4, r8]
 8019cc8:	f896 8000 	ldrb.w	r8, [r6]
 8019ccc:	7876      	ldrb	r6, [r6, #1]
 8019cce:	fb03 f808 	mul.w	r8, r3, r8
 8019cd2:	fb0e 8807 	mla	r8, lr, r7, r8
 8019cd6:	7817      	ldrb	r7, [r2, #0]
 8019cd8:	fb01 8807 	mla	r8, r1, r7, r8
 8019cdc:	7807      	ldrb	r7, [r0, #0]
 8019cde:	fb09 8707 	mla	r7, r9, r7, r8
 8019ce2:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 8019ce6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8019cea:	ea47 070a 	orr.w	r7, r7, sl
 8019cee:	4373      	muls	r3, r6
 8019cf0:	f892 a001 	ldrb.w	sl, [r2, #1]
 8019cf4:	fb0e 330c 	mla	r3, lr, ip, r3
 8019cf8:	fb01 310a 	mla	r1, r1, sl, r3
 8019cfc:	f890 a001 	ldrb.w	sl, [r0, #1]
 8019d00:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019d02:	fb09 1a0a 	mla	sl, r9, sl, r1
 8019d06:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019d0a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8019d0e:	ea47 070a 	orr.w	r7, r7, sl
 8019d12:	801f      	strh	r7, [r3, #0]
 8019d14:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019d16:	3302      	adds	r3, #2
 8019d18:	9309      	str	r3, [sp, #36]	@ 0x24
 8019d1a:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8019d1c:	449b      	add	fp, r3
 8019d1e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8019d20:	441d      	add	r5, r3
 8019d22:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8019d24:	3b01      	subs	r3, #1
 8019d26:	930b      	str	r3, [sp, #44]	@ 0x2c
 8019d28:	e76f      	b.n	8019c0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8019d2a:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8019d2c:	449b      	add	fp, r3
 8019d2e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8019d30:	441d      	add	r5, r3
 8019d32:	9b06      	ldr	r3, [sp, #24]
 8019d34:	3b01      	subs	r3, #1
 8019d36:	9306      	str	r3, [sp, #24]
 8019d38:	9b07      	ldr	r3, [sp, #28]
 8019d3a:	3302      	adds	r3, #2
 8019d3c:	9307      	str	r3, [sp, #28]
 8019d3e:	e744      	b.n	8019bca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8019d40:	d023      	beq.n	8019d8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8019d42:	9b06      	ldr	r3, [sp, #24]
 8019d44:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 8019d46:	3b01      	subs	r3, #1
 8019d48:	fb00 b003 	mla	r0, r0, r3, fp
 8019d4c:	1400      	asrs	r0, r0, #16
 8019d4e:	f53f af58 	bmi.w	8019c02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8019d52:	3901      	subs	r1, #1
 8019d54:	4288      	cmp	r0, r1
 8019d56:	f6bf af54 	bge.w	8019c02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8019d5a:	991c      	ldr	r1, [sp, #112]	@ 0x70
 8019d5c:	fb01 5303 	mla	r3, r1, r3, r5
 8019d60:	141b      	asrs	r3, r3, #16
 8019d62:	f53f af4e 	bmi.w	8019c02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8019d66:	3a01      	subs	r2, #1
 8019d68:	4293      	cmp	r3, r2
 8019d6a:	f6bf af4a 	bge.w	8019c02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8019d6e:	9b06      	ldr	r3, [sp, #24]
 8019d70:	9309      	str	r3, [sp, #36]	@ 0x24
 8019d72:	9b07      	ldr	r3, [sp, #28]
 8019d74:	930b      	str	r3, [sp, #44]	@ 0x2c
 8019d76:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019d78:	2b00      	cmp	r3, #0
 8019d7a:	dc70      	bgt.n	8019e5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8019d7c:	9b06      	ldr	r3, [sp, #24]
 8019d7e:	9a07      	ldr	r2, [sp, #28]
 8019d80:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019d84:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019d88:	9307      	str	r3, [sp, #28]
 8019d8a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8019d8c:	2b00      	cmp	r3, #0
 8019d8e:	f340 80eb 	ble.w	8019f68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8019d92:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019d96:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8019d9a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019d9e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8019da0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019da4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019da8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019dac:	eef0 6a62 	vmov.f32	s13, s5
 8019db0:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019db4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019db8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019dbc:	ee16 ba90 	vmov	fp, s13
 8019dc0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019dc4:	eef0 6a43 	vmov.f32	s13, s6
 8019dc8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019dcc:	ee12 2a90 	vmov	r2, s5
 8019dd0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019dd4:	fb92 f3f3 	sdiv	r3, r2, r3
 8019dd8:	ee13 2a10 	vmov	r2, s6
 8019ddc:	931b      	str	r3, [sp, #108]	@ 0x6c
 8019dde:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8019de0:	fb92 f3f3 	sdiv	r3, r2, r3
 8019de4:	931c      	str	r3, [sp, #112]	@ 0x70
 8019de6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8019de8:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8019dea:	3b01      	subs	r3, #1
 8019dec:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019df0:	930a      	str	r3, [sp, #40]	@ 0x28
 8019df2:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8019df4:	bf08      	it	eq
 8019df6:	4613      	moveq	r3, r2
 8019df8:	ee16 5a90 	vmov	r5, s13
 8019dfc:	9306      	str	r3, [sp, #24]
 8019dfe:	eeb0 3a67 	vmov.f32	s6, s15
 8019e02:	eef0 2a47 	vmov.f32	s5, s14
 8019e06:	e6d2      	b.n	8019bae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8019e08:	b149      	cbz	r1, 8019e1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8019e0a:	5cba      	ldrb	r2, [r7, r2]
 8019e0c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019e10:	4422      	add	r2, r4
 8019e12:	4660      	mov	r0, ip
 8019e14:	4666      	mov	r6, ip
 8019e16:	e734      	b.n	8019c82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8019e18:	4660      	mov	r0, ip
 8019e1a:	4662      	mov	r2, ip
 8019e1c:	e731      	b.n	8019c82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8019e1e:	4660      	mov	r0, ip
 8019e20:	4662      	mov	r2, ip
 8019e22:	e7f7      	b.n	8019e14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8019e24:	f110 0c01 	adds.w	ip, r0, #1
 8019e28:	f53f af74 	bmi.w	8019d14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019e2c:	4562      	cmp	r2, ip
 8019e2e:	f6ff af71 	blt.w	8019d14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019e32:	f116 0c01 	adds.w	ip, r6, #1
 8019e36:	f53f af6d 	bmi.w	8019d14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019e3a:	4567      	cmp	r7, ip
 8019e3c:	f6ff af6a 	blt.w	8019d14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019e40:	b23f      	sxth	r7, r7
 8019e42:	b212      	sxth	r2, r2
 8019e44:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8019e48:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8019e4c:	9200      	str	r2, [sp, #0]
 8019e4e:	9701      	str	r7, [sp, #4]
 8019e50:	4623      	mov	r3, r4
 8019e52:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8019e56:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8019e58:	f7ff fde6 	bl	8019a28 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8019e5c:	e75a      	b.n	8019d14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019e5e:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8019e60:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8019e64:	ea4f 462b 	mov.w	r6, fp, asr #16
 8019e68:	1428      	asrs	r0, r5, #16
 8019e6a:	fb02 6000 	mla	r0, r2, r0, r6
 8019e6e:	9e08      	ldr	r6, [sp, #32]
 8019e70:	f816 8000 	ldrb.w	r8, [r6, r0]
 8019e74:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8019e78:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8019e7c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8019e80:	1837      	adds	r7, r6, r0
 8019e82:	eb04 0c08 	add.w	ip, r4, r8
 8019e86:	2b00      	cmp	r3, #0
 8019e88:	d060      	beq.n	8019f4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8019e8a:	787e      	ldrb	r6, [r7, #1]
 8019e8c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8019e90:	4426      	add	r6, r4
 8019e92:	2900      	cmp	r1, #0
 8019e94:	d062      	beq.n	8019f5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 8019e96:	18b8      	adds	r0, r7, r2
 8019e98:	5cba      	ldrb	r2, [r7, r2]
 8019e9a:	7840      	ldrb	r0, [r0, #1]
 8019e9c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019ea0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8019ea4:	4422      	add	r2, r4
 8019ea6:	4420      	add	r0, r4
 8019ea8:	b29b      	uxth	r3, r3
 8019eaa:	b289      	uxth	r1, r1
 8019eac:	fb03 f901 	mul.w	r9, r3, r1
 8019eb0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8019eb4:	011b      	lsls	r3, r3, #4
 8019eb6:	b289      	uxth	r1, r1
 8019eb8:	78b7      	ldrb	r7, [r6, #2]
 8019eba:	f89c a002 	ldrb.w	sl, [ip, #2]
 8019ebe:	f89c c001 	ldrb.w	ip, [ip, #1]
 8019ec2:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 8019ec6:	eba3 0309 	sub.w	r3, r3, r9
 8019eca:	b29b      	uxth	r3, r3
 8019ecc:	ebae 0e01 	sub.w	lr, lr, r1
 8019ed0:	fa1f fe8e 	uxth.w	lr, lr
 8019ed4:	435f      	muls	r7, r3
 8019ed6:	fb0e 770a 	mla	r7, lr, sl, r7
 8019eda:	f892 a002 	ldrb.w	sl, [r2, #2]
 8019ede:	fb01 770a 	mla	r7, r1, sl, r7
 8019ee2:	f890 a002 	ldrb.w	sl, [r0, #2]
 8019ee6:	fb09 7a0a 	mla	sl, r9, sl, r7
 8019eea:	f814 7008 	ldrb.w	r7, [r4, r8]
 8019eee:	f896 8000 	ldrb.w	r8, [r6]
 8019ef2:	7876      	ldrb	r6, [r6, #1]
 8019ef4:	fb03 f808 	mul.w	r8, r3, r8
 8019ef8:	fb0e 8807 	mla	r8, lr, r7, r8
 8019efc:	7817      	ldrb	r7, [r2, #0]
 8019efe:	fb01 8807 	mla	r8, r1, r7, r8
 8019f02:	7807      	ldrb	r7, [r0, #0]
 8019f04:	fb09 8707 	mla	r7, r9, r7, r8
 8019f08:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 8019f0c:	4373      	muls	r3, r6
 8019f0e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8019f12:	7856      	ldrb	r6, [r2, #1]
 8019f14:	ea47 070a 	orr.w	r7, r7, sl
 8019f18:	fb0e 330c 	mla	r3, lr, ip, r3
 8019f1c:	f890 a001 	ldrb.w	sl, [r0, #1]
 8019f20:	fb01 3306 	mla	r3, r1, r6, r3
 8019f24:	fb09 3a0a 	mla	sl, r9, sl, r3
 8019f28:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019f2c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8019f2e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8019f32:	ea47 070a 	orr.w	r7, r7, sl
 8019f36:	f823 7b02 	strh.w	r7, [r3], #2
 8019f3a:	930b      	str	r3, [sp, #44]	@ 0x2c
 8019f3c:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8019f3e:	449b      	add	fp, r3
 8019f40:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8019f42:	441d      	add	r5, r3
 8019f44:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019f46:	3b01      	subs	r3, #1
 8019f48:	9309      	str	r3, [sp, #36]	@ 0x24
 8019f4a:	e714      	b.n	8019d76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8019f4c:	b149      	cbz	r1, 8019f62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8019f4e:	5cba      	ldrb	r2, [r7, r2]
 8019f50:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019f54:	4422      	add	r2, r4
 8019f56:	4660      	mov	r0, ip
 8019f58:	4666      	mov	r6, ip
 8019f5a:	e7a5      	b.n	8019ea8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8019f5c:	4660      	mov	r0, ip
 8019f5e:	4662      	mov	r2, ip
 8019f60:	e7a2      	b.n	8019ea8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8019f62:	4660      	mov	r0, ip
 8019f64:	4662      	mov	r2, ip
 8019f66:	e7f7      	b.n	8019f58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 8019f68:	b00f      	add	sp, #60	@ 0x3c
 8019f6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019f6e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8019f6e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019f72:	b085      	sub	sp, #20
 8019f74:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
 8019f78:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
 8019f7c:	9102      	str	r1, [sp, #8]
 8019f7e:	2c00      	cmp	r4, #0
 8019f80:	fb04 710c 	mla	r1, r4, ip, r7
 8019f84:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
 8019f88:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
 8019f8c:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 8019f90:	eb02 0e01 	add.w	lr, r2, r1
 8019f94:	f2c0 8122 	blt.w	801a1dc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8019f98:	45a0      	cmp	r8, r4
 8019f9a:	f340 811f 	ble.w	801a1dc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8019f9e:	2f00      	cmp	r7, #0
 8019fa0:	f2c0 811a 	blt.w	801a1d8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8019fa4:	45bc      	cmp	ip, r7
 8019fa6:	f340 8117 	ble.w	801a1d8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8019faa:	5c52      	ldrb	r2, [r2, r1]
 8019fac:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8019fb0:	1c7a      	adds	r2, r7, #1
 8019fb2:	f100 8116 	bmi.w	801a1e2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8019fb6:	4594      	cmp	ip, r2
 8019fb8:	f340 8113 	ble.w	801a1e2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8019fbc:	2e00      	cmp	r6, #0
 8019fbe:	f000 8112 	beq.w	801a1e6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 8019fc2:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8019fc6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8019fca:	3401      	adds	r4, #1
 8019fcc:	f100 810f 	bmi.w	801a1ee <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8019fd0:	45a0      	cmp	r8, r4
 8019fd2:	f340 810c 	ble.w	801a1ee <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8019fd6:	2800      	cmp	r0, #0
 8019fd8:	f000 810c 	beq.w	801a1f4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8019fdc:	2f00      	cmp	r7, #0
 8019fde:	f2c0 8104 	blt.w	801a1ea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8019fe2:	45bc      	cmp	ip, r7
 8019fe4:	f340 8101 	ble.w	801a1ea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8019fe8:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8019fec:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8019ff0:	3701      	adds	r7, #1
 8019ff2:	f100 8102 	bmi.w	801a1fa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8019ff6:	45bc      	cmp	ip, r7
 8019ff8:	f340 80ff 	ble.w	801a1fa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8019ffc:	2e00      	cmp	r6, #0
 8019ffe:	f000 80fe 	beq.w	801a1fe <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801a002:	44f4      	add	ip, lr
 801a004:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801a008:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801a00c:	b2b6      	uxth	r6, r6
 801a00e:	b280      	uxth	r0, r0
 801a010:	fb00 fe06 	mul.w	lr, r0, r6
 801a014:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801a018:	0136      	lsls	r6, r6, #4
 801a01a:	eba6 070e 	sub.w	r7, r6, lr
 801a01e:	b280      	uxth	r0, r0
 801a020:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801a024:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801a028:	b2bf      	uxth	r7, r7
 801a02a:	1a1b      	subs	r3, r3, r0
 801a02c:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801a030:	b29b      	uxth	r3, r3
 801a032:	fb0a f607 	mul.w	r6, sl, r7
 801a036:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801a03a:	fb0b 6603 	mla	r6, fp, r3, r6
 801a03e:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801a042:	fb00 6609 	mla	r6, r0, r9, r6
 801a046:	fb0e 6608 	mla	r6, lr, r8, r6
 801a04a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801a04e:	9600      	str	r6, [sp, #0]
 801a050:	2e00      	cmp	r6, #0
 801a052:	f000 80be 	beq.w	801a1d2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801a056:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801a05a:	fb0b fc0c 	mul.w	ip, fp, ip
 801a05e:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801a062:	fb0b f505 	mul.w	r5, fp, r5
 801a066:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801a06a:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801a06e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801a072:	44dc      	add	ip, fp
 801a074:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a078:	9501      	str	r5, [sp, #4]
 801a07a:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801a07e:	9503      	str	r5, [sp, #12]
 801a080:	9d01      	ldr	r5, [sp, #4]
 801a082:	9e02      	ldr	r6, [sp, #8]
 801a084:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801a088:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801a08c:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801a090:	fb0a fc0c 	mul.w	ip, sl, ip
 801a094:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801a098:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801a09c:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801a0a0:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801a0a4:	4465      	add	r5, ip
 801a0a6:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801a0aa:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801a0ae:	fb09 fc0c 	mul.w	ip, r9, ip
 801a0b2:	fb09 f904 	mul.w	r9, r9, r4
 801a0b6:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801a0ba:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801a0be:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801a0c2:	fb08 f404 	mul.w	r4, r8, r4
 801a0c6:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801a0ca:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801a0ce:	fb08 f802 	mul.w	r8, r8, r2
 801a0d2:	fb0a fa01 	mul.w	sl, sl, r1
 801a0d6:	0a22      	lsrs	r2, r4, #8
 801a0d8:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801a0dc:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801a0e0:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801a0e4:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801a0e8:	4414      	add	r4, r2
 801a0ea:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801a0ee:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801a0f2:	0a2d      	lsrs	r5, r5, #8
 801a0f4:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801a0f8:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801a0fc:	9a03      	ldr	r2, [sp, #12]
 801a0fe:	8836      	ldrh	r6, [r6, #0]
 801a100:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801a104:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801a108:	437d      	muls	r5, r7
 801a10a:	4461      	add	r1, ip
 801a10c:	0a24      	lsrs	r4, r4, #8
 801a10e:	fb02 5503 	mla	r5, r2, r3, r5
 801a112:	0a09      	lsrs	r1, r1, #8
 801a114:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801a118:	fb04 540e 	mla	r4, r4, lr, r5
 801a11c:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801a120:	fb01 4100 	mla	r1, r1, r0, r4
 801a124:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a128:	0a09      	lsrs	r1, r1, #8
 801a12a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801a12e:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801a132:	fb07 f70a 	mul.w	r7, r7, sl
 801a136:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801a13a:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801a13e:	fb03 7101 	mla	r1, r3, r1, r7
 801a142:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a146:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801a14a:	fb0e 1e08 	mla	lr, lr, r8, r1
 801a14e:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801a152:	fb00 e101 	mla	r1, r0, r1, lr
 801a156:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 801a15a:	9a00      	ldr	r2, [sp, #0]
 801a15c:	b287      	uxth	r7, r0
 801a15e:	437a      	muls	r2, r7
 801a160:	0a09      	lsrs	r1, r1, #8
 801a162:	1c53      	adds	r3, r2, #1
 801a164:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801a168:	4321      	orrs	r1, r4
 801a16a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a16e:	1235      	asrs	r5, r6, #8
 801a170:	0c0a      	lsrs	r2, r1, #16
 801a172:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801a176:	b2db      	uxtb	r3, r3
 801a178:	fb12 f207 	smulbb	r2, r2, r7
 801a17c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801a180:	fb05 2503 	mla	r5, r5, r3, r2
 801a184:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801a188:	10f2      	asrs	r2, r6, #3
 801a18a:	b2c8      	uxtb	r0, r1
 801a18c:	00f6      	lsls	r6, r6, #3
 801a18e:	fb14 f407 	smulbb	r4, r4, r7
 801a192:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801a196:	b2f6      	uxtb	r6, r6
 801a198:	fb10 f007 	smulbb	r0, r0, r7
 801a19c:	fb02 4203 	mla	r2, r2, r3, r4
 801a1a0:	b2ad      	uxth	r5, r5
 801a1a2:	fb06 0303 	mla	r3, r6, r3, r0
 801a1a6:	b299      	uxth	r1, r3
 801a1a8:	b294      	uxth	r4, r2
 801a1aa:	1c6b      	adds	r3, r5, #1
 801a1ac:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801a1b0:	1c62      	adds	r2, r4, #1
 801a1b2:	1c4b      	adds	r3, r1, #1
 801a1b4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801a1b8:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801a1bc:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801a1c0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a1c4:	0952      	lsrs	r2, r2, #5
 801a1c6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801a1ca:	432b      	orrs	r3, r5
 801a1cc:	4313      	orrs	r3, r2
 801a1ce:	9a02      	ldr	r2, [sp, #8]
 801a1d0:	8013      	strh	r3, [r2, #0]
 801a1d2:	b005      	add	sp, #20
 801a1d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a1d8:	2500      	movs	r5, #0
 801a1da:	e6e9      	b.n	8019fb0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801a1dc:	2100      	movs	r1, #0
 801a1de:	460d      	mov	r5, r1
 801a1e0:	e6f3      	b.n	8019fca <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801a1e2:	2100      	movs	r1, #0
 801a1e4:	e6f1      	b.n	8019fca <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801a1e6:	4631      	mov	r1, r6
 801a1e8:	e6ef      	b.n	8019fca <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801a1ea:	2400      	movs	r4, #0
 801a1ec:	e700      	b.n	8019ff0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801a1ee:	2200      	movs	r2, #0
 801a1f0:	4614      	mov	r4, r2
 801a1f2:	e70b      	b.n	801a00c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801a1f4:	4602      	mov	r2, r0
 801a1f6:	4604      	mov	r4, r0
 801a1f8:	e708      	b.n	801a00c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801a1fa:	2200      	movs	r2, #0
 801a1fc:	e706      	b.n	801a00c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801a1fe:	4632      	mov	r2, r6
 801a200:	e704      	b.n	801a00c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801a202 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a202:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a206:	b09f      	sub	sp, #124	@ 0x7c
 801a208:	921b      	str	r2, [sp, #108]	@ 0x6c
 801a20a:	9309      	str	r3, [sp, #36]	@ 0x24
 801a20c:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 801a20e:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
 801a212:	931c      	str	r3, [sp, #112]	@ 0x70
 801a214:	9119      	str	r1, [sp, #100]	@ 0x64
 801a216:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
 801a21a:	901d      	str	r0, [sp, #116]	@ 0x74
 801a21c:	6850      	ldr	r0, [r2, #4]
 801a21e:	6812      	ldr	r2, [r2, #0]
 801a220:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 801a222:	fb00 1303 	mla	r3, r0, r3, r1
 801a226:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a22a:	930c      	str	r3, [sp, #48]	@ 0x30
 801a22c:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801a22e:	681b      	ldr	r3, [r3, #0]
 801a230:	9312      	str	r3, [sp, #72]	@ 0x48
 801a232:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801a234:	685e      	ldr	r6, [r3, #4]
 801a236:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 801a23a:	930d      	str	r3, [sp, #52]	@ 0x34
 801a23c:	3604      	adds	r6, #4
 801a23e:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801a240:	2b00      	cmp	r3, #0
 801a242:	dc03      	bgt.n	801a24c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801a244:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801a246:	2b00      	cmp	r3, #0
 801a248:	f340 8388 	ble.w	801a95c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801a24c:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801a24e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a252:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a256:	1e48      	subs	r0, r1, #1
 801a258:	1e57      	subs	r7, r2, #1
 801a25a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a25c:	2b00      	cmp	r3, #0
 801a25e:	f340 8195 	ble.w	801a58c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801a262:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801a264:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801a268:	ea4f 4325 	mov.w	r3, r5, asr #16
 801a26c:	d406      	bmi.n	801a27c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a26e:	4584      	cmp	ip, r0
 801a270:	da04      	bge.n	801a27c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a272:	2b00      	cmp	r3, #0
 801a274:	db02      	blt.n	801a27c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a276:	42bb      	cmp	r3, r7
 801a278:	f2c0 8189 	blt.w	801a58e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801a27c:	f11c 0c01 	adds.w	ip, ip, #1
 801a280:	f100 8177 	bmi.w	801a572 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801a284:	4561      	cmp	r1, ip
 801a286:	f2c0 8174 	blt.w	801a572 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801a28a:	3301      	adds	r3, #1
 801a28c:	f100 8171 	bmi.w	801a572 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801a290:	429a      	cmp	r2, r3
 801a292:	f2c0 816e 	blt.w	801a572 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801a296:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a298:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801a29a:	931a      	str	r3, [sp, #104]	@ 0x68
 801a29c:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801a29e:	2b00      	cmp	r3, #0
 801a2a0:	f340 8193 	ble.w	801a5ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801a2a4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801a2a6:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801a2aa:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801a2ac:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801a2b0:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801a2b2:	141b      	asrs	r3, r3, #16
 801a2b4:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801a2b8:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801a2bc:	f100 81d6 	bmi.w	801a66c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801a2c0:	f100 38ff 	add.w	r8, r0, #4294967295
 801a2c4:	4543      	cmp	r3, r8
 801a2c6:	f280 81d1 	bge.w	801a66c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801a2ca:	f1bc 0f00 	cmp.w	ip, #0
 801a2ce:	f2c0 81cd 	blt.w	801a66c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801a2d2:	f10e 38ff 	add.w	r8, lr, #4294967295
 801a2d6:	45c4      	cmp	ip, r8
 801a2d8:	f280 81c8 	bge.w	801a66c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801a2dc:	b200      	sxth	r0, r0
 801a2de:	fb0c 3300 	mla	r3, ip, r0, r3
 801a2e2:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801a2e4:	eb04 0803 	add.w	r8, r4, r3
 801a2e8:	5ce3      	ldrb	r3, [r4, r3]
 801a2ea:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801a2ee:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801a2f2:	2a00      	cmp	r2, #0
 801a2f4:	f000 81af 	beq.w	801a656 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801a2f8:	f898 c001 	ldrb.w	ip, [r8, #1]
 801a2fc:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801a300:	940e      	str	r4, [sp, #56]	@ 0x38
 801a302:	0e24      	lsrs	r4, r4, #24
 801a304:	9415      	str	r4, [sp, #84]	@ 0x54
 801a306:	b179      	cbz	r1, 801a328 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801a308:	eb08 0c00 	add.w	ip, r8, r0
 801a30c:	f818 0000 	ldrb.w	r0, [r8, r0]
 801a310:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801a314:	900a      	str	r0, [sp, #40]	@ 0x28
 801a316:	0e00      	lsrs	r0, r0, #24
 801a318:	9013      	str	r0, [sp, #76]	@ 0x4c
 801a31a:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801a31e:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801a322:	900f      	str	r0, [sp, #60]	@ 0x3c
 801a324:	0e00      	lsrs	r0, r0, #24
 801a326:	9016      	str	r0, [sp, #88]	@ 0x58
 801a328:	b292      	uxth	r2, r2
 801a32a:	b289      	uxth	r1, r1
 801a32c:	fb02 f901 	mul.w	r9, r2, r1
 801a330:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a334:	0112      	lsls	r2, r2, #4
 801a336:	eba2 0809 	sub.w	r8, r2, r9
 801a33a:	b289      	uxth	r1, r1
 801a33c:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801a340:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801a342:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801a344:	fa1f f888 	uxth.w	r8, r8
 801a348:	1a52      	subs	r2, r2, r1
 801a34a:	b292      	uxth	r2, r2
 801a34c:	fb08 f000 	mul.w	r0, r8, r0
 801a350:	fb02 000e 	mla	r0, r2, lr, r0
 801a354:	fb01 0004 	mla	r0, r1, r4, r0
 801a358:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801a35a:	fb09 0004 	mla	r0, r9, r4, r0
 801a35e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801a362:	2800      	cmp	r0, #0
 801a364:	f000 80fa 	beq.w	801a55c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801a368:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801a36c:	d01b      	beq.n	801a3a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801a36e:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801a372:	fb0e fa0a 	mul.w	sl, lr, sl
 801a376:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801a37a:	fb0e fe03 	mul.w	lr, lr, r3
 801a37e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801a382:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801a386:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801a38a:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801a38e:	4453      	add	r3, sl
 801a390:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801a394:	0a1b      	lsrs	r3, r3, #8
 801a396:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a39a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801a39e:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801a3a2:	ea43 030c 	orr.w	r3, r3, ip
 801a3a6:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801a3a8:	2cff      	cmp	r4, #255	@ 0xff
 801a3aa:	d021      	beq.n	801a3f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801a3ac:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801a3ae:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801a3b2:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801a3b4:	fb04 fb0b 	mul.w	fp, r4, fp
 801a3b8:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801a3ba:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801a3be:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801a3c0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a3c4:	fb04 fa0a 	mul.w	sl, r4, sl
 801a3c8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801a3cc:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801a3d0:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801a3d4:	44de      	add	lr, fp
 801a3d6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a3da:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a3de:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a3e2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801a3e6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801a3ea:	ea4e 040a 	orr.w	r4, lr, sl
 801a3ee:	940e      	str	r4, [sp, #56]	@ 0x38
 801a3f0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801a3f2:	2cff      	cmp	r4, #255	@ 0xff
 801a3f4:	d021      	beq.n	801a43a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801a3f6:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801a3f8:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801a3fc:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801a3fe:	fb04 fb0b 	mul.w	fp, r4, fp
 801a402:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801a404:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801a408:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801a40a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a40e:	fb04 fa0a 	mul.w	sl, r4, sl
 801a412:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801a416:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801a41a:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801a41e:	44de      	add	lr, fp
 801a420:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a424:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a428:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a42c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801a430:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801a434:	ea4e 040a 	orr.w	r4, lr, sl
 801a438:	940a      	str	r4, [sp, #40]	@ 0x28
 801a43a:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801a43c:	2cff      	cmp	r4, #255	@ 0xff
 801a43e:	d021      	beq.n	801a484 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801a440:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801a442:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801a446:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801a448:	fb04 fb0b 	mul.w	fp, r4, fp
 801a44c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801a44e:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801a452:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801a454:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a458:	fb04 fa0a 	mul.w	sl, r4, sl
 801a45c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801a460:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801a464:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801a468:	44de      	add	lr, fp
 801a46a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a46e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a472:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a476:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801a47a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801a47e:	ea4e 040a 	orr.w	r4, lr, sl
 801a482:	940f      	str	r4, [sp, #60]	@ 0x3c
 801a484:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801a486:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801a48a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801a48c:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 801a490:	fb08 fc0c 	mul.w	ip, r8, ip
 801a494:	fb02 cc0e 	mla	ip, r2, lr, ip
 801a498:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801a49c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801a49e:	fb01 cc0e 	mla	ip, r1, lr, ip
 801a4a2:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801a4a6:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801a4a8:	fb09 cc0e 	mla	ip, r9, lr, ip
 801a4ac:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801a4b0:	fb08 f80e 	mul.w	r8, r8, lr
 801a4b4:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801a4b8:	fb02 8303 	mla	r3, r2, r3, r8
 801a4bc:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801a4be:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801a4c0:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801a4c4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801a4c6:	fb01 330a 	mla	r3, r1, sl, r3
 801a4ca:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
 801a4ce:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801a4d0:	fb09 3901 	mla	r9, r9, r1, r3
 801a4d4:	4342      	muls	r2, r0
 801a4d6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a4da:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a4de:	883b      	ldrh	r3, [r7, #0]
 801a4e0:	1c50      	adds	r0, r2, #1
 801a4e2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801a4e6:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801a4ea:	ea4c 0c09 	orr.w	ip, ip, r9
 801a4ee:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801a4f2:	1219      	asrs	r1, r3, #8
 801a4f4:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801a4f8:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801a4fc:	b2c0      	uxtb	r0, r0
 801a4fe:	fb12 f204 	smulbb	r2, r2, r4
 801a502:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801a506:	fb01 2100 	mla	r1, r1, r0, r2
 801a50a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801a50e:	10da      	asrs	r2, r3, #3
 801a510:	fa5f fc8c 	uxtb.w	ip, ip
 801a514:	00db      	lsls	r3, r3, #3
 801a516:	fb1c fc04 	smulbb	ip, ip, r4
 801a51a:	b2db      	uxtb	r3, r3
 801a51c:	b289      	uxth	r1, r1
 801a51e:	fb03 c300 	mla	r3, r3, r0, ip
 801a522:	fa1f fc83 	uxth.w	ip, r3
 801a526:	1c4b      	adds	r3, r1, #1
 801a528:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801a52c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801a530:	fb1e fe04 	smulbb	lr, lr, r4
 801a534:	f10c 0301 	add.w	r3, ip, #1
 801a538:	fb02 e200 	mla	r2, r2, r0, lr
 801a53c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801a540:	b292      	uxth	r2, r2
 801a542:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801a546:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a54a:	430b      	orrs	r3, r1
 801a54c:	1c51      	adds	r1, r2, #1
 801a54e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801a552:	0952      	lsrs	r2, r2, #5
 801a554:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801a558:	4313      	orrs	r3, r2
 801a55a:	803b      	strh	r3, [r7, #0]
 801a55c:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801a55e:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801a560:	441a      	add	r2, r3
 801a562:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801a564:	9229      	str	r2, [sp, #164]	@ 0xa4
 801a566:	441d      	add	r5, r3
 801a568:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801a56a:	3b01      	subs	r3, #1
 801a56c:	3702      	adds	r7, #2
 801a56e:	931a      	str	r3, [sp, #104]	@ 0x68
 801a570:	e694      	b.n	801a29c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a572:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801a574:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801a576:	441c      	add	r4, r3
 801a578:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801a57a:	9429      	str	r4, [sp, #164]	@ 0xa4
 801a57c:	441d      	add	r5, r3
 801a57e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a580:	3b01      	subs	r3, #1
 801a582:	9309      	str	r3, [sp, #36]	@ 0x24
 801a584:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a586:	3302      	adds	r3, #2
 801a588:	930c      	str	r3, [sp, #48]	@ 0x30
 801a58a:	e666      	b.n	801a25a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801a58c:	d024      	beq.n	801a5d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801a58e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a590:	982b      	ldr	r0, [sp, #172]	@ 0xac
 801a592:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801a594:	3b01      	subs	r3, #1
 801a596:	fb00 4003 	mla	r0, r0, r3, r4
 801a59a:	1400      	asrs	r0, r0, #16
 801a59c:	f53f ae7b 	bmi.w	801a296 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801a5a0:	3901      	subs	r1, #1
 801a5a2:	4288      	cmp	r0, r1
 801a5a4:	f6bf ae77 	bge.w	801a296 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801a5a8:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 801a5aa:	fb01 5303 	mla	r3, r1, r3, r5
 801a5ae:	141b      	asrs	r3, r3, #16
 801a5b0:	f53f ae71 	bmi.w	801a296 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801a5b4:	3a01      	subs	r2, #1
 801a5b6:	4293      	cmp	r3, r2
 801a5b8:	f6bf ae6d 	bge.w	801a296 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801a5bc:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801a5c0:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 801a5c4:	f1bb 0f00 	cmp.w	fp, #0
 801a5c8:	dc70      	bgt.n	801a6ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801a5ca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a5cc:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801a5d0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a5d2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801a5d6:	930c      	str	r3, [sp, #48]	@ 0x30
 801a5d8:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801a5da:	2b00      	cmp	r3, #0
 801a5dc:	f340 81be 	ble.w	801a95c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801a5e0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a5e4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801a5e8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a5ec:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801a5ee:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a5f2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a5f6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a5fa:	eef0 6a62 	vmov.f32	s13, s5
 801a5fe:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a602:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a606:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a60a:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
 801a60e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a612:	eef0 6a43 	vmov.f32	s13, s6
 801a616:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a61a:	ee12 2a90 	vmov	r2, s5
 801a61e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a622:	fb92 f3f3 	sdiv	r3, r2, r3
 801a626:	ee13 2a10 	vmov	r2, s6
 801a62a:	932b      	str	r3, [sp, #172]	@ 0xac
 801a62c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801a62e:	fb92 f3f3 	sdiv	r3, r2, r3
 801a632:	932c      	str	r3, [sp, #176]	@ 0xb0
 801a634:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801a636:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 801a638:	3b01      	subs	r3, #1
 801a63a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a63e:	9319      	str	r3, [sp, #100]	@ 0x64
 801a640:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801a642:	bf08      	it	eq
 801a644:	4613      	moveq	r3, r2
 801a646:	ee16 5a90 	vmov	r5, s13
 801a64a:	9309      	str	r3, [sp, #36]	@ 0x24
 801a64c:	eeb0 3a67 	vmov.f32	s6, s15
 801a650:	eef0 2a47 	vmov.f32	s5, s14
 801a654:	e5f3      	b.n	801a23e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a656:	2900      	cmp	r1, #0
 801a658:	f43f ae66 	beq.w	801a328 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801a65c:	f818 0000 	ldrb.w	r0, [r8, r0]
 801a660:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801a664:	900a      	str	r0, [sp, #40]	@ 0x28
 801a666:	0e00      	lsrs	r0, r0, #24
 801a668:	9013      	str	r0, [sp, #76]	@ 0x4c
 801a66a:	e65d      	b.n	801a328 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801a66c:	f113 0801 	adds.w	r8, r3, #1
 801a670:	f53f af74 	bmi.w	801a55c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801a674:	4540      	cmp	r0, r8
 801a676:	f6ff af71 	blt.w	801a55c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801a67a:	f11c 0801 	adds.w	r8, ip, #1
 801a67e:	f53f af6d 	bmi.w	801a55c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801a682:	45c6      	cmp	lr, r8
 801a684:	f6ff af6a 	blt.w	801a55c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801a688:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 801a68a:	9302      	str	r3, [sp, #8]
 801a68c:	b200      	sxth	r0, r0
 801a68e:	fa0f f38e 	sxth.w	r3, lr
 801a692:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801a696:	e9cd c203 	strd	ip, r2, [sp, #12]
 801a69a:	9301      	str	r3, [sp, #4]
 801a69c:	9000      	str	r0, [sp, #0]
 801a69e:	4633      	mov	r3, r6
 801a6a0:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801a6a2:	981d      	ldr	r0, [sp, #116]	@ 0x74
 801a6a4:	4639      	mov	r1, r7
 801a6a6:	f7ff fc62 	bl	8019f6e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801a6aa:	e757      	b.n	801a55c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801a6ac:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801a6ae:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801a6b0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801a6b4:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801a6b6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a6ba:	1427      	asrs	r7, r4, #16
 801a6bc:	142b      	asrs	r3, r5, #16
 801a6be:	fb01 7303 	mla	r3, r1, r3, r7
 801a6c2:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801a6c4:	18e7      	adds	r7, r4, r3
 801a6c6:	5ce3      	ldrb	r3, [r4, r3]
 801a6c8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801a6cc:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801a6d0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801a6d4:	2a00      	cmp	r2, #0
 801a6d6:	f000 8137 	beq.w	801a948 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801a6da:	f897 e001 	ldrb.w	lr, [r7, #1]
 801a6de:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801a6e2:	9410      	str	r4, [sp, #64]	@ 0x40
 801a6e4:	0e24      	lsrs	r4, r4, #24
 801a6e6:	9417      	str	r4, [sp, #92]	@ 0x5c
 801a6e8:	b170      	cbz	r0, 801a708 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801a6ea:	eb07 0e01 	add.w	lr, r7, r1
 801a6ee:	5c79      	ldrb	r1, [r7, r1]
 801a6f0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801a6f4:	910b      	str	r1, [sp, #44]	@ 0x2c
 801a6f6:	0e09      	lsrs	r1, r1, #24
 801a6f8:	9114      	str	r1, [sp, #80]	@ 0x50
 801a6fa:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801a6fe:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801a702:	9111      	str	r1, [sp, #68]	@ 0x44
 801a704:	0e09      	lsrs	r1, r1, #24
 801a706:	9118      	str	r1, [sp, #96]	@ 0x60
 801a708:	b292      	uxth	r2, r2
 801a70a:	b280      	uxth	r0, r0
 801a70c:	fb02 f800 	mul.w	r8, r2, r0
 801a710:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801a714:	0112      	lsls	r2, r2, #4
 801a716:	eba2 0e08 	sub.w	lr, r2, r8
 801a71a:	b280      	uxth	r0, r0
 801a71c:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801a720:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 801a722:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801a724:	fa1f fe8e 	uxth.w	lr, lr
 801a728:	1a12      	subs	r2, r2, r0
 801a72a:	b292      	uxth	r2, r2
 801a72c:	fb0e f101 	mul.w	r1, lr, r1
 801a730:	fb02 110c 	mla	r1, r2, ip, r1
 801a734:	fb00 1104 	mla	r1, r0, r4, r1
 801a738:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801a73a:	fb08 1104 	mla	r1, r8, r4, r1
 801a73e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801a742:	2900      	cmp	r1, #0
 801a744:	f000 80f5 	beq.w	801a932 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801a748:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801a74c:	d019      	beq.n	801a782 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 801a74e:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801a752:	fb0c fa0a 	mul.w	sl, ip, sl
 801a756:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801a75a:	fb0c fc03 	mul.w	ip, ip, r3
 801a75e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801a762:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801a766:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801a76a:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801a76e:	4453      	add	r3, sl
 801a770:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801a774:	0a1b      	lsrs	r3, r3, #8
 801a776:	0a3f      	lsrs	r7, r7, #8
 801a778:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801a77c:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801a780:	433b      	orrs	r3, r7
 801a782:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801a784:	2cff      	cmp	r4, #255	@ 0xff
 801a786:	d020      	beq.n	801a7ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 801a788:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801a78a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801a78e:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801a790:	4367      	muls	r7, r4
 801a792:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801a794:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801a798:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801a79a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a79e:	fb04 fa0a 	mul.w	sl, r4, sl
 801a7a2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801a7a6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801a7aa:	44bc      	add	ip, r7
 801a7ac:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801a7b0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a7b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a7b8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a7bc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801a7c0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801a7c4:	ea4c 040a 	orr.w	r4, ip, sl
 801a7c8:	9410      	str	r4, [sp, #64]	@ 0x40
 801a7ca:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801a7cc:	2cff      	cmp	r4, #255	@ 0xff
 801a7ce:	d020      	beq.n	801a812 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801a7d0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801a7d2:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801a7d6:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801a7d8:	4367      	muls	r7, r4
 801a7da:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801a7dc:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801a7e0:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801a7e2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a7e6:	fb04 fa0a 	mul.w	sl, r4, sl
 801a7ea:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801a7ee:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801a7f2:	44bc      	add	ip, r7
 801a7f4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801a7f8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a7fc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a800:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a804:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801a808:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801a80c:	ea4c 040a 	orr.w	r4, ip, sl
 801a810:	940b      	str	r4, [sp, #44]	@ 0x2c
 801a812:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801a814:	2cff      	cmp	r4, #255	@ 0xff
 801a816:	d020      	beq.n	801a85a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801a818:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801a81a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801a81e:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801a820:	4367      	muls	r7, r4
 801a822:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801a824:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801a828:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801a82a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a82e:	fb04 fa0a 	mul.w	sl, r4, sl
 801a832:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801a836:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801a83a:	44bc      	add	ip, r7
 801a83c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801a840:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a844:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a848:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a84c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801a850:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801a854:	ea4c 040a 	orr.w	r4, ip, sl
 801a858:	9411      	str	r4, [sp, #68]	@ 0x44
 801a85a:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801a85c:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801a860:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801a862:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801a866:	fb0e f707 	mul.w	r7, lr, r7
 801a86a:	fb02 770c 	mla	r7, r2, ip, r7
 801a86e:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801a872:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801a874:	fb00 770c 	mla	r7, r0, ip, r7
 801a878:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801a87c:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801a87e:	fb08 770c 	mla	r7, r8, ip, r7
 801a882:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801a886:	fb0e fe0c 	mul.w	lr, lr, ip
 801a88a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801a88e:	fb02 e303 	mla	r3, r2, r3, lr
 801a892:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801a894:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801a896:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801a89a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801a89c:	fb00 330a 	mla	r3, r0, sl, r3
 801a8a0:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 801a8a4:	fb08 3c0c 	mla	ip, r8, ip, r3
 801a8a8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801a8aa:	f8b9 0000 	ldrh.w	r0, [r9]
 801a8ae:	434b      	muls	r3, r1
 801a8b0:	0a3f      	lsrs	r7, r7, #8
 801a8b2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a8b6:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801a8ba:	1c59      	adds	r1, r3, #1
 801a8bc:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801a8c0:	ea47 070c 	orr.w	r7, r7, ip
 801a8c4:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801a8c8:	1202      	asrs	r2, r0, #8
 801a8ca:	0c3b      	lsrs	r3, r7, #16
 801a8cc:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801a8d0:	b2c9      	uxtb	r1, r1
 801a8d2:	fb13 f304 	smulbb	r3, r3, r4
 801a8d6:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801a8da:	fb02 3201 	mla	r2, r2, r1, r3
 801a8de:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801a8e2:	10c3      	asrs	r3, r0, #3
 801a8e4:	b2ff      	uxtb	r7, r7
 801a8e6:	00c0      	lsls	r0, r0, #3
 801a8e8:	b292      	uxth	r2, r2
 801a8ea:	fb1c fc04 	smulbb	ip, ip, r4
 801a8ee:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801a8f2:	b2c0      	uxtb	r0, r0
 801a8f4:	fb17 f704 	smulbb	r7, r7, r4
 801a8f8:	fb03 c301 	mla	r3, r3, r1, ip
 801a8fc:	fb00 7001 	mla	r0, r0, r1, r7
 801a900:	f102 0c01 	add.w	ip, r2, #1
 801a904:	b280      	uxth	r0, r0
 801a906:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801a90a:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
 801a90e:	1c42      	adds	r2, r0, #1
 801a910:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801a914:	b29b      	uxth	r3, r3
 801a916:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a91a:	ea42 020c 	orr.w	r2, r2, ip
 801a91e:	f103 0c01 	add.w	ip, r3, #1
 801a922:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801a926:	095b      	lsrs	r3, r3, #5
 801a928:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a92c:	431a      	orrs	r2, r3
 801a92e:	f8a9 2000 	strh.w	r2, [r9]
 801a932:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801a934:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801a936:	441a      	add	r2, r3
 801a938:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801a93a:	9229      	str	r2, [sp, #164]	@ 0xa4
 801a93c:	f109 0902 	add.w	r9, r9, #2
 801a940:	441d      	add	r5, r3
 801a942:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a946:	e63d      	b.n	801a5c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801a948:	2800      	cmp	r0, #0
 801a94a:	f43f aedd 	beq.w	801a708 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801a94e:	5c79      	ldrb	r1, [r7, r1]
 801a950:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801a954:	910b      	str	r1, [sp, #44]	@ 0x2c
 801a956:	0e09      	lsrs	r1, r1, #24
 801a958:	9114      	str	r1, [sp, #80]	@ 0x50
 801a95a:	e6d5      	b.n	801a708 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801a95c:	b01f      	add	sp, #124	@ 0x7c
 801a95e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a962 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801a962:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a966:	b089      	sub	sp, #36	@ 0x24
 801a968:	9101      	str	r1, [sp, #4]
 801a96a:	9801      	ldr	r0, [sp, #4]
 801a96c:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
 801a970:	8800      	ldrh	r0, [r0, #0]
 801a972:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 801a976:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 801a97a:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
 801a97e:	1206      	asrs	r6, r0, #8
 801a980:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
 801a984:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801a988:	9602      	str	r6, [sp, #8]
 801a98a:	10c6      	asrs	r6, r0, #3
 801a98c:	00c0      	lsls	r0, r0, #3
 801a98e:	b2c0      	uxtb	r0, r0
 801a990:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801a994:	9004      	str	r0, [sp, #16]
 801a996:	2f00      	cmp	r7, #0
 801a998:	fb07 100c 	mla	r0, r7, ip, r1
 801a99c:	9603      	str	r6, [sp, #12]
 801a99e:	eb02 0e00 	add.w	lr, r2, r0
 801a9a2:	f2c0 810a 	blt.w	801abba <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801a9a6:	45b8      	cmp	r8, r7
 801a9a8:	f340 8107 	ble.w	801abba <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801a9ac:	2900      	cmp	r1, #0
 801a9ae:	f2c0 8102 	blt.w	801abb6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801a9b2:	458c      	cmp	ip, r1
 801a9b4:	f340 80ff 	ble.w	801abb6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801a9b8:	5c12      	ldrb	r2, [r2, r0]
 801a9ba:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801a9be:	1c4a      	adds	r2, r1, #1
 801a9c0:	f100 80fe 	bmi.w	801abc0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801a9c4:	4594      	cmp	ip, r2
 801a9c6:	f340 80fb 	ble.w	801abc0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801a9ca:	2d00      	cmp	r5, #0
 801a9cc:	f000 80fa 	beq.w	801abc4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801a9d0:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801a9d4:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801a9d8:	3701      	adds	r7, #1
 801a9da:	f100 80f7 	bmi.w	801abcc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801a9de:	45b8      	cmp	r8, r7
 801a9e0:	f340 80f4 	ble.w	801abcc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801a9e4:	2c00      	cmp	r4, #0
 801a9e6:	f000 80f4 	beq.w	801abd2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801a9ea:	2900      	cmp	r1, #0
 801a9ec:	eb0e 020c 	add.w	r2, lr, ip
 801a9f0:	f2c0 80ea 	blt.w	801abc8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801a9f4:	458c      	cmp	ip, r1
 801a9f6:	f340 80e7 	ble.w	801abc8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801a9fa:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801a9fe:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801aa02:	3101      	adds	r1, #1
 801aa04:	f100 80e8 	bmi.w	801abd8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801aa08:	458c      	cmp	ip, r1
 801aa0a:	f340 80e5 	ble.w	801abd8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801aa0e:	2d00      	cmp	r5, #0
 801aa10:	f000 80e4 	beq.w	801abdc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801aa14:	7852      	ldrb	r2, [r2, #1]
 801aa16:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801aa1a:	0e0b      	lsrs	r3, r1, #24
 801aa1c:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801aa20:	9300      	str	r3, [sp, #0]
 801aa22:	b2a4      	uxth	r4, r4
 801aa24:	b2ab      	uxth	r3, r5
 801aa26:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 801aa2a:	fb03 f904 	mul.w	r9, r3, r4
 801aa2e:	fb0a f505 	mul.w	r5, sl, r5
 801aa32:	011b      	lsls	r3, r3, #4
 801aa34:	eba3 0e09 	sub.w	lr, r3, r9
 801aa38:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
 801aa3c:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 801aa40:	0a28      	lsrs	r0, r5, #8
 801aa42:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801aa46:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 801aa4a:	4405      	add	r5, r0
 801aa4c:	0a2d      	lsrs	r5, r5, #8
 801aa4e:	fb0a f303 	mul.w	r3, sl, r3
 801aa52:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 801aa56:	9005      	str	r0, [sp, #20]
 801aa58:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 801aa5c:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801aa60:	0a1b      	lsrs	r3, r3, #8
 801aa62:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801aa66:	9306      	str	r3, [sp, #24]
 801aa68:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 801aa6c:	fb0b f303 	mul.w	r3, fp, r3
 801aa70:	0a1d      	lsrs	r5, r3, #8
 801aa72:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801aa76:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801aa7a:	fb0b f606 	mul.w	r6, fp, r6
 801aa7e:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 801aa82:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
 801aa86:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801aa8a:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801aa8e:	fb08 f707 	mul.w	r7, r8, r7
 801aa92:	441d      	add	r5, r3
 801aa94:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 801aa98:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801aa9c:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 801aaa0:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801aaa4:	fb08 fc0c 	mul.w	ip, r8, ip
 801aaa8:	0a1b      	lsrs	r3, r3, #8
 801aaaa:	9307      	str	r3, [sp, #28]
 801aaac:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801aab0:	0e0b      	lsrs	r3, r1, #24
 801aab2:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 801aab6:	435f      	muls	r7, r3
 801aab8:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801aabc:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801aac0:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801aac4:	4460      	add	r0, ip
 801aac6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801aaca:	b2a4      	uxth	r4, r4
 801aacc:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801aad0:	0a2d      	lsrs	r5, r5, #8
 801aad2:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801aad6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801aada:	fa1f fe8e 	uxth.w	lr, lr
 801aade:	4359      	muls	r1, r3
 801aae0:	1b12      	subs	r2, r2, r4
 801aae2:	9b05      	ldr	r3, [sp, #20]
 801aae4:	44bc      	add	ip, r7
 801aae6:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801aaea:	b292      	uxth	r2, r2
 801aaec:	fb05 f50e 	mul.w	r5, r5, lr
 801aaf0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801aaf4:	fb03 5502 	mla	r5, r3, r2, r5
 801aaf8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801aafc:	9b06      	ldr	r3, [sp, #24]
 801aafe:	f501 7780 	add.w	r7, r1, #256	@ 0x100
 801ab02:	0a36      	lsrs	r6, r6, #8
 801ab04:	0a00      	lsrs	r0, r0, #8
 801ab06:	fb0c 5509 	mla	r5, ip, r9, r5
 801ab0a:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801ab0e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801ab12:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801ab16:	fb00 5504 	mla	r5, r0, r4, r5
 801ab1a:	fb0e f606 	mul.w	r6, lr, r6
 801ab1e:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
 801ab22:	0a09      	lsrs	r1, r1, #8
 801ab24:	9b07      	ldr	r3, [sp, #28]
 801ab26:	fb02 6000 	mla	r0, r2, r0, r6
 801ab2a:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801ab2e:	fb09 0001 	mla	r0, r9, r1, r0
 801ab32:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801ab36:	fb0e fe0b 	mul.w	lr, lr, fp
 801ab3a:	fb04 0003 	mla	r0, r4, r3, r0
 801ab3e:	fb02 e20a 	mla	r2, r2, sl, lr
 801ab42:	9b00      	ldr	r3, [sp, #0]
 801ab44:	fb04 2408 	mla	r4, r4, r8, r2
 801ab48:	fb09 4903 	mla	r9, r9, r3, r4
 801ab4c:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801ab50:	9b02      	ldr	r3, [sp, #8]
 801ab52:	9a04      	ldr	r2, [sp, #16]
 801ab54:	fa5f f989 	uxtb.w	r9, r9
 801ab58:	fb03 f109 	mul.w	r1, r3, r9
 801ab5c:	9b03      	ldr	r3, [sp, #12]
 801ab5e:	0a2d      	lsrs	r5, r5, #8
 801ab60:	0a00      	lsrs	r0, r0, #8
 801ab62:	fb03 f309 	mul.w	r3, r3, r9
 801ab66:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 801ab6a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801ab6e:	4305      	orrs	r5, r0
 801ab70:	fb02 f909 	mul.w	r9, r2, r9
 801ab74:	1c58      	adds	r0, r3, #1
 801ab76:	1c4a      	adds	r2, r1, #1
 801ab78:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801ab7c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ab80:	0a2b      	lsrs	r3, r5, #8
 801ab82:	0c2a      	lsrs	r2, r5, #16
 801ab84:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801ab88:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801ab8c:	00db      	lsls	r3, r3, #3
 801ab8e:	0212      	lsls	r2, r2, #8
 801ab90:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 801ab94:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ab98:	4313      	orrs	r3, r2
 801ab9a:	f109 0201 	add.w	r2, r9, #1
 801ab9e:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801aba2:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801aba6:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801abaa:	431d      	orrs	r5, r3
 801abac:	9b01      	ldr	r3, [sp, #4]
 801abae:	801d      	strh	r5, [r3, #0]
 801abb0:	b009      	add	sp, #36	@ 0x24
 801abb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801abb6:	2000      	movs	r0, #0
 801abb8:	e701      	b.n	801a9be <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801abba:	2600      	movs	r6, #0
 801abbc:	4630      	mov	r0, r6
 801abbe:	e70b      	b.n	801a9d8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801abc0:	2600      	movs	r6, #0
 801abc2:	e709      	b.n	801a9d8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801abc4:	462e      	mov	r6, r5
 801abc6:	e707      	b.n	801a9d8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801abc8:	2700      	movs	r7, #0
 801abca:	e71a      	b.n	801aa02 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801abcc:	2100      	movs	r1, #0
 801abce:	460f      	mov	r7, r1
 801abd0:	e723      	b.n	801aa1a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801abd2:	4621      	mov	r1, r4
 801abd4:	4627      	mov	r7, r4
 801abd6:	e720      	b.n	801aa1a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801abd8:	2100      	movs	r1, #0
 801abda:	e71e      	b.n	801aa1a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801abdc:	4629      	mov	r1, r5
 801abde:	e71c      	b.n	801aa1a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801abe0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801abe0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801abe4:	b09b      	sub	sp, #108	@ 0x6c
 801abe6:	9218      	str	r2, [sp, #96]	@ 0x60
 801abe8:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801abea:	9116      	str	r1, [sp, #88]	@ 0x58
 801abec:	9307      	str	r3, [sp, #28]
 801abee:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 801abf2:	9019      	str	r0, [sp, #100]	@ 0x64
 801abf4:	6850      	ldr	r0, [r2, #4]
 801abf6:	6812      	ldr	r2, [r2, #0]
 801abf8:	9d26      	ldr	r5, [sp, #152]	@ 0x98
 801abfa:	fb00 1303 	mla	r3, r0, r3, r1
 801abfe:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ac02:	930a      	str	r3, [sp, #40]	@ 0x28
 801ac04:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801ac06:	681b      	ldr	r3, [r3, #0]
 801ac08:	930f      	str	r3, [sp, #60]	@ 0x3c
 801ac0a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801ac0c:	685e      	ldr	r6, [r3, #4]
 801ac0e:	3604      	adds	r6, #4
 801ac10:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801ac12:	2b00      	cmp	r3, #0
 801ac14:	dc03      	bgt.n	801ac1e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801ac16:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801ac18:	2b00      	cmp	r3, #0
 801ac1a:	f340 8373 	ble.w	801b304 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801ac1e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801ac20:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ac24:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ac28:	1e48      	subs	r0, r1, #1
 801ac2a:	1e57      	subs	r7, r2, #1
 801ac2c:	9b07      	ldr	r3, [sp, #28]
 801ac2e:	2b00      	cmp	r3, #0
 801ac30:	f340 8190 	ble.w	801af54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801ac34:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801ac36:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801ac3a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801ac3e:	d406      	bmi.n	801ac4e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ac40:	4584      	cmp	ip, r0
 801ac42:	da04      	bge.n	801ac4e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ac44:	2b00      	cmp	r3, #0
 801ac46:	db02      	blt.n	801ac4e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ac48:	42bb      	cmp	r3, r7
 801ac4a:	f2c0 8184 	blt.w	801af56 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801ac4e:	f11c 0c01 	adds.w	ip, ip, #1
 801ac52:	f100 8172 	bmi.w	801af3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ac56:	4561      	cmp	r1, ip
 801ac58:	f2c0 816f 	blt.w	801af3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ac5c:	3301      	adds	r3, #1
 801ac5e:	f100 816c 	bmi.w	801af3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ac62:	429a      	cmp	r2, r3
 801ac64:	f2c0 8169 	blt.w	801af3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ac68:	9b07      	ldr	r3, [sp, #28]
 801ac6a:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801ac6c:	9317      	str	r3, [sp, #92]	@ 0x5c
 801ac6e:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801ac70:	2b00      	cmp	r3, #0
 801ac72:	f340 818e 	ble.w	801af92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 801ac76:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801ac78:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801ac7c:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801ac7e:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801ac82:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801ac84:	141b      	asrs	r3, r3, #16
 801ac86:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801ac8a:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801ac8e:	f100 81d1 	bmi.w	801b034 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801ac92:	f101 38ff 	add.w	r8, r1, #4294967295
 801ac96:	4543      	cmp	r3, r8
 801ac98:	f280 81cc 	bge.w	801b034 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801ac9c:	f1bc 0f00 	cmp.w	ip, #0
 801aca0:	f2c0 81c8 	blt.w	801b034 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801aca4:	f10e 38ff 	add.w	r8, lr, #4294967295
 801aca8:	45c4      	cmp	ip, r8
 801acaa:	f280 81c3 	bge.w	801b034 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801acae:	b209      	sxth	r1, r1
 801acb0:	fb0c 3301 	mla	r3, ip, r1, r3
 801acb4:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801acb6:	eb04 0803 	add.w	r8, r4, r3
 801acba:	5ce3      	ldrb	r3, [r4, r3]
 801acbc:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801acc0:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801acc4:	2a00      	cmp	r2, #0
 801acc6:	f000 81aa 	beq.w	801b01e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 801acca:	f898 c001 	ldrb.w	ip, [r8, #1]
 801acce:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801acd2:	940b      	str	r4, [sp, #44]	@ 0x2c
 801acd4:	0e24      	lsrs	r4, r4, #24
 801acd6:	9412      	str	r4, [sp, #72]	@ 0x48
 801acd8:	b178      	cbz	r0, 801acfa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801acda:	eb08 0c01 	add.w	ip, r8, r1
 801acde:	f818 1001 	ldrb.w	r1, [r8, r1]
 801ace2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801ace6:	9108      	str	r1, [sp, #32]
 801ace8:	0e09      	lsrs	r1, r1, #24
 801acea:	9110      	str	r1, [sp, #64]	@ 0x40
 801acec:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801acf0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801acf4:	910c      	str	r1, [sp, #48]	@ 0x30
 801acf6:	0e09      	lsrs	r1, r1, #24
 801acf8:	9113      	str	r1, [sp, #76]	@ 0x4c
 801acfa:	b292      	uxth	r2, r2
 801acfc:	b280      	uxth	r0, r0
 801acfe:	fb02 f900 	mul.w	r9, r2, r0
 801ad02:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801ad06:	0112      	lsls	r2, r2, #4
 801ad08:	eba2 0809 	sub.w	r8, r2, r9
 801ad0c:	b280      	uxth	r0, r0
 801ad0e:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801ad12:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801ad14:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801ad16:	fa1f f888 	uxth.w	r8, r8
 801ad1a:	1a12      	subs	r2, r2, r0
 801ad1c:	b292      	uxth	r2, r2
 801ad1e:	fb08 f101 	mul.w	r1, r8, r1
 801ad22:	fb02 110e 	mla	r1, r2, lr, r1
 801ad26:	fb00 1104 	mla	r1, r0, r4, r1
 801ad2a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801ad2c:	fb09 1104 	mla	r1, r9, r4, r1
 801ad30:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801ad34:	2900      	cmp	r1, #0
 801ad36:	f000 80f5 	beq.w	801af24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801ad3a:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801ad3e:	d01b      	beq.n	801ad78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ad40:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801ad44:	fb0e fa0a 	mul.w	sl, lr, sl
 801ad48:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801ad4c:	fb0e fe03 	mul.w	lr, lr, r3
 801ad50:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801ad54:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801ad58:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801ad5c:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801ad60:	4453      	add	r3, sl
 801ad62:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801ad66:	0a1b      	lsrs	r3, r3, #8
 801ad68:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ad6c:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801ad70:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801ad74:	ea43 030c 	orr.w	r3, r3, ip
 801ad78:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801ad7a:	2cff      	cmp	r4, #255	@ 0xff
 801ad7c:	d021      	beq.n	801adc2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 801ad7e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801ad80:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801ad84:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801ad86:	fb04 fb0b 	mul.w	fp, r4, fp
 801ad8a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801ad8c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801ad90:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801ad92:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ad96:	fb04 fa0a 	mul.w	sl, r4, sl
 801ad9a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ad9e:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801ada2:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801ada6:	44de      	add	lr, fp
 801ada8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801adac:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801adb0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801adb4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801adb8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801adbc:	ea4e 040a 	orr.w	r4, lr, sl
 801adc0:	940b      	str	r4, [sp, #44]	@ 0x2c
 801adc2:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801adc4:	2cff      	cmp	r4, #255	@ 0xff
 801adc6:	d021      	beq.n	801ae0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801adc8:	9c08      	ldr	r4, [sp, #32]
 801adca:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801adce:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801add0:	fb04 fb0b 	mul.w	fp, r4, fp
 801add4:	9c08      	ldr	r4, [sp, #32]
 801add6:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801adda:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801addc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ade0:	fb04 fa0a 	mul.w	sl, r4, sl
 801ade4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ade8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801adec:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801adf0:	44de      	add	lr, fp
 801adf2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801adf6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801adfa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801adfe:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ae02:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ae06:	ea4e 040a 	orr.w	r4, lr, sl
 801ae0a:	9408      	str	r4, [sp, #32]
 801ae0c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801ae0e:	2cff      	cmp	r4, #255	@ 0xff
 801ae10:	d021      	beq.n	801ae56 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801ae12:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801ae14:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801ae18:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801ae1a:	fb04 fb0b 	mul.w	fp, r4, fp
 801ae1e:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801ae20:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801ae24:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801ae26:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ae2a:	fb04 fa0a 	mul.w	sl, r4, sl
 801ae2e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ae32:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801ae36:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801ae3a:	44de      	add	lr, fp
 801ae3c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ae40:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ae44:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ae48:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ae4c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ae50:	ea4e 040a 	orr.w	r4, lr, sl
 801ae54:	940c      	str	r4, [sp, #48]	@ 0x30
 801ae56:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801ae58:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801ae5c:	9c08      	ldr	r4, [sp, #32]
 801ae5e:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 801ae62:	fb08 fc0c 	mul.w	ip, r8, ip
 801ae66:	fb02 cc0e 	mla	ip, r2, lr, ip
 801ae6a:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801ae6e:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801ae70:	fb00 cc0e 	mla	ip, r0, lr, ip
 801ae74:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801ae78:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801ae7a:	fb09 cc0e 	mla	ip, r9, lr, ip
 801ae7e:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801ae82:	fb08 f80e 	mul.w	r8, r8, lr
 801ae86:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801ae8a:	fb02 8303 	mla	r3, r2, r3, r8
 801ae8e:	9a08      	ldr	r2, [sp, #32]
 801ae90:	f8b7 8000 	ldrh.w	r8, [r7]
 801ae94:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801ae98:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801ae9a:	fb00 330a 	mla	r3, r0, sl, r3
 801ae9e:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
 801aea2:	fb09 3900 	mla	r9, r9, r0, r3
 801aea6:	43c9      	mvns	r1, r1
 801aea8:	ea4f 2228 	mov.w	r2, r8, asr #8
 801aeac:	fa5f fe81 	uxtb.w	lr, r1
 801aeb0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801aeb4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801aeb8:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801aebc:	fb02 f20e 	mul.w	r2, r2, lr
 801aec0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801aec4:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801aec8:	ea4c 0c09 	orr.w	ip, ip, r9
 801aecc:	1c53      	adds	r3, r2, #1
 801aece:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801aed2:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801aed6:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801aeda:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801aede:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801aee2:	4a63      	ldr	r2, [pc, #396]	@ (801b070 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801aee4:	fb00 f00e 	mul.w	r0, r0, lr
 801aee8:	b2db      	uxtb	r3, r3
 801aeea:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801aeee:	1c43      	adds	r3, r0, #1
 801aef0:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801aef4:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801aef8:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801aefc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801af00:	b2c9      	uxtb	r1, r1
 801af02:	00db      	lsls	r3, r3, #3
 801af04:	fb01 f10e 	mul.w	r1, r1, lr
 801af08:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801af0c:	4313      	orrs	r3, r2
 801af0e:	1c4a      	adds	r2, r1, #1
 801af10:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801af14:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801af18:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801af1c:	ea4c 0c03 	orr.w	ip, ip, r3
 801af20:	f8a7 c000 	strh.w	ip, [r7]
 801af24:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801af26:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801af28:	441a      	add	r2, r3
 801af2a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801af2c:	9225      	str	r2, [sp, #148]	@ 0x94
 801af2e:	441d      	add	r5, r3
 801af30:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801af32:	3b01      	subs	r3, #1
 801af34:	3702      	adds	r7, #2
 801af36:	9317      	str	r3, [sp, #92]	@ 0x5c
 801af38:	e699      	b.n	801ac6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801af3a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801af3c:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801af3e:	441c      	add	r4, r3
 801af40:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801af42:	9425      	str	r4, [sp, #148]	@ 0x94
 801af44:	441d      	add	r5, r3
 801af46:	9b07      	ldr	r3, [sp, #28]
 801af48:	3b01      	subs	r3, #1
 801af4a:	9307      	str	r3, [sp, #28]
 801af4c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801af4e:	3302      	adds	r3, #2
 801af50:	930a      	str	r3, [sp, #40]	@ 0x28
 801af52:	e66b      	b.n	801ac2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801af54:	d024      	beq.n	801afa0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801af56:	9b07      	ldr	r3, [sp, #28]
 801af58:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 801af5a:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801af5c:	3b01      	subs	r3, #1
 801af5e:	fb00 4003 	mla	r0, r0, r3, r4
 801af62:	1400      	asrs	r0, r0, #16
 801af64:	f53f ae80 	bmi.w	801ac68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801af68:	3901      	subs	r1, #1
 801af6a:	4288      	cmp	r0, r1
 801af6c:	f6bf ae7c 	bge.w	801ac68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801af70:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801af72:	fb01 5303 	mla	r3, r1, r3, r5
 801af76:	141b      	asrs	r3, r3, #16
 801af78:	f53f ae76 	bmi.w	801ac68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801af7c:	3a01      	subs	r2, #1
 801af7e:	4293      	cmp	r3, r2
 801af80:	f6bf ae72 	bge.w	801ac68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801af84:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801af88:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801af8c:	f1bb 0f00 	cmp.w	fp, #0
 801af90:	dc70      	bgt.n	801b074 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801af92:	9b07      	ldr	r3, [sp, #28]
 801af94:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801af98:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801af9a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801af9e:	930a      	str	r3, [sp, #40]	@ 0x28
 801afa0:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801afa2:	2b00      	cmp	r3, #0
 801afa4:	f340 81ae 	ble.w	801b304 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801afa8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801afac:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801afb0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801afb4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801afb6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801afba:	ee31 1a05 	vadd.f32	s2, s2, s10
 801afbe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801afc2:	eef0 6a62 	vmov.f32	s13, s5
 801afc6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801afca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801afce:	ee77 2a62 	vsub.f32	s5, s14, s5
 801afd2:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
 801afd6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801afda:	eef0 6a43 	vmov.f32	s13, s6
 801afde:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801afe2:	ee12 2a90 	vmov	r2, s5
 801afe6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801afea:	fb92 f3f3 	sdiv	r3, r2, r3
 801afee:	ee13 2a10 	vmov	r2, s6
 801aff2:	9327      	str	r3, [sp, #156]	@ 0x9c
 801aff4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801aff6:	fb92 f3f3 	sdiv	r3, r2, r3
 801affa:	9328      	str	r3, [sp, #160]	@ 0xa0
 801affc:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801affe:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801b000:	3b01      	subs	r3, #1
 801b002:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b006:	9316      	str	r3, [sp, #88]	@ 0x58
 801b008:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801b00a:	bf08      	it	eq
 801b00c:	4613      	moveq	r3, r2
 801b00e:	ee16 5a90 	vmov	r5, s13
 801b012:	9307      	str	r3, [sp, #28]
 801b014:	eeb0 3a67 	vmov.f32	s6, s15
 801b018:	eef0 2a47 	vmov.f32	s5, s14
 801b01c:	e5f8      	b.n	801ac10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801b01e:	2800      	cmp	r0, #0
 801b020:	f43f ae6b 	beq.w	801acfa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801b024:	f818 1001 	ldrb.w	r1, [r8, r1]
 801b028:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b02c:	9108      	str	r1, [sp, #32]
 801b02e:	0e09      	lsrs	r1, r1, #24
 801b030:	9110      	str	r1, [sp, #64]	@ 0x40
 801b032:	e662      	b.n	801acfa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801b034:	f113 0801 	adds.w	r8, r3, #1
 801b038:	f53f af74 	bmi.w	801af24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801b03c:	4541      	cmp	r1, r8
 801b03e:	f6ff af71 	blt.w	801af24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801b042:	f11c 0801 	adds.w	r8, ip, #1
 801b046:	f53f af6d 	bmi.w	801af24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801b04a:	45c6      	cmp	lr, r8
 801b04c:	f6ff af6a 	blt.w	801af24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801b050:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801b054:	b209      	sxth	r1, r1
 801b056:	fa0f f38e 	sxth.w	r3, lr
 801b05a:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801b05e:	9301      	str	r3, [sp, #4]
 801b060:	9100      	str	r1, [sp, #0]
 801b062:	4633      	mov	r3, r6
 801b064:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801b066:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801b068:	4639      	mov	r1, r7
 801b06a:	f7ff fc7a 	bl	801a962 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801b06e:	e759      	b.n	801af24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801b070:	fffff800 	.word	0xfffff800
 801b074:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801b076:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801b078:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b07c:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801b07e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b082:	1427      	asrs	r7, r4, #16
 801b084:	142b      	asrs	r3, r5, #16
 801b086:	fb01 7303 	mla	r3, r1, r3, r7
 801b08a:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801b08c:	18e7      	adds	r7, r4, r3
 801b08e:	5ce3      	ldrb	r3, [r4, r3]
 801b090:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b094:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801b098:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801b09c:	2a00      	cmp	r2, #0
 801b09e:	f000 8127 	beq.w	801b2f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801b0a2:	f897 e001 	ldrb.w	lr, [r7, #1]
 801b0a6:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801b0aa:	940d      	str	r4, [sp, #52]	@ 0x34
 801b0ac:	0e24      	lsrs	r4, r4, #24
 801b0ae:	9414      	str	r4, [sp, #80]	@ 0x50
 801b0b0:	b170      	cbz	r0, 801b0d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801b0b2:	eb07 0e01 	add.w	lr, r7, r1
 801b0b6:	5c79      	ldrb	r1, [r7, r1]
 801b0b8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b0bc:	9109      	str	r1, [sp, #36]	@ 0x24
 801b0be:	0e09      	lsrs	r1, r1, #24
 801b0c0:	9111      	str	r1, [sp, #68]	@ 0x44
 801b0c2:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801b0c6:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b0ca:	910e      	str	r1, [sp, #56]	@ 0x38
 801b0cc:	0e09      	lsrs	r1, r1, #24
 801b0ce:	9115      	str	r1, [sp, #84]	@ 0x54
 801b0d0:	b292      	uxth	r2, r2
 801b0d2:	b280      	uxth	r0, r0
 801b0d4:	fb02 f800 	mul.w	r8, r2, r0
 801b0d8:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801b0dc:	0112      	lsls	r2, r2, #4
 801b0de:	eba2 0e08 	sub.w	lr, r2, r8
 801b0e2:	b280      	uxth	r0, r0
 801b0e4:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 801b0e8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801b0ea:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801b0ec:	fa1f fe8e 	uxth.w	lr, lr
 801b0f0:	1a09      	subs	r1, r1, r0
 801b0f2:	b289      	uxth	r1, r1
 801b0f4:	fb0e f202 	mul.w	r2, lr, r2
 801b0f8:	fb01 220c 	mla	r2, r1, ip, r2
 801b0fc:	fb00 2204 	mla	r2, r0, r4, r2
 801b100:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801b102:	fb08 2204 	mla	r2, r8, r4, r2
 801b106:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801b10a:	2a00      	cmp	r2, #0
 801b10c:	f000 80e5 	beq.w	801b2da <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801b110:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801b114:	d019      	beq.n	801b14a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801b116:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801b11a:	fb0c fa0a 	mul.w	sl, ip, sl
 801b11e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801b122:	fb0c fc03 	mul.w	ip, ip, r3
 801b126:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b12a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801b12e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801b132:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801b136:	4453      	add	r3, sl
 801b138:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801b13c:	0a1b      	lsrs	r3, r3, #8
 801b13e:	0a3f      	lsrs	r7, r7, #8
 801b140:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801b144:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801b148:	433b      	orrs	r3, r7
 801b14a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801b14c:	2cff      	cmp	r4, #255	@ 0xff
 801b14e:	d020      	beq.n	801b192 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801b150:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801b152:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801b156:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801b158:	4367      	muls	r7, r4
 801b15a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801b15c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b160:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801b162:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b166:	fb04 fa0a 	mul.w	sl, r4, sl
 801b16a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801b16e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b172:	44bc      	add	ip, r7
 801b174:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801b178:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b17c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b180:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b184:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b188:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b18c:	ea4c 040a 	orr.w	r4, ip, sl
 801b190:	940d      	str	r4, [sp, #52]	@ 0x34
 801b192:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801b194:	2cff      	cmp	r4, #255	@ 0xff
 801b196:	d020      	beq.n	801b1da <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801b198:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801b19a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801b19e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801b1a0:	4367      	muls	r7, r4
 801b1a2:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801b1a4:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b1a8:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801b1aa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b1ae:	fb04 fa0a 	mul.w	sl, r4, sl
 801b1b2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801b1b6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b1ba:	44bc      	add	ip, r7
 801b1bc:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801b1c0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b1c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b1c8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b1cc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b1d0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b1d4:	ea4c 040a 	orr.w	r4, ip, sl
 801b1d8:	9409      	str	r4, [sp, #36]	@ 0x24
 801b1da:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801b1dc:	2cff      	cmp	r4, #255	@ 0xff
 801b1de:	d020      	beq.n	801b222 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801b1e0:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801b1e2:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801b1e6:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801b1e8:	4367      	muls	r7, r4
 801b1ea:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801b1ec:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b1f0:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801b1f2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b1f6:	fb04 fa0a 	mul.w	sl, r4, sl
 801b1fa:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801b1fe:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b202:	44bc      	add	ip, r7
 801b204:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801b208:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b20c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b210:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b214:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b218:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b21c:	ea4c 040a 	orr.w	r4, ip, sl
 801b220:	940e      	str	r4, [sp, #56]	@ 0x38
 801b222:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801b224:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801b228:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801b22a:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801b22e:	fb0e f707 	mul.w	r7, lr, r7
 801b232:	fb01 770c 	mla	r7, r1, ip, r7
 801b236:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801b23a:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801b23c:	fb00 770c 	mla	r7, r0, ip, r7
 801b240:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801b244:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801b246:	fb08 770c 	mla	r7, r8, ip, r7
 801b24a:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801b24e:	fb0e fe0c 	mul.w	lr, lr, ip
 801b252:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801b256:	fb01 e303 	mla	r3, r1, r3, lr
 801b25a:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801b25c:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801b260:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801b262:	fb00 330a 	mla	r3, r0, sl, r3
 801b266:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 801b26a:	fb08 3c0c 	mla	ip, r8, ip, r3
 801b26e:	f8b9 3000 	ldrh.w	r3, [r9]
 801b272:	43d2      	mvns	r2, r2
 801b274:	1218      	asrs	r0, r3, #8
 801b276:	b2d2      	uxtb	r2, r2
 801b278:	10d9      	asrs	r1, r3, #3
 801b27a:	0a3f      	lsrs	r7, r7, #8
 801b27c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b280:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801b284:	00db      	lsls	r3, r3, #3
 801b286:	4350      	muls	r0, r2
 801b288:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801b28c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801b290:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801b294:	b2db      	uxtb	r3, r3
 801b296:	ea47 070c 	orr.w	r7, r7, ip
 801b29a:	4351      	muls	r1, r2
 801b29c:	4353      	muls	r3, r2
 801b29e:	1c42      	adds	r2, r0, #1
 801b2a0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801b2a4:	0c3a      	lsrs	r2, r7, #16
 801b2a6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801b2aa:	4a18      	ldr	r2, [pc, #96]	@ (801b30c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801b2ac:	b2c0      	uxtb	r0, r0
 801b2ae:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801b2b2:	1c4a      	adds	r2, r1, #1
 801b2b4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b2b8:	0a3a      	lsrs	r2, r7, #8
 801b2ba:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b2be:	00c9      	lsls	r1, r1, #3
 801b2c0:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801b2c4:	4301      	orrs	r1, r0
 801b2c6:	1c58      	adds	r0, r3, #1
 801b2c8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801b2cc:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801b2d0:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801b2d4:	4308      	orrs	r0, r1
 801b2d6:	f8a9 0000 	strh.w	r0, [r9]
 801b2da:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801b2dc:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801b2de:	441a      	add	r2, r3
 801b2e0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801b2e2:	9225      	str	r2, [sp, #148]	@ 0x94
 801b2e4:	f109 0902 	add.w	r9, r9, #2
 801b2e8:	441d      	add	r5, r3
 801b2ea:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b2ee:	e64d      	b.n	801af8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 801b2f0:	2800      	cmp	r0, #0
 801b2f2:	f43f aeed 	beq.w	801b0d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801b2f6:	5c79      	ldrb	r1, [r7, r1]
 801b2f8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b2fc:	9109      	str	r1, [sp, #36]	@ 0x24
 801b2fe:	0e09      	lsrs	r1, r1, #24
 801b300:	9111      	str	r1, [sp, #68]	@ 0x44
 801b302:	e6e5      	b.n	801b0d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801b304:	b01b      	add	sp, #108	@ 0x6c
 801b306:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b30a:	bf00      	nop
 801b30c:	fffff800 	.word	0xfffff800

0801b310 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801b310:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b314:	b085      	sub	sp, #20
 801b316:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801b31a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801b31e:	9103      	str	r1, [sp, #12]
 801b320:	fb00 7406 	mla	r4, r0, r6, r7
 801b324:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801b328:	2800      	cmp	r0, #0
 801b32a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801b32e:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801b332:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801b336:	9501      	str	r5, [sp, #4]
 801b338:	eb03 0904 	add.w	r9, r3, r4
 801b33c:	f2c0 8150 	blt.w	801b5e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801b340:	4583      	cmp	fp, r0
 801b342:	f340 814d 	ble.w	801b5e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801b346:	2f00      	cmp	r7, #0
 801b348:	f2c0 8146 	blt.w	801b5d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801b34c:	42be      	cmp	r6, r7
 801b34e:	f340 8143 	ble.w	801b5d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801b352:	f813 c004 	ldrb.w	ip, [r3, r4]
 801b356:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801b35a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801b35e:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801b362:	4355      	muls	r5, r2
 801b364:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801b368:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801b36c:	fb0c f203 	mul.w	r2, ip, r3
 801b370:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801b374:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801b378:	441d      	add	r5, r3
 801b37a:	f102 0320 	add.w	r3, r2, #32
 801b37e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b382:	0a1b      	lsrs	r3, r3, #8
 801b384:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801b388:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801b38c:	431c      	orrs	r4, r3
 801b38e:	1c7b      	adds	r3, r7, #1
 801b390:	f100 812b 	bmi.w	801b5ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801b394:	429e      	cmp	r6, r3
 801b396:	f340 8128 	ble.w	801b5ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801b39a:	2900      	cmp	r1, #0
 801b39c:	f000 8128 	beq.w	801b5f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801b3a0:	9a01      	ldr	r2, [sp, #4]
 801b3a2:	f899 3001 	ldrb.w	r3, [r9, #1]
 801b3a6:	8855      	ldrh	r5, [r2, #2]
 801b3a8:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801b3ac:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801b3b0:	fb08 f802 	mul.w	r8, r8, r2
 801b3b4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801b3b8:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801b3bc:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801b3c0:	435d      	muls	r5, r3
 801b3c2:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801b3c6:	44d0      	add	r8, sl
 801b3c8:	f105 0a20 	add.w	sl, r5, #32
 801b3cc:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801b3d0:	0a2d      	lsrs	r5, r5, #8
 801b3d2:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801b3d6:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801b3da:	432a      	orrs	r2, r5
 801b3dc:	3001      	adds	r0, #1
 801b3de:	f100 810d 	bmi.w	801b5fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801b3e2:	4583      	cmp	fp, r0
 801b3e4:	f340 810a 	ble.w	801b5fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801b3e8:	f1be 0f00 	cmp.w	lr, #0
 801b3ec:	f000 810b 	beq.w	801b606 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801b3f0:	2f00      	cmp	r7, #0
 801b3f2:	f2c0 8100 	blt.w	801b5f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801b3f6:	42be      	cmp	r6, r7
 801b3f8:	f340 80fd 	ble.w	801b5f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801b3fc:	9801      	ldr	r0, [sp, #4]
 801b3fe:	f819 5006 	ldrb.w	r5, [r9, r6]
 801b402:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801b406:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801b40a:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801b40e:	fb0a fa00 	mul.w	sl, sl, r0
 801b412:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801b416:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801b41a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801b41e:	fb05 f808 	mul.w	r8, r5, r8
 801b422:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801b426:	4482      	add	sl, r0
 801b428:	f108 0020 	add.w	r0, r8, #32
 801b42c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801b430:	0a00      	lsrs	r0, r0, #8
 801b432:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801b436:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801b43a:	ea4b 0b00 	orr.w	fp, fp, r0
 801b43e:	3701      	adds	r7, #1
 801b440:	f100 80e6 	bmi.w	801b610 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801b444:	42be      	cmp	r6, r7
 801b446:	f340 80e3 	ble.w	801b610 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801b44a:	2900      	cmp	r1, #0
 801b44c:	f000 80e3 	beq.w	801b616 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801b450:	3601      	adds	r6, #1
 801b452:	9801      	ldr	r0, [sp, #4]
 801b454:	f819 7006 	ldrb.w	r7, [r9, r6]
 801b458:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801b45c:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801b460:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801b464:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801b468:	fb09 f906 	mul.w	r9, r9, r6
 801b46c:	fb07 f800 	mul.w	r8, r7, r0
 801b470:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801b474:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801b478:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801b47c:	44d1      	add	r9, sl
 801b47e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801b482:	f108 0020 	add.w	r0, r8, #32
 801b486:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801b48a:	0a00      	lsrs	r0, r0, #8
 801b48c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801b490:	4330      	orrs	r0, r6
 801b492:	b28e      	uxth	r6, r1
 801b494:	fa1f f98e 	uxth.w	r9, lr
 801b498:	fb06 f809 	mul.w	r8, r6, r9
 801b49c:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801b4a0:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801b4a4:	0136      	lsls	r6, r6, #4
 801b4a6:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801b4aa:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801b4ae:	9601      	str	r6, [sp, #4]
 801b4b0:	ea4a 0404 	orr.w	r4, sl, r4
 801b4b4:	fa1f f689 	uxth.w	r6, r9
 801b4b8:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801b4bc:	fb11 f90e 	smulbb	r9, r1, lr
 801b4c0:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801b4c4:	9602      	str	r6, [sp, #8]
 801b4c6:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801b4ca:	4626      	mov	r6, r4
 801b4cc:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801b4d0:	f1ce 0410 	rsb	r4, lr, #16
 801b4d4:	1a64      	subs	r4, r4, r1
 801b4d6:	ea4a 0202 	orr.w	r2, sl, r2
 801b4da:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801b4de:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801b4e2:	434a      	muls	r2, r1
 801b4e4:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801b4e8:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801b4ec:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801b4f0:	fb04 2406 	mla	r4, r4, r6, r2
 801b4f4:	ea4a 0000 	orr.w	r0, sl, r0
 801b4f8:	fb09 4200 	mla	r2, r9, r0, r4
 801b4fc:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801b500:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801b504:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801b508:	ea44 0b0b 	orr.w	fp, r4, fp
 801b50c:	9c01      	ldr	r4, [sp, #4]
 801b50e:	9e02      	ldr	r6, [sp, #8]
 801b510:	9903      	ldr	r1, [sp, #12]
 801b512:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
 801b516:	1ba4      	subs	r4, r4, r6
 801b518:	9e01      	ldr	r6, [sp, #4]
 801b51a:	8808      	ldrh	r0, [r1, #0]
 801b51c:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
 801b520:	eba6 0608 	sub.w	r6, r6, r8
 801b524:	b2b6      	uxth	r6, r6
 801b526:	b2a4      	uxth	r4, r4
 801b528:	4373      	muls	r3, r6
 801b52a:	fb0c 3304 	mla	r3, ip, r4, r3
 801b52e:	9c02      	ldr	r4, [sp, #8]
 801b530:	fb04 3505 	mla	r5, r4, r5, r3
 801b534:	fb08 5707 	mla	r7, r8, r7, r5
 801b538:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801b53c:	b289      	uxth	r1, r1
 801b53e:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801b542:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801b546:	434f      	muls	r7, r1
 801b548:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801b54c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801b550:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801b554:	1c7b      	adds	r3, r7, #1
 801b556:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801b55a:	ea42 0e0e 	orr.w	lr, r2, lr
 801b55e:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801b562:	fa1f f28e 	uxth.w	r2, lr
 801b566:	1203      	asrs	r3, r0, #8
 801b568:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801b56c:	b2ff      	uxtb	r7, r7
 801b56e:	1215      	asrs	r5, r2, #8
 801b570:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801b574:	fb13 f307 	smulbb	r3, r3, r7
 801b578:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801b57c:	fb05 3501 	mla	r5, r5, r1, r3
 801b580:	10c3      	asrs	r3, r0, #3
 801b582:	10d4      	asrs	r4, r2, #3
 801b584:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801b588:	fb13 f307 	smulbb	r3, r3, r7
 801b58c:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801b590:	fb04 3401 	mla	r4, r4, r1, r3
 801b594:	00c3      	lsls	r3, r0, #3
 801b596:	00d2      	lsls	r2, r2, #3
 801b598:	b2db      	uxtb	r3, r3
 801b59a:	fb13 f307 	smulbb	r3, r3, r7
 801b59e:	b2d2      	uxtb	r2, r2
 801b5a0:	fb02 3101 	mla	r1, r2, r1, r3
 801b5a4:	b2ad      	uxth	r5, r5
 801b5a6:	b289      	uxth	r1, r1
 801b5a8:	b2a4      	uxth	r4, r4
 801b5aa:	1c6b      	adds	r3, r5, #1
 801b5ac:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801b5b0:	1c62      	adds	r2, r4, #1
 801b5b2:	1c4b      	adds	r3, r1, #1
 801b5b4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801b5b8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801b5bc:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801b5c0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b5c4:	0964      	lsrs	r4, r4, #5
 801b5c6:	432b      	orrs	r3, r5
 801b5c8:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801b5cc:	9a03      	ldr	r2, [sp, #12]
 801b5ce:	4323      	orrs	r3, r4
 801b5d0:	8013      	strh	r3, [r2, #0]
 801b5d2:	b005      	add	sp, #20
 801b5d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b5d8:	f04f 0c00 	mov.w	ip, #0
 801b5dc:	4664      	mov	r4, ip
 801b5de:	e6d6      	b.n	801b38e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801b5e0:	2300      	movs	r3, #0
 801b5e2:	469c      	mov	ip, r3
 801b5e4:	461a      	mov	r2, r3
 801b5e6:	461c      	mov	r4, r3
 801b5e8:	e6f8      	b.n	801b3dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801b5ea:	2300      	movs	r3, #0
 801b5ec:	461a      	mov	r2, r3
 801b5ee:	e6f5      	b.n	801b3dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801b5f0:	460b      	mov	r3, r1
 801b5f2:	460a      	mov	r2, r1
 801b5f4:	e6f2      	b.n	801b3dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801b5f6:	2500      	movs	r5, #0
 801b5f8:	46ab      	mov	fp, r5
 801b5fa:	e720      	b.n	801b43e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801b5fc:	2700      	movs	r7, #0
 801b5fe:	463d      	mov	r5, r7
 801b600:	4638      	mov	r0, r7
 801b602:	46bb      	mov	fp, r7
 801b604:	e745      	b.n	801b492 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801b606:	4677      	mov	r7, lr
 801b608:	4675      	mov	r5, lr
 801b60a:	4670      	mov	r0, lr
 801b60c:	46f3      	mov	fp, lr
 801b60e:	e740      	b.n	801b492 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801b610:	2700      	movs	r7, #0
 801b612:	4638      	mov	r0, r7
 801b614:	e73d      	b.n	801b492 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801b616:	460f      	mov	r7, r1
 801b618:	4608      	mov	r0, r1
 801b61a:	e73a      	b.n	801b492 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801b61c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b61c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b620:	b097      	sub	sp, #92	@ 0x5c
 801b622:	9214      	str	r2, [sp, #80]	@ 0x50
 801b624:	9308      	str	r3, [sp, #32]
 801b626:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801b628:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801b62c:	9312      	str	r3, [sp, #72]	@ 0x48
 801b62e:	9111      	str	r1, [sp, #68]	@ 0x44
 801b630:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 801b634:	9015      	str	r0, [sp, #84]	@ 0x54
 801b636:	6850      	ldr	r0, [r2, #4]
 801b638:	6812      	ldr	r2, [r2, #0]
 801b63a:	fb00 1303 	mla	r3, r0, r3, r1
 801b63e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b642:	9309      	str	r3, [sp, #36]	@ 0x24
 801b644:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801b646:	681b      	ldr	r3, [r3, #0]
 801b648:	930b      	str	r3, [sp, #44]	@ 0x2c
 801b64a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801b64c:	685b      	ldr	r3, [r3, #4]
 801b64e:	930c      	str	r3, [sp, #48]	@ 0x30
 801b650:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 801b654:	930a      	str	r3, [sp, #40]	@ 0x28
 801b656:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801b658:	2b00      	cmp	r3, #0
 801b65a:	dc03      	bgt.n	801b664 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801b65c:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801b65e:	2b00      	cmp	r3, #0
 801b660:	f340 83cb 	ble.w	801bdfa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801b664:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801b666:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b66a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b66e:	1e48      	subs	r0, r1, #1
 801b670:	1e55      	subs	r5, r2, #1
 801b672:	9b08      	ldr	r3, [sp, #32]
 801b674:	2b00      	cmp	r3, #0
 801b676:	f340 81a3 	ble.w	801b9c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 801b67a:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801b67c:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801b67e:	1436      	asrs	r6, r6, #16
 801b680:	ea4f 4323 	mov.w	r3, r3, asr #16
 801b684:	d406      	bmi.n	801b694 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801b686:	4286      	cmp	r6, r0
 801b688:	da04      	bge.n	801b694 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801b68a:	2b00      	cmp	r3, #0
 801b68c:	db02      	blt.n	801b694 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801b68e:	42ab      	cmp	r3, r5
 801b690:	f2c0 8197 	blt.w	801b9c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801b694:	3601      	adds	r6, #1
 801b696:	f100 8184 	bmi.w	801b9a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801b69a:	42b1      	cmp	r1, r6
 801b69c:	f2c0 8181 	blt.w	801b9a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801b6a0:	3301      	adds	r3, #1
 801b6a2:	f100 817e 	bmi.w	801b9a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801b6a6:	429a      	cmp	r2, r3
 801b6a8:	f2c0 817b 	blt.w	801b9a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801b6ac:	9b08      	ldr	r3, [sp, #32]
 801b6ae:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801b6b0:	9313      	str	r3, [sp, #76]	@ 0x4c
 801b6b2:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801b6b6:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801b6b8:	2b00      	cmp	r3, #0
 801b6ba:	f340 81a4 	ble.w	801ba06 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801b6be:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801b6c0:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801b6c2:	1418      	asrs	r0, r3, #16
 801b6c4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801b6c6:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801b6ca:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801b6cc:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801b6d0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801b6d2:	142d      	asrs	r5, r5, #16
 801b6d4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801b6d8:	f100 81f8 	bmi.w	801bacc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801b6dc:	f102 3eff 	add.w	lr, r2, #4294967295
 801b6e0:	4575      	cmp	r5, lr
 801b6e2:	f280 81f3 	bge.w	801bacc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801b6e6:	2800      	cmp	r0, #0
 801b6e8:	f2c0 81f0 	blt.w	801bacc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801b6ec:	f103 3eff 	add.w	lr, r3, #4294967295
 801b6f0:	4570      	cmp	r0, lr
 801b6f2:	f280 81eb 	bge.w	801bacc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801b6f6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b6f8:	b212      	sxth	r2, r2
 801b6fa:	fb00 5002 	mla	r0, r0, r2, r5
 801b6fe:	fa1f fe81 	uxth.w	lr, r1
 801b702:	eb03 0a00 	add.w	sl, r3, r0
 801b706:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801b70a:	f813 9000 	ldrb.w	r9, [r3, r0]
 801b70e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801b712:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801b716:	b29b      	uxth	r3, r3
 801b718:	f1bc 0f00 	cmp.w	ip, #0
 801b71c:	f000 81b9 	beq.w	801ba92 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801b720:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801b724:	940d      	str	r4, [sp, #52]	@ 0x34
 801b726:	eb0a 0b02 	add.w	fp, sl, r2
 801b72a:	fa1f fa8c 	uxth.w	sl, ip
 801b72e:	fb0a fe0e 	mul.w	lr, sl, lr
 801b732:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801b736:	fa1f fa8a 	uxth.w	sl, sl
 801b73a:	eba5 050e 	sub.w	r5, r5, lr
 801b73e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801b742:	940e      	str	r4, [sp, #56]	@ 0x38
 801b744:	eba3 030a 	sub.w	r3, r3, sl
 801b748:	b2ad      	uxth	r5, r5
 801b74a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801b74c:	b29b      	uxth	r3, r3
 801b74e:	fb08 f505 	mul.w	r5, r8, r5
 801b752:	fb09 5303 	mla	r3, r9, r3, r5
 801b756:	fb0a 3304 	mla	r3, sl, r4, r3
 801b75a:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801b75c:	fb0e 3304 	mla	r3, lr, r4, r3
 801b760:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b764:	2b00      	cmp	r3, #0
 801b766:	f000 810f 	beq.w	801b988 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801b76a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801b76c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801b770:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801b774:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801b778:	f000 8190 	beq.w	801ba9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801b77c:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801b780:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801b784:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801b788:	fb09 f000 	mul.w	r0, r9, r0
 801b78c:	fb0a fe0e 	mul.w	lr, sl, lr
 801b790:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801b794:	f100 0b20 	add.w	fp, r0, #32
 801b798:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801b79c:	44ce      	add	lr, r9
 801b79e:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801b7a2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b7a6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801b7aa:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801b7ae:	ea4e 0909 	orr.w	r9, lr, r9
 801b7b2:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801b7b6:	8868      	ldrh	r0, [r5, #2]
 801b7b8:	d019      	beq.n	801b7ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801b7ba:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801b7be:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801b7c2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801b7c6:	fb08 f800 	mul.w	r8, r8, r0
 801b7ca:	fb0a fe0e 	mul.w	lr, sl, lr
 801b7ce:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801b7d2:	f108 0b20 	add.w	fp, r8, #32
 801b7d6:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801b7da:	4486      	add	lr, r0
 801b7dc:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801b7e0:	0a00      	lsrs	r0, r0, #8
 801b7e2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801b7e6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801b7ea:	ea4e 0000 	orr.w	r0, lr, r0
 801b7ee:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801b7f2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801b7f6:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801b7fa:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801b7fe:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801b802:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801b806:	ea4e 0909 	orr.w	r9, lr, r9
 801b80a:	ea4a 0000 	orr.w	r0, sl, r0
 801b80e:	f1bc 0f00 	cmp.w	ip, #0
 801b812:	f000 8145 	beq.w	801baa0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801b816:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801b81a:	3a01      	subs	r2, #1
 801b81c:	0052      	lsls	r2, r2, #1
 801b81e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801b820:	3202      	adds	r2, #2
 801b822:	2cff      	cmp	r4, #255	@ 0xff
 801b824:	eb05 0e02 	add.w	lr, r5, r2
 801b828:	5aaa      	ldrh	r2, [r5, r2]
 801b82a:	d018      	beq.n	801b85e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801b82c:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801b830:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801b834:	fb04 fa02 	mul.w	sl, r4, r2
 801b838:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801b83c:	fb08 f805 	mul.w	r8, r8, r5
 801b840:	f10a 0520 	add.w	r5, sl, #32
 801b844:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801b848:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801b84c:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801b850:	4442      	add	r2, r8
 801b852:	0a2d      	lsrs	r5, r5, #8
 801b854:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801b858:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801b85c:	432a      	orrs	r2, r5
 801b85e:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801b860:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801b864:	2cff      	cmp	r4, #255	@ 0xff
 801b866:	d01a      	beq.n	801b89e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801b868:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801b86c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801b870:	fb04 fa05 	mul.w	sl, r4, r5
 801b874:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801b878:	fb08 f80e 	mul.w	r8, r8, lr
 801b87c:	f10a 0e20 	add.w	lr, sl, #32
 801b880:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801b884:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801b888:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801b88c:	4445      	add	r5, r8
 801b88e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b892:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801b896:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801b89a:	ea45 050e 	orr.w	r5, r5, lr
 801b89e:	fb1c fe01 	smulbb	lr, ip, r1
 801b8a2:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801b8a6:	f1cc 0810 	rsb	r8, ip, #16
 801b8aa:	eba8 0801 	sub.w	r8, r8, r1
 801b8ae:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801b8b2:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801b8b6:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801b8ba:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801b8be:	4341      	muls	r1, r0
 801b8c0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801b8c4:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801b8c8:	ea4a 0202 	orr.w	r2, sl, r2
 801b8cc:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801b8d0:	fb09 1108 	mla	r1, r9, r8, r1
 801b8d4:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801b8d8:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801b8dc:	fb0c 1102 	mla	r1, ip, r2, r1
 801b8e0:	ea4b 0505 	orr.w	r5, fp, r5
 801b8e4:	fb0e 1e05 	mla	lr, lr, r5, r1
 801b8e8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801b8ec:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801b8f0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801b8f4:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801b8f8:	ea42 0e0e 	orr.w	lr, r2, lr
 801b8fc:	fa1f f28e 	uxth.w	r2, lr
 801b900:	2bff      	cmp	r3, #255	@ 0xff
 801b902:	d103      	bne.n	801b90c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801b904:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801b906:	29ff      	cmp	r1, #255	@ 0xff
 801b908:	f000 80de 	beq.w	801bac8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 801b90c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801b90e:	8838      	ldrh	r0, [r7, #0]
 801b910:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801b912:	434b      	muls	r3, r1
 801b914:	f103 0c01 	add.w	ip, r3, #1
 801b918:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801b91c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801b920:	fa5f fc83 	uxtb.w	ip, r3
 801b924:	1203      	asrs	r3, r0, #8
 801b926:	1215      	asrs	r5, r2, #8
 801b928:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801b92c:	fb13 f30c 	smulbb	r3, r3, ip
 801b930:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801b934:	fb05 3501 	mla	r5, r5, r1, r3
 801b938:	10c3      	asrs	r3, r0, #3
 801b93a:	10d1      	asrs	r1, r2, #3
 801b93c:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801b940:	fb13 f30c 	smulbb	r3, r3, ip
 801b944:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801b948:	fb01 3104 	mla	r1, r1, r4, r3
 801b94c:	00c3      	lsls	r3, r0, #3
 801b94e:	00d2      	lsls	r2, r2, #3
 801b950:	b2db      	uxtb	r3, r3
 801b952:	b2d2      	uxtb	r2, r2
 801b954:	fb13 f30c 	smulbb	r3, r3, ip
 801b958:	b2ad      	uxth	r5, r5
 801b95a:	fb02 3304 	mla	r3, r2, r4, r3
 801b95e:	b29a      	uxth	r2, r3
 801b960:	1c6b      	adds	r3, r5, #1
 801b962:	b289      	uxth	r1, r1
 801b964:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801b968:	1c53      	adds	r3, r2, #1
 801b96a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b96e:	1c4a      	adds	r2, r1, #1
 801b970:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b974:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801b978:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b97c:	0949      	lsrs	r1, r1, #5
 801b97e:	432b      	orrs	r3, r5
 801b980:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801b984:	430b      	orrs	r3, r1
 801b986:	803b      	strh	r3, [r7, #0]
 801b988:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801b98a:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801b98c:	4413      	add	r3, r2
 801b98e:	9321      	str	r3, [sp, #132]	@ 0x84
 801b990:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801b992:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801b994:	441a      	add	r2, r3
 801b996:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801b998:	9222      	str	r2, [sp, #136]	@ 0x88
 801b99a:	3b01      	subs	r3, #1
 801b99c:	3702      	adds	r7, #2
 801b99e:	9313      	str	r3, [sp, #76]	@ 0x4c
 801b9a0:	e689      	b.n	801b6b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801b9a2:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801b9a4:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 801b9a6:	9c22      	ldr	r4, [sp, #136]	@ 0x88
 801b9a8:	4433      	add	r3, r6
 801b9aa:	9321      	str	r3, [sp, #132]	@ 0x84
 801b9ac:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801b9ae:	441c      	add	r4, r3
 801b9b0:	9b08      	ldr	r3, [sp, #32]
 801b9b2:	9422      	str	r4, [sp, #136]	@ 0x88
 801b9b4:	3b01      	subs	r3, #1
 801b9b6:	9308      	str	r3, [sp, #32]
 801b9b8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b9ba:	3302      	adds	r3, #2
 801b9bc:	9309      	str	r3, [sp, #36]	@ 0x24
 801b9be:	e658      	b.n	801b672 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801b9c0:	d028      	beq.n	801ba14 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801b9c2:	9b08      	ldr	r3, [sp, #32]
 801b9c4:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 801b9c6:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801b9c8:	3b01      	subs	r3, #1
 801b9ca:	fb00 5003 	mla	r0, r0, r3, r5
 801b9ce:	1400      	asrs	r0, r0, #16
 801b9d0:	f53f ae6c 	bmi.w	801b6ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b9d4:	3901      	subs	r1, #1
 801b9d6:	4288      	cmp	r0, r1
 801b9d8:	f6bf ae68 	bge.w	801b6ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b9dc:	9924      	ldr	r1, [sp, #144]	@ 0x90
 801b9de:	9822      	ldr	r0, [sp, #136]	@ 0x88
 801b9e0:	fb01 0303 	mla	r3, r1, r3, r0
 801b9e4:	141b      	asrs	r3, r3, #16
 801b9e6:	f53f ae61 	bmi.w	801b6ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b9ea:	3a01      	subs	r2, #1
 801b9ec:	4293      	cmp	r3, r2
 801b9ee:	f6bf ae5d 	bge.w	801b6ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b9f2:	9b08      	ldr	r3, [sp, #32]
 801b9f4:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801b9f8:	9313      	str	r3, [sp, #76]	@ 0x4c
 801b9fa:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801b9fe:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801ba00:	2b00      	cmp	r3, #0
 801ba02:	f300 8082 	bgt.w	801bb0a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801ba06:	9b08      	ldr	r3, [sp, #32]
 801ba08:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801ba0c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ba0e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801ba12:	9309      	str	r3, [sp, #36]	@ 0x24
 801ba14:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801ba16:	2b00      	cmp	r3, #0
 801ba18:	f340 81ef 	ble.w	801bdfa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801ba1c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ba20:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801ba24:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ba28:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ba2a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ba2e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ba32:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ba36:	eef0 6a62 	vmov.f32	s13, s5
 801ba3a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ba3e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ba42:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ba46:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
 801ba4a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ba4e:	eef0 6a43 	vmov.f32	s13, s6
 801ba52:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ba56:	ee12 2a90 	vmov	r2, s5
 801ba5a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ba5e:	fb92 f3f3 	sdiv	r3, r2, r3
 801ba62:	ee13 2a10 	vmov	r2, s6
 801ba66:	9323      	str	r3, [sp, #140]	@ 0x8c
 801ba68:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ba6a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ba6e:	9324      	str	r3, [sp, #144]	@ 0x90
 801ba70:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801ba72:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801ba74:	3b01      	subs	r3, #1
 801ba76:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ba7a:	9311      	str	r3, [sp, #68]	@ 0x44
 801ba7c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ba7e:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
 801ba82:	bf08      	it	eq
 801ba84:	4613      	moveq	r3, r2
 801ba86:	9308      	str	r3, [sp, #32]
 801ba88:	eeb0 3a67 	vmov.f32	s6, s15
 801ba8c:	eef0 2a47 	vmov.f32	s5, s14
 801ba90:	e5e1      	b.n	801b656 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801ba92:	fb08 f505 	mul.w	r5, r8, r5
 801ba96:	fb09 5303 	mla	r3, r9, r3, r5
 801ba9a:	e661      	b.n	801b760 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801ba9c:	4681      	mov	r9, r0
 801ba9e:	e688      	b.n	801b7b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801baa0:	f1c1 0210 	rsb	r2, r1, #16
 801baa4:	4341      	muls	r1, r0
 801baa6:	fb09 1902 	mla	r9, r9, r2, r1
 801baaa:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801baae:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801bab2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801bab6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801baba:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801babe:	ea42 0909 	orr.w	r9, r2, r9
 801bac2:	fa1f f289 	uxth.w	r2, r9
 801bac6:	e71b      	b.n	801b900 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801bac8:	803a      	strh	r2, [r7, #0]
 801baca:	e75d      	b.n	801b988 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801bacc:	f115 0e01 	adds.w	lr, r5, #1
 801bad0:	f53f af5a 	bmi.w	801b988 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801bad4:	4572      	cmp	r2, lr
 801bad6:	f6ff af57 	blt.w	801b988 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801bada:	f110 0e01 	adds.w	lr, r0, #1
 801bade:	f53f af53 	bmi.w	801b988 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801bae2:	4573      	cmp	r3, lr
 801bae4:	f6ff af50 	blt.w	801b988 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801bae8:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801baea:	9502      	str	r5, [sp, #8]
 801baec:	b21b      	sxth	r3, r3
 801baee:	b212      	sxth	r2, r2
 801baf0:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801baf4:	9301      	str	r3, [sp, #4]
 801baf6:	9200      	str	r2, [sp, #0]
 801baf8:	e9cd c405 	strd	ip, r4, [sp, #20]
 801bafc:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 801bb00:	4639      	mov	r1, r7
 801bb02:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801bb04:	f7ff fc04 	bl	801b310 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801bb08:	e73e      	b.n	801b988 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801bb0a:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801bb0c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801bb10:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801bb12:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801bb16:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801bb18:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bb1c:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801bb1e:	141f      	asrs	r7, r3, #16
 801bb20:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801bb22:	141b      	asrs	r3, r3, #16
 801bb24:	fb01 3707 	mla	r7, r1, r7, r3
 801bb28:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801bb2a:	fa1f fc82 	uxth.w	ip, r2
 801bb2e:	eb03 0a07 	add.w	sl, r3, r7
 801bb32:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801bb36:	f813 9007 	ldrb.w	r9, [r3, r7]
 801bb3a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801bb3e:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801bb42:	b29b      	uxth	r3, r3
 801bb44:	2d00      	cmp	r5, #0
 801bb46:	f000 813d 	beq.w	801bdc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801bb4a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801bb4e:	940f      	str	r4, [sp, #60]	@ 0x3c
 801bb50:	eb0a 0b01 	add.w	fp, sl, r1
 801bb54:	fa1f fa85 	uxth.w	sl, r5
 801bb58:	fb0a fc0c 	mul.w	ip, sl, ip
 801bb5c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801bb60:	fa1f fa8a 	uxth.w	sl, sl
 801bb64:	eba0 000c 	sub.w	r0, r0, ip
 801bb68:	eba3 030a 	sub.w	r3, r3, sl
 801bb6c:	b280      	uxth	r0, r0
 801bb6e:	fb08 f000 	mul.w	r0, r8, r0
 801bb72:	b29b      	uxth	r3, r3
 801bb74:	fb09 0303 	mla	r3, r9, r3, r0
 801bb78:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801bb7a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801bb7e:	9410      	str	r4, [sp, #64]	@ 0x40
 801bb80:	fb0a 3300 	mla	r3, sl, r0, r3
 801bb84:	fb0c 3304 	mla	r3, ip, r4, r3
 801bb88:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801bb8c:	2b00      	cmp	r3, #0
 801bb8e:	f000 810b 	beq.w	801bda8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801bb92:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801bb94:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801bb96:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801bb9a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801bb9e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801bba2:	f000 8114 	beq.w	801bdce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 801bba6:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801bbaa:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801bbae:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801bbb2:	fb09 f707 	mul.w	r7, r9, r7
 801bbb6:	fb0a fc0c 	mul.w	ip, sl, ip
 801bbba:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801bbbe:	f107 0b20 	add.w	fp, r7, #32
 801bbc2:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801bbc6:	44cc      	add	ip, r9
 801bbc8:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801bbcc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801bbd0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801bbd4:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801bbd8:	ea4c 0909 	orr.w	r9, ip, r9
 801bbdc:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801bbe0:	8847      	ldrh	r7, [r0, #2]
 801bbe2:	d019      	beq.n	801bc18 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 801bbe4:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801bbe8:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801bbec:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801bbf0:	fb08 f807 	mul.w	r8, r8, r7
 801bbf4:	fb0a fc0c 	mul.w	ip, sl, ip
 801bbf8:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801bbfc:	f108 0b20 	add.w	fp, r8, #32
 801bc00:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801bc04:	44bc      	add	ip, r7
 801bc06:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801bc0a:	0a3f      	lsrs	r7, r7, #8
 801bc0c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801bc10:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801bc14:	ea4c 0707 	orr.w	r7, ip, r7
 801bc18:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801bc1c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801bc20:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801bc24:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801bc28:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801bc2c:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801bc30:	ea4c 0909 	orr.w	r9, ip, r9
 801bc34:	ea4a 0707 	orr.w	r7, sl, r7
 801bc38:	2d00      	cmp	r5, #0
 801bc3a:	f000 80ca 	beq.w	801bdd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801bc3e:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801bc42:	3901      	subs	r1, #1
 801bc44:	0049      	lsls	r1, r1, #1
 801bc46:	3102      	adds	r1, #2
 801bc48:	eb00 0c01 	add.w	ip, r0, r1
 801bc4c:	5a41      	ldrh	r1, [r0, r1]
 801bc4e:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801bc50:	28ff      	cmp	r0, #255	@ 0xff
 801bc52:	d019      	beq.n	801bc88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 801bc54:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801bc56:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801bc5a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801bc5e:	fb04 fa01 	mul.w	sl, r4, r1
 801bc62:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801bc66:	fb08 f800 	mul.w	r8, r8, r0
 801bc6a:	f10a 0020 	add.w	r0, sl, #32
 801bc6e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801bc72:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801bc76:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801bc7a:	4441      	add	r1, r8
 801bc7c:	0a00      	lsrs	r0, r0, #8
 801bc7e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801bc82:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801bc86:	4301      	orrs	r1, r0
 801bc88:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801bc8a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801bc8e:	2cff      	cmp	r4, #255	@ 0xff
 801bc90:	d01a      	beq.n	801bcc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 801bc92:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801bc96:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801bc9a:	fb04 fa00 	mul.w	sl, r4, r0
 801bc9e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801bca2:	fb08 f80c 	mul.w	r8, r8, ip
 801bca6:	f10a 0c20 	add.w	ip, sl, #32
 801bcaa:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801bcae:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801bcb2:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801bcb6:	4440      	add	r0, r8
 801bcb8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bcbc:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801bcc0:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801bcc4:	ea40 000c 	orr.w	r0, r0, ip
 801bcc8:	fb15 fc02 	smulbb	ip, r5, r2
 801bccc:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801bcd0:	f1c5 0810 	rsb	r8, r5, #16
 801bcd4:	eba8 0802 	sub.w	r8, r8, r2
 801bcd8:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801bcdc:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801bce0:	437a      	muls	r2, r7
 801bce2:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801bce6:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801bcea:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801bcee:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801bcf2:	fb09 2208 	mla	r2, r9, r8, r2
 801bcf6:	ea4a 0101 	orr.w	r1, sl, r1
 801bcfa:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801bcfe:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801bd02:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801bd06:	fb05 2201 	mla	r2, r5, r1, r2
 801bd0a:	ea4b 0000 	orr.w	r0, fp, r0
 801bd0e:	fb0c 2200 	mla	r2, ip, r0, r2
 801bd12:	0d57      	lsrs	r7, r2, #21
 801bd14:	0952      	lsrs	r2, r2, #5
 801bd16:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801bd1a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801bd1e:	433a      	orrs	r2, r7
 801bd20:	2bff      	cmp	r3, #255	@ 0xff
 801bd22:	b292      	uxth	r2, r2
 801bd24:	d102      	bne.n	801bd2c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801bd26:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801bd28:	29ff      	cmp	r1, #255	@ 0xff
 801bd2a:	d063      	beq.n	801bdf4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 801bd2c:	980a      	ldr	r0, [sp, #40]	@ 0x28
 801bd2e:	f8be 1000 	ldrh.w	r1, [lr]
 801bd32:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801bd34:	4343      	muls	r3, r0
 801bd36:	1c58      	adds	r0, r3, #1
 801bd38:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801bd3c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801bd40:	1208      	asrs	r0, r1, #8
 801bd42:	b2db      	uxtb	r3, r3
 801bd44:	1215      	asrs	r5, r2, #8
 801bd46:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801bd4a:	fb10 f003 	smulbb	r0, r0, r3
 801bd4e:	10cf      	asrs	r7, r1, #3
 801bd50:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801bd54:	00c9      	lsls	r1, r1, #3
 801bd56:	fb05 0504 	mla	r5, r5, r4, r0
 801bd5a:	b2c9      	uxtb	r1, r1
 801bd5c:	10d0      	asrs	r0, r2, #3
 801bd5e:	00d2      	lsls	r2, r2, #3
 801bd60:	fb11 f103 	smulbb	r1, r1, r3
 801bd64:	b2d2      	uxtb	r2, r2
 801bd66:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801bd6a:	fb02 1204 	mla	r2, r2, r4, r1
 801bd6e:	fb17 f703 	smulbb	r7, r7, r3
 801bd72:	b2ad      	uxth	r5, r5
 801bd74:	b292      	uxth	r2, r2
 801bd76:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801bd7a:	fb00 7004 	mla	r0, r0, r4, r7
 801bd7e:	1c6b      	adds	r3, r5, #1
 801bd80:	1c57      	adds	r7, r2, #1
 801bd82:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801bd86:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801bd8a:	b280      	uxth	r0, r0
 801bd8c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801bd90:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801bd94:	433d      	orrs	r5, r7
 801bd96:	1c47      	adds	r7, r0, #1
 801bd98:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801bd9c:	097f      	lsrs	r7, r7, #5
 801bd9e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801bda2:	433d      	orrs	r5, r7
 801bda4:	f8ae 5000 	strh.w	r5, [lr]
 801bda8:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801bdaa:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801bdac:	4413      	add	r3, r2
 801bdae:	9321      	str	r3, [sp, #132]	@ 0x84
 801bdb0:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801bdb2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801bdb4:	441a      	add	r2, r3
 801bdb6:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801bdb8:	9222      	str	r2, [sp, #136]	@ 0x88
 801bdba:	3b01      	subs	r3, #1
 801bdbc:	f10e 0e02 	add.w	lr, lr, #2
 801bdc0:	9313      	str	r3, [sp, #76]	@ 0x4c
 801bdc2:	e61c      	b.n	801b9fe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 801bdc4:	fb08 f000 	mul.w	r0, r8, r0
 801bdc8:	fb09 0303 	mla	r3, r9, r3, r0
 801bdcc:	e6dc      	b.n	801bb88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 801bdce:	46b9      	mov	r9, r7
 801bdd0:	e704      	b.n	801bbdc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 801bdd2:	f1c2 0110 	rsb	r1, r2, #16
 801bdd6:	437a      	muls	r2, r7
 801bdd8:	fb09 2901 	mla	r9, r9, r1, r2
 801bddc:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801bde0:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801bde4:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801bde8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801bdec:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801bdf0:	4302      	orrs	r2, r0
 801bdf2:	e795      	b.n	801bd20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 801bdf4:	f8ae 2000 	strh.w	r2, [lr]
 801bdf8:	e7d6      	b.n	801bda8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801bdfa:	b017      	add	sp, #92	@ 0x5c
 801bdfc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801be00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801be00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801be04:	b085      	sub	sp, #20
 801be06:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801be0a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801be0e:	9103      	str	r1, [sp, #12]
 801be10:	fb00 7406 	mla	r4, r0, r6, r7
 801be14:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801be18:	2800      	cmp	r0, #0
 801be1a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801be1e:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801be22:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801be26:	9501      	str	r5, [sp, #4]
 801be28:	eb02 0904 	add.w	r9, r2, r4
 801be2c:	f2c0 8141 	blt.w	801c0b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801be30:	4583      	cmp	fp, r0
 801be32:	f340 813e 	ble.w	801c0b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801be36:	2f00      	cmp	r7, #0
 801be38:	f2c0 8137 	blt.w	801c0aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801be3c:	42be      	cmp	r6, r7
 801be3e:	f340 8134 	ble.w	801c0aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801be42:	f812 c004 	ldrb.w	ip, [r2, r4]
 801be46:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801be4a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801be4e:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801be52:	4355      	muls	r5, r2
 801be54:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801be58:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801be5c:	fb0c f203 	mul.w	r2, ip, r3
 801be60:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801be64:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801be68:	441d      	add	r5, r3
 801be6a:	f102 0320 	add.w	r3, r2, #32
 801be6e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801be72:	0a1b      	lsrs	r3, r3, #8
 801be74:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801be78:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801be7c:	431c      	orrs	r4, r3
 801be7e:	1c7b      	adds	r3, r7, #1
 801be80:	f100 811c 	bmi.w	801c0bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801be84:	429e      	cmp	r6, r3
 801be86:	f340 8119 	ble.w	801c0bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801be8a:	2900      	cmp	r1, #0
 801be8c:	f000 8119 	beq.w	801c0c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801be90:	9a01      	ldr	r2, [sp, #4]
 801be92:	f899 3001 	ldrb.w	r3, [r9, #1]
 801be96:	8855      	ldrh	r5, [r2, #2]
 801be98:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801be9c:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801bea0:	fb08 f802 	mul.w	r8, r8, r2
 801bea4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801bea8:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801beac:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801beb0:	435d      	muls	r5, r3
 801beb2:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801beb6:	44d0      	add	r8, sl
 801beb8:	f105 0a20 	add.w	sl, r5, #32
 801bebc:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801bec0:	0a2d      	lsrs	r5, r5, #8
 801bec2:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801bec6:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801beca:	432a      	orrs	r2, r5
 801becc:	3001      	adds	r0, #1
 801bece:	f100 80fe 	bmi.w	801c0ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801bed2:	4583      	cmp	fp, r0
 801bed4:	f340 80fb 	ble.w	801c0ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801bed8:	f1be 0f00 	cmp.w	lr, #0
 801bedc:	f000 80fc 	beq.w	801c0d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801bee0:	2f00      	cmp	r7, #0
 801bee2:	f2c0 80f1 	blt.w	801c0c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801bee6:	42be      	cmp	r6, r7
 801bee8:	f340 80ee 	ble.w	801c0c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801beec:	9801      	ldr	r0, [sp, #4]
 801beee:	f819 5006 	ldrb.w	r5, [r9, r6]
 801bef2:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801bef6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801befa:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801befe:	fb0a fa00 	mul.w	sl, sl, r0
 801bf02:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801bf06:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801bf0a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801bf0e:	fb05 f808 	mul.w	r8, r5, r8
 801bf12:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801bf16:	4482      	add	sl, r0
 801bf18:	f108 0020 	add.w	r0, r8, #32
 801bf1c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801bf20:	0a00      	lsrs	r0, r0, #8
 801bf22:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801bf26:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801bf2a:	ea4b 0b00 	orr.w	fp, fp, r0
 801bf2e:	3701      	adds	r7, #1
 801bf30:	f100 80d7 	bmi.w	801c0e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801bf34:	42be      	cmp	r6, r7
 801bf36:	f340 80d4 	ble.w	801c0e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801bf3a:	2900      	cmp	r1, #0
 801bf3c:	f000 80d4 	beq.w	801c0e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801bf40:	3601      	adds	r6, #1
 801bf42:	9801      	ldr	r0, [sp, #4]
 801bf44:	f819 7006 	ldrb.w	r7, [r9, r6]
 801bf48:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801bf4c:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801bf50:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801bf54:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801bf58:	fb09 f906 	mul.w	r9, r9, r6
 801bf5c:	fb07 f800 	mul.w	r8, r7, r0
 801bf60:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801bf64:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801bf68:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801bf6c:	44d1      	add	r9, sl
 801bf6e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801bf72:	f108 0020 	add.w	r0, r8, #32
 801bf76:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801bf7a:	0a00      	lsrs	r0, r0, #8
 801bf7c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801bf80:	4330      	orrs	r0, r6
 801bf82:	b28e      	uxth	r6, r1
 801bf84:	fa1f f98e 	uxth.w	r9, lr
 801bf88:	fb06 f809 	mul.w	r8, r6, r9
 801bf8c:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801bf90:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801bf94:	0136      	lsls	r6, r6, #4
 801bf96:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801bf9a:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801bf9e:	9601      	str	r6, [sp, #4]
 801bfa0:	ea4a 0404 	orr.w	r4, sl, r4
 801bfa4:	fa1f f689 	uxth.w	r6, r9
 801bfa8:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801bfac:	fb11 f90e 	smulbb	r9, r1, lr
 801bfb0:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801bfb4:	9602      	str	r6, [sp, #8]
 801bfb6:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801bfba:	4626      	mov	r6, r4
 801bfbc:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801bfc0:	f1ce 0410 	rsb	r4, lr, #16
 801bfc4:	1a64      	subs	r4, r4, r1
 801bfc6:	ea4a 0202 	orr.w	r2, sl, r2
 801bfca:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801bfce:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801bfd2:	434a      	muls	r2, r1
 801bfd4:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801bfd8:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801bfdc:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801bfe0:	fb04 2406 	mla	r4, r4, r6, r2
 801bfe4:	ea4a 0000 	orr.w	r0, sl, r0
 801bfe8:	fb09 4200 	mla	r2, r9, r0, r4
 801bfec:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801bff0:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801bff4:	9801      	ldr	r0, [sp, #4]
 801bff6:	9903      	ldr	r1, [sp, #12]
 801bff8:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801bffc:	ea44 0b0b 	orr.w	fp, r4, fp
 801c000:	9c02      	ldr	r4, [sp, #8]
 801c002:	8809      	ldrh	r1, [r1, #0]
 801c004:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
 801c008:	1b00      	subs	r0, r0, r4
 801c00a:	9c01      	ldr	r4, [sp, #4]
 801c00c:	eba4 0608 	sub.w	r6, r4, r8
 801c010:	b2b6      	uxth	r6, r6
 801c012:	b280      	uxth	r0, r0
 801c014:	4373      	muls	r3, r6
 801c016:	fb0c 3300 	mla	r3, ip, r0, r3
 801c01a:	9802      	ldr	r0, [sp, #8]
 801c01c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801c020:	fb00 3505 	mla	r5, r0, r5, r3
 801c024:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801c028:	fb08 5707 	mla	r7, r8, r7, r5
 801c02c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801c030:	120b      	asrs	r3, r1, #8
 801c032:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801c036:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801c03a:	b2ff      	uxtb	r7, r7
 801c03c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c040:	10c8      	asrs	r0, r1, #3
 801c042:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801c046:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801c04a:	00c9      	lsls	r1, r1, #3
 801c04c:	437b      	muls	r3, r7
 801c04e:	ea42 0e0e 	orr.w	lr, r2, lr
 801c052:	b2c9      	uxtb	r1, r1
 801c054:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801c058:	fa1f f28e 	uxth.w	r2, lr
 801c05c:	4378      	muls	r0, r7
 801c05e:	434f      	muls	r7, r1
 801c060:	1c59      	adds	r1, r3, #1
 801c062:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801c066:	1213      	asrs	r3, r2, #8
 801c068:	f023 0307 	bic.w	r3, r3, #7
 801c06c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801c070:	1c41      	adds	r1, r0, #1
 801c072:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801c076:	10d1      	asrs	r1, r2, #3
 801c078:	f021 0103 	bic.w	r1, r1, #3
 801c07c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801c080:	021b      	lsls	r3, r3, #8
 801c082:	00c9      	lsls	r1, r1, #3
 801c084:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801c088:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801c08c:	430b      	orrs	r3, r1
 801c08e:	1c79      	adds	r1, r7, #1
 801c090:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801c094:	00d2      	lsls	r2, r2, #3
 801c096:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801c09a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c09e:	431a      	orrs	r2, r3
 801c0a0:	9b03      	ldr	r3, [sp, #12]
 801c0a2:	801a      	strh	r2, [r3, #0]
 801c0a4:	b005      	add	sp, #20
 801c0a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c0aa:	f04f 0c00 	mov.w	ip, #0
 801c0ae:	4664      	mov	r4, ip
 801c0b0:	e6e5      	b.n	801be7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801c0b2:	2300      	movs	r3, #0
 801c0b4:	469c      	mov	ip, r3
 801c0b6:	461a      	mov	r2, r3
 801c0b8:	461c      	mov	r4, r3
 801c0ba:	e707      	b.n	801becc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801c0bc:	2300      	movs	r3, #0
 801c0be:	461a      	mov	r2, r3
 801c0c0:	e704      	b.n	801becc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801c0c2:	460b      	mov	r3, r1
 801c0c4:	460a      	mov	r2, r1
 801c0c6:	e701      	b.n	801becc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801c0c8:	2500      	movs	r5, #0
 801c0ca:	46ab      	mov	fp, r5
 801c0cc:	e72f      	b.n	801bf2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801c0ce:	2700      	movs	r7, #0
 801c0d0:	463d      	mov	r5, r7
 801c0d2:	4638      	mov	r0, r7
 801c0d4:	46bb      	mov	fp, r7
 801c0d6:	e754      	b.n	801bf82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801c0d8:	4677      	mov	r7, lr
 801c0da:	4675      	mov	r5, lr
 801c0dc:	4670      	mov	r0, lr
 801c0de:	46f3      	mov	fp, lr
 801c0e0:	e74f      	b.n	801bf82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801c0e2:	2700      	movs	r7, #0
 801c0e4:	4638      	mov	r0, r7
 801c0e6:	e74c      	b.n	801bf82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801c0e8:	460f      	mov	r7, r1
 801c0ea:	4608      	mov	r0, r1
 801c0ec:	e749      	b.n	801bf82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801c0f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c0f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c0f4:	b093      	sub	sp, #76	@ 0x4c
 801c0f6:	9210      	str	r2, [sp, #64]	@ 0x40
 801c0f8:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801c0fa:	910e      	str	r1, [sp, #56]	@ 0x38
 801c0fc:	9306      	str	r3, [sp, #24]
 801c0fe:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801c102:	9011      	str	r0, [sp, #68]	@ 0x44
 801c104:	6850      	ldr	r0, [r2, #4]
 801c106:	6812      	ldr	r2, [r2, #0]
 801c108:	fb00 1303 	mla	r3, r0, r3, r1
 801c10c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c110:	9307      	str	r3, [sp, #28]
 801c112:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c114:	681b      	ldr	r3, [r3, #0]
 801c116:	9308      	str	r3, [sp, #32]
 801c118:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c11a:	685b      	ldr	r3, [r3, #4]
 801c11c:	9309      	str	r3, [sp, #36]	@ 0x24
 801c11e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801c120:	2b00      	cmp	r3, #0
 801c122:	dc03      	bgt.n	801c12c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801c124:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801c126:	2b00      	cmp	r3, #0
 801c128:	f340 83b4 	ble.w	801c894 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801c12c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c12e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c132:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c136:	1e48      	subs	r0, r1, #1
 801c138:	1e55      	subs	r5, r2, #1
 801c13a:	9b06      	ldr	r3, [sp, #24]
 801c13c:	2b00      	cmp	r3, #0
 801c13e:	f340 8163 	ble.w	801c408 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801c142:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
 801c144:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801c146:	1436      	asrs	r6, r6, #16
 801c148:	ea4f 4323 	mov.w	r3, r3, asr #16
 801c14c:	d406      	bmi.n	801c15c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801c14e:	4286      	cmp	r6, r0
 801c150:	da04      	bge.n	801c15c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801c152:	2b00      	cmp	r3, #0
 801c154:	db02      	blt.n	801c15c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801c156:	42ab      	cmp	r3, r5
 801c158:	f2c0 8157 	blt.w	801c40a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 801c15c:	3601      	adds	r6, #1
 801c15e:	f100 8144 	bmi.w	801c3ea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801c162:	42b1      	cmp	r1, r6
 801c164:	f2c0 8141 	blt.w	801c3ea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801c168:	3301      	adds	r3, #1
 801c16a:	f100 813e 	bmi.w	801c3ea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801c16e:	429a      	cmp	r2, r3
 801c170:	f2c0 813b 	blt.w	801c3ea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801c174:	9b06      	ldr	r3, [sp, #24]
 801c176:	9f07      	ldr	r7, [sp, #28]
 801c178:	930f      	str	r3, [sp, #60]	@ 0x3c
 801c17a:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801c17e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801c180:	2b00      	cmp	r3, #0
 801c182:	f340 8164 	ble.w	801c44e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801c186:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801c188:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 801c18a:	1418      	asrs	r0, r3, #16
 801c18c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801c18e:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801c192:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801c194:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801c198:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c19a:	142d      	asrs	r5, r5, #16
 801c19c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801c1a0:	f100 81ee 	bmi.w	801c580 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801c1a4:	f102 3eff 	add.w	lr, r2, #4294967295
 801c1a8:	4575      	cmp	r5, lr
 801c1aa:	f280 81e9 	bge.w	801c580 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801c1ae:	2800      	cmp	r0, #0
 801c1b0:	f2c0 81e6 	blt.w	801c580 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801c1b4:	f103 3eff 	add.w	lr, r3, #4294967295
 801c1b8:	4570      	cmp	r0, lr
 801c1ba:	f280 81e1 	bge.w	801c580 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801c1be:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c1c0:	b212      	sxth	r2, r2
 801c1c2:	fb00 5002 	mla	r0, r0, r2, r5
 801c1c6:	fa1f fe81 	uxth.w	lr, r1
 801c1ca:	eb03 0a00 	add.w	sl, r3, r0
 801c1ce:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801c1d2:	f813 9000 	ldrb.w	r9, [r3, r0]
 801c1d6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c1da:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801c1de:	b29b      	uxth	r3, r3
 801c1e0:	f1bc 0f00 	cmp.w	ip, #0
 801c1e4:	f000 8179 	beq.w	801c4da <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801c1e8:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801c1ec:	940a      	str	r4, [sp, #40]	@ 0x28
 801c1ee:	eb0a 0b02 	add.w	fp, sl, r2
 801c1f2:	fa1f fa8c 	uxth.w	sl, ip
 801c1f6:	fb0a fe0e 	mul.w	lr, sl, lr
 801c1fa:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801c1fe:	fa1f fa8a 	uxth.w	sl, sl
 801c202:	eba5 050e 	sub.w	r5, r5, lr
 801c206:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801c20a:	940b      	str	r4, [sp, #44]	@ 0x2c
 801c20c:	eba3 030a 	sub.w	r3, r3, sl
 801c210:	b2ad      	uxth	r5, r5
 801c212:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801c214:	b29b      	uxth	r3, r3
 801c216:	fb08 f505 	mul.w	r5, r8, r5
 801c21a:	fb09 5303 	mla	r3, r9, r3, r5
 801c21e:	fb0a 3304 	mla	r3, sl, r4, r3
 801c222:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c224:	fb0e 3304 	mla	r3, lr, r4, r3
 801c228:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c22c:	2b00      	cmp	r3, #0
 801c22e:	f000 80cf 	beq.w	801c3d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801c232:	9c08      	ldr	r4, [sp, #32]
 801c234:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801c238:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801c23c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801c240:	f000 8150 	beq.w	801c4e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801c244:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801c248:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801c24c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c250:	fb09 f000 	mul.w	r0, r9, r0
 801c254:	fb0a fe0e 	mul.w	lr, sl, lr
 801c258:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801c25c:	f100 0b20 	add.w	fp, r0, #32
 801c260:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801c264:	44ce      	add	lr, r9
 801c266:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801c26a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c26e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c272:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801c276:	ea4e 0909 	orr.w	r9, lr, r9
 801c27a:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801c27e:	8868      	ldrh	r0, [r5, #2]
 801c280:	d019      	beq.n	801c2b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801c282:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801c286:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801c28a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c28e:	fb08 f800 	mul.w	r8, r8, r0
 801c292:	fb0a fe0e 	mul.w	lr, sl, lr
 801c296:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801c29a:	f108 0b20 	add.w	fp, r8, #32
 801c29e:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801c2a2:	4486      	add	lr, r0
 801c2a4:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801c2a8:	0a00      	lsrs	r0, r0, #8
 801c2aa:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c2ae:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c2b2:	ea4e 0000 	orr.w	r0, lr, r0
 801c2b6:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801c2ba:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801c2be:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801c2c2:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801c2c6:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c2ca:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801c2ce:	ea4e 0909 	orr.w	r9, lr, r9
 801c2d2:	ea4a 0000 	orr.w	r0, sl, r0
 801c2d6:	f1bc 0f00 	cmp.w	ip, #0
 801c2da:	f000 8105 	beq.w	801c4e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801c2de:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801c2e2:	3a01      	subs	r2, #1
 801c2e4:	0052      	lsls	r2, r2, #1
 801c2e6:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801c2e8:	3202      	adds	r2, #2
 801c2ea:	2cff      	cmp	r4, #255	@ 0xff
 801c2ec:	eb05 0e02 	add.w	lr, r5, r2
 801c2f0:	5aaa      	ldrh	r2, [r5, r2]
 801c2f2:	d018      	beq.n	801c326 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801c2f4:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801c2f8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c2fc:	fb04 fa02 	mul.w	sl, r4, r2
 801c300:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c304:	fb08 f805 	mul.w	r8, r8, r5
 801c308:	f10a 0520 	add.w	r5, sl, #32
 801c30c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801c310:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801c314:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801c318:	4442      	add	r2, r8
 801c31a:	0a2d      	lsrs	r5, r5, #8
 801c31c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801c320:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c324:	432a      	orrs	r2, r5
 801c326:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c328:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801c32c:	2cff      	cmp	r4, #255	@ 0xff
 801c32e:	d01a      	beq.n	801c366 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801c330:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801c334:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c338:	fb04 fa05 	mul.w	sl, r4, r5
 801c33c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c340:	fb08 f80e 	mul.w	r8, r8, lr
 801c344:	f10a 0e20 	add.w	lr, sl, #32
 801c348:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801c34c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801c350:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801c354:	4445      	add	r5, r8
 801c356:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c35a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801c35e:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801c362:	ea45 050e 	orr.w	r5, r5, lr
 801c366:	fb1c fe01 	smulbb	lr, ip, r1
 801c36a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801c36e:	f1cc 0810 	rsb	r8, ip, #16
 801c372:	eba8 0801 	sub.w	r8, r8, r1
 801c376:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801c37a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801c37e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801c382:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801c386:	4341      	muls	r1, r0
 801c388:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c38c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801c390:	ea4a 0202 	orr.w	r2, sl, r2
 801c394:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801c398:	fb09 1108 	mla	r1, r9, r8, r1
 801c39c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801c3a0:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801c3a4:	fb0c 1102 	mla	r1, ip, r2, r1
 801c3a8:	ea4b 0505 	orr.w	r5, fp, r5
 801c3ac:	fb0e 1e05 	mla	lr, lr, r5, r1
 801c3b0:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801c3b4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801c3b8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c3bc:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801c3c0:	ea42 0e0e 	orr.w	lr, r2, lr
 801c3c4:	fa1f f28e 	uxth.w	r2, lr
 801c3c8:	2bff      	cmp	r3, #255	@ 0xff
 801c3ca:	f040 80a1 	bne.w	801c510 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801c3ce:	803a      	strh	r2, [r7, #0]
 801c3d0:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801c3d2:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801c3d4:	4413      	add	r3, r2
 801c3d6:	931d      	str	r3, [sp, #116]	@ 0x74
 801c3d8:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 801c3da:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c3dc:	441a      	add	r2, r3
 801c3de:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801c3e0:	921e      	str	r2, [sp, #120]	@ 0x78
 801c3e2:	3b01      	subs	r3, #1
 801c3e4:	3702      	adds	r7, #2
 801c3e6:	930f      	str	r3, [sp, #60]	@ 0x3c
 801c3e8:	e6c9      	b.n	801c17e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801c3ea:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801c3ec:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801c3ee:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
 801c3f0:	4433      	add	r3, r6
 801c3f2:	931d      	str	r3, [sp, #116]	@ 0x74
 801c3f4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c3f6:	441c      	add	r4, r3
 801c3f8:	9b06      	ldr	r3, [sp, #24]
 801c3fa:	941e      	str	r4, [sp, #120]	@ 0x78
 801c3fc:	3b01      	subs	r3, #1
 801c3fe:	9306      	str	r3, [sp, #24]
 801c400:	9b07      	ldr	r3, [sp, #28]
 801c402:	3302      	adds	r3, #2
 801c404:	9307      	str	r3, [sp, #28]
 801c406:	e698      	b.n	801c13a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801c408:	d028      	beq.n	801c45c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c40a:	9b06      	ldr	r3, [sp, #24]
 801c40c:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801c40e:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 801c410:	3b01      	subs	r3, #1
 801c412:	fb00 5003 	mla	r0, r0, r3, r5
 801c416:	1400      	asrs	r0, r0, #16
 801c418:	f53f aeac 	bmi.w	801c174 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801c41c:	3901      	subs	r1, #1
 801c41e:	4288      	cmp	r0, r1
 801c420:	f6bf aea8 	bge.w	801c174 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801c424:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801c426:	981e      	ldr	r0, [sp, #120]	@ 0x78
 801c428:	fb01 0303 	mla	r3, r1, r3, r0
 801c42c:	141b      	asrs	r3, r3, #16
 801c42e:	f53f aea1 	bmi.w	801c174 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801c432:	3a01      	subs	r2, #1
 801c434:	4293      	cmp	r3, r2
 801c436:	f6bf ae9d 	bge.w	801c174 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801c43a:	9b06      	ldr	r3, [sp, #24]
 801c43c:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801c440:	930f      	str	r3, [sp, #60]	@ 0x3c
 801c442:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801c446:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801c448:	2b00      	cmp	r3, #0
 801c44a:	f300 80b6 	bgt.w	801c5ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 801c44e:	9b06      	ldr	r3, [sp, #24]
 801c450:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801c454:	9b07      	ldr	r3, [sp, #28]
 801c456:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801c45a:	9307      	str	r3, [sp, #28]
 801c45c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801c45e:	2b00      	cmp	r3, #0
 801c460:	f340 8218 	ble.w	801c894 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801c464:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c468:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801c46c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c470:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801c472:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c476:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c47a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c47e:	eef0 6a62 	vmov.f32	s13, s5
 801c482:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c486:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c48a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c48e:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 801c492:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c496:	eef0 6a43 	vmov.f32	s13, s6
 801c49a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c49e:	ee12 2a90 	vmov	r2, s5
 801c4a2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c4a6:	fb92 f3f3 	sdiv	r3, r2, r3
 801c4aa:	ee13 2a10 	vmov	r2, s6
 801c4ae:	931f      	str	r3, [sp, #124]	@ 0x7c
 801c4b0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801c4b2:	fb92 f3f3 	sdiv	r3, r2, r3
 801c4b6:	9320      	str	r3, [sp, #128]	@ 0x80
 801c4b8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801c4ba:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801c4bc:	3b01      	subs	r3, #1
 801c4be:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c4c2:	930e      	str	r3, [sp, #56]	@ 0x38
 801c4c4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801c4c6:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
 801c4ca:	bf08      	it	eq
 801c4cc:	4613      	moveq	r3, r2
 801c4ce:	9306      	str	r3, [sp, #24]
 801c4d0:	eeb0 3a67 	vmov.f32	s6, s15
 801c4d4:	eef0 2a47 	vmov.f32	s5, s14
 801c4d8:	e621      	b.n	801c11e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801c4da:	fb08 f505 	mul.w	r5, r8, r5
 801c4de:	fb09 5303 	mla	r3, r9, r3, r5
 801c4e2:	e6a1      	b.n	801c228 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801c4e4:	4681      	mov	r9, r0
 801c4e6:	e6c8      	b.n	801c27a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801c4e8:	f1c1 0210 	rsb	r2, r1, #16
 801c4ec:	4341      	muls	r1, r0
 801c4ee:	fb09 1902 	mla	r9, r9, r2, r1
 801c4f2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c4f6:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801c4fa:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801c4fe:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c502:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801c506:	ea42 0909 	orr.w	r9, r2, r9
 801c50a:	fa1f f289 	uxth.w	r2, r9
 801c50e:	e75b      	b.n	801c3c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801c510:	f8b7 c000 	ldrh.w	ip, [r7]
 801c514:	43db      	mvns	r3, r3
 801c516:	ea4f 202c 	mov.w	r0, ip, asr #8
 801c51a:	fa5f fe83 	uxtb.w	lr, r3
 801c51e:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801c522:	fb00 f00e 	mul.w	r0, r0, lr
 801c526:	1c41      	adds	r1, r0, #1
 801c528:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801c52c:	1211      	asrs	r1, r2, #8
 801c52e:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801c532:	f021 0107 	bic.w	r1, r1, #7
 801c536:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801c53a:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801c53e:	48d7      	ldr	r0, [pc, #860]	@ (801c89c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801c540:	fb05 f50e 	mul.w	r5, r5, lr
 801c544:	b2c9      	uxtb	r1, r1
 801c546:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801c54a:	1c69      	adds	r1, r5, #1
 801c54c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801c550:	10d1      	asrs	r1, r2, #3
 801c552:	f021 0103 	bic.w	r1, r1, #3
 801c556:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801c55a:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801c55e:	b2db      	uxtb	r3, r3
 801c560:	00c9      	lsls	r1, r1, #3
 801c562:	fb03 f30e 	mul.w	r3, r3, lr
 801c566:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801c56a:	4301      	orrs	r1, r0
 801c56c:	1c58      	adds	r0, r3, #1
 801c56e:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801c572:	00d2      	lsls	r2, r2, #3
 801c574:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801c578:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c57c:	430a      	orrs	r2, r1
 801c57e:	e726      	b.n	801c3ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 801c580:	f115 0e01 	adds.w	lr, r5, #1
 801c584:	f53f af24 	bmi.w	801c3d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801c588:	4572      	cmp	r2, lr
 801c58a:	f6ff af21 	blt.w	801c3d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801c58e:	f110 0e01 	adds.w	lr, r0, #1
 801c592:	f53f af1d 	bmi.w	801c3d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801c596:	4573      	cmp	r3, lr
 801c598:	f6ff af1a 	blt.w	801c3d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801c59c:	b21b      	sxth	r3, r3
 801c59e:	b212      	sxth	r2, r2
 801c5a0:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801c5a4:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801c5a8:	9301      	str	r3, [sp, #4]
 801c5aa:	9200      	str	r2, [sp, #0]
 801c5ac:	4639      	mov	r1, r7
 801c5ae:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801c5b2:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801c5b4:	f7ff fc24 	bl	801be00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801c5b8:	e70a      	b.n	801c3d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801c5ba:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801c5bc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c5c0:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801c5c2:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801c5c6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c5c8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c5cc:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801c5ce:	141f      	asrs	r7, r3, #16
 801c5d0:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801c5d2:	141b      	asrs	r3, r3, #16
 801c5d4:	fb01 3707 	mla	r7, r1, r7, r3
 801c5d8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c5da:	fa1f fc82 	uxth.w	ip, r2
 801c5de:	eb03 0a07 	add.w	sl, r3, r7
 801c5e2:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801c5e6:	f813 9007 	ldrb.w	r9, [r3, r7]
 801c5ea:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c5ee:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801c5f2:	b29b      	uxth	r3, r3
 801c5f4:	2d00      	cmp	r5, #0
 801c5f6:	f000 80fe 	beq.w	801c7f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 801c5fa:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801c5fe:	940c      	str	r4, [sp, #48]	@ 0x30
 801c600:	eb0a 0b01 	add.w	fp, sl, r1
 801c604:	fa1f fa85 	uxth.w	sl, r5
 801c608:	fb0a fc0c 	mul.w	ip, sl, ip
 801c60c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801c610:	fa1f fa8a 	uxth.w	sl, sl
 801c614:	eba0 000c 	sub.w	r0, r0, ip
 801c618:	eba3 030a 	sub.w	r3, r3, sl
 801c61c:	b280      	uxth	r0, r0
 801c61e:	fb08 f000 	mul.w	r0, r8, r0
 801c622:	b29b      	uxth	r3, r3
 801c624:	fb09 0303 	mla	r3, r9, r3, r0
 801c628:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801c62a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801c62e:	940d      	str	r4, [sp, #52]	@ 0x34
 801c630:	fb0a 3300 	mla	r3, sl, r0, r3
 801c634:	fb0c 3304 	mla	r3, ip, r4, r3
 801c638:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c63c:	2b00      	cmp	r3, #0
 801c63e:	f000 80cc 	beq.w	801c7da <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801c642:	9808      	ldr	r0, [sp, #32]
 801c644:	9c08      	ldr	r4, [sp, #32]
 801c646:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801c64a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801c64e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801c652:	f000 80d5 	beq.w	801c800 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801c656:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801c65a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801c65e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801c662:	fb09 f707 	mul.w	r7, r9, r7
 801c666:	fb0a fc0c 	mul.w	ip, sl, ip
 801c66a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801c66e:	f107 0b20 	add.w	fp, r7, #32
 801c672:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801c676:	44cc      	add	ip, r9
 801c678:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801c67c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c680:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801c684:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801c688:	ea4c 0909 	orr.w	r9, ip, r9
 801c68c:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801c690:	8847      	ldrh	r7, [r0, #2]
 801c692:	d019      	beq.n	801c6c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 801c694:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801c698:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801c69c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801c6a0:	fb08 f807 	mul.w	r8, r8, r7
 801c6a4:	fb0a fc0c 	mul.w	ip, sl, ip
 801c6a8:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801c6ac:	f108 0b20 	add.w	fp, r8, #32
 801c6b0:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801c6b4:	44bc      	add	ip, r7
 801c6b6:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801c6ba:	0a3f      	lsrs	r7, r7, #8
 801c6bc:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801c6c0:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801c6c4:	ea4c 0707 	orr.w	r7, ip, r7
 801c6c8:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801c6cc:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801c6d0:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801c6d4:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801c6d8:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c6dc:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801c6e0:	ea4c 0909 	orr.w	r9, ip, r9
 801c6e4:	ea4a 0707 	orr.w	r7, sl, r7
 801c6e8:	2d00      	cmp	r5, #0
 801c6ea:	f000 808b 	beq.w	801c804 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801c6ee:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801c6f2:	3901      	subs	r1, #1
 801c6f4:	0049      	lsls	r1, r1, #1
 801c6f6:	3102      	adds	r1, #2
 801c6f8:	eb00 0c01 	add.w	ip, r0, r1
 801c6fc:	5a41      	ldrh	r1, [r0, r1]
 801c6fe:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801c700:	28ff      	cmp	r0, #255	@ 0xff
 801c702:	d019      	beq.n	801c738 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 801c704:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801c706:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801c70a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801c70e:	fb04 fa01 	mul.w	sl, r4, r1
 801c712:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c716:	fb08 f800 	mul.w	r8, r8, r0
 801c71a:	f10a 0020 	add.w	r0, sl, #32
 801c71e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801c722:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801c726:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801c72a:	4441      	add	r1, r8
 801c72c:	0a00      	lsrs	r0, r0, #8
 801c72e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801c732:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c736:	4301      	orrs	r1, r0
 801c738:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c73a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801c73e:	2cff      	cmp	r4, #255	@ 0xff
 801c740:	d01a      	beq.n	801c778 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 801c742:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801c746:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c74a:	fb04 fa00 	mul.w	sl, r4, r0
 801c74e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c752:	fb08 f80c 	mul.w	r8, r8, ip
 801c756:	f10a 0c20 	add.w	ip, sl, #32
 801c75a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801c75e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801c762:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801c766:	4440      	add	r0, r8
 801c768:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c76c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801c770:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801c774:	ea40 000c 	orr.w	r0, r0, ip
 801c778:	fb15 fc02 	smulbb	ip, r5, r2
 801c77c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801c780:	f1c5 0810 	rsb	r8, r5, #16
 801c784:	eba8 0802 	sub.w	r8, r8, r2
 801c788:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801c78c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801c790:	437a      	muls	r2, r7
 801c792:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801c796:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801c79a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c79e:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801c7a2:	fb09 2208 	mla	r2, r9, r8, r2
 801c7a6:	ea4a 0101 	orr.w	r1, sl, r1
 801c7aa:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801c7ae:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801c7b2:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801c7b6:	fb05 2201 	mla	r2, r5, r1, r2
 801c7ba:	ea4b 0000 	orr.w	r0, fp, r0
 801c7be:	fb0c 2200 	mla	r2, ip, r0, r2
 801c7c2:	0d57      	lsrs	r7, r2, #21
 801c7c4:	0952      	lsrs	r2, r2, #5
 801c7c6:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801c7ca:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801c7ce:	433a      	orrs	r2, r7
 801c7d0:	2bff      	cmp	r3, #255	@ 0xff
 801c7d2:	b292      	uxth	r2, r2
 801c7d4:	d127      	bne.n	801c826 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 801c7d6:	f8ae 2000 	strh.w	r2, [lr]
 801c7da:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801c7dc:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801c7de:	4413      	add	r3, r2
 801c7e0:	931d      	str	r3, [sp, #116]	@ 0x74
 801c7e2:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 801c7e4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c7e6:	441a      	add	r2, r3
 801c7e8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801c7ea:	921e      	str	r2, [sp, #120]	@ 0x78
 801c7ec:	3b01      	subs	r3, #1
 801c7ee:	f10e 0e02 	add.w	lr, lr, #2
 801c7f2:	930f      	str	r3, [sp, #60]	@ 0x3c
 801c7f4:	e627      	b.n	801c446 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801c7f6:	fb08 f000 	mul.w	r0, r8, r0
 801c7fa:	fb09 0303 	mla	r3, r9, r3, r0
 801c7fe:	e71b      	b.n	801c638 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 801c800:	46b9      	mov	r9, r7
 801c802:	e743      	b.n	801c68c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 801c804:	f1c2 0110 	rsb	r1, r2, #16
 801c808:	437a      	muls	r2, r7
 801c80a:	fb09 2901 	mla	r9, r9, r1, r2
 801c80e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c812:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801c816:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801c81a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c81e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801c822:	4302      	orrs	r2, r0
 801c824:	e7d4      	b.n	801c7d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 801c826:	f8be 7000 	ldrh.w	r7, [lr]
 801c82a:	4c1c      	ldr	r4, [pc, #112]	@ (801c89c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801c82c:	43db      	mvns	r3, r3
 801c82e:	1238      	asrs	r0, r7, #8
 801c830:	fa5f fc83 	uxtb.w	ip, r3
 801c834:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801c838:	10fd      	asrs	r5, r7, #3
 801c83a:	fb00 f00c 	mul.w	r0, r0, ip
 801c83e:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801c842:	fb05 f10c 	mul.w	r1, r5, ip
 801c846:	1c45      	adds	r5, r0, #1
 801c848:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801c84c:	1215      	asrs	r5, r2, #8
 801c84e:	f025 0507 	bic.w	r5, r5, #7
 801c852:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801c856:	1c4d      	adds	r5, r1, #1
 801c858:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801c85c:	10d1      	asrs	r1, r2, #3
 801c85e:	f021 0103 	bic.w	r1, r1, #3
 801c862:	00fb      	lsls	r3, r7, #3
 801c864:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801c868:	b2db      	uxtb	r3, r3
 801c86a:	b2c0      	uxtb	r0, r0
 801c86c:	00c9      	lsls	r1, r1, #3
 801c86e:	fb03 f30c 	mul.w	r3, r3, ip
 801c872:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801c876:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801c87a:	4308      	orrs	r0, r1
 801c87c:	1c59      	adds	r1, r3, #1
 801c87e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801c882:	00d2      	lsls	r2, r2, #3
 801c884:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801c888:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801c88c:	4318      	orrs	r0, r3
 801c88e:	f8ae 0000 	strh.w	r0, [lr]
 801c892:	e7a2      	b.n	801c7da <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801c894:	b013      	add	sp, #76	@ 0x4c
 801c896:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c89a:	bf00      	nop
 801c89c:	fffff800 	.word	0xfffff800

0801c8a0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801c8a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c8a4:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
 801c8a8:	fb05 4c03 	mla	ip, r5, r3, r4
 801c8ac:	2d00      	cmp	r5, #0
 801c8ae:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801c8b2:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
 801c8b6:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801c8ba:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801c8be:	8808      	ldrh	r0, [r1, #0]
 801c8c0:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801c8c4:	f2c0 80a7 	blt.w	801ca16 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801c8c8:	45aa      	cmp	sl, r5
 801c8ca:	f340 80a4 	ble.w	801ca16 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801c8ce:	2c00      	cmp	r4, #0
 801c8d0:	f2c0 809f 	blt.w	801ca12 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801c8d4:	42a3      	cmp	r3, r4
 801c8d6:	f340 809c 	ble.w	801ca12 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801c8da:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801c8de:	1c62      	adds	r2, r4, #1
 801c8e0:	f100 809c 	bmi.w	801ca1c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801c8e4:	4293      	cmp	r3, r2
 801c8e6:	f340 8099 	ble.w	801ca1c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801c8ea:	f1b9 0f00 	cmp.w	r9, #0
 801c8ee:	f000 8095 	beq.w	801ca1c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801c8f2:	f8be c002 	ldrh.w	ip, [lr, #2]
 801c8f6:	3501      	adds	r5, #1
 801c8f8:	f100 8094 	bmi.w	801ca24 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801c8fc:	45aa      	cmp	sl, r5
 801c8fe:	f340 8091 	ble.w	801ca24 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801c902:	2f00      	cmp	r7, #0
 801c904:	f000 808e 	beq.w	801ca24 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801c908:	2c00      	cmp	r4, #0
 801c90a:	f2c0 8089 	blt.w	801ca20 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801c90e:	42a3      	cmp	r3, r4
 801c910:	f340 8086 	ble.w	801ca20 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801c914:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801c918:	3401      	adds	r4, #1
 801c91a:	f100 8086 	bmi.w	801ca2a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801c91e:	42a3      	cmp	r3, r4
 801c920:	f340 8083 	ble.w	801ca2a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801c924:	f1b9 0f00 	cmp.w	r9, #0
 801c928:	d07f      	beq.n	801ca2a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801c92a:	3301      	adds	r3, #1
 801c92c:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801c930:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801c934:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801c938:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 801c93c:	fb19 fe07 	smulbb	lr, r9, r7
 801c940:	ea44 0808 	orr.w	r8, r4, r8
 801c944:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801c948:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801c94c:	f1c7 0210 	rsb	r2, r7, #16
 801c950:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801c954:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801c958:	ea44 0c0c 	orr.w	ip, r4, ip
 801c95c:	eba2 0209 	sub.w	r2, r2, r9
 801c960:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801c964:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801c968:	fb04 f40c 	mul.w	r4, r4, ip
 801c96c:	fb02 4808 	mla	r8, r2, r8, r4
 801c970:	041a      	lsls	r2, r3, #16
 801c972:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801c976:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801c97a:	4313      	orrs	r3, r2
 801c97c:	042a      	lsls	r2, r5, #16
 801c97e:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801c982:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801c986:	fb0e 8303 	mla	r3, lr, r3, r8
 801c98a:	432a      	orrs	r2, r5
 801c98c:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801c990:	fb07 3202 	mla	r2, r7, r2, r3
 801c994:	0d53      	lsrs	r3, r2, #21
 801c996:	0952      	lsrs	r2, r2, #5
 801c998:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c99c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801c9a0:	431a      	orrs	r2, r3
 801c9a2:	b293      	uxth	r3, r2
 801c9a4:	b2b4      	uxth	r4, r6
 801c9a6:	1202      	asrs	r2, r0, #8
 801c9a8:	43f6      	mvns	r6, r6
 801c9aa:	b2f6      	uxtb	r6, r6
 801c9ac:	121d      	asrs	r5, r3, #8
 801c9ae:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801c9b2:	fb12 f206 	smulbb	r2, r2, r6
 801c9b6:	10c7      	asrs	r7, r0, #3
 801c9b8:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801c9bc:	00c0      	lsls	r0, r0, #3
 801c9be:	fb05 2504 	mla	r5, r5, r4, r2
 801c9c2:	b2c0      	uxtb	r0, r0
 801c9c4:	10da      	asrs	r2, r3, #3
 801c9c6:	00db      	lsls	r3, r3, #3
 801c9c8:	b2db      	uxtb	r3, r3
 801c9ca:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801c9ce:	fb10 f006 	smulbb	r0, r0, r6
 801c9d2:	b2ad      	uxth	r5, r5
 801c9d4:	fb03 0004 	mla	r0, r3, r4, r0
 801c9d8:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801c9dc:	fb17 f706 	smulbb	r7, r7, r6
 801c9e0:	b280      	uxth	r0, r0
 801c9e2:	1c6b      	adds	r3, r5, #1
 801c9e4:	fb02 7204 	mla	r2, r2, r4, r7
 801c9e8:	b292      	uxth	r2, r2
 801c9ea:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c9ee:	1c43      	adds	r3, r0, #1
 801c9f0:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801c9f4:	1c50      	adds	r0, r2, #1
 801c9f6:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801c9fa:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801c9fe:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ca02:	0952      	lsrs	r2, r2, #5
 801ca04:	432b      	orrs	r3, r5
 801ca06:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ca0a:	4313      	orrs	r3, r2
 801ca0c:	800b      	strh	r3, [r1, #0]
 801ca0e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ca12:	4680      	mov	r8, r0
 801ca14:	e763      	b.n	801c8de <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801ca16:	4684      	mov	ip, r0
 801ca18:	4680      	mov	r8, r0
 801ca1a:	e76c      	b.n	801c8f6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801ca1c:	4684      	mov	ip, r0
 801ca1e:	e76a      	b.n	801c8f6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801ca20:	4605      	mov	r5, r0
 801ca22:	e779      	b.n	801c918 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801ca24:	4603      	mov	r3, r0
 801ca26:	4605      	mov	r5, r0
 801ca28:	e782      	b.n	801c930 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801ca2a:	4603      	mov	r3, r0
 801ca2c:	e780      	b.n	801c930 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801ca2e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ca2e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ca32:	b093      	sub	sp, #76	@ 0x4c
 801ca34:	461d      	mov	r5, r3
 801ca36:	9210      	str	r2, [sp, #64]	@ 0x40
 801ca38:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801ca3a:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
 801ca3e:	920b      	str	r2, [sp, #44]	@ 0x2c
 801ca40:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
 801ca44:	910a      	str	r1, [sp, #40]	@ 0x28
 801ca46:	6859      	ldr	r1, [r3, #4]
 801ca48:	681b      	ldr	r3, [r3, #0]
 801ca4a:	9011      	str	r0, [sp, #68]	@ 0x44
 801ca4c:	fb01 2707 	mla	r7, r1, r7, r2
 801ca50:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801ca54:	9307      	str	r3, [sp, #28]
 801ca56:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ca58:	681b      	ldr	r3, [r3, #0]
 801ca5a:	9309      	str	r3, [sp, #36]	@ 0x24
 801ca5c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ca5e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801ca62:	43db      	mvns	r3, r3
 801ca64:	b2db      	uxtb	r3, r3
 801ca66:	9308      	str	r3, [sp, #32]
 801ca68:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ca6a:	2b00      	cmp	r3, #0
 801ca6c:	dc03      	bgt.n	801ca76 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801ca6e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ca70:	2b00      	cmp	r3, #0
 801ca72:	f340 8203 	ble.w	801ce7c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801ca76:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ca78:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ca7c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ca80:	1e48      	subs	r0, r1, #1
 801ca82:	f102 3cff 	add.w	ip, r2, #4294967295
 801ca86:	2d00      	cmp	r5, #0
 801ca88:	f340 80da 	ble.w	801cc40 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801ca8c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801ca90:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ca94:	d406      	bmi.n	801caa4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801ca96:	4586      	cmp	lr, r0
 801ca98:	da04      	bge.n	801caa4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801ca9a:	2b00      	cmp	r3, #0
 801ca9c:	db02      	blt.n	801caa4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801ca9e:	4563      	cmp	r3, ip
 801caa0:	f2c0 80cf 	blt.w	801cc42 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801caa4:	f11e 0e01 	adds.w	lr, lr, #1
 801caa8:	f100 80c1 	bmi.w	801cc2e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801caac:	4571      	cmp	r1, lr
 801caae:	f2c0 80be 	blt.w	801cc2e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801cab2:	3301      	adds	r3, #1
 801cab4:	f100 80bb 	bmi.w	801cc2e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801cab8:	429a      	cmp	r2, r3
 801caba:	f2c0 80b8 	blt.w	801cc2e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801cabe:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801cac2:	46a9      	mov	r9, r5
 801cac4:	f1b9 0f00 	cmp.w	r9, #0
 801cac8:	f340 80d8 	ble.w	801cc7c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801cacc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cace:	1421      	asrs	r1, r4, #16
 801cad0:	ea4f 4026 	mov.w	r0, r6, asr #16
 801cad4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801cad8:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801cadc:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801cae0:	f100 8111 	bmi.w	801cd06 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801cae4:	f10e 3aff 	add.w	sl, lr, #4294967295
 801cae8:	4551      	cmp	r1, sl
 801caea:	f280 810c 	bge.w	801cd06 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801caee:	2800      	cmp	r0, #0
 801caf0:	f2c0 8109 	blt.w	801cd06 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801caf4:	f103 3aff 	add.w	sl, r3, #4294967295
 801caf8:	4550      	cmp	r0, sl
 801cafa:	f280 8104 	bge.w	801cd06 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801cafe:	fa0f f38e 	sxth.w	r3, lr
 801cb02:	fb00 1103 	mla	r1, r0, r3, r1
 801cb06:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801cb08:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801cb0c:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801cb10:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801cb14:	f1bc 0f00 	cmp.w	ip, #0
 801cb18:	d007      	beq.n	801cb2a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801cb1a:	005b      	lsls	r3, r3, #1
 801cb1c:	eb0a 0003 	add.w	r0, sl, r3
 801cb20:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801cb24:	930c      	str	r3, [sp, #48]	@ 0x30
 801cb26:	8843      	ldrh	r3, [r0, #2]
 801cb28:	930d      	str	r3, [sp, #52]	@ 0x34
 801cb2a:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801cb2e:	fb12 f30c 	smulbb	r3, r2, ip
 801cb32:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801cb36:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801cb3a:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801cb3e:	10db      	asrs	r3, r3, #3
 801cb40:	ea40 000e 	orr.w	r0, r0, lr
 801cb44:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801cb48:	f1cc 0e10 	rsb	lr, ip, #16
 801cb4c:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801cb50:	ebae 0e02 	sub.w	lr, lr, r2
 801cb54:	ea4a 0101 	orr.w	r1, sl, r1
 801cb58:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801cb5c:	4351      	muls	r1, r2
 801cb5e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801cb60:	9f08      	ldr	r7, [sp, #32]
 801cb62:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801cb66:	fb0e 1e00 	mla	lr, lr, r0, r1
 801cb6a:	0410      	lsls	r0, r2, #16
 801cb6c:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801cb70:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801cb74:	4310      	orrs	r0, r2
 801cb76:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801cb78:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801cb7a:	0412      	lsls	r2, r2, #16
 801cb7c:	fb03 e000 	mla	r0, r3, r0, lr
 801cb80:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801cb84:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801cb88:	ea42 020e 	orr.w	r2, r2, lr
 801cb8c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801cb90:	fb03 0302 	mla	r3, r3, r2, r0
 801cb94:	0d5a      	lsrs	r2, r3, #21
 801cb96:	095b      	lsrs	r3, r3, #5
 801cb98:	f8b8 0000 	ldrh.w	r0, [r8]
 801cb9c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801cba0:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801cba4:	4313      	orrs	r3, r2
 801cba6:	b29b      	uxth	r3, r3
 801cba8:	1201      	asrs	r1, r0, #8
 801cbaa:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 801cbae:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801cbb2:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801cbb6:	fb11 f107 	smulbb	r1, r1, r7
 801cbba:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801cbbe:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801cbc2:	00c0      	lsls	r0, r0, #3
 801cbc4:	fb0c 1c02 	mla	ip, ip, r2, r1
 801cbc8:	b2c0      	uxtb	r0, r0
 801cbca:	10d9      	asrs	r1, r3, #3
 801cbcc:	00db      	lsls	r3, r3, #3
 801cbce:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801cbd2:	b2db      	uxtb	r3, r3
 801cbd4:	fb10 f007 	smulbb	r0, r0, r7
 801cbd8:	fa1f fc8c 	uxth.w	ip, ip
 801cbdc:	fb03 0302 	mla	r3, r3, r2, r0
 801cbe0:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801cbe4:	fb1e fe07 	smulbb	lr, lr, r7
 801cbe8:	fb01 e102 	mla	r1, r1, r2, lr
 801cbec:	b29a      	uxth	r2, r3
 801cbee:	f10c 0301 	add.w	r3, ip, #1
 801cbf2:	b289      	uxth	r1, r1
 801cbf4:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801cbf8:	1c53      	adds	r3, r2, #1
 801cbfa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801cbfe:	1c4a      	adds	r2, r1, #1
 801cc00:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801cc04:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801cc08:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801cc0c:	0949      	lsrs	r1, r1, #5
 801cc0e:	ea43 030c 	orr.w	r3, r3, ip
 801cc12:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801cc16:	430b      	orrs	r3, r1
 801cc18:	f8a8 3000 	strh.w	r3, [r8]
 801cc1c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801cc1e:	441c      	add	r4, r3
 801cc20:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801cc22:	f108 0802 	add.w	r8, r8, #2
 801cc26:	441e      	add	r6, r3
 801cc28:	f109 39ff 	add.w	r9, r9, #4294967295
 801cc2c:	e74a      	b.n	801cac4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801cc2e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801cc30:	441c      	add	r4, r3
 801cc32:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801cc34:	441e      	add	r6, r3
 801cc36:	9b07      	ldr	r3, [sp, #28]
 801cc38:	3302      	adds	r3, #2
 801cc3a:	3d01      	subs	r5, #1
 801cc3c:	9307      	str	r3, [sp, #28]
 801cc3e:	e722      	b.n	801ca86 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801cc40:	d022      	beq.n	801cc88 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801cc42:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801cc44:	1e6b      	subs	r3, r5, #1
 801cc46:	fb00 4003 	mla	r0, r0, r3, r4
 801cc4a:	1400      	asrs	r0, r0, #16
 801cc4c:	f53f af37 	bmi.w	801cabe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801cc50:	3901      	subs	r1, #1
 801cc52:	4288      	cmp	r0, r1
 801cc54:	f6bf af33 	bge.w	801cabe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801cc58:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801cc5a:	fb01 6303 	mla	r3, r1, r3, r6
 801cc5e:	141b      	asrs	r3, r3, #16
 801cc60:	f53f af2d 	bmi.w	801cabe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801cc64:	3a01      	subs	r2, #1
 801cc66:	4293      	cmp	r3, r2
 801cc68:	f6bf af29 	bge.w	801cabe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801cc6c:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801cc70:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 801cc74:	46a8      	mov	r8, r5
 801cc76:	f1b8 0f00 	cmp.w	r8, #0
 801cc7a:	dc5e      	bgt.n	801cd3a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801cc7c:	9b07      	ldr	r3, [sp, #28]
 801cc7e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801cc82:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801cc86:	9307      	str	r3, [sp, #28]
 801cc88:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801cc8a:	2b00      	cmp	r3, #0
 801cc8c:	f340 80f6 	ble.w	801ce7c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801cc90:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cc94:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801cc98:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801cc9c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801cc9e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cca2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cca6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ccaa:	eef0 6a62 	vmov.f32	s13, s5
 801ccae:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ccb2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ccb6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ccba:	ee16 4a90 	vmov	r4, s13
 801ccbe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ccc2:	eef0 6a43 	vmov.f32	s13, s6
 801ccc6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ccca:	ee12 2a90 	vmov	r2, s5
 801ccce:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ccd2:	fb92 f3f3 	sdiv	r3, r2, r3
 801ccd6:	ee13 2a10 	vmov	r2, s6
 801ccda:	931f      	str	r3, [sp, #124]	@ 0x7c
 801ccdc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ccde:	fb92 f3f3 	sdiv	r3, r2, r3
 801cce2:	9320      	str	r3, [sp, #128]	@ 0x80
 801cce4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801cce6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801cce8:	3b01      	subs	r3, #1
 801ccea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ccee:	930a      	str	r3, [sp, #40]	@ 0x28
 801ccf0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ccf2:	ee16 6a90 	vmov	r6, s13
 801ccf6:	bf14      	ite	ne
 801ccf8:	461d      	movne	r5, r3
 801ccfa:	4615      	moveq	r5, r2
 801ccfc:	eeb0 3a67 	vmov.f32	s6, s15
 801cd00:	eef0 2a47 	vmov.f32	s5, s14
 801cd04:	e6b0      	b.n	801ca68 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801cd06:	f111 0a01 	adds.w	sl, r1, #1
 801cd0a:	d487      	bmi.n	801cc1c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801cd0c:	45d6      	cmp	lr, sl
 801cd0e:	db85      	blt.n	801cc1c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801cd10:	f110 0a01 	adds.w	sl, r0, #1
 801cd14:	d482      	bmi.n	801cc1c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801cd16:	4553      	cmp	r3, sl
 801cd18:	db80      	blt.n	801cc1c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801cd1a:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 801cd1c:	9101      	str	r1, [sp, #4]
 801cd1e:	b21b      	sxth	r3, r3
 801cd20:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801cd24:	9300      	str	r3, [sp, #0]
 801cd26:	e9cd c704 	strd	ip, r7, [sp, #16]
 801cd2a:	fa0f f38e 	sxth.w	r3, lr
 801cd2e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801cd30:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801cd32:	4641      	mov	r1, r8
 801cd34:	f7ff fdb4 	bl	801c8a0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801cd38:	e770      	b.n	801cc1c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801cd3a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cd3c:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801cd3e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cd42:	1430      	asrs	r0, r6, #16
 801cd44:	1423      	asrs	r3, r4, #16
 801cd46:	fb01 3000 	mla	r0, r1, r0, r3
 801cd4a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801cd4c:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801cd50:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801cd54:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801cd58:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801cd5c:	8858      	ldrh	r0, [r3, #2]
 801cd5e:	f1be 0f00 	cmp.w	lr, #0
 801cd62:	d00b      	beq.n	801cd7c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801cd64:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801cd68:	3901      	subs	r1, #1
 801cd6a:	0049      	lsls	r1, r1, #1
 801cd6c:	3102      	adds	r1, #2
 801cd6e:	eb03 0b01 	add.w	fp, r3, r1
 801cd72:	5a5b      	ldrh	r3, [r3, r1]
 801cd74:	930e      	str	r3, [sp, #56]	@ 0x38
 801cd76:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801cd7a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801cd7c:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801cd80:	fb12 f30e 	smulbb	r3, r2, lr
 801cd84:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801cd88:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801cd8c:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
 801cd90:	10db      	asrs	r3, r3, #3
 801cd92:	ea41 010c 	orr.w	r1, r1, ip
 801cd96:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801cd9a:	f1ce 0c10 	rsb	ip, lr, #16
 801cd9e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801cda2:	ebac 0c02 	sub.w	ip, ip, r2
 801cda6:	ea4b 0000 	orr.w	r0, fp, r0
 801cdaa:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801cdae:	4350      	muls	r0, r2
 801cdb0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801cdb2:	9f08      	ldr	r7, [sp, #32]
 801cdb4:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801cdb8:	fb0c 0c01 	mla	ip, ip, r1, r0
 801cdbc:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801cdc0:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
 801cdc4:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801cdc6:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801cdc8:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801cdcc:	0412      	lsls	r2, r2, #16
 801cdce:	ea4b 0101 	orr.w	r1, fp, r1
 801cdd2:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801cdd6:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801cdda:	fb03 c101 	mla	r1, r3, r1, ip
 801cdde:	4302      	orrs	r2, r0
 801cde0:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801cde4:	fb03 1202 	mla	r2, r3, r2, r1
 801cde8:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801cdec:	0952      	lsrs	r2, r2, #5
 801cdee:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
 801cdf2:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801cdf6:	f8b9 2000 	ldrh.w	r2, [r9]
 801cdfa:	ea4b 0303 	orr.w	r3, fp, r3
 801cdfe:	b29b      	uxth	r3, r3
 801ce00:	1211      	asrs	r1, r2, #8
 801ce02:	1218      	asrs	r0, r3, #8
 801ce04:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801ce08:	fb11 f107 	smulbb	r1, r1, r7
 801ce0c:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801ce10:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801ce14:	00d2      	lsls	r2, r2, #3
 801ce16:	fb00 100a 	mla	r0, r0, sl, r1
 801ce1a:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801ce1e:	10d9      	asrs	r1, r3, #3
 801ce20:	b2d2      	uxtb	r2, r2
 801ce22:	00db      	lsls	r3, r3, #3
 801ce24:	fb1c fc07 	smulbb	ip, ip, r7
 801ce28:	fb12 f207 	smulbb	r2, r2, r7
 801ce2c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801ce30:	b2db      	uxtb	r3, r3
 801ce32:	b280      	uxth	r0, r0
 801ce34:	fb01 c10a 	mla	r1, r1, sl, ip
 801ce38:	fb03 230a 	mla	r3, r3, sl, r2
 801ce3c:	b29b      	uxth	r3, r3
 801ce3e:	b289      	uxth	r1, r1
 801ce40:	1c42      	adds	r2, r0, #1
 801ce42:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ce46:	f101 0c01 	add.w	ip, r1, #1
 801ce4a:	1c5a      	adds	r2, r3, #1
 801ce4c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801ce50:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801ce54:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801ce56:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801ce5a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ce5e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801ce62:	4310      	orrs	r0, r2
 801ce64:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801ce68:	441c      	add	r4, r3
 801ce6a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ce6c:	ea40 000c 	orr.w	r0, r0, ip
 801ce70:	f829 0b02 	strh.w	r0, [r9], #2
 801ce74:	441e      	add	r6, r3
 801ce76:	f108 38ff 	add.w	r8, r8, #4294967295
 801ce7a:	e6fc      	b.n	801cc76 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801ce7c:	b013      	add	sp, #76	@ 0x4c
 801ce7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ce82 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801ce82:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801ce86:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801ce8a:	fb0e 4703 	mla	r7, lr, r3, r4
 801ce8e:	f1be 0f00 	cmp.w	lr, #0
 801ce92:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801ce96:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
 801ce9a:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
 801ce9e:	8808      	ldrh	r0, [r1, #0]
 801cea0:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801cea4:	db60      	blt.n	801cf68 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801cea6:	45f1      	cmp	r9, lr
 801cea8:	dd5e      	ble.n	801cf68 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801ceaa:	2c00      	cmp	r4, #0
 801ceac:	db5a      	blt.n	801cf64 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801ceae:	42a3      	cmp	r3, r4
 801ceb0:	dd58      	ble.n	801cf64 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801ceb2:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801ceb6:	1c62      	adds	r2, r4, #1
 801ceb8:	d459      	bmi.n	801cf6e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801ceba:	4293      	cmp	r3, r2
 801cebc:	dd57      	ble.n	801cf6e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801cebe:	2d00      	cmp	r5, #0
 801cec0:	d055      	beq.n	801cf6e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801cec2:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801cec6:	f11e 0e01 	adds.w	lr, lr, #1
 801ceca:	d454      	bmi.n	801cf76 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801cecc:	45f1      	cmp	r9, lr
 801cece:	dd52      	ble.n	801cf76 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801ced0:	2e00      	cmp	r6, #0
 801ced2:	d050      	beq.n	801cf76 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801ced4:	2c00      	cmp	r4, #0
 801ced6:	db4c      	blt.n	801cf72 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801ced8:	42a3      	cmp	r3, r4
 801ceda:	dd4a      	ble.n	801cf72 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801cedc:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801cee0:	3401      	adds	r4, #1
 801cee2:	d405      	bmi.n	801cef0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801cee4:	42a3      	cmp	r3, r4
 801cee6:	dd03      	ble.n	801cef0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801cee8:	b115      	cbz	r5, 801cef0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801ceea:	3301      	adds	r3, #1
 801ceec:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801cef0:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801cef4:	fb15 f406 	smulbb	r4, r5, r6
 801cef8:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801cefc:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801cf00:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801cf04:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801cf08:	ea43 0c0c 	orr.w	ip, r3, ip
 801cf0c:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801cf10:	f1c6 0310 	rsb	r3, r6, #16
 801cf14:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801cf18:	1b5b      	subs	r3, r3, r5
 801cf1a:	ea4e 0707 	orr.w	r7, lr, r7
 801cf1e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801cf22:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801cf26:	437d      	muls	r5, r7
 801cf28:	fb03 5c0c 	mla	ip, r3, ip, r5
 801cf2c:	0403      	lsls	r3, r0, #16
 801cf2e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801cf32:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801cf36:	4318      	orrs	r0, r3
 801cf38:	0413      	lsls	r3, r2, #16
 801cf3a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801cf3e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801cf42:	4313      	orrs	r3, r2
 801cf44:	fb04 c000 	mla	r0, r4, r0, ip
 801cf48:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801cf4c:	fb06 0003 	mla	r0, r6, r3, r0
 801cf50:	0d43      	lsrs	r3, r0, #21
 801cf52:	0940      	lsrs	r0, r0, #5
 801cf54:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801cf58:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801cf5c:	4318      	orrs	r0, r3
 801cf5e:	8008      	strh	r0, [r1, #0]
 801cf60:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801cf64:	4684      	mov	ip, r0
 801cf66:	e7a6      	b.n	801ceb6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801cf68:	4607      	mov	r7, r0
 801cf6a:	4684      	mov	ip, r0
 801cf6c:	e7ab      	b.n	801cec6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801cf6e:	4607      	mov	r7, r0
 801cf70:	e7a9      	b.n	801cec6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801cf72:	4602      	mov	r2, r0
 801cf74:	e7b4      	b.n	801cee0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801cf76:	4602      	mov	r2, r0
 801cf78:	e7ba      	b.n	801cef0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801cf7a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cf7a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cf7e:	b08f      	sub	sp, #60	@ 0x3c
 801cf80:	461d      	mov	r5, r3
 801cf82:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801cf84:	920c      	str	r2, [sp, #48]	@ 0x30
 801cf86:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
 801cf8a:	9107      	str	r1, [sp, #28]
 801cf8c:	6859      	ldr	r1, [r3, #4]
 801cf8e:	681b      	ldr	r3, [r3, #0]
 801cf90:	900d      	str	r0, [sp, #52]	@ 0x34
 801cf92:	fb01 2707 	mla	r7, r1, r7, r2
 801cf96:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801cf9a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801cf9c:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
 801cfa0:	f8d3 8000 	ldr.w	r8, [r3]
 801cfa4:	9b07      	ldr	r3, [sp, #28]
 801cfa6:	2b00      	cmp	r3, #0
 801cfa8:	dc03      	bgt.n	801cfb2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801cfaa:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801cfac:	2b00      	cmp	r3, #0
 801cfae:	f340 8181 	ble.w	801d2b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801cfb2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801cfb4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cfb8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801cfbc:	1e48      	subs	r0, r1, #1
 801cfbe:	f102 3cff 	add.w	ip, r2, #4294967295
 801cfc2:	2d00      	cmp	r5, #0
 801cfc4:	f340 809b 	ble.w	801d0fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801cfc8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801cfcc:	ea4f 4326 	mov.w	r3, r6, asr #16
 801cfd0:	d406      	bmi.n	801cfe0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801cfd2:	4586      	cmp	lr, r0
 801cfd4:	da04      	bge.n	801cfe0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801cfd6:	2b00      	cmp	r3, #0
 801cfd8:	db02      	blt.n	801cfe0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801cfda:	4563      	cmp	r3, ip
 801cfdc:	f2c0 8090 	blt.w	801d100 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801cfe0:	f11e 0e01 	adds.w	lr, lr, #1
 801cfe4:	f100 8084 	bmi.w	801d0f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801cfe8:	4571      	cmp	r1, lr
 801cfea:	f2c0 8081 	blt.w	801d0f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801cfee:	3301      	adds	r3, #1
 801cff0:	d47e      	bmi.n	801d0f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801cff2:	429a      	cmp	r2, r3
 801cff4:	db7c      	blt.n	801d0f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801cff6:	46aa      	mov	sl, r5
 801cff8:	46b9      	mov	r9, r7
 801cffa:	f1ba 0f00 	cmp.w	sl, #0
 801cffe:	f340 8099 	ble.w	801d134 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801d002:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d004:	1421      	asrs	r1, r4, #16
 801d006:	ea4f 4026 	mov.w	r0, r6, asr #16
 801d00a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d00e:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801d012:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801d016:	f100 80d0 	bmi.w	801d1ba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801d01a:	f10e 3bff 	add.w	fp, lr, #4294967295
 801d01e:	4559      	cmp	r1, fp
 801d020:	f280 80cb 	bge.w	801d1ba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801d024:	2800      	cmp	r0, #0
 801d026:	f2c0 80c8 	blt.w	801d1ba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801d02a:	f103 3bff 	add.w	fp, r3, #4294967295
 801d02e:	4558      	cmp	r0, fp
 801d030:	f280 80c3 	bge.w	801d1ba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801d034:	fa0f fe8e 	sxth.w	lr, lr
 801d038:	fb00 110e 	mla	r1, r0, lr, r1
 801d03c:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801d040:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801d044:	8841      	ldrh	r1, [r0, #2]
 801d046:	f1bc 0f00 	cmp.w	ip, #0
 801d04a:	d00b      	beq.n	801d064 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801d04c:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
 801d050:	3b01      	subs	r3, #1
 801d052:	005b      	lsls	r3, r3, #1
 801d054:	3302      	adds	r3, #2
 801d056:	eb00 0e03 	add.w	lr, r0, r3
 801d05a:	5ac3      	ldrh	r3, [r0, r3]
 801d05c:	9308      	str	r3, [sp, #32]
 801d05e:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801d062:	9309      	str	r3, [sp, #36]	@ 0x24
 801d064:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801d068:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801d06c:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801d070:	ea40 000b 	orr.w	r0, r0, fp
 801d074:	fb12 f30c 	smulbb	r3, r2, ip
 801d078:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801d07c:	10db      	asrs	r3, r3, #3
 801d07e:	f1cc 0e10 	rsb	lr, ip, #16
 801d082:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801d086:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801d08a:	ebae 0e02 	sub.w	lr, lr, r2
 801d08e:	ea4b 0101 	orr.w	r1, fp, r1
 801d092:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801d096:	4351      	muls	r1, r2
 801d098:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801d09a:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801d09e:	fb0e 1e00 	mla	lr, lr, r0, r1
 801d0a2:	0410      	lsls	r0, r2, #16
 801d0a4:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801d0a8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d0ac:	4310      	orrs	r0, r2
 801d0ae:	9a08      	ldr	r2, [sp, #32]
 801d0b0:	9908      	ldr	r1, [sp, #32]
 801d0b2:	0412      	lsls	r2, r2, #16
 801d0b4:	fb03 e000 	mla	r0, r3, r0, lr
 801d0b8:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801d0bc:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801d0c0:	ea42 020e 	orr.w	r2, r2, lr
 801d0c4:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801d0c8:	fb03 0302 	mla	r3, r3, r2, r0
 801d0cc:	0d5a      	lsrs	r2, r3, #21
 801d0ce:	095b      	lsrs	r3, r3, #5
 801d0d0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d0d4:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801d0d8:	4313      	orrs	r3, r2
 801d0da:	f8a9 3000 	strh.w	r3, [r9]
 801d0de:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801d0e0:	441c      	add	r4, r3
 801d0e2:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801d0e4:	f109 0902 	add.w	r9, r9, #2
 801d0e8:	441e      	add	r6, r3
 801d0ea:	f10a 3aff 	add.w	sl, sl, #4294967295
 801d0ee:	e784      	b.n	801cffa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801d0f0:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801d0f2:	441c      	add	r4, r3
 801d0f4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801d0f6:	3d01      	subs	r5, #1
 801d0f8:	441e      	add	r6, r3
 801d0fa:	3702      	adds	r7, #2
 801d0fc:	e761      	b.n	801cfc2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801d0fe:	d01d      	beq.n	801d13c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801d100:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801d102:	1e6b      	subs	r3, r5, #1
 801d104:	fb00 4003 	mla	r0, r0, r3, r4
 801d108:	1400      	asrs	r0, r0, #16
 801d10a:	f53f af74 	bmi.w	801cff6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d10e:	3901      	subs	r1, #1
 801d110:	4288      	cmp	r0, r1
 801d112:	f6bf af70 	bge.w	801cff6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d116:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801d118:	fb01 6303 	mla	r3, r1, r3, r6
 801d11c:	141b      	asrs	r3, r3, #16
 801d11e:	f53f af6a 	bmi.w	801cff6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d122:	3a01      	subs	r2, #1
 801d124:	4293      	cmp	r3, r2
 801d126:	f6bf af66 	bge.w	801cff6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d12a:	46a9      	mov	r9, r5
 801d12c:	46ba      	mov	sl, r7
 801d12e:	f1b9 0f00 	cmp.w	r9, #0
 801d132:	dc5a      	bgt.n	801d1ea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 801d134:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801d138:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801d13c:	9b07      	ldr	r3, [sp, #28]
 801d13e:	2b00      	cmp	r3, #0
 801d140:	f340 80b8 	ble.w	801d2b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801d144:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d148:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801d14c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d150:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801d152:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d156:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d15a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d15e:	eef0 6a62 	vmov.f32	s13, s5
 801d162:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d166:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d16a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d16e:	ee16 4a90 	vmov	r4, s13
 801d172:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d176:	eef0 6a43 	vmov.f32	s13, s6
 801d17a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d17e:	ee12 2a90 	vmov	r2, s5
 801d182:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d186:	fb92 f3f3 	sdiv	r3, r2, r3
 801d18a:	ee13 2a10 	vmov	r2, s6
 801d18e:	931b      	str	r3, [sp, #108]	@ 0x6c
 801d190:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801d192:	fb92 f3f3 	sdiv	r3, r2, r3
 801d196:	931c      	str	r3, [sp, #112]	@ 0x70
 801d198:	9b07      	ldr	r3, [sp, #28]
 801d19a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801d19c:	3b01      	subs	r3, #1
 801d19e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d1a2:	9307      	str	r3, [sp, #28]
 801d1a4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801d1a6:	ee16 6a90 	vmov	r6, s13
 801d1aa:	bf14      	ite	ne
 801d1ac:	461d      	movne	r5, r3
 801d1ae:	4615      	moveq	r5, r2
 801d1b0:	eeb0 3a67 	vmov.f32	s6, s15
 801d1b4:	eef0 2a47 	vmov.f32	s5, s14
 801d1b8:	e6f4      	b.n	801cfa4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801d1ba:	f111 0b01 	adds.w	fp, r1, #1
 801d1be:	d48e      	bmi.n	801d0de <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801d1c0:	45de      	cmp	lr, fp
 801d1c2:	db8c      	blt.n	801d0de <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801d1c4:	f110 0b01 	adds.w	fp, r0, #1
 801d1c8:	d489      	bmi.n	801d0de <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801d1ca:	455b      	cmp	r3, fp
 801d1cc:	db87      	blt.n	801d0de <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801d1ce:	b21b      	sxth	r3, r3
 801d1d0:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801d1d4:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801d1d8:	9300      	str	r3, [sp, #0]
 801d1da:	4642      	mov	r2, r8
 801d1dc:	fa0f f38e 	sxth.w	r3, lr
 801d1e0:	4649      	mov	r1, r9
 801d1e2:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801d1e4:	f7ff fe4d 	bl	801ce82 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801d1e8:	e779      	b.n	801d0de <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801d1ea:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d1ec:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801d1f0:	1420      	asrs	r0, r4, #16
 801d1f2:	1431      	asrs	r1, r6, #16
 801d1f4:	fb03 0101 	mla	r1, r3, r1, r0
 801d1f8:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801d1fc:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801d200:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801d204:	8841      	ldrh	r1, [r0, #2]
 801d206:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d20a:	f1be 0f00 	cmp.w	lr, #0
 801d20e:	d00b      	beq.n	801d228 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801d210:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 801d214:	3b01      	subs	r3, #1
 801d216:	005b      	lsls	r3, r3, #1
 801d218:	3302      	adds	r3, #2
 801d21a:	eb00 0b03 	add.w	fp, r0, r3
 801d21e:	5ac3      	ldrh	r3, [r0, r3]
 801d220:	930a      	str	r3, [sp, #40]	@ 0x28
 801d222:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801d226:	930b      	str	r3, [sp, #44]	@ 0x2c
 801d228:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801d22c:	fb12 f30e 	smulbb	r3, r2, lr
 801d230:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801d234:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801d238:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801d23c:	10db      	asrs	r3, r3, #3
 801d23e:	ea40 000c 	orr.w	r0, r0, ip
 801d242:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801d246:	f1ce 0c10 	rsb	ip, lr, #16
 801d24a:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801d24e:	ebac 0c02 	sub.w	ip, ip, r2
 801d252:	ea4b 0101 	orr.w	r1, fp, r1
 801d256:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801d25a:	4351      	muls	r1, r2
 801d25c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801d25e:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801d262:	fb0c 1c00 	mla	ip, ip, r0, r1
 801d266:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801d26a:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
 801d26e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801d270:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801d272:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801d276:	0412      	lsls	r2, r2, #16
 801d278:	ea4b 0000 	orr.w	r0, fp, r0
 801d27c:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801d280:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
 801d284:	fb03 c000 	mla	r0, r3, r0, ip
 801d288:	ea42 0b0b 	orr.w	fp, r2, fp
 801d28c:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801d290:	fb03 000b 	mla	r0, r3, fp, r0
 801d294:	0d43      	lsrs	r3, r0, #21
 801d296:	0940      	lsrs	r0, r0, #5
 801d298:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d29c:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801d2a0:	4318      	orrs	r0, r3
 801d2a2:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801d2a4:	f82a 0b02 	strh.w	r0, [sl], #2
 801d2a8:	441c      	add	r4, r3
 801d2aa:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801d2ac:	f109 39ff 	add.w	r9, r9, #4294967295
 801d2b0:	441e      	add	r6, r3
 801d2b2:	e73c      	b.n	801d12e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801d2b4:	b00f      	add	sp, #60	@ 0x3c
 801d2b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d2ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801d2ba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d2be:	b085      	sub	sp, #20
 801d2c0:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 801d2c4:	9102      	str	r1, [sp, #8]
 801d2c6:	2c00      	cmp	r4, #0
 801d2c8:	fb04 7103 	mla	r1, r4, r3, r7
 801d2cc:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 801d2d0:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801d2d4:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 801d2d8:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801d2dc:	f2c0 811b 	blt.w	801d516 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801d2e0:	45a6      	cmp	lr, r4
 801d2e2:	f340 8118 	ble.w	801d516 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801d2e6:	2f00      	cmp	r7, #0
 801d2e8:	f2c0 8113 	blt.w	801d512 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801d2ec:	42bb      	cmp	r3, r7
 801d2ee:	f340 8110 	ble.w	801d512 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801d2f2:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801d2f6:	1c7a      	adds	r2, r7, #1
 801d2f8:	f100 8110 	bmi.w	801d51c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801d2fc:	4293      	cmp	r3, r2
 801d2fe:	f340 810d 	ble.w	801d51c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801d302:	2e00      	cmp	r6, #0
 801d304:	f000 810c 	beq.w	801d520 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801d308:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801d30c:	3401      	adds	r4, #1
 801d30e:	f100 810b 	bmi.w	801d528 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801d312:	45a6      	cmp	lr, r4
 801d314:	f340 8108 	ble.w	801d528 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801d318:	2800      	cmp	r0, #0
 801d31a:	f000 8108 	beq.w	801d52e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801d31e:	2f00      	cmp	r7, #0
 801d320:	f2c0 8100 	blt.w	801d524 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801d324:	42bb      	cmp	r3, r7
 801d326:	f340 80fd 	ble.w	801d524 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801d32a:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801d32e:	3701      	adds	r7, #1
 801d330:	f100 8100 	bmi.w	801d534 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801d334:	42bb      	cmp	r3, r7
 801d336:	f340 80fd 	ble.w	801d534 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801d33a:	2e00      	cmp	r6, #0
 801d33c:	f000 80fc 	beq.w	801d538 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801d340:	3301      	adds	r3, #1
 801d342:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801d346:	b2b6      	uxth	r6, r6
 801d348:	b280      	uxth	r0, r0
 801d34a:	fb00 fe06 	mul.w	lr, r0, r6
 801d34e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801d352:	0136      	lsls	r6, r6, #4
 801d354:	eba6 070e 	sub.w	r7, r6, lr
 801d358:	b280      	uxth	r0, r0
 801d35a:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801d35e:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801d362:	b2bf      	uxth	r7, r7
 801d364:	1a1b      	subs	r3, r3, r0
 801d366:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801d36a:	b29b      	uxth	r3, r3
 801d36c:	fb0a f607 	mul.w	r6, sl, r7
 801d370:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801d374:	fb0b 6603 	mla	r6, fp, r3, r6
 801d378:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801d37c:	fb00 6609 	mla	r6, r0, r9, r6
 801d380:	fb0e 6608 	mla	r6, lr, r8, r6
 801d384:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801d388:	9600      	str	r6, [sp, #0]
 801d38a:	2e00      	cmp	r6, #0
 801d38c:	f000 80be 	beq.w	801d50c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801d390:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801d394:	fb0b fc0c 	mul.w	ip, fp, ip
 801d398:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801d39c:	fb0b f505 	mul.w	r5, fp, r5
 801d3a0:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801d3a4:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801d3a8:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801d3ac:	44dc      	add	ip, fp
 801d3ae:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d3b2:	9501      	str	r5, [sp, #4]
 801d3b4:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801d3b8:	9503      	str	r5, [sp, #12]
 801d3ba:	9d01      	ldr	r5, [sp, #4]
 801d3bc:	9e02      	ldr	r6, [sp, #8]
 801d3be:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801d3c2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801d3c6:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801d3ca:	fb0a fc0c 	mul.w	ip, sl, ip
 801d3ce:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801d3d2:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801d3d6:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801d3da:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801d3de:	4465      	add	r5, ip
 801d3e0:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801d3e4:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801d3e8:	fb09 fc0c 	mul.w	ip, r9, ip
 801d3ec:	fb09 f904 	mul.w	r9, r9, r4
 801d3f0:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801d3f4:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801d3f8:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801d3fc:	fb08 f404 	mul.w	r4, r8, r4
 801d400:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801d404:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801d408:	fb08 f802 	mul.w	r8, r8, r2
 801d40c:	fb0a fa01 	mul.w	sl, sl, r1
 801d410:	0a22      	lsrs	r2, r4, #8
 801d412:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801d416:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801d41a:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801d41e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801d422:	4414      	add	r4, r2
 801d424:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801d428:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801d42c:	0a2d      	lsrs	r5, r5, #8
 801d42e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801d432:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801d436:	9a03      	ldr	r2, [sp, #12]
 801d438:	8836      	ldrh	r6, [r6, #0]
 801d43a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801d43e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801d442:	437d      	muls	r5, r7
 801d444:	4461      	add	r1, ip
 801d446:	0a24      	lsrs	r4, r4, #8
 801d448:	fb02 5503 	mla	r5, r2, r3, r5
 801d44c:	0a09      	lsrs	r1, r1, #8
 801d44e:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801d452:	fb04 540e 	mla	r4, r4, lr, r5
 801d456:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801d45a:	fb01 4100 	mla	r1, r1, r0, r4
 801d45e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d462:	0a09      	lsrs	r1, r1, #8
 801d464:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801d468:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801d46c:	fb07 f70a 	mul.w	r7, r7, sl
 801d470:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801d474:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801d478:	fb03 7101 	mla	r1, r3, r1, r7
 801d47c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d480:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801d484:	fb0e 1e08 	mla	lr, lr, r8, r1
 801d488:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801d48c:	fb00 e101 	mla	r1, r0, r1, lr
 801d490:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801d494:	9a00      	ldr	r2, [sp, #0]
 801d496:	b287      	uxth	r7, r0
 801d498:	437a      	muls	r2, r7
 801d49a:	0a09      	lsrs	r1, r1, #8
 801d49c:	1c53      	adds	r3, r2, #1
 801d49e:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801d4a2:	4321      	orrs	r1, r4
 801d4a4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d4a8:	1235      	asrs	r5, r6, #8
 801d4aa:	0c0a      	lsrs	r2, r1, #16
 801d4ac:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801d4b0:	b2db      	uxtb	r3, r3
 801d4b2:	fb12 f207 	smulbb	r2, r2, r7
 801d4b6:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801d4ba:	fb05 2503 	mla	r5, r5, r3, r2
 801d4be:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801d4c2:	10f2      	asrs	r2, r6, #3
 801d4c4:	b2c8      	uxtb	r0, r1
 801d4c6:	00f6      	lsls	r6, r6, #3
 801d4c8:	fb14 f407 	smulbb	r4, r4, r7
 801d4cc:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801d4d0:	b2f6      	uxtb	r6, r6
 801d4d2:	fb10 f007 	smulbb	r0, r0, r7
 801d4d6:	fb02 4203 	mla	r2, r2, r3, r4
 801d4da:	b2ad      	uxth	r5, r5
 801d4dc:	fb06 0303 	mla	r3, r6, r3, r0
 801d4e0:	b299      	uxth	r1, r3
 801d4e2:	b294      	uxth	r4, r2
 801d4e4:	1c6b      	adds	r3, r5, #1
 801d4e6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d4ea:	1c62      	adds	r2, r4, #1
 801d4ec:	1c4b      	adds	r3, r1, #1
 801d4ee:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801d4f2:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801d4f6:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801d4fa:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d4fe:	0952      	lsrs	r2, r2, #5
 801d500:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d504:	432b      	orrs	r3, r5
 801d506:	4313      	orrs	r3, r2
 801d508:	9a02      	ldr	r2, [sp, #8]
 801d50a:	8013      	strh	r3, [r2, #0]
 801d50c:	b005      	add	sp, #20
 801d50e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d512:	2500      	movs	r5, #0
 801d514:	e6ef      	b.n	801d2f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801d516:	2100      	movs	r1, #0
 801d518:	460d      	mov	r5, r1
 801d51a:	e6f7      	b.n	801d30c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801d51c:	2100      	movs	r1, #0
 801d51e:	e6f5      	b.n	801d30c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801d520:	4631      	mov	r1, r6
 801d522:	e6f3      	b.n	801d30c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801d524:	2400      	movs	r4, #0
 801d526:	e702      	b.n	801d32e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801d528:	2200      	movs	r2, #0
 801d52a:	4614      	mov	r4, r2
 801d52c:	e70b      	b.n	801d346 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801d52e:	4602      	mov	r2, r0
 801d530:	4604      	mov	r4, r0
 801d532:	e708      	b.n	801d346 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801d534:	2200      	movs	r2, #0
 801d536:	e706      	b.n	801d346 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801d538:	4632      	mov	r2, r6
 801d53a:	e704      	b.n	801d346 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801d53c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d53c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d540:	b09d      	sub	sp, #116	@ 0x74
 801d542:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
 801d546:	9219      	str	r2, [sp, #100]	@ 0x64
 801d548:	9307      	str	r3, [sp, #28]
 801d54a:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
 801d54c:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
 801d550:	931a      	str	r3, [sp, #104]	@ 0x68
 801d552:	9117      	str	r1, [sp, #92]	@ 0x5c
 801d554:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
 801d558:	901b      	str	r0, [sp, #108]	@ 0x6c
 801d55a:	6850      	ldr	r0, [r2, #4]
 801d55c:	6812      	ldr	r2, [r2, #0]
 801d55e:	fb00 1303 	mla	r3, r0, r3, r1
 801d562:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d566:	930a      	str	r3, [sp, #40]	@ 0x28
 801d568:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801d56a:	681b      	ldr	r3, [r3, #0]
 801d56c:	9310      	str	r3, [sp, #64]	@ 0x40
 801d56e:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801d572:	930b      	str	r3, [sp, #44]	@ 0x2c
 801d574:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801d576:	2b00      	cmp	r3, #0
 801d578:	dc03      	bgt.n	801d582 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801d57a:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801d57c:	2b00      	cmp	r3, #0
 801d57e:	f340 8375 	ble.w	801dc6c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801d582:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801d584:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d588:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d58c:	1e48      	subs	r0, r1, #1
 801d58e:	1e57      	subs	r7, r2, #1
 801d590:	9b07      	ldr	r3, [sp, #28]
 801d592:	2b00      	cmp	r3, #0
 801d594:	f340 818e 	ble.w	801d8b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801d598:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801d59c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801d5a0:	d406      	bmi.n	801d5b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801d5a2:	4584      	cmp	ip, r0
 801d5a4:	da04      	bge.n	801d5b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801d5a6:	2b00      	cmp	r3, #0
 801d5a8:	db02      	blt.n	801d5b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801d5aa:	42bb      	cmp	r3, r7
 801d5ac:	f2c0 8183 	blt.w	801d8b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801d5b0:	f11c 0c01 	adds.w	ip, ip, #1
 801d5b4:	f100 8173 	bmi.w	801d89e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801d5b8:	4561      	cmp	r1, ip
 801d5ba:	f2c0 8170 	blt.w	801d89e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801d5be:	3301      	adds	r3, #1
 801d5c0:	f100 816d 	bmi.w	801d89e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801d5c4:	429a      	cmp	r2, r3
 801d5c6:	f2c0 816a 	blt.w	801d89e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801d5ca:	9b07      	ldr	r3, [sp, #28]
 801d5cc:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801d5ce:	9318      	str	r3, [sp, #96]	@ 0x60
 801d5d0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801d5d2:	2b00      	cmp	r3, #0
 801d5d4:	f340 818c 	ble.w	801d8f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801d5d8:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 801d5da:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801d5dc:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801d5e0:	689b      	ldr	r3, [r3, #8]
 801d5e2:	1422      	asrs	r2, r4, #16
 801d5e4:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801d5e8:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801d5ec:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801d5f0:	f100 81cd 	bmi.w	801d98e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801d5f4:	f103 38ff 	add.w	r8, r3, #4294967295
 801d5f8:	4542      	cmp	r2, r8
 801d5fa:	f280 81c8 	bge.w	801d98e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801d5fe:	f1bc 0f00 	cmp.w	ip, #0
 801d602:	f2c0 81c4 	blt.w	801d98e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801d606:	f10e 38ff 	add.w	r8, lr, #4294967295
 801d60a:	45c4      	cmp	ip, r8
 801d60c:	f280 81bf 	bge.w	801d98e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801d610:	b21b      	sxth	r3, r3
 801d612:	fb0c 2203 	mla	r2, ip, r3, r2
 801d616:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801d618:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801d61c:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801d620:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801d624:	2800      	cmp	r0, #0
 801d626:	f000 81a9 	beq.w	801d97c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801d62a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801d62e:	950c      	str	r5, [sp, #48]	@ 0x30
 801d630:	0e2d      	lsrs	r5, r5, #24
 801d632:	9513      	str	r5, [sp, #76]	@ 0x4c
 801d634:	b181      	cbz	r1, 801d658 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801d636:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 801d63a:	3b01      	subs	r3, #1
 801d63c:	009b      	lsls	r3, r3, #2
 801d63e:	3304      	adds	r3, #4
 801d640:	eb08 0c03 	add.w	ip, r8, r3
 801d644:	f858 3003 	ldr.w	r3, [r8, r3]
 801d648:	9308      	str	r3, [sp, #32]
 801d64a:	0e1b      	lsrs	r3, r3, #24
 801d64c:	9311      	str	r3, [sp, #68]	@ 0x44
 801d64e:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801d652:	930d      	str	r3, [sp, #52]	@ 0x34
 801d654:	0e1b      	lsrs	r3, r3, #24
 801d656:	9314      	str	r3, [sp, #80]	@ 0x50
 801d658:	b280      	uxth	r0, r0
 801d65a:	b289      	uxth	r1, r1
 801d65c:	fb00 f901 	mul.w	r9, r0, r1
 801d660:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801d664:	0100      	lsls	r0, r0, #4
 801d666:	eba0 0809 	sub.w	r8, r0, r9
 801d66a:	b289      	uxth	r1, r1
 801d66c:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801d670:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801d672:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801d674:	fa1f f888 	uxth.w	r8, r8
 801d678:	1a5b      	subs	r3, r3, r1
 801d67a:	b29b      	uxth	r3, r3
 801d67c:	fb08 f000 	mul.w	r0, r8, r0
 801d680:	fb03 000e 	mla	r0, r3, lr, r0
 801d684:	fb01 0005 	mla	r0, r1, r5, r0
 801d688:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801d68a:	fb09 0005 	mla	r0, r9, r5, r0
 801d68e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801d692:	2800      	cmp	r0, #0
 801d694:	f000 80fa 	beq.w	801d88c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801d698:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801d69c:	d01b      	beq.n	801d6d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801d69e:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 801d6a2:	fb0e fa0a 	mul.w	sl, lr, sl
 801d6a6:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801d6aa:	fb0e fe02 	mul.w	lr, lr, r2
 801d6ae:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801d6b2:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801d6b6:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801d6ba:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801d6be:	4452      	add	r2, sl
 801d6c0:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801d6c4:	0a12      	lsrs	r2, r2, #8
 801d6c6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d6ca:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801d6ce:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801d6d2:	ea42 020c 	orr.w	r2, r2, ip
 801d6d6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801d6d8:	2dff      	cmp	r5, #255	@ 0xff
 801d6da:	d021      	beq.n	801d720 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801d6dc:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801d6de:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801d6e2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801d6e4:	fb05 fb0b 	mul.w	fp, r5, fp
 801d6e8:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801d6ea:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801d6ee:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801d6f0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801d6f4:	fb05 fa0a 	mul.w	sl, r5, sl
 801d6f8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801d6fc:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801d700:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801d704:	44de      	add	lr, fp
 801d706:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d70a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d70e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d712:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801d716:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801d71a:	ea4e 050a 	orr.w	r5, lr, sl
 801d71e:	950c      	str	r5, [sp, #48]	@ 0x30
 801d720:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801d722:	2dff      	cmp	r5, #255	@ 0xff
 801d724:	d021      	beq.n	801d76a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801d726:	9d08      	ldr	r5, [sp, #32]
 801d728:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801d72c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801d72e:	fb05 fb0b 	mul.w	fp, r5, fp
 801d732:	9d08      	ldr	r5, [sp, #32]
 801d734:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801d738:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801d73a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801d73e:	fb05 fa0a 	mul.w	sl, r5, sl
 801d742:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801d746:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801d74a:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801d74e:	44de      	add	lr, fp
 801d750:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d754:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d758:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d75c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801d760:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801d764:	ea4e 050a 	orr.w	r5, lr, sl
 801d768:	9508      	str	r5, [sp, #32]
 801d76a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801d76c:	2dff      	cmp	r5, #255	@ 0xff
 801d76e:	d021      	beq.n	801d7b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801d770:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801d772:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801d776:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801d778:	fb05 fb0b 	mul.w	fp, r5, fp
 801d77c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801d77e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801d782:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801d784:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801d788:	fb05 fa0a 	mul.w	sl, r5, sl
 801d78c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801d790:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801d794:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801d798:	44de      	add	lr, fp
 801d79a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d79e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d7a2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d7a6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801d7aa:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801d7ae:	ea4e 050a 	orr.w	r5, lr, sl
 801d7b2:	950d      	str	r5, [sp, #52]	@ 0x34
 801d7b4:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801d7b6:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801d7ba:	9d08      	ldr	r5, [sp, #32]
 801d7bc:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 801d7c0:	fb08 fc0c 	mul.w	ip, r8, ip
 801d7c4:	fb03 cc0e 	mla	ip, r3, lr, ip
 801d7c8:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801d7cc:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801d7ce:	fb01 cc0e 	mla	ip, r1, lr, ip
 801d7d2:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801d7d6:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801d7d8:	fb09 cc0e 	mla	ip, r9, lr, ip
 801d7dc:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801d7e0:	fb08 f80e 	mul.w	r8, r8, lr
 801d7e4:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801d7e8:	fb03 8202 	mla	r2, r3, r2, r8
 801d7ec:	9b08      	ldr	r3, [sp, #32]
 801d7ee:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801d7f0:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
 801d7f4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801d7f6:	fb01 220a 	mla	r2, r1, sl, r2
 801d7fa:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
 801d7fe:	fb09 2901 	mla	r9, r9, r1, r2
 801d802:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801d804:	883b      	ldrh	r3, [r7, #0]
 801d806:	4342      	muls	r2, r0
 801d808:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d80c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d810:	1c50      	adds	r0, r2, #1
 801d812:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d816:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801d81a:	ea4c 0c09 	orr.w	ip, ip, r9
 801d81e:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801d822:	1219      	asrs	r1, r3, #8
 801d824:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801d828:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801d82c:	b2c0      	uxtb	r0, r0
 801d82e:	fb12 f205 	smulbb	r2, r2, r5
 801d832:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801d836:	fb01 2100 	mla	r1, r1, r0, r2
 801d83a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801d83e:	10da      	asrs	r2, r3, #3
 801d840:	fa5f fc8c 	uxtb.w	ip, ip
 801d844:	00db      	lsls	r3, r3, #3
 801d846:	fb1c fc05 	smulbb	ip, ip, r5
 801d84a:	b2db      	uxtb	r3, r3
 801d84c:	b289      	uxth	r1, r1
 801d84e:	fb03 c300 	mla	r3, r3, r0, ip
 801d852:	fa1f fc83 	uxth.w	ip, r3
 801d856:	1c4b      	adds	r3, r1, #1
 801d858:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801d85c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801d860:	fb1e fe05 	smulbb	lr, lr, r5
 801d864:	f10c 0301 	add.w	r3, ip, #1
 801d868:	fb02 e200 	mla	r2, r2, r0, lr
 801d86c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801d870:	b292      	uxth	r2, r2
 801d872:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801d876:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d87a:	430b      	orrs	r3, r1
 801d87c:	1c51      	adds	r1, r2, #1
 801d87e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801d882:	0952      	lsrs	r2, r2, #5
 801d884:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d888:	4313      	orrs	r3, r2
 801d88a:	803b      	strh	r3, [r7, #0]
 801d88c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801d88e:	441c      	add	r4, r3
 801d890:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801d892:	441e      	add	r6, r3
 801d894:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801d896:	3b01      	subs	r3, #1
 801d898:	3702      	adds	r7, #2
 801d89a:	9318      	str	r3, [sp, #96]	@ 0x60
 801d89c:	e698      	b.n	801d5d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801d89e:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801d8a0:	441c      	add	r4, r3
 801d8a2:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801d8a4:	441e      	add	r6, r3
 801d8a6:	9b07      	ldr	r3, [sp, #28]
 801d8a8:	3b01      	subs	r3, #1
 801d8aa:	9307      	str	r3, [sp, #28]
 801d8ac:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d8ae:	3302      	adds	r3, #2
 801d8b0:	930a      	str	r3, [sp, #40]	@ 0x28
 801d8b2:	e66d      	b.n	801d590 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801d8b4:	d023      	beq.n	801d8fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801d8b6:	9b07      	ldr	r3, [sp, #28]
 801d8b8:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 801d8ba:	3b01      	subs	r3, #1
 801d8bc:	fb00 4003 	mla	r0, r0, r3, r4
 801d8c0:	1400      	asrs	r0, r0, #16
 801d8c2:	f53f ae82 	bmi.w	801d5ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801d8c6:	3901      	subs	r1, #1
 801d8c8:	4288      	cmp	r0, r1
 801d8ca:	f6bf ae7e 	bge.w	801d5ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801d8ce:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 801d8d0:	fb01 6303 	mla	r3, r1, r3, r6
 801d8d4:	141b      	asrs	r3, r3, #16
 801d8d6:	f53f ae78 	bmi.w	801d5ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801d8da:	3a01      	subs	r2, #1
 801d8dc:	4293      	cmp	r3, r2
 801d8de:	f6bf ae74 	bge.w	801d5ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801d8e2:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801d8e6:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801d8ea:	f1bb 0f00 	cmp.w	fp, #0
 801d8ee:	dc6c      	bgt.n	801d9ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801d8f0:	9b07      	ldr	r3, [sp, #28]
 801d8f2:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801d8f6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d8f8:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801d8fc:	930a      	str	r3, [sp, #40]	@ 0x28
 801d8fe:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801d900:	2b00      	cmp	r3, #0
 801d902:	f340 81b3 	ble.w	801dc6c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801d906:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d90a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801d90e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d912:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801d914:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d918:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d91c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d920:	eef0 6a62 	vmov.f32	s13, s5
 801d924:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d928:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d92c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d930:	ee16 4a90 	vmov	r4, s13
 801d934:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d938:	eef0 6a43 	vmov.f32	s13, s6
 801d93c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d940:	ee12 2a90 	vmov	r2, s5
 801d944:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d948:	fb92 f3f3 	sdiv	r3, r2, r3
 801d94c:	ee13 2a10 	vmov	r2, s6
 801d950:	9329      	str	r3, [sp, #164]	@ 0xa4
 801d952:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801d954:	fb92 f3f3 	sdiv	r3, r2, r3
 801d958:	932a      	str	r3, [sp, #168]	@ 0xa8
 801d95a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801d95c:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 801d95e:	3b01      	subs	r3, #1
 801d960:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d964:	9317      	str	r3, [sp, #92]	@ 0x5c
 801d966:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801d968:	bf08      	it	eq
 801d96a:	4613      	moveq	r3, r2
 801d96c:	ee16 6a90 	vmov	r6, s13
 801d970:	9307      	str	r3, [sp, #28]
 801d972:	eeb0 3a67 	vmov.f32	s6, s15
 801d976:	eef0 2a47 	vmov.f32	s5, s14
 801d97a:	e5fb      	b.n	801d574 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801d97c:	2900      	cmp	r1, #0
 801d97e:	f43f ae6b 	beq.w	801d658 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801d982:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801d986:	9308      	str	r3, [sp, #32]
 801d988:	0e1b      	lsrs	r3, r3, #24
 801d98a:	9311      	str	r3, [sp, #68]	@ 0x44
 801d98c:	e664      	b.n	801d658 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801d98e:	f112 0801 	adds.w	r8, r2, #1
 801d992:	f53f af7b 	bmi.w	801d88c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801d996:	4543      	cmp	r3, r8
 801d998:	f6ff af78 	blt.w	801d88c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801d99c:	f11c 0801 	adds.w	r8, ip, #1
 801d9a0:	f53f af74 	bmi.w	801d88c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801d9a4:	45c6      	cmp	lr, r8
 801d9a6:	f6ff af71 	blt.w	801d88c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801d9aa:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 801d9ac:	9201      	str	r2, [sp, #4]
 801d9ae:	fa0f f28e 	sxth.w	r2, lr
 801d9b2:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801d9b6:	e9cd c002 	strd	ip, r0, [sp, #8]
 801d9ba:	9200      	str	r2, [sp, #0]
 801d9bc:	b21b      	sxth	r3, r3
 801d9be:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801d9c0:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801d9c2:	4639      	mov	r1, r7
 801d9c4:	f7ff fc79 	bl	801d2ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801d9c8:	e760      	b.n	801d88c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801d9ca:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801d9cc:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801d9ce:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d9d2:	1427      	asrs	r7, r4, #16
 801d9d4:	1433      	asrs	r3, r6, #16
 801d9d6:	fb01 7303 	mla	r3, r1, r3, r7
 801d9da:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801d9de:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801d9e2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d9e6:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801d9ea:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801d9ee:	2a00      	cmp	r2, #0
 801d9f0:	f000 8133 	beq.w	801dc5a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801d9f4:	687d      	ldr	r5, [r7, #4]
 801d9f6:	950e      	str	r5, [sp, #56]	@ 0x38
 801d9f8:	0e2d      	lsrs	r5, r5, #24
 801d9fa:	9515      	str	r5, [sp, #84]	@ 0x54
 801d9fc:	b178      	cbz	r0, 801da1e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801d9fe:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 801da02:	3901      	subs	r1, #1
 801da04:	0089      	lsls	r1, r1, #2
 801da06:	3104      	adds	r1, #4
 801da08:	eb07 0e01 	add.w	lr, r7, r1
 801da0c:	5879      	ldr	r1, [r7, r1]
 801da0e:	9109      	str	r1, [sp, #36]	@ 0x24
 801da10:	0e09      	lsrs	r1, r1, #24
 801da12:	9112      	str	r1, [sp, #72]	@ 0x48
 801da14:	f8de 1004 	ldr.w	r1, [lr, #4]
 801da18:	910f      	str	r1, [sp, #60]	@ 0x3c
 801da1a:	0e09      	lsrs	r1, r1, #24
 801da1c:	9116      	str	r1, [sp, #88]	@ 0x58
 801da1e:	b292      	uxth	r2, r2
 801da20:	b280      	uxth	r0, r0
 801da22:	fb02 f800 	mul.w	r8, r2, r0
 801da26:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801da2a:	0112      	lsls	r2, r2, #4
 801da2c:	eba2 0e08 	sub.w	lr, r2, r8
 801da30:	b280      	uxth	r0, r0
 801da32:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801da36:	9915      	ldr	r1, [sp, #84]	@ 0x54
 801da38:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801da3a:	fa1f fe8e 	uxth.w	lr, lr
 801da3e:	1a12      	subs	r2, r2, r0
 801da40:	b292      	uxth	r2, r2
 801da42:	fb0e f101 	mul.w	r1, lr, r1
 801da46:	fb02 110c 	mla	r1, r2, ip, r1
 801da4a:	fb00 1105 	mla	r1, r0, r5, r1
 801da4e:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801da50:	fb08 1105 	mla	r1, r8, r5, r1
 801da54:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801da58:	2900      	cmp	r1, #0
 801da5a:	f000 80f5 	beq.w	801dc48 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801da5e:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801da62:	d019      	beq.n	801da98 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801da64:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801da68:	fb0c fa0a 	mul.w	sl, ip, sl
 801da6c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801da70:	fb0c fc03 	mul.w	ip, ip, r3
 801da74:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801da78:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801da7c:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801da80:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801da84:	4453      	add	r3, sl
 801da86:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801da8a:	0a1b      	lsrs	r3, r3, #8
 801da8c:	0a3f      	lsrs	r7, r7, #8
 801da8e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801da92:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801da96:	433b      	orrs	r3, r7
 801da98:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801da9a:	2dff      	cmp	r5, #255	@ 0xff
 801da9c:	d020      	beq.n	801dae0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801da9e:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801daa0:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801daa4:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801daa6:	436f      	muls	r7, r5
 801daa8:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801daaa:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801daae:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801dab0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801dab4:	fb05 fa0a 	mul.w	sl, r5, sl
 801dab8:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801dabc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801dac0:	44bc      	add	ip, r7
 801dac2:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801dac6:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801daca:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dace:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801dad2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801dad6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801dada:	ea4c 050a 	orr.w	r5, ip, sl
 801dade:	950e      	str	r5, [sp, #56]	@ 0x38
 801dae0:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801dae2:	2dff      	cmp	r5, #255	@ 0xff
 801dae4:	d020      	beq.n	801db28 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801dae6:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801dae8:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801daec:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801daee:	436f      	muls	r7, r5
 801daf0:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801daf2:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801daf6:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801daf8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801dafc:	fb05 fa0a 	mul.w	sl, r5, sl
 801db00:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801db04:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801db08:	44bc      	add	ip, r7
 801db0a:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801db0e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801db12:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801db16:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801db1a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801db1e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801db22:	ea4c 050a 	orr.w	r5, ip, sl
 801db26:	9509      	str	r5, [sp, #36]	@ 0x24
 801db28:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801db2a:	2dff      	cmp	r5, #255	@ 0xff
 801db2c:	d020      	beq.n	801db70 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801db2e:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801db30:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801db34:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801db36:	436f      	muls	r7, r5
 801db38:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801db3a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801db3e:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801db40:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801db44:	fb05 fa0a 	mul.w	sl, r5, sl
 801db48:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801db4c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801db50:	44bc      	add	ip, r7
 801db52:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801db56:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801db5a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801db5e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801db62:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801db66:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801db6a:	ea4c 050a 	orr.w	r5, ip, sl
 801db6e:	950f      	str	r5, [sp, #60]	@ 0x3c
 801db70:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801db72:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801db76:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801db78:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801db7c:	fb0e f707 	mul.w	r7, lr, r7
 801db80:	fb02 770c 	mla	r7, r2, ip, r7
 801db84:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801db88:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801db8a:	fb00 770c 	mla	r7, r0, ip, r7
 801db8e:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801db92:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801db94:	fb08 770c 	mla	r7, r8, ip, r7
 801db98:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801db9c:	fb0e fe0c 	mul.w	lr, lr, ip
 801dba0:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801dba4:	fb02 e303 	mla	r3, r2, r3, lr
 801dba8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801dbaa:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801dbac:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801dbb0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801dbb2:	fb00 330a 	mla	r3, r0, sl, r3
 801dbb6:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 801dbba:	fb08 3c0c 	mla	ip, r8, ip, r3
 801dbbe:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801dbc0:	f8b9 0000 	ldrh.w	r0, [r9]
 801dbc4:	4359      	muls	r1, r3
 801dbc6:	0a3f      	lsrs	r7, r7, #8
 801dbc8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dbcc:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801dbd0:	1c4b      	adds	r3, r1, #1
 801dbd2:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801dbd6:	ea47 070c 	orr.w	r7, r7, ip
 801dbda:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801dbde:	1202      	asrs	r2, r0, #8
 801dbe0:	0c3b      	lsrs	r3, r7, #16
 801dbe2:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801dbe6:	b2c9      	uxtb	r1, r1
 801dbe8:	fb13 f305 	smulbb	r3, r3, r5
 801dbec:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801dbf0:	fb02 3201 	mla	r2, r2, r1, r3
 801dbf4:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801dbf8:	10c3      	asrs	r3, r0, #3
 801dbfa:	b2ff      	uxtb	r7, r7
 801dbfc:	00c0      	lsls	r0, r0, #3
 801dbfe:	b2c0      	uxtb	r0, r0
 801dc00:	fb17 f705 	smulbb	r7, r7, r5
 801dc04:	fb00 7001 	mla	r0, r0, r1, r7
 801dc08:	b292      	uxth	r2, r2
 801dc0a:	fb1c fc05 	smulbb	ip, ip, r5
 801dc0e:	b280      	uxth	r0, r0
 801dc10:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801dc14:	fb03 c301 	mla	r3, r3, r1, ip
 801dc18:	1c51      	adds	r1, r2, #1
 801dc1a:	f100 0c01 	add.w	ip, r0, #1
 801dc1e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801dc22:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801dc26:	b29b      	uxth	r3, r3
 801dc28:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801dc2c:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 801dc30:	ea4c 0202 	orr.w	r2, ip, r2
 801dc34:	f103 0c01 	add.w	ip, r3, #1
 801dc38:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801dc3c:	095b      	lsrs	r3, r3, #5
 801dc3e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801dc42:	431a      	orrs	r2, r3
 801dc44:	f8a9 2000 	strh.w	r2, [r9]
 801dc48:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801dc4a:	441c      	add	r4, r3
 801dc4c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801dc4e:	f109 0902 	add.w	r9, r9, #2
 801dc52:	441e      	add	r6, r3
 801dc54:	f10b 3bff 	add.w	fp, fp, #4294967295
 801dc58:	e647      	b.n	801d8ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801dc5a:	2800      	cmp	r0, #0
 801dc5c:	f43f aedf 	beq.w	801da1e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801dc60:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801dc64:	9109      	str	r1, [sp, #36]	@ 0x24
 801dc66:	0e09      	lsrs	r1, r1, #24
 801dc68:	9112      	str	r1, [sp, #72]	@ 0x48
 801dc6a:	e6d8      	b.n	801da1e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801dc6c:	b01d      	add	sp, #116	@ 0x74
 801dc6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801dc72 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801dc72:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dc76:	b085      	sub	sp, #20
 801dc78:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 801dc7c:	9102      	str	r1, [sp, #8]
 801dc7e:	2c00      	cmp	r4, #0
 801dc80:	fb04 7103 	mla	r1, r4, r3, r7
 801dc84:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 801dc88:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801dc8c:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 801dc90:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801dc94:	f2c0 810c 	blt.w	801deb0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801dc98:	45a6      	cmp	lr, r4
 801dc9a:	f340 8109 	ble.w	801deb0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801dc9e:	2f00      	cmp	r7, #0
 801dca0:	f2c0 8104 	blt.w	801deac <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801dca4:	42bb      	cmp	r3, r7
 801dca6:	f340 8101 	ble.w	801deac <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801dcaa:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801dcae:	1c7a      	adds	r2, r7, #1
 801dcb0:	f100 8101 	bmi.w	801deb6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801dcb4:	4293      	cmp	r3, r2
 801dcb6:	f340 80fe 	ble.w	801deb6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801dcba:	2e00      	cmp	r6, #0
 801dcbc:	f000 80fd 	beq.w	801deba <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801dcc0:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801dcc4:	3401      	adds	r4, #1
 801dcc6:	f100 80fc 	bmi.w	801dec2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801dcca:	45a6      	cmp	lr, r4
 801dccc:	f340 80f9 	ble.w	801dec2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801dcd0:	2800      	cmp	r0, #0
 801dcd2:	f000 80f9 	beq.w	801dec8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 801dcd6:	2f00      	cmp	r7, #0
 801dcd8:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 801dcdc:	f2c0 80ef 	blt.w	801debe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801dce0:	42bb      	cmp	r3, r7
 801dce2:	f340 80ec 	ble.w	801debe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801dce6:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801dcea:	3701      	adds	r7, #1
 801dcec:	f100 80ef 	bmi.w	801dece <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801dcf0:	42bb      	cmp	r3, r7
 801dcf2:	f340 80ec 	ble.w	801dece <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801dcf6:	2e00      	cmp	r6, #0
 801dcf8:	f000 80eb 	beq.w	801ded2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 801dcfc:	6852      	ldr	r2, [r2, #4]
 801dcfe:	b2b6      	uxth	r6, r6
 801dd00:	b280      	uxth	r0, r0
 801dd02:	fb00 fe06 	mul.w	lr, r0, r6
 801dd06:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801dd0a:	0136      	lsls	r6, r6, #4
 801dd0c:	eba6 070e 	sub.w	r7, r6, lr
 801dd10:	b280      	uxth	r0, r0
 801dd12:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801dd16:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801dd1a:	b2bf      	uxth	r7, r7
 801dd1c:	1a1b      	subs	r3, r3, r0
 801dd1e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801dd22:	b29b      	uxth	r3, r3
 801dd24:	fb07 f60a 	mul.w	r6, r7, sl
 801dd28:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801dd2c:	fb0b 6603 	mla	r6, fp, r3, r6
 801dd30:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801dd34:	fb00 6609 	mla	r6, r0, r9, r6
 801dd38:	fb0e 6608 	mla	r6, lr, r8, r6
 801dd3c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801dd40:	9600      	str	r6, [sp, #0]
 801dd42:	2e00      	cmp	r6, #0
 801dd44:	f000 80af 	beq.w	801dea6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 801dd48:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801dd4c:	fb0b fc0c 	mul.w	ip, fp, ip
 801dd50:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801dd54:	fb0b f505 	mul.w	r5, fp, r5
 801dd58:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801dd5c:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801dd60:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801dd64:	44dc      	add	ip, fp
 801dd66:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dd6a:	9501      	str	r5, [sp, #4]
 801dd6c:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801dd70:	9503      	str	r5, [sp, #12]
 801dd72:	9d01      	ldr	r5, [sp, #4]
 801dd74:	9e02      	ldr	r6, [sp, #8]
 801dd76:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801dd7a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801dd7e:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801dd82:	fb0a fc0c 	mul.w	ip, sl, ip
 801dd86:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801dd8a:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801dd8e:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801dd92:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801dd96:	4465      	add	r5, ip
 801dd98:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801dd9c:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801dda0:	fb09 fc0c 	mul.w	ip, r9, ip
 801dda4:	fb09 f904 	mul.w	r9, r9, r4
 801dda8:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801ddac:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801ddb0:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801ddb4:	fb08 f404 	mul.w	r4, r8, r4
 801ddb8:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801ddbc:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801ddc0:	fb08 f802 	mul.w	r8, r8, r2
 801ddc4:	fb0a fa01 	mul.w	sl, sl, r1
 801ddc8:	0a22      	lsrs	r2, r4, #8
 801ddca:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801ddce:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801ddd2:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801ddd6:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801ddda:	4414      	add	r4, r2
 801dddc:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801dde0:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801dde4:	0a2d      	lsrs	r5, r5, #8
 801dde6:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801ddea:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801ddee:	9a03      	ldr	r2, [sp, #12]
 801ddf0:	8836      	ldrh	r6, [r6, #0]
 801ddf2:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801ddf6:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801ddfa:	437d      	muls	r5, r7
 801ddfc:	4461      	add	r1, ip
 801ddfe:	0a24      	lsrs	r4, r4, #8
 801de00:	fb02 5503 	mla	r5, r2, r3, r5
 801de04:	0a09      	lsrs	r1, r1, #8
 801de06:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801de0a:	fb04 540e 	mla	r4, r4, lr, r5
 801de0e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801de12:	fb01 4100 	mla	r1, r1, r0, r4
 801de16:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801de1a:	0a09      	lsrs	r1, r1, #8
 801de1c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801de20:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801de24:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801de28:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801de2c:	fb07 f70a 	mul.w	r7, r7, sl
 801de30:	fb03 7101 	mla	r1, r3, r1, r7
 801de34:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801de38:	9b00      	ldr	r3, [sp, #0]
 801de3a:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801de3e:	fb0e 1e08 	mla	lr, lr, r8, r1
 801de42:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801de46:	fb00 e101 	mla	r1, r0, r1, lr
 801de4a:	43da      	mvns	r2, r3
 801de4c:	1233      	asrs	r3, r6, #8
 801de4e:	b2d2      	uxtb	r2, r2
 801de50:	10f0      	asrs	r0, r6, #3
 801de52:	0a09      	lsrs	r1, r1, #8
 801de54:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801de58:	00f6      	lsls	r6, r6, #3
 801de5a:	4353      	muls	r3, r2
 801de5c:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801de60:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801de64:	b2f6      	uxtb	r6, r6
 801de66:	4321      	orrs	r1, r4
 801de68:	4350      	muls	r0, r2
 801de6a:	4356      	muls	r6, r2
 801de6c:	1c5a      	adds	r2, r3, #1
 801de6e:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801de72:	0c0b      	lsrs	r3, r1, #16
 801de74:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801de78:	1c42      	adds	r2, r0, #1
 801de7a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801de7e:	0a0a      	lsrs	r2, r1, #8
 801de80:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801de84:	021b      	lsls	r3, r3, #8
 801de86:	00d2      	lsls	r2, r2, #3
 801de88:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801de8c:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801de90:	4313      	orrs	r3, r2
 801de92:	1c72      	adds	r2, r6, #1
 801de94:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801de98:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801de9c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801dea0:	4319      	orrs	r1, r3
 801dea2:	9b02      	ldr	r3, [sp, #8]
 801dea4:	8019      	strh	r1, [r3, #0]
 801dea6:	b005      	add	sp, #20
 801dea8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801deac:	2500      	movs	r5, #0
 801deae:	e6fe      	b.n	801dcae <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801deb0:	2100      	movs	r1, #0
 801deb2:	460d      	mov	r5, r1
 801deb4:	e706      	b.n	801dcc4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801deb6:	2100      	movs	r1, #0
 801deb8:	e704      	b.n	801dcc4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801deba:	4631      	mov	r1, r6
 801debc:	e702      	b.n	801dcc4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801debe:	2400      	movs	r4, #0
 801dec0:	e713      	b.n	801dcea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801dec2:	2200      	movs	r2, #0
 801dec4:	4614      	mov	r4, r2
 801dec6:	e71a      	b.n	801dcfe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801dec8:	4602      	mov	r2, r0
 801deca:	4604      	mov	r4, r0
 801decc:	e717      	b.n	801dcfe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801dece:	2200      	movs	r2, #0
 801ded0:	e715      	b.n	801dcfe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801ded2:	4632      	mov	r2, r6
 801ded4:	e713      	b.n	801dcfe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

0801ded8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ded8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dedc:	b09b      	sub	sp, #108	@ 0x6c
 801dede:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
 801dee2:	9218      	str	r2, [sp, #96]	@ 0x60
 801dee4:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801dee6:	9116      	str	r1, [sp, #88]	@ 0x58
 801dee8:	9307      	str	r3, [sp, #28]
 801deea:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 801deee:	9019      	str	r0, [sp, #100]	@ 0x64
 801def0:	6850      	ldr	r0, [r2, #4]
 801def2:	6812      	ldr	r2, [r2, #0]
 801def4:	fb00 1303 	mla	r3, r0, r3, r1
 801def8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801defc:	930a      	str	r3, [sp, #40]	@ 0x28
 801defe:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801df00:	681b      	ldr	r3, [r3, #0]
 801df02:	930f      	str	r3, [sp, #60]	@ 0x3c
 801df04:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801df06:	2b00      	cmp	r3, #0
 801df08:	dc03      	bgt.n	801df12 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801df0a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801df0c:	2b00      	cmp	r3, #0
 801df0e:	f340 8386 	ble.w	801e61e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801df12:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801df14:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801df18:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801df1c:	1e48      	subs	r0, r1, #1
 801df1e:	1e57      	subs	r7, r2, #1
 801df20:	9b07      	ldr	r3, [sp, #28]
 801df22:	2b00      	cmp	r3, #0
 801df24:	f340 8166 	ble.w	801e1f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801df28:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801df2c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801df30:	d406      	bmi.n	801df40 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801df32:	4584      	cmp	ip, r0
 801df34:	da04      	bge.n	801df40 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801df36:	2b00      	cmp	r3, #0
 801df38:	db02      	blt.n	801df40 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801df3a:	42bb      	cmp	r3, r7
 801df3c:	f2c0 815b 	blt.w	801e1f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801df40:	f11c 0c01 	adds.w	ip, ip, #1
 801df44:	f100 814b 	bmi.w	801e1de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801df48:	4561      	cmp	r1, ip
 801df4a:	f2c0 8148 	blt.w	801e1de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801df4e:	3301      	adds	r3, #1
 801df50:	f100 8145 	bmi.w	801e1de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801df54:	429a      	cmp	r2, r3
 801df56:	f2c0 8142 	blt.w	801e1de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801df5a:	9b07      	ldr	r3, [sp, #28]
 801df5c:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801df5e:	9317      	str	r3, [sp, #92]	@ 0x5c
 801df60:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801df62:	2b00      	cmp	r3, #0
 801df64:	f340 8165 	ble.w	801e232 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801df68:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 801df6a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801df6c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801df70:	689b      	ldr	r3, [r3, #8]
 801df72:	1422      	asrs	r2, r4, #16
 801df74:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801df78:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801df7c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801df80:	f100 81d5 	bmi.w	801e32e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801df84:	f103 38ff 	add.w	r8, r3, #4294967295
 801df88:	4542      	cmp	r2, r8
 801df8a:	f280 81d0 	bge.w	801e32e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801df8e:	f1bc 0f00 	cmp.w	ip, #0
 801df92:	f2c0 81cc 	blt.w	801e32e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801df96:	f10e 38ff 	add.w	r8, lr, #4294967295
 801df9a:	45c4      	cmp	ip, r8
 801df9c:	f280 81c7 	bge.w	801e32e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801dfa0:	b21b      	sxth	r3, r3
 801dfa2:	fb0c 2203 	mla	r2, ip, r3, r2
 801dfa6:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801dfa8:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801dfac:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801dfb0:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801dfb4:	2900      	cmp	r1, #0
 801dfb6:	f000 8182 	beq.w	801e2be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801dfba:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801dfbe:	950b      	str	r5, [sp, #44]	@ 0x2c
 801dfc0:	0e2d      	lsrs	r5, r5, #24
 801dfc2:	9512      	str	r5, [sp, #72]	@ 0x48
 801dfc4:	b180      	cbz	r0, 801dfe8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801dfc6:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 801dfca:	3b01      	subs	r3, #1
 801dfcc:	009b      	lsls	r3, r3, #2
 801dfce:	3304      	adds	r3, #4
 801dfd0:	eb08 0c03 	add.w	ip, r8, r3
 801dfd4:	f858 3003 	ldr.w	r3, [r8, r3]
 801dfd8:	9308      	str	r3, [sp, #32]
 801dfda:	0e1b      	lsrs	r3, r3, #24
 801dfdc:	9310      	str	r3, [sp, #64]	@ 0x40
 801dfde:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801dfe2:	930c      	str	r3, [sp, #48]	@ 0x30
 801dfe4:	0e1b      	lsrs	r3, r3, #24
 801dfe6:	9313      	str	r3, [sp, #76]	@ 0x4c
 801dfe8:	b289      	uxth	r1, r1
 801dfea:	b280      	uxth	r0, r0
 801dfec:	fb01 f900 	mul.w	r9, r1, r0
 801dff0:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801dff4:	0109      	lsls	r1, r1, #4
 801dff6:	eba1 0809 	sub.w	r8, r1, r9
 801dffa:	b280      	uxth	r0, r0
 801dffc:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 801e000:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801e002:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801e004:	fa1f f888 	uxth.w	r8, r8
 801e008:	1a09      	subs	r1, r1, r0
 801e00a:	b289      	uxth	r1, r1
 801e00c:	fb08 f303 	mul.w	r3, r8, r3
 801e010:	fb01 330e 	mla	r3, r1, lr, r3
 801e014:	fb00 3305 	mla	r3, r0, r5, r3
 801e018:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801e01a:	fb09 3305 	mla	r3, r9, r5, r3
 801e01e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e022:	2b00      	cmp	r3, #0
 801e024:	f000 80d2 	beq.w	801e1cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801e028:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801e02c:	d01b      	beq.n	801e066 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 801e02e:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 801e032:	fb0e fa0a 	mul.w	sl, lr, sl
 801e036:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801e03a:	fb0e fe02 	mul.w	lr, lr, r2
 801e03e:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801e042:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801e046:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801e04a:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801e04e:	4452      	add	r2, sl
 801e050:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801e054:	0a12      	lsrs	r2, r2, #8
 801e056:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e05a:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801e05e:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801e062:	ea42 020c 	orr.w	r2, r2, ip
 801e066:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801e068:	2dff      	cmp	r5, #255	@ 0xff
 801e06a:	d021      	beq.n	801e0b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801e06c:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801e06e:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801e072:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801e074:	fb05 fb0b 	mul.w	fp, r5, fp
 801e078:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801e07a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801e07e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801e080:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e084:	fb05 fa0a 	mul.w	sl, r5, sl
 801e088:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e08c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801e090:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801e094:	44de      	add	lr, fp
 801e096:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e09a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e09e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e0a2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e0a6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e0aa:	ea4e 050a 	orr.w	r5, lr, sl
 801e0ae:	950b      	str	r5, [sp, #44]	@ 0x2c
 801e0b0:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801e0b2:	2dff      	cmp	r5, #255	@ 0xff
 801e0b4:	d021      	beq.n	801e0fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801e0b6:	9d08      	ldr	r5, [sp, #32]
 801e0b8:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801e0bc:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801e0be:	fb05 fb0b 	mul.w	fp, r5, fp
 801e0c2:	9d08      	ldr	r5, [sp, #32]
 801e0c4:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801e0c8:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801e0ca:	fb05 fa0e 	mul.w	sl, r5, lr
 801e0ce:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e0d2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e0d6:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801e0da:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801e0de:	44de      	add	lr, fp
 801e0e0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e0e4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e0e8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e0ec:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e0f0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e0f4:	ea4e 050a 	orr.w	r5, lr, sl
 801e0f8:	9508      	str	r5, [sp, #32]
 801e0fa:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801e0fc:	2dff      	cmp	r5, #255	@ 0xff
 801e0fe:	d021      	beq.n	801e144 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801e100:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801e102:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801e106:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801e108:	fb05 fb0b 	mul.w	fp, r5, fp
 801e10c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801e10e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801e112:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801e114:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e118:	fb05 fa0a 	mul.w	sl, r5, sl
 801e11c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e120:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801e124:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801e128:	44de      	add	lr, fp
 801e12a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e12e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e132:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e136:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e13a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e13e:	ea4e 050a 	orr.w	r5, lr, sl
 801e142:	950c      	str	r5, [sp, #48]	@ 0x30
 801e144:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801e146:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801e14a:	9d08      	ldr	r5, [sp, #32]
 801e14c:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 801e150:	fb08 fc0c 	mul.w	ip, r8, ip
 801e154:	fb01 cc0e 	mla	ip, r1, lr, ip
 801e158:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801e15c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801e15e:	fb00 cc0e 	mla	ip, r0, lr, ip
 801e162:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801e166:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801e168:	fb09 cc0e 	mla	ip, r9, lr, ip
 801e16c:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801e170:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801e174:	fb08 f80e 	mul.w	r8, r8, lr
 801e178:	fb01 8202 	mla	r2, r1, r2, r8
 801e17c:	9908      	ldr	r1, [sp, #32]
 801e17e:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801e182:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801e184:	fb00 220a 	mla	r2, r0, sl, r2
 801e188:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 801e18c:	fb09 2900 	mla	r9, r9, r0, r2
 801e190:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e194:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e198:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e19c:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801e1a0:	ea4c 0c09 	orr.w	ip, ip, r9
 801e1a4:	2bff      	cmp	r3, #255	@ 0xff
 801e1a6:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801e1aa:	f040 8091 	bne.w	801e2d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801e1ae:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801e1b2:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
 801e1b6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e1ba:	f022 0207 	bic.w	r2, r2, #7
 801e1be:	431a      	orrs	r2, r3
 801e1c0:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801e1c4:	ea4c 0c02 	orr.w	ip, ip, r2
 801e1c8:	f8a7 c000 	strh.w	ip, [r7]
 801e1cc:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801e1ce:	441c      	add	r4, r3
 801e1d0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801e1d2:	441e      	add	r6, r3
 801e1d4:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801e1d6:	3b01      	subs	r3, #1
 801e1d8:	3702      	adds	r7, #2
 801e1da:	9317      	str	r3, [sp, #92]	@ 0x5c
 801e1dc:	e6c0      	b.n	801df60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801e1de:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801e1e0:	441c      	add	r4, r3
 801e1e2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801e1e4:	441e      	add	r6, r3
 801e1e6:	9b07      	ldr	r3, [sp, #28]
 801e1e8:	3b01      	subs	r3, #1
 801e1ea:	9307      	str	r3, [sp, #28]
 801e1ec:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801e1ee:	3302      	adds	r3, #2
 801e1f0:	930a      	str	r3, [sp, #40]	@ 0x28
 801e1f2:	e695      	b.n	801df20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801e1f4:	d024      	beq.n	801e240 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801e1f6:	9b07      	ldr	r3, [sp, #28]
 801e1f8:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 801e1fa:	3b01      	subs	r3, #1
 801e1fc:	fb00 4003 	mla	r0, r0, r3, r4
 801e200:	1400      	asrs	r0, r0, #16
 801e202:	f53f aeaa 	bmi.w	801df5a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801e206:	3901      	subs	r1, #1
 801e208:	4288      	cmp	r0, r1
 801e20a:	f6bf aea6 	bge.w	801df5a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801e20e:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801e210:	fb01 6303 	mla	r3, r1, r3, r6
 801e214:	141b      	asrs	r3, r3, #16
 801e216:	f53f aea0 	bmi.w	801df5a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801e21a:	3a01      	subs	r2, #1
 801e21c:	4293      	cmp	r3, r2
 801e21e:	f6bf ae9c 	bge.w	801df5a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801e222:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801e226:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 801e22a:	f1bb 0f00 	cmp.w	fp, #0
 801e22e:	f300 809a 	bgt.w	801e366 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801e232:	9b07      	ldr	r3, [sp, #28]
 801e234:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801e238:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801e23a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801e23e:	930a      	str	r3, [sp, #40]	@ 0x28
 801e240:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801e242:	2b00      	cmp	r3, #0
 801e244:	f340 81eb 	ble.w	801e61e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801e248:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e24c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801e250:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e254:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801e256:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e25a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e25e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e262:	eef0 6a62 	vmov.f32	s13, s5
 801e266:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e26a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e26e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e272:	ee16 4a90 	vmov	r4, s13
 801e276:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e27a:	eef0 6a43 	vmov.f32	s13, s6
 801e27e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e282:	ee12 2a90 	vmov	r2, s5
 801e286:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e28a:	fb92 f3f3 	sdiv	r3, r2, r3
 801e28e:	ee13 2a10 	vmov	r2, s6
 801e292:	9327      	str	r3, [sp, #156]	@ 0x9c
 801e294:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801e296:	fb92 f3f3 	sdiv	r3, r2, r3
 801e29a:	9328      	str	r3, [sp, #160]	@ 0xa0
 801e29c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801e29e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801e2a0:	3b01      	subs	r3, #1
 801e2a2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e2a6:	9316      	str	r3, [sp, #88]	@ 0x58
 801e2a8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801e2aa:	bf08      	it	eq
 801e2ac:	4613      	moveq	r3, r2
 801e2ae:	ee16 6a90 	vmov	r6, s13
 801e2b2:	9307      	str	r3, [sp, #28]
 801e2b4:	eeb0 3a67 	vmov.f32	s6, s15
 801e2b8:	eef0 2a47 	vmov.f32	s5, s14
 801e2bc:	e622      	b.n	801df04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 801e2be:	2800      	cmp	r0, #0
 801e2c0:	f43f ae92 	beq.w	801dfe8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801e2c4:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801e2c8:	9308      	str	r3, [sp, #32]
 801e2ca:	0e1b      	lsrs	r3, r3, #24
 801e2cc:	9310      	str	r3, [sp, #64]	@ 0x40
 801e2ce:	e68b      	b.n	801dfe8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801e2d0:	8839      	ldrh	r1, [r7, #0]
 801e2d2:	4dd4      	ldr	r5, [pc, #848]	@ (801e624 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801e2d4:	43db      	mvns	r3, r3
 801e2d6:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801e2da:	fa5f f883 	uxtb.w	r8, r3
 801e2de:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801e2e2:	fb0e fe08 	mul.w	lr, lr, r8
 801e2e6:	10c8      	asrs	r0, r1, #3
 801e2e8:	00cb      	lsls	r3, r1, #3
 801e2ea:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801e2ee:	f10e 0101 	add.w	r1, lr, #1
 801e2f2:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801e2f6:	fb00 f008 	mul.w	r0, r0, r8
 801e2fa:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801e2fe:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801e302:	f100 0e01 	add.w	lr, r0, #1
 801e306:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801e30a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801e30e:	b2db      	uxtb	r3, r3
 801e310:	b2c9      	uxtb	r1, r1
 801e312:	00d2      	lsls	r2, r2, #3
 801e314:	fb03 f308 	mul.w	r3, r3, r8
 801e318:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801e31c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e320:	430a      	orrs	r2, r1
 801e322:	1c59      	adds	r1, r3, #1
 801e324:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801e328:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801e32c:	e748      	b.n	801e1c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801e32e:	f112 0801 	adds.w	r8, r2, #1
 801e332:	f53f af4b 	bmi.w	801e1cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801e336:	4543      	cmp	r3, r8
 801e338:	f6ff af48 	blt.w	801e1cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801e33c:	f11c 0801 	adds.w	r8, ip, #1
 801e340:	f53f af44 	bmi.w	801e1cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801e344:	45c6      	cmp	lr, r8
 801e346:	f6ff af41 	blt.w	801e1cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801e34a:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801e34e:	fa0f f28e 	sxth.w	r2, lr
 801e352:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801e356:	9200      	str	r2, [sp, #0]
 801e358:	b21b      	sxth	r3, r3
 801e35a:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801e35c:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801e35e:	4639      	mov	r1, r7
 801e360:	f7ff fc87 	bl	801dc72 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801e364:	e732      	b.n	801e1cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801e366:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801e368:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801e36a:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801e36e:	1421      	asrs	r1, r4, #16
 801e370:	1433      	asrs	r3, r6, #16
 801e372:	fb07 1303 	mla	r3, r7, r3, r1
 801e376:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801e378:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801e37c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801e380:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e384:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801e388:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801e38c:	2a00      	cmp	r2, #0
 801e38e:	f000 8107 	beq.w	801e5a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 801e392:	684d      	ldr	r5, [r1, #4]
 801e394:	950d      	str	r5, [sp, #52]	@ 0x34
 801e396:	0e2d      	lsrs	r5, r5, #24
 801e398:	9514      	str	r5, [sp, #80]	@ 0x50
 801e39a:	b178      	cbz	r0, 801e3bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801e39c:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 801e3a0:	3f01      	subs	r7, #1
 801e3a2:	00bf      	lsls	r7, r7, #2
 801e3a4:	3704      	adds	r7, #4
 801e3a6:	eb01 0e07 	add.w	lr, r1, r7
 801e3aa:	59c9      	ldr	r1, [r1, r7]
 801e3ac:	9109      	str	r1, [sp, #36]	@ 0x24
 801e3ae:	0e09      	lsrs	r1, r1, #24
 801e3b0:	9111      	str	r1, [sp, #68]	@ 0x44
 801e3b2:	f8de 1004 	ldr.w	r1, [lr, #4]
 801e3b6:	910e      	str	r1, [sp, #56]	@ 0x38
 801e3b8:	0e09      	lsrs	r1, r1, #24
 801e3ba:	9115      	str	r1, [sp, #84]	@ 0x54
 801e3bc:	b292      	uxth	r2, r2
 801e3be:	b280      	uxth	r0, r0
 801e3c0:	fb02 f900 	mul.w	r9, r2, r0
 801e3c4:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801e3c8:	0112      	lsls	r2, r2, #4
 801e3ca:	eba2 0e09 	sub.w	lr, r2, r9
 801e3ce:	b280      	uxth	r0, r0
 801e3d0:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 801e3d4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801e3d6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801e3d8:	fa1f fe8e 	uxth.w	lr, lr
 801e3dc:	1a09      	subs	r1, r1, r0
 801e3de:	b289      	uxth	r1, r1
 801e3e0:	fb0e f202 	mul.w	r2, lr, r2
 801e3e4:	fb01 220c 	mla	r2, r1, ip, r2
 801e3e8:	fb00 2205 	mla	r2, r0, r5, r2
 801e3ec:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801e3ee:	fb09 2205 	mla	r2, r9, r5, r2
 801e3f2:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801e3f6:	2a00      	cmp	r2, #0
 801e3f8:	f000 80c9 	beq.w	801e58e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801e3fc:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801e400:	d019      	beq.n	801e436 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 801e402:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801e406:	fb0c fa0a 	mul.w	sl, ip, sl
 801e40a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801e40e:	fb0c fc03 	mul.w	ip, ip, r3
 801e412:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801e416:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801e41a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801e41e:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801e422:	4453      	add	r3, sl
 801e424:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801e428:	0a1b      	lsrs	r3, r3, #8
 801e42a:	0a3f      	lsrs	r7, r7, #8
 801e42c:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801e430:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801e434:	433b      	orrs	r3, r7
 801e436:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801e438:	2dff      	cmp	r5, #255	@ 0xff
 801e43a:	d020      	beq.n	801e47e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 801e43c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801e43e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801e442:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801e444:	436f      	muls	r7, r5
 801e446:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801e448:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801e44c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801e44e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e452:	fb05 fa0a 	mul.w	sl, r5, sl
 801e456:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801e45a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e45e:	44bc      	add	ip, r7
 801e460:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801e464:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e468:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e46c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e470:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e474:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e478:	ea4c 050a 	orr.w	r5, ip, sl
 801e47c:	950d      	str	r5, [sp, #52]	@ 0x34
 801e47e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801e480:	2dff      	cmp	r5, #255	@ 0xff
 801e482:	d020      	beq.n	801e4c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 801e484:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801e486:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801e48a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801e48c:	436f      	muls	r7, r5
 801e48e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801e490:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801e494:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801e496:	fb05 fa0c 	mul.w	sl, r5, ip
 801e49a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e49e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e4a2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801e4a6:	44bc      	add	ip, r7
 801e4a8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801e4ac:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e4b0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e4b4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e4b8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e4bc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e4c0:	ea4c 050a 	orr.w	r5, ip, sl
 801e4c4:	9509      	str	r5, [sp, #36]	@ 0x24
 801e4c6:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801e4c8:	2dff      	cmp	r5, #255	@ 0xff
 801e4ca:	d020      	beq.n	801e50e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 801e4cc:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801e4ce:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801e4d2:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801e4d4:	436f      	muls	r7, r5
 801e4d6:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801e4d8:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801e4dc:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801e4de:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e4e2:	fb05 fa0a 	mul.w	sl, r5, sl
 801e4e6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801e4ea:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e4ee:	44bc      	add	ip, r7
 801e4f0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801e4f4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e4f8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e4fc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e500:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e504:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e508:	ea4c 050a 	orr.w	r5, ip, sl
 801e50c:	950e      	str	r5, [sp, #56]	@ 0x38
 801e50e:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801e510:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801e514:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801e516:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801e51a:	fb0e f707 	mul.w	r7, lr, r7
 801e51e:	fb01 770c 	mla	r7, r1, ip, r7
 801e522:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801e526:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801e528:	fb00 770c 	mla	r7, r0, ip, r7
 801e52c:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801e530:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801e532:	fb09 770c 	mla	r7, r9, ip, r7
 801e536:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801e53a:	fb0e fe0c 	mul.w	lr, lr, ip
 801e53e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801e542:	fb01 e303 	mla	r3, r1, r3, lr
 801e546:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801e548:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801e54c:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801e54e:	fb00 330a 	mla	r3, r0, sl, r3
 801e552:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 801e556:	fb09 3c0c 	mla	ip, r9, ip, r3
 801e55a:	0a3f      	lsrs	r7, r7, #8
 801e55c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e560:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801e564:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801e568:	ea47 070c 	orr.w	r7, r7, ip
 801e56c:	2aff      	cmp	r2, #255	@ 0xff
 801e56e:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801e572:	d11e      	bne.n	801e5b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801e574:	097a      	lsrs	r2, r7, #5
 801e576:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 801e57a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e57e:	f023 0307 	bic.w	r3, r3, #7
 801e582:	4313      	orrs	r3, r2
 801e584:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801e588:	431f      	orrs	r7, r3
 801e58a:	f8a8 7000 	strh.w	r7, [r8]
 801e58e:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801e590:	441c      	add	r4, r3
 801e592:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801e594:	f108 0802 	add.w	r8, r8, #2
 801e598:	441e      	add	r6, r3
 801e59a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801e59e:	e644      	b.n	801e22a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801e5a0:	2800      	cmp	r0, #0
 801e5a2:	f43f af0b 	beq.w	801e3bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801e5a6:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801e5aa:	9109      	str	r1, [sp, #36]	@ 0x24
 801e5ac:	0e09      	lsrs	r1, r1, #24
 801e5ae:	9111      	str	r1, [sp, #68]	@ 0x44
 801e5b0:	e704      	b.n	801e3bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801e5b2:	f8b8 1000 	ldrh.w	r1, [r8]
 801e5b6:	43d2      	mvns	r2, r2
 801e5b8:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801e5bc:	fa5f fe82 	uxtb.w	lr, r2
 801e5c0:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801e5c4:	fb0c fc0e 	mul.w	ip, ip, lr
 801e5c8:	10c8      	asrs	r0, r1, #3
 801e5ca:	00ca      	lsls	r2, r1, #3
 801e5cc:	f10c 0101 	add.w	r1, ip, #1
 801e5d0:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801e5d4:	0c39      	lsrs	r1, r7, #16
 801e5d6:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801e5da:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801e5de:	4911      	ldr	r1, [pc, #68]	@ (801e624 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801e5e0:	fb00 f00e 	mul.w	r0, r0, lr
 801e5e4:	fa5f fc8c 	uxtb.w	ip, ip
 801e5e8:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801e5ec:	b2d2      	uxtb	r2, r2
 801e5ee:	1c41      	adds	r1, r0, #1
 801e5f0:	fb02 f20e 	mul.w	r2, r2, lr
 801e5f4:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801e5f8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801e5fc:	1c51      	adds	r1, r2, #1
 801e5fe:	00c0      	lsls	r0, r0, #3
 801e600:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e604:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801e608:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801e60c:	ea4c 0c00 	orr.w	ip, ip, r0
 801e610:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801e614:	ea47 0c0c 	orr.w	ip, r7, ip
 801e618:	f8a8 c000 	strh.w	ip, [r8]
 801e61c:	e7b7      	b.n	801e58e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801e61e:	b01b      	add	sp, #108	@ 0x6c
 801e620:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e624:	fffff800 	.word	0xfffff800

0801e628 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801e628:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801e62c:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 801e630:	2d00      	cmp	r5, #0
 801e632:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801e636:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 801e63a:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801e63e:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 801e642:	fb05 0e03 	mla	lr, r5, r3, r0
 801e646:	f2c0 808c 	blt.w	801e762 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801e64a:	45a9      	cmp	r9, r5
 801e64c:	f340 8089 	ble.w	801e762 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801e650:	2800      	cmp	r0, #0
 801e652:	f2c0 8084 	blt.w	801e75e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801e656:	4580      	cmp	r8, r0
 801e658:	f340 8081 	ble.w	801e75e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801e65c:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801e660:	f01e 0f01 	tst.w	lr, #1
 801e664:	5d16      	ldrb	r6, [r2, r4]
 801e666:	bf0c      	ite	eq
 801e668:	f006 060f 	andeq.w	r6, r6, #15
 801e66c:	1136      	asrne	r6, r6, #4
 801e66e:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801e672:	b2f6      	uxtb	r6, r6
 801e674:	1c44      	adds	r4, r0, #1
 801e676:	d477      	bmi.n	801e768 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801e678:	45a0      	cmp	r8, r4
 801e67a:	dd75      	ble.n	801e768 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801e67c:	2f00      	cmp	r7, #0
 801e67e:	d075      	beq.n	801e76c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 801e680:	f10e 0a01 	add.w	sl, lr, #1
 801e684:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801e688:	f01a 0f01 	tst.w	sl, #1
 801e68c:	5d14      	ldrb	r4, [r2, r4]
 801e68e:	bf0c      	ite	eq
 801e690:	f004 040f 	andeq.w	r4, r4, #15
 801e694:	1124      	asrne	r4, r4, #4
 801e696:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801e69a:	b2e4      	uxtb	r4, r4
 801e69c:	3501      	adds	r5, #1
 801e69e:	d469      	bmi.n	801e774 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801e6a0:	45a9      	cmp	r9, r5
 801e6a2:	dd67      	ble.n	801e774 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801e6a4:	f1bc 0f00 	cmp.w	ip, #0
 801e6a8:	d067      	beq.n	801e77a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 801e6aa:	2800      	cmp	r0, #0
 801e6ac:	db60      	blt.n	801e770 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801e6ae:	4580      	cmp	r8, r0
 801e6b0:	dd5e      	ble.n	801e770 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801e6b2:	eb03 090e 	add.w	r9, r3, lr
 801e6b6:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801e6ba:	f019 0f01 	tst.w	r9, #1
 801e6be:	5d55      	ldrb	r5, [r2, r5]
 801e6c0:	bf0c      	ite	eq
 801e6c2:	f005 050f 	andeq.w	r5, r5, #15
 801e6c6:	112d      	asrne	r5, r5, #4
 801e6c8:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801e6cc:	b2ed      	uxtb	r5, r5
 801e6ce:	3001      	adds	r0, #1
 801e6d0:	d456      	bmi.n	801e780 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801e6d2:	4580      	cmp	r8, r0
 801e6d4:	dd54      	ble.n	801e780 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801e6d6:	2f00      	cmp	r7, #0
 801e6d8:	d054      	beq.n	801e784 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 801e6da:	3301      	adds	r3, #1
 801e6dc:	449e      	add	lr, r3
 801e6de:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801e6e2:	f01e 0f01 	tst.w	lr, #1
 801e6e6:	5cd0      	ldrb	r0, [r2, r3]
 801e6e8:	bf0c      	ite	eq
 801e6ea:	f000 000f 	andeq.w	r0, r0, #15
 801e6ee:	1100      	asrne	r0, r0, #4
 801e6f0:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801e6f4:	b2c3      	uxtb	r3, r0
 801e6f6:	b2ba      	uxth	r2, r7
 801e6f8:	fa1f fc8c 	uxth.w	ip, ip
 801e6fc:	fb02 f00c 	mul.w	r0, r2, ip
 801e700:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801e704:	0112      	lsls	r2, r2, #4
 801e706:	fa1f fc8c 	uxth.w	ip, ip
 801e70a:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 801e70e:	1a12      	subs	r2, r2, r0
 801e710:	eba7 070c 	sub.w	r7, r7, ip
 801e714:	b292      	uxth	r2, r2
 801e716:	b2bf      	uxth	r7, r7
 801e718:	4362      	muls	r2, r4
 801e71a:	fb06 2207 	mla	r2, r6, r7, r2
 801e71e:	fb0c 2505 	mla	r5, ip, r5, r2
 801e722:	fb00 5303 	mla	r3, r0, r3, r5
 801e726:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e72a:	b1b3      	cbz	r3, 801e75a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801e72c:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 801e730:	435a      	muls	r2, r3
 801e732:	1c53      	adds	r3, r2, #1
 801e734:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e738:	4a2d      	ldr	r2, [pc, #180]	@ (801e7f0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801e73a:	121b      	asrs	r3, r3, #8
 801e73c:	6812      	ldr	r2, [r2, #0]
 801e73e:	2bff      	cmp	r3, #255	@ 0xff
 801e740:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801e744:	d120      	bne.n	801e788 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 801e746:	4b2b      	ldr	r3, [pc, #172]	@ (801e7f4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801e748:	0950      	lsrs	r0, r2, #5
 801e74a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801e74e:	4033      	ands	r3, r6
 801e750:	4318      	orrs	r0, r3
 801e752:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801e756:	4302      	orrs	r2, r0
 801e758:	800a      	strh	r2, [r1, #0]
 801e75a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801e75e:	2600      	movs	r6, #0
 801e760:	e788      	b.n	801e674 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 801e762:	2400      	movs	r4, #0
 801e764:	4626      	mov	r6, r4
 801e766:	e799      	b.n	801e69c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801e768:	2400      	movs	r4, #0
 801e76a:	e797      	b.n	801e69c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801e76c:	463c      	mov	r4, r7
 801e76e:	e795      	b.n	801e69c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801e770:	2500      	movs	r5, #0
 801e772:	e7ac      	b.n	801e6ce <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 801e774:	2300      	movs	r3, #0
 801e776:	461d      	mov	r5, r3
 801e778:	e7bd      	b.n	801e6f6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801e77a:	4663      	mov	r3, ip
 801e77c:	4665      	mov	r5, ip
 801e77e:	e7ba      	b.n	801e6f6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801e780:	2300      	movs	r3, #0
 801e782:	e7b8      	b.n	801e6f6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801e784:	463b      	mov	r3, r7
 801e786:	e7b6      	b.n	801e6f6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801e788:	880d      	ldrh	r5, [r1, #0]
 801e78a:	b29f      	uxth	r7, r3
 801e78c:	122c      	asrs	r4, r5, #8
 801e78e:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801e792:	43db      	mvns	r3, r3
 801e794:	b2db      	uxtb	r3, r3
 801e796:	fb10 f007 	smulbb	r0, r0, r7
 801e79a:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801e79e:	fb04 0403 	mla	r4, r4, r3, r0
 801e7a2:	b2f6      	uxtb	r6, r6
 801e7a4:	10e8      	asrs	r0, r5, #3
 801e7a6:	b2d2      	uxtb	r2, r2
 801e7a8:	00ed      	lsls	r5, r5, #3
 801e7aa:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801e7ae:	fb12 f207 	smulbb	r2, r2, r7
 801e7b2:	fb16 f607 	smulbb	r6, r6, r7
 801e7b6:	b2ed      	uxtb	r5, r5
 801e7b8:	b2a4      	uxth	r4, r4
 801e7ba:	fb00 6603 	mla	r6, r0, r3, r6
 801e7be:	fb05 2303 	mla	r3, r5, r3, r2
 801e7c2:	b29a      	uxth	r2, r3
 801e7c4:	1c63      	adds	r3, r4, #1
 801e7c6:	b2b0      	uxth	r0, r6
 801e7c8:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801e7cc:	1c53      	adds	r3, r2, #1
 801e7ce:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e7d2:	1c42      	adds	r2, r0, #1
 801e7d4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801e7d8:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801e7dc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e7e0:	0940      	lsrs	r0, r0, #5
 801e7e2:	4323      	orrs	r3, r4
 801e7e4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801e7e8:	4303      	orrs	r3, r0
 801e7ea:	800b      	strh	r3, [r1, #0]
 801e7ec:	e7b5      	b.n	801e75a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801e7ee:	bf00      	nop
 801e7f0:	200130a0 	.word	0x200130a0
 801e7f4:	00fff800 	.word	0x00fff800

0801e7f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e7f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e7fc:	b097      	sub	sp, #92	@ 0x5c
 801e7fe:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
 801e802:	9214      	str	r2, [sp, #80]	@ 0x50
 801e804:	9309      	str	r3, [sp, #36]	@ 0x24
 801e806:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801e808:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801e80c:	910d      	str	r1, [sp, #52]	@ 0x34
 801e80e:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e810:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 801e814:	9015      	str	r0, [sp, #84]	@ 0x54
 801e816:	6850      	ldr	r0, [r2, #4]
 801e818:	6812      	ldr	r2, [r2, #0]
 801e81a:	fb00 1303 	mla	r3, r0, r3, r1
 801e81e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801e822:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801e824:	689b      	ldr	r3, [r3, #8]
 801e826:	3301      	adds	r3, #1
 801e828:	f023 0301 	bic.w	r3, r3, #1
 801e82c:	930a      	str	r3, [sp, #40]	@ 0x28
 801e82e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801e830:	681f      	ldr	r7, [r3, #0]
 801e832:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801e834:	2b00      	cmp	r3, #0
 801e836:	dc03      	bgt.n	801e840 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801e838:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801e83a:	2b00      	cmp	r3, #0
 801e83c:	f340 8287 	ble.w	801ed4e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801e840:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801e842:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e846:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e84a:	1e48      	subs	r0, r1, #1
 801e84c:	f102 3cff 	add.w	ip, r2, #4294967295
 801e850:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e852:	2b00      	cmp	r3, #0
 801e854:	f340 80c4 	ble.w	801e9e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801e858:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801e85c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e860:	d406      	bmi.n	801e870 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801e862:	4586      	cmp	lr, r0
 801e864:	da04      	bge.n	801e870 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801e866:	2b00      	cmp	r3, #0
 801e868:	db02      	blt.n	801e870 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801e86a:	4563      	cmp	r3, ip
 801e86c:	f2c0 80b9 	blt.w	801e9e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801e870:	f11e 0e01 	adds.w	lr, lr, #1
 801e874:	f100 80aa 	bmi.w	801e9cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801e878:	4571      	cmp	r1, lr
 801e87a:	f2c0 80a7 	blt.w	801e9cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801e87e:	3301      	adds	r3, #1
 801e880:	f100 80a4 	bmi.w	801e9cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801e884:	429a      	cmp	r2, r3
 801e886:	f2c0 80a1 	blt.w	801e9cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801e88a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e88c:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
 801e890:	930e      	str	r3, [sp, #56]	@ 0x38
 801e892:	46c8      	mov	r8, r9
 801e894:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801e896:	2b00      	cmp	r3, #0
 801e898:	f340 80c3 	ble.w	801ea22 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801e89c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801e89e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801e8a2:	1423      	asrs	r3, r4, #16
 801e8a4:	ea4f 4026 	mov.w	r0, r6, asr #16
 801e8a8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e8ac:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801e8b0:	f100 814d 	bmi.w	801eb4e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801e8b4:	f10c 3bff 	add.w	fp, ip, #4294967295
 801e8b8:	455b      	cmp	r3, fp
 801e8ba:	f280 8148 	bge.w	801eb4e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801e8be:	2800      	cmp	r0, #0
 801e8c0:	f2c0 8145 	blt.w	801eb4e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801e8c4:	f10e 3bff 	add.w	fp, lr, #4294967295
 801e8c8:	4558      	cmp	r0, fp
 801e8ca:	f280 8140 	bge.w	801eb4e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801e8ce:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801e8d0:	fb00 3305 	mla	r3, r0, r5, r3
 801e8d4:	0858      	lsrs	r0, r3, #1
 801e8d6:	07dd      	lsls	r5, r3, #31
 801e8d8:	f817 c000 	ldrb.w	ip, [r7, r0]
 801e8dc:	bf54      	ite	pl
 801e8de:	f00c 0c0f 	andpl.w	ip, ip, #15
 801e8e2:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801e8e6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801e8ea:	fa5f fc8c 	uxtb.w	ip, ip
 801e8ee:	2a00      	cmp	r2, #0
 801e8f0:	f000 80db 	beq.w	801eaaa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 801e8f4:	1c58      	adds	r0, r3, #1
 801e8f6:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801e8fa:	07c0      	lsls	r0, r0, #31
 801e8fc:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801e900:	bf54      	ite	pl
 801e902:	f00e 0e0f 	andpl.w	lr, lr, #15
 801e906:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801e90a:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801e90e:	fa5f f08e 	uxtb.w	r0, lr
 801e912:	9010      	str	r0, [sp, #64]	@ 0x40
 801e914:	b1c9      	cbz	r1, 801e94a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801e916:	4453      	add	r3, sl
 801e918:	0858      	lsrs	r0, r3, #1
 801e91a:	07dd      	lsls	r5, r3, #31
 801e91c:	5c38      	ldrb	r0, [r7, r0]
 801e91e:	bf54      	ite	pl
 801e920:	f000 000f 	andpl.w	r0, r0, #15
 801e924:	1100      	asrmi	r0, r0, #4
 801e926:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801e92a:	3301      	adds	r3, #1
 801e92c:	b2c0      	uxtb	r0, r0
 801e92e:	900b      	str	r0, [sp, #44]	@ 0x2c
 801e930:	0858      	lsrs	r0, r3, #1
 801e932:	07dd      	lsls	r5, r3, #31
 801e934:	f817 e000 	ldrb.w	lr, [r7, r0]
 801e938:	bf54      	ite	pl
 801e93a:	f00e 030f 	andpl.w	r3, lr, #15
 801e93e:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801e942:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801e946:	b2db      	uxtb	r3, r3
 801e948:	9311      	str	r3, [sp, #68]	@ 0x44
 801e94a:	b292      	uxth	r2, r2
 801e94c:	b289      	uxth	r1, r1
 801e94e:	fb02 f301 	mul.w	r3, r2, r1
 801e952:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801e956:	0112      	lsls	r2, r2, #4
 801e958:	b289      	uxth	r1, r1
 801e95a:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 801e95e:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801e960:	1ad2      	subs	r2, r2, r3
 801e962:	1a40      	subs	r0, r0, r1
 801e964:	b292      	uxth	r2, r2
 801e966:	436a      	muls	r2, r5
 801e968:	b280      	uxth	r0, r0
 801e96a:	fb0c 2c00 	mla	ip, ip, r0, r2
 801e96e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801e970:	fb01 c102 	mla	r1, r1, r2, ip
 801e974:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801e976:	fb03 1302 	mla	r3, r3, r2, r1
 801e97a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e97e:	b1db      	cbz	r3, 801e9b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801e980:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801e982:	4353      	muls	r3, r2
 801e984:	1c5a      	adds	r2, r3, #1
 801e986:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801e98a:	4ac6      	ldr	r2, [pc, #792]	@ (801eca4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801e98c:	121b      	asrs	r3, r3, #8
 801e98e:	6812      	ldr	r2, [r2, #0]
 801e990:	2bff      	cmp	r3, #255	@ 0xff
 801e992:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801e996:	f040 8099 	bne.w	801eacc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 801e99a:	0953      	lsrs	r3, r2, #5
 801e99c:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801e9a0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e9a4:	f02c 0c07 	bic.w	ip, ip, #7
 801e9a8:	ea43 0c0c 	orr.w	ip, r3, ip
 801e9ac:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801e9b0:	ea4c 0202 	orr.w	r2, ip, r2
 801e9b4:	f8a8 2000 	strh.w	r2, [r8]
 801e9b8:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801e9ba:	441c      	add	r4, r3
 801e9bc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801e9be:	441e      	add	r6, r3
 801e9c0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801e9c2:	3b01      	subs	r3, #1
 801e9c4:	f108 0802 	add.w	r8, r8, #2
 801e9c8:	930e      	str	r3, [sp, #56]	@ 0x38
 801e9ca:	e763      	b.n	801e894 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801e9cc:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801e9ce:	441c      	add	r4, r3
 801e9d0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801e9d2:	441e      	add	r6, r3
 801e9d4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e9d6:	3b01      	subs	r3, #1
 801e9d8:	9309      	str	r3, [sp, #36]	@ 0x24
 801e9da:	f109 0902 	add.w	r9, r9, #2
 801e9de:	e737      	b.n	801e850 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801e9e0:	d024      	beq.n	801ea2c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801e9e2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e9e4:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 801e9e6:	3b01      	subs	r3, #1
 801e9e8:	fb00 4003 	mla	r0, r0, r3, r4
 801e9ec:	1400      	asrs	r0, r0, #16
 801e9ee:	f53f af4c 	bmi.w	801e88a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e9f2:	3901      	subs	r1, #1
 801e9f4:	4288      	cmp	r0, r1
 801e9f6:	f6bf af48 	bge.w	801e88a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e9fa:	9924      	ldr	r1, [sp, #144]	@ 0x90
 801e9fc:	fb01 6303 	mla	r3, r1, r3, r6
 801ea00:	141b      	asrs	r3, r3, #16
 801ea02:	f53f af42 	bmi.w	801e88a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ea06:	3a01      	subs	r2, #1
 801ea08:	4293      	cmp	r3, r2
 801ea0a:	f6bf af3e 	bge.w	801e88a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ea0e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801ea12:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801ea16:	930e      	str	r3, [sp, #56]	@ 0x38
 801ea18:	46c8      	mov	r8, r9
 801ea1a:	f1bb 0f00 	cmp.w	fp, #0
 801ea1e:	f300 80b7 	bgt.w	801eb90 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801ea22:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ea24:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801ea28:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801ea2c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801ea2e:	2b00      	cmp	r3, #0
 801ea30:	f340 818d 	ble.w	801ed4e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801ea34:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ea38:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801ea3c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ea40:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ea42:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ea46:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ea4a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ea4e:	eef0 6a62 	vmov.f32	s13, s5
 801ea52:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ea56:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ea5a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ea5e:	ee16 4a90 	vmov	r4, s13
 801ea62:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ea66:	eef0 6a43 	vmov.f32	s13, s6
 801ea6a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ea6e:	ee12 2a90 	vmov	r2, s5
 801ea72:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ea76:	fb92 f3f3 	sdiv	r3, r2, r3
 801ea7a:	ee13 2a10 	vmov	r2, s6
 801ea7e:	9323      	str	r3, [sp, #140]	@ 0x8c
 801ea80:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ea82:	fb92 f3f3 	sdiv	r3, r2, r3
 801ea86:	9324      	str	r3, [sp, #144]	@ 0x90
 801ea88:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801ea8a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801ea8c:	3b01      	subs	r3, #1
 801ea8e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ea92:	930d      	str	r3, [sp, #52]	@ 0x34
 801ea94:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ea96:	bf08      	it	eq
 801ea98:	4613      	moveq	r3, r2
 801ea9a:	ee16 6a90 	vmov	r6, s13
 801ea9e:	9309      	str	r3, [sp, #36]	@ 0x24
 801eaa0:	eeb0 3a67 	vmov.f32	s6, s15
 801eaa4:	eef0 2a47 	vmov.f32	s5, s14
 801eaa8:	e6c3      	b.n	801e832 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801eaaa:	2900      	cmp	r1, #0
 801eaac:	f43f af4d 	beq.w	801e94a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801eab0:	eb0a 0003 	add.w	r0, sl, r3
 801eab4:	0843      	lsrs	r3, r0, #1
 801eab6:	07c0      	lsls	r0, r0, #31
 801eab8:	5cfb      	ldrb	r3, [r7, r3]
 801eaba:	bf54      	ite	pl
 801eabc:	f003 030f 	andpl.w	r3, r3, #15
 801eac0:	111b      	asrmi	r3, r3, #4
 801eac2:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801eac6:	b2db      	uxtb	r3, r3
 801eac8:	930b      	str	r3, [sp, #44]	@ 0x2c
 801eaca:	e73e      	b.n	801e94a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801eacc:	f8b8 e000 	ldrh.w	lr, [r8]
 801ead0:	fa1f fb83 	uxth.w	fp, r3
 801ead4:	ea4f 202e 	mov.w	r0, lr, asr #8
 801ead8:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801eadc:	43db      	mvns	r3, r3
 801eade:	b2db      	uxtb	r3, r3
 801eae0:	fb11 f10b 	smulbb	r1, r1, fp
 801eae4:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801eae8:	fb00 1003 	mla	r0, r0, r3, r1
 801eaec:	fa5f fc8c 	uxtb.w	ip, ip
 801eaf0:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801eaf4:	b2d2      	uxtb	r2, r2
 801eaf6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801eafa:	b280      	uxth	r0, r0
 801eafc:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801eb00:	fb1c fc0b 	smulbb	ip, ip, fp
 801eb04:	fa5f fe8e 	uxtb.w	lr, lr
 801eb08:	fb12 fb0b 	smulbb	fp, r2, fp
 801eb0c:	fb01 cc03 	mla	ip, r1, r3, ip
 801eb10:	fb0e bb03 	mla	fp, lr, r3, fp
 801eb14:	1c43      	adds	r3, r0, #1
 801eb16:	fa1f fc8c 	uxth.w	ip, ip
 801eb1a:	fa1f fb8b 	uxth.w	fp, fp
 801eb1e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801eb22:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
 801eb26:	f10c 0101 	add.w	r1, ip, #1
 801eb2a:	f10b 0001 	add.w	r0, fp, #1
 801eb2e:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801eb32:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801eb36:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801eb3a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801eb3e:	4318      	orrs	r0, r3
 801eb40:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801eb44:	ea40 000c 	orr.w	r0, r0, ip
 801eb48:	f8a8 0000 	strh.w	r0, [r8]
 801eb4c:	e734      	b.n	801e9b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801eb4e:	f113 0b01 	adds.w	fp, r3, #1
 801eb52:	f53f af31 	bmi.w	801e9b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801eb56:	45dc      	cmp	ip, fp
 801eb58:	f6ff af2e 	blt.w	801e9b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801eb5c:	f110 0b01 	adds.w	fp, r0, #1
 801eb60:	f53f af2a 	bmi.w	801e9b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801eb64:	45de      	cmp	lr, fp
 801eb66:	f6ff af27 	blt.w	801e9b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801eb6a:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801eb6c:	9302      	str	r3, [sp, #8]
 801eb6e:	fa0f f38e 	sxth.w	r3, lr
 801eb72:	9301      	str	r3, [sp, #4]
 801eb74:	fa0f f38c 	sxth.w	r3, ip
 801eb78:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801eb7c:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801eb80:	9300      	str	r3, [sp, #0]
 801eb82:	463a      	mov	r2, r7
 801eb84:	4653      	mov	r3, sl
 801eb86:	4641      	mov	r1, r8
 801eb88:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801eb8a:	f7ff fd4d 	bl	801e628 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801eb8e:	e713      	b.n	801e9b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801eb90:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801eb92:	1422      	asrs	r2, r4, #16
 801eb94:	1433      	asrs	r3, r6, #16
 801eb96:	fb05 2303 	mla	r3, r5, r3, r2
 801eb9a:	085a      	lsrs	r2, r3, #1
 801eb9c:	07dd      	lsls	r5, r3, #31
 801eb9e:	5cba      	ldrb	r2, [r7, r2]
 801eba0:	bf54      	ite	pl
 801eba2:	f002 020f 	andpl.w	r2, r2, #15
 801eba6:	1112      	asrmi	r2, r2, #4
 801eba8:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ebac:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801ebb0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801ebb4:	b2d2      	uxtb	r2, r2
 801ebb6:	2900      	cmp	r1, #0
 801ebb8:	d076      	beq.n	801eca8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801ebba:	f103 0e01 	add.w	lr, r3, #1
 801ebbe:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801ebc2:	f01e 0f01 	tst.w	lr, #1
 801ebc6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801ebca:	bf0c      	ite	eq
 801ebcc:	f00c 0c0f 	andeq.w	ip, ip, #15
 801ebd0:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801ebd4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801ebd8:	fa5f f58c 	uxtb.w	r5, ip
 801ebdc:	9512      	str	r5, [sp, #72]	@ 0x48
 801ebde:	b300      	cbz	r0, 801ec22 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801ebe0:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801ebe2:	442b      	add	r3, r5
 801ebe4:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801ebe8:	07dd      	lsls	r5, r3, #31
 801ebea:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801ebee:	bf54      	ite	pl
 801ebf0:	f00c 0c0f 	andpl.w	ip, ip, #15
 801ebf4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801ebf8:	3301      	adds	r3, #1
 801ebfa:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801ebfe:	fa5f f58c 	uxtb.w	r5, ip
 801ec02:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801ec06:	950c      	str	r5, [sp, #48]	@ 0x30
 801ec08:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801ec0c:	07dd      	lsls	r5, r3, #31
 801ec0e:	bf54      	ite	pl
 801ec10:	f00c 0c0f 	andpl.w	ip, ip, #15
 801ec14:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801ec18:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801ec1c:	fa5f f38c 	uxtb.w	r3, ip
 801ec20:	9313      	str	r3, [sp, #76]	@ 0x4c
 801ec22:	b289      	uxth	r1, r1
 801ec24:	b280      	uxth	r0, r0
 801ec26:	fb01 f300 	mul.w	r3, r1, r0
 801ec2a:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801ec2e:	0109      	lsls	r1, r1, #4
 801ec30:	b280      	uxth	r0, r0
 801ec32:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
 801ec36:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801ec38:	1ac9      	subs	r1, r1, r3
 801ec3a:	ebac 0c00 	sub.w	ip, ip, r0
 801ec3e:	b289      	uxth	r1, r1
 801ec40:	4369      	muls	r1, r5
 801ec42:	fa1f fc8c 	uxth.w	ip, ip
 801ec46:	fb02 120c 	mla	r2, r2, ip, r1
 801ec4a:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801ec4c:	fb00 2001 	mla	r0, r0, r1, r2
 801ec50:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801ec52:	fb03 0302 	mla	r3, r3, r2, r0
 801ec56:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ec5a:	b1d3      	cbz	r3, 801ec92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801ec5c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801ec5e:	4353      	muls	r3, r2
 801ec60:	1c5a      	adds	r2, r3, #1
 801ec62:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801ec66:	4a0f      	ldr	r2, [pc, #60]	@ (801eca4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801ec68:	121b      	asrs	r3, r3, #8
 801ec6a:	6812      	ldr	r2, [r2, #0]
 801ec6c:	2bff      	cmp	r3, #255	@ 0xff
 801ec6e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801ec72:	d12d      	bne.n	801ecd0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801ec74:	0953      	lsrs	r3, r2, #5
 801ec76:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801ec7a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ec7e:	f02c 0c07 	bic.w	ip, ip, #7
 801ec82:	ea43 0c0c 	orr.w	ip, r3, ip
 801ec86:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ec8a:	ea4c 0202 	orr.w	r2, ip, r2
 801ec8e:	f8a8 2000 	strh.w	r2, [r8]
 801ec92:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801ec94:	441c      	add	r4, r3
 801ec96:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ec98:	f108 0802 	add.w	r8, r8, #2
 801ec9c:	441e      	add	r6, r3
 801ec9e:	f10b 3bff 	add.w	fp, fp, #4294967295
 801eca2:	e6ba      	b.n	801ea1a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801eca4:	200130a0 	.word	0x200130a0
 801eca8:	2800      	cmp	r0, #0
 801ecaa:	d0ba      	beq.n	801ec22 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801ecac:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801ecae:	442b      	add	r3, r5
 801ecb0:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801ecb4:	07db      	lsls	r3, r3, #31
 801ecb6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801ecba:	bf54      	ite	pl
 801ecbc:	f00c 0c0f 	andpl.w	ip, ip, #15
 801ecc0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801ecc4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801ecc8:	fa5f f38c 	uxtb.w	r3, ip
 801eccc:	930c      	str	r3, [sp, #48]	@ 0x30
 801ecce:	e7a8      	b.n	801ec22 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801ecd0:	f8b8 e000 	ldrh.w	lr, [r8]
 801ecd4:	fa1f fa83 	uxth.w	sl, r3
 801ecd8:	ea4f 202e 	mov.w	r0, lr, asr #8
 801ecdc:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801ece0:	43db      	mvns	r3, r3
 801ece2:	b2db      	uxtb	r3, r3
 801ece4:	fb11 f10a 	smulbb	r1, r1, sl
 801ece8:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801ecec:	fb00 1003 	mla	r0, r0, r3, r1
 801ecf0:	b2d2      	uxtb	r2, r2
 801ecf2:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801ecf6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ecfa:	fa5f fe8e 	uxtb.w	lr, lr
 801ecfe:	fb12 f20a 	smulbb	r2, r2, sl
 801ed02:	fb0e 2203 	mla	r2, lr, r3, r2
 801ed06:	fa5f fc8c 	uxtb.w	ip, ip
 801ed0a:	b280      	uxth	r0, r0
 801ed0c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801ed10:	b292      	uxth	r2, r2
 801ed12:	fb1c fc0a 	smulbb	ip, ip, sl
 801ed16:	fb01 cc03 	mla	ip, r1, r3, ip
 801ed1a:	1c43      	adds	r3, r0, #1
 801ed1c:	1c51      	adds	r1, r2, #1
 801ed1e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ed22:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801ed26:	fa1f fc8c 	uxth.w	ip, ip
 801ed2a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801ed2e:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801ed32:	4308      	orrs	r0, r1
 801ed34:	f10c 0101 	add.w	r1, ip, #1
 801ed38:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801ed3c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801ed40:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801ed44:	ea40 000c 	orr.w	r0, r0, ip
 801ed48:	f8a8 0000 	strh.w	r0, [r8]
 801ed4c:	e7a1      	b.n	801ec92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801ed4e:	b017      	add	sp, #92	@ 0x5c
 801ed50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ed54 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801ed54:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ed58:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 801ed5c:	2d00      	cmp	r5, #0
 801ed5e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801ed62:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 801ed66:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801ed6a:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 801ed6e:	fb05 0e03 	mla	lr, r5, r3, r0
 801ed72:	f2c0 80b0 	blt.w	801eed6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801ed76:	45a9      	cmp	r9, r5
 801ed78:	f340 80ad 	ble.w	801eed6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801ed7c:	2800      	cmp	r0, #0
 801ed7e:	f2c0 80a8 	blt.w	801eed2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801ed82:	4580      	cmp	r8, r0
 801ed84:	f340 80a5 	ble.w	801eed2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801ed88:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801ed8c:	f01e 0f01 	tst.w	lr, #1
 801ed90:	5d16      	ldrb	r6, [r2, r4]
 801ed92:	bf0c      	ite	eq
 801ed94:	f006 060f 	andeq.w	r6, r6, #15
 801ed98:	1136      	asrne	r6, r6, #4
 801ed9a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801ed9e:	b2f6      	uxtb	r6, r6
 801eda0:	1c44      	adds	r4, r0, #1
 801eda2:	f100 809b 	bmi.w	801eedc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801eda6:	45a0      	cmp	r8, r4
 801eda8:	f340 8098 	ble.w	801eedc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801edac:	2f00      	cmp	r7, #0
 801edae:	f000 8097 	beq.w	801eee0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 801edb2:	f10e 0a01 	add.w	sl, lr, #1
 801edb6:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801edba:	f01a 0f01 	tst.w	sl, #1
 801edbe:	5d14      	ldrb	r4, [r2, r4]
 801edc0:	bf0c      	ite	eq
 801edc2:	f004 040f 	andeq.w	r4, r4, #15
 801edc6:	1124      	asrne	r4, r4, #4
 801edc8:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801edcc:	b2e4      	uxtb	r4, r4
 801edce:	3501      	adds	r5, #1
 801edd0:	f100 808a 	bmi.w	801eee8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801edd4:	45a9      	cmp	r9, r5
 801edd6:	f340 8087 	ble.w	801eee8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801edda:	f1bc 0f00 	cmp.w	ip, #0
 801edde:	f000 8086 	beq.w	801eeee <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 801ede2:	2800      	cmp	r0, #0
 801ede4:	db7e      	blt.n	801eee4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801ede6:	4580      	cmp	r8, r0
 801ede8:	dd7c      	ble.n	801eee4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801edea:	eb03 090e 	add.w	r9, r3, lr
 801edee:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801edf2:	f019 0f01 	tst.w	r9, #1
 801edf6:	5d55      	ldrb	r5, [r2, r5]
 801edf8:	bf0c      	ite	eq
 801edfa:	f005 050f 	andeq.w	r5, r5, #15
 801edfe:	112d      	asrne	r5, r5, #4
 801ee00:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801ee04:	b2ed      	uxtb	r5, r5
 801ee06:	3001      	adds	r0, #1
 801ee08:	d474      	bmi.n	801eef4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801ee0a:	4580      	cmp	r8, r0
 801ee0c:	dd72      	ble.n	801eef4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801ee0e:	2f00      	cmp	r7, #0
 801ee10:	d072      	beq.n	801eef8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801ee12:	3301      	adds	r3, #1
 801ee14:	449e      	add	lr, r3
 801ee16:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801ee1a:	f01e 0f01 	tst.w	lr, #1
 801ee1e:	5cd0      	ldrb	r0, [r2, r3]
 801ee20:	bf0c      	ite	eq
 801ee22:	f000 000f 	andeq.w	r0, r0, #15
 801ee26:	1100      	asrne	r0, r0, #4
 801ee28:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801ee2c:	b2c3      	uxtb	r3, r0
 801ee2e:	b2ba      	uxth	r2, r7
 801ee30:	fa1f fc8c 	uxth.w	ip, ip
 801ee34:	fb02 f00c 	mul.w	r0, r2, ip
 801ee38:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801ee3c:	0112      	lsls	r2, r2, #4
 801ee3e:	fa1f fc8c 	uxth.w	ip, ip
 801ee42:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 801ee46:	1a12      	subs	r2, r2, r0
 801ee48:	eba7 070c 	sub.w	r7, r7, ip
 801ee4c:	b292      	uxth	r2, r2
 801ee4e:	b2bf      	uxth	r7, r7
 801ee50:	4362      	muls	r2, r4
 801ee52:	fb06 2207 	mla	r2, r6, r7, r2
 801ee56:	fb0c 2505 	mla	r5, ip, r5, r2
 801ee5a:	fb00 5303 	mla	r3, r0, r3, r5
 801ee5e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ee62:	b3a3      	cbz	r3, 801eece <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 801ee64:	4a25      	ldr	r2, [pc, #148]	@ (801eefc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 801ee66:	880e      	ldrh	r6, [r1, #0]
 801ee68:	6815      	ldr	r5, [r2, #0]
 801ee6a:	1234      	asrs	r4, r6, #8
 801ee6c:	b29a      	uxth	r2, r3
 801ee6e:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801ee72:	43db      	mvns	r3, r3
 801ee74:	b2db      	uxtb	r3, r3
 801ee76:	fb10 f002 	smulbb	r0, r0, r2
 801ee7a:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801ee7e:	fb04 0403 	mla	r4, r4, r3, r0
 801ee82:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801ee86:	10f0      	asrs	r0, r6, #3
 801ee88:	b2ed      	uxtb	r5, r5
 801ee8a:	00f6      	lsls	r6, r6, #3
 801ee8c:	fb17 f702 	smulbb	r7, r7, r2
 801ee90:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801ee94:	fb15 f202 	smulbb	r2, r5, r2
 801ee98:	b2f6      	uxtb	r6, r6
 801ee9a:	b2a4      	uxth	r4, r4
 801ee9c:	fb00 7003 	mla	r0, r0, r3, r7
 801eea0:	fb06 2303 	mla	r3, r6, r3, r2
 801eea4:	b29a      	uxth	r2, r3
 801eea6:	1c63      	adds	r3, r4, #1
 801eea8:	b280      	uxth	r0, r0
 801eeaa:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801eeae:	1c53      	adds	r3, r2, #1
 801eeb0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801eeb4:	1c42      	adds	r2, r0, #1
 801eeb6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801eeba:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801eebe:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801eec2:	0940      	lsrs	r0, r0, #5
 801eec4:	4323      	orrs	r3, r4
 801eec6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801eeca:	4303      	orrs	r3, r0
 801eecc:	800b      	strh	r3, [r1, #0]
 801eece:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801eed2:	2600      	movs	r6, #0
 801eed4:	e764      	b.n	801eda0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 801eed6:	2400      	movs	r4, #0
 801eed8:	4626      	mov	r6, r4
 801eeda:	e778      	b.n	801edce <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801eedc:	2400      	movs	r4, #0
 801eede:	e776      	b.n	801edce <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801eee0:	463c      	mov	r4, r7
 801eee2:	e774      	b.n	801edce <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801eee4:	2500      	movs	r5, #0
 801eee6:	e78e      	b.n	801ee06 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 801eee8:	2300      	movs	r3, #0
 801eeea:	461d      	mov	r5, r3
 801eeec:	e79f      	b.n	801ee2e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801eeee:	4663      	mov	r3, ip
 801eef0:	4665      	mov	r5, ip
 801eef2:	e79c      	b.n	801ee2e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801eef4:	2300      	movs	r3, #0
 801eef6:	e79a      	b.n	801ee2e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801eef8:	463b      	mov	r3, r7
 801eefa:	e798      	b.n	801ee2e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801eefc:	200130a0 	.word	0x200130a0

0801ef00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ef00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ef04:	b093      	sub	sp, #76	@ 0x4c
 801ef06:	461d      	mov	r5, r3
 801ef08:	920c      	str	r2, [sp, #48]	@ 0x30
 801ef0a:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801ef0c:	9107      	str	r1, [sp, #28]
 801ef0e:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801ef12:	9011      	str	r0, [sp, #68]	@ 0x44
 801ef14:	6850      	ldr	r0, [r2, #4]
 801ef16:	6812      	ldr	r2, [r2, #0]
 801ef18:	fb00 1303 	mla	r3, r0, r3, r1
 801ef1c:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801ef20:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ef22:	689b      	ldr	r3, [r3, #8]
 801ef24:	3301      	adds	r3, #1
 801ef26:	f023 0301 	bic.w	r3, r3, #1
 801ef2a:	9306      	str	r3, [sp, #24]
 801ef2c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ef2e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801ef32:	681f      	ldr	r7, [r3, #0]
 801ef34:	9b07      	ldr	r3, [sp, #28]
 801ef36:	2b00      	cmp	r3, #0
 801ef38:	dc03      	bgt.n	801ef42 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801ef3a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ef3c:	2b00      	cmp	r3, #0
 801ef3e:	f340 8267 	ble.w	801f410 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801ef42:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ef44:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ef48:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ef4c:	1e48      	subs	r0, r1, #1
 801ef4e:	f102 3cff 	add.w	ip, r2, #4294967295
 801ef52:	2d00      	cmp	r5, #0
 801ef54:	f340 80b8 	ble.w	801f0c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801ef58:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801ef5c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ef60:	d406      	bmi.n	801ef70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ef62:	4586      	cmp	lr, r0
 801ef64:	da04      	bge.n	801ef70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ef66:	2b00      	cmp	r3, #0
 801ef68:	db02      	blt.n	801ef70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ef6a:	4563      	cmp	r3, ip
 801ef6c:	f2c0 80ad 	blt.w	801f0ca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 801ef70:	f11e 0e01 	adds.w	lr, lr, #1
 801ef74:	f100 80a0 	bmi.w	801f0b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801ef78:	4571      	cmp	r1, lr
 801ef7a:	f2c0 809d 	blt.w	801f0b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801ef7e:	3301      	adds	r3, #1
 801ef80:	f100 809a 	bmi.w	801f0b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801ef84:	429a      	cmp	r2, r3
 801ef86:	f2c0 8097 	blt.w	801f0b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801ef8a:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801ef8e:	9509      	str	r5, [sp, #36]	@ 0x24
 801ef90:	46c8      	mov	r8, r9
 801ef92:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ef94:	2b00      	cmp	r3, #0
 801ef96:	f340 80b6 	ble.w	801f106 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801ef9a:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801ef9e:	9308      	str	r3, [sp, #32]
 801efa0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801efa2:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801efa6:	1423      	asrs	r3, r4, #16
 801efa8:	ea4f 4026 	mov.w	r0, r6, asr #16
 801efac:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801efb0:	f100 813e 	bmi.w	801f230 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801efb4:	f10c 3bff 	add.w	fp, ip, #4294967295
 801efb8:	455b      	cmp	r3, fp
 801efba:	f280 8139 	bge.w	801f230 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801efbe:	2800      	cmp	r0, #0
 801efc0:	f2c0 8136 	blt.w	801f230 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801efc4:	f10e 3bff 	add.w	fp, lr, #4294967295
 801efc8:	4558      	cmp	r0, fp
 801efca:	f280 8131 	bge.w	801f230 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801efce:	9a06      	ldr	r2, [sp, #24]
 801efd0:	fb00 3302 	mla	r3, r0, r2, r3
 801efd4:	0858      	lsrs	r0, r3, #1
 801efd6:	07da      	lsls	r2, r3, #31
 801efd8:	f817 c000 	ldrb.w	ip, [r7, r0]
 801efdc:	9a08      	ldr	r2, [sp, #32]
 801efde:	bf54      	ite	pl
 801efe0:	f00c 0c0f 	andpl.w	ip, ip, #15
 801efe4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801efe8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801efec:	fa5f fc8c 	uxtb.w	ip, ip
 801eff0:	2a00      	cmp	r2, #0
 801eff2:	f000 80cb 	beq.w	801f18c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801eff6:	1c58      	adds	r0, r3, #1
 801eff8:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801effc:	07c0      	lsls	r0, r0, #31
 801effe:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801f002:	bf54      	ite	pl
 801f004:	f00e 0e0f 	andpl.w	lr, lr, #15
 801f008:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801f00c:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801f010:	fa5f fe8e 	uxtb.w	lr, lr
 801f014:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
 801f018:	b1b9      	cbz	r1, 801f04a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801f01a:	4453      	add	r3, sl
 801f01c:	0858      	lsrs	r0, r3, #1
 801f01e:	07da      	lsls	r2, r3, #31
 801f020:	5c38      	ldrb	r0, [r7, r0]
 801f022:	bf54      	ite	pl
 801f024:	f000 000f 	andpl.w	r0, r0, #15
 801f028:	1100      	asrmi	r0, r0, #4
 801f02a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f02e:	b2c0      	uxtb	r0, r0
 801f030:	900a      	str	r0, [sp, #40]	@ 0x28
 801f032:	1c58      	adds	r0, r3, #1
 801f034:	0843      	lsrs	r3, r0, #1
 801f036:	07c2      	lsls	r2, r0, #31
 801f038:	5cfb      	ldrb	r3, [r7, r3]
 801f03a:	bf54      	ite	pl
 801f03c:	f003 030f 	andpl.w	r3, r3, #15
 801f040:	111b      	asrmi	r3, r3, #4
 801f042:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f046:	b2db      	uxtb	r3, r3
 801f048:	930e      	str	r3, [sp, #56]	@ 0x38
 801f04a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801f04e:	b289      	uxth	r1, r1
 801f050:	fb02 f301 	mul.w	r3, r2, r1
 801f054:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801f058:	0112      	lsls	r2, r2, #4
 801f05a:	b289      	uxth	r1, r1
 801f05c:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 801f060:	1a40      	subs	r0, r0, r1
 801f062:	fa1f fe80 	uxth.w	lr, r0
 801f066:	1ad2      	subs	r2, r2, r3
 801f068:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801f06a:	b292      	uxth	r2, r2
 801f06c:	4342      	muls	r2, r0
 801f06e:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801f072:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801f074:	fb01 c102 	mla	r1, r1, r2, ip
 801f078:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801f07a:	fb03 1302 	mla	r3, r3, r2, r1
 801f07e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f082:	2bff      	cmp	r3, #255	@ 0xff
 801f084:	f040 8093 	bne.w	801f1ae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801f088:	4bbe      	ldr	r3, [pc, #760]	@ (801f384 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801f08a:	681a      	ldr	r2, [r3, #0]
 801f08c:	4bbe      	ldr	r3, [pc, #760]	@ (801f388 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801f08e:	0951      	lsrs	r1, r2, #5
 801f090:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801f094:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801f098:	430b      	orrs	r3, r1
 801f09a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f09e:	4313      	orrs	r3, r2
 801f0a0:	f8a8 3000 	strh.w	r3, [r8]
 801f0a4:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801f0a6:	441c      	add	r4, r3
 801f0a8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f0aa:	441e      	add	r6, r3
 801f0ac:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f0ae:	3b01      	subs	r3, #1
 801f0b0:	f108 0802 	add.w	r8, r8, #2
 801f0b4:	9309      	str	r3, [sp, #36]	@ 0x24
 801f0b6:	e76c      	b.n	801ef92 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f0b8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801f0ba:	441c      	add	r4, r3
 801f0bc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f0be:	3d01      	subs	r5, #1
 801f0c0:	441e      	add	r6, r3
 801f0c2:	f109 0902 	add.w	r9, r9, #2
 801f0c6:	e744      	b.n	801ef52 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801f0c8:	d021      	beq.n	801f10e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801f0ca:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801f0cc:	1e6b      	subs	r3, r5, #1
 801f0ce:	fb00 4003 	mla	r0, r0, r3, r4
 801f0d2:	1400      	asrs	r0, r0, #16
 801f0d4:	f53f af59 	bmi.w	801ef8a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801f0d8:	3901      	subs	r1, #1
 801f0da:	4288      	cmp	r0, r1
 801f0dc:	f6bf af55 	bge.w	801ef8a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801f0e0:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801f0e2:	fb01 6303 	mla	r3, r1, r3, r6
 801f0e6:	141b      	asrs	r3, r3, #16
 801f0e8:	f53f af4f 	bmi.w	801ef8a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801f0ec:	3a01      	subs	r2, #1
 801f0ee:	4293      	cmp	r3, r2
 801f0f0:	f6bf af4b 	bge.w	801ef8a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801f0f4:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801f0f8:	9308      	str	r3, [sp, #32]
 801f0fa:	46a8      	mov	r8, r5
 801f0fc:	46ce      	mov	lr, r9
 801f0fe:	f1b8 0f00 	cmp.w	r8, #0
 801f102:	f300 80b5 	bgt.w	801f270 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801f106:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801f10a:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801f10e:	9b07      	ldr	r3, [sp, #28]
 801f110:	2b00      	cmp	r3, #0
 801f112:	f340 817d 	ble.w	801f410 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801f116:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f11a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801f11e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f122:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801f124:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f128:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f12c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f130:	eef0 6a62 	vmov.f32	s13, s5
 801f134:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f138:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f13c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f140:	ee16 4a90 	vmov	r4, s13
 801f144:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f148:	eef0 6a43 	vmov.f32	s13, s6
 801f14c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f150:	ee12 2a90 	vmov	r2, s5
 801f154:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f158:	fb92 f3f3 	sdiv	r3, r2, r3
 801f15c:	ee13 2a10 	vmov	r2, s6
 801f160:	931f      	str	r3, [sp, #124]	@ 0x7c
 801f162:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801f164:	fb92 f3f3 	sdiv	r3, r2, r3
 801f168:	9320      	str	r3, [sp, #128]	@ 0x80
 801f16a:	9b07      	ldr	r3, [sp, #28]
 801f16c:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801f16e:	3b01      	subs	r3, #1
 801f170:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f174:	9307      	str	r3, [sp, #28]
 801f176:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801f178:	ee16 6a90 	vmov	r6, s13
 801f17c:	bf14      	ite	ne
 801f17e:	461d      	movne	r5, r3
 801f180:	4615      	moveq	r5, r2
 801f182:	eeb0 3a67 	vmov.f32	s6, s15
 801f186:	eef0 2a47 	vmov.f32	s5, s14
 801f18a:	e6d3      	b.n	801ef34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801f18c:	2900      	cmp	r1, #0
 801f18e:	f43f af5c 	beq.w	801f04a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801f192:	eb0a 0003 	add.w	r0, sl, r3
 801f196:	0843      	lsrs	r3, r0, #1
 801f198:	07c0      	lsls	r0, r0, #31
 801f19a:	5cfb      	ldrb	r3, [r7, r3]
 801f19c:	bf54      	ite	pl
 801f19e:	f003 030f 	andpl.w	r3, r3, #15
 801f1a2:	111b      	asrmi	r3, r3, #4
 801f1a4:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f1a8:	b2db      	uxtb	r3, r3
 801f1aa:	930a      	str	r3, [sp, #40]	@ 0x28
 801f1ac:	e74d      	b.n	801f04a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801f1ae:	2b00      	cmp	r3, #0
 801f1b0:	f43f af78 	beq.w	801f0a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801f1b4:	4a73      	ldr	r2, [pc, #460]	@ (801f384 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801f1b6:	f8b8 c000 	ldrh.w	ip, [r8]
 801f1ba:	6810      	ldr	r0, [r2, #0]
 801f1bc:	fa1f fe83 	uxth.w	lr, r3
 801f1c0:	ea4f 212c 	mov.w	r1, ip, asr #8
 801f1c4:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801f1c8:	43db      	mvns	r3, r3
 801f1ca:	b2db      	uxtb	r3, r3
 801f1cc:	fb12 f20e 	smulbb	r2, r2, lr
 801f1d0:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801f1d4:	fb01 2103 	mla	r1, r1, r3, r2
 801f1d8:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801f1dc:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801f1e0:	b2c0      	uxtb	r0, r0
 801f1e2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f1e6:	fb1b fb0e 	smulbb	fp, fp, lr
 801f1ea:	b289      	uxth	r1, r1
 801f1ec:	fb10 fe0e 	smulbb	lr, r0, lr
 801f1f0:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801f1f4:	fa5f fc8c 	uxtb.w	ip, ip
 801f1f8:	fb02 b203 	mla	r2, r2, r3, fp
 801f1fc:	1c48      	adds	r0, r1, #1
 801f1fe:	fb0c e303 	mla	r3, ip, r3, lr
 801f202:	b292      	uxth	r2, r2
 801f204:	b29b      	uxth	r3, r3
 801f206:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801f20a:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
 801f20e:	f102 0b01 	add.w	fp, r2, #1
 801f212:	1c59      	adds	r1, r3, #1
 801f214:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801f218:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801f21c:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801f220:	0952      	lsrs	r2, r2, #5
 801f222:	4301      	orrs	r1, r0
 801f224:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f228:	4311      	orrs	r1, r2
 801f22a:	f8a8 1000 	strh.w	r1, [r8]
 801f22e:	e739      	b.n	801f0a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801f230:	f113 0b01 	adds.w	fp, r3, #1
 801f234:	f53f af36 	bmi.w	801f0a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801f238:	45dc      	cmp	ip, fp
 801f23a:	f6ff af33 	blt.w	801f0a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801f23e:	f110 0b01 	adds.w	fp, r0, #1
 801f242:	f53f af2f 	bmi.w	801f0a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801f246:	45de      	cmp	lr, fp
 801f248:	f6ff af2c 	blt.w	801f0a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801f24c:	9a08      	ldr	r2, [sp, #32]
 801f24e:	9302      	str	r3, [sp, #8]
 801f250:	fa0f f38e 	sxth.w	r3, lr
 801f254:	9301      	str	r3, [sp, #4]
 801f256:	fa0f f38c 	sxth.w	r3, ip
 801f25a:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801f25e:	9105      	str	r1, [sp, #20]
 801f260:	9300      	str	r3, [sp, #0]
 801f262:	463a      	mov	r2, r7
 801f264:	4653      	mov	r3, sl
 801f266:	4641      	mov	r1, r8
 801f268:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801f26a:	f7ff fd73 	bl	801ed54 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801f26e:	e719      	b.n	801f0a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801f270:	9906      	ldr	r1, [sp, #24]
 801f272:	1422      	asrs	r2, r4, #16
 801f274:	1433      	asrs	r3, r6, #16
 801f276:	fb01 2303 	mla	r3, r1, r3, r2
 801f27a:	085a      	lsrs	r2, r3, #1
 801f27c:	07d9      	lsls	r1, r3, #31
 801f27e:	5cba      	ldrb	r2, [r7, r2]
 801f280:	bf54      	ite	pl
 801f282:	f002 020f 	andpl.w	r2, r2, #15
 801f286:	1112      	asrmi	r2, r2, #4
 801f288:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801f28c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801f290:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801f294:	b2d2      	uxtb	r2, r2
 801f296:	2800      	cmp	r0, #0
 801f298:	d062      	beq.n	801f360 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 801f29a:	f103 0a01 	add.w	sl, r3, #1
 801f29e:	ea4f 015a 	mov.w	r1, sl, lsr #1
 801f2a2:	f01a 0f01 	tst.w	sl, #1
 801f2a6:	5c79      	ldrb	r1, [r7, r1]
 801f2a8:	bf0c      	ite	eq
 801f2aa:	f001 010f 	andeq.w	r1, r1, #15
 801f2ae:	1109      	asrne	r1, r1, #4
 801f2b0:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801f2b4:	b2c9      	uxtb	r1, r1
 801f2b6:	910f      	str	r1, [sp, #60]	@ 0x3c
 801f2b8:	f1bc 0f00 	cmp.w	ip, #0
 801f2bc:	d019      	beq.n	801f2f2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801f2be:	9908      	ldr	r1, [sp, #32]
 801f2c0:	440b      	add	r3, r1
 801f2c2:	0859      	lsrs	r1, r3, #1
 801f2c4:	f013 0f01 	tst.w	r3, #1
 801f2c8:	5c79      	ldrb	r1, [r7, r1]
 801f2ca:	bf0c      	ite	eq
 801f2cc:	f001 010f 	andeq.w	r1, r1, #15
 801f2d0:	1109      	asrne	r1, r1, #4
 801f2d2:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801f2d6:	b2c9      	uxtb	r1, r1
 801f2d8:	3301      	adds	r3, #1
 801f2da:	910b      	str	r1, [sp, #44]	@ 0x2c
 801f2dc:	0859      	lsrs	r1, r3, #1
 801f2de:	07db      	lsls	r3, r3, #31
 801f2e0:	5c79      	ldrb	r1, [r7, r1]
 801f2e2:	bf54      	ite	pl
 801f2e4:	f001 010f 	andpl.w	r1, r1, #15
 801f2e8:	1109      	asrmi	r1, r1, #4
 801f2ea:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801f2ee:	b2c9      	uxtb	r1, r1
 801f2f0:	9110      	str	r1, [sp, #64]	@ 0x40
 801f2f2:	b280      	uxth	r0, r0
 801f2f4:	fa1f fc8c 	uxth.w	ip, ip
 801f2f8:	fb00 f30c 	mul.w	r3, r0, ip
 801f2fc:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801f300:	0100      	lsls	r0, r0, #4
 801f302:	fa1f fc8c 	uxth.w	ip, ip
 801f306:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
 801f30a:	eba1 010c 	sub.w	r1, r1, ip
 801f30e:	fa1f fa81 	uxth.w	sl, r1
 801f312:	1ac0      	subs	r0, r0, r3
 801f314:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801f316:	b280      	uxth	r0, r0
 801f318:	4348      	muls	r0, r1
 801f31a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801f31c:	fb02 020a 	mla	r2, r2, sl, r0
 801f320:	fb0c 2c01 	mla	ip, ip, r1, r2
 801f324:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801f326:	fb03 c302 	mla	r3, r3, r2, ip
 801f32a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f32e:	2bff      	cmp	r3, #255	@ 0xff
 801f330:	d12c      	bne.n	801f38c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 801f332:	4b14      	ldr	r3, [pc, #80]	@ (801f384 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801f334:	681a      	ldr	r2, [r3, #0]
 801f336:	4b14      	ldr	r3, [pc, #80]	@ (801f388 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801f338:	0951      	lsrs	r1, r2, #5
 801f33a:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801f33e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801f342:	430b      	orrs	r3, r1
 801f344:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f348:	4313      	orrs	r3, r2
 801f34a:	f8ae 3000 	strh.w	r3, [lr]
 801f34e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801f350:	441c      	add	r4, r3
 801f352:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f354:	f10e 0e02 	add.w	lr, lr, #2
 801f358:	441e      	add	r6, r3
 801f35a:	f108 38ff 	add.w	r8, r8, #4294967295
 801f35e:	e6ce      	b.n	801f0fe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801f360:	f1bc 0f00 	cmp.w	ip, #0
 801f364:	d0c5      	beq.n	801f2f2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801f366:	9908      	ldr	r1, [sp, #32]
 801f368:	440b      	add	r3, r1
 801f36a:	0859      	lsrs	r1, r3, #1
 801f36c:	07db      	lsls	r3, r3, #31
 801f36e:	5c79      	ldrb	r1, [r7, r1]
 801f370:	bf54      	ite	pl
 801f372:	f001 010f 	andpl.w	r1, r1, #15
 801f376:	1109      	asrmi	r1, r1, #4
 801f378:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801f37c:	b2c9      	uxtb	r1, r1
 801f37e:	910b      	str	r1, [sp, #44]	@ 0x2c
 801f380:	e7b7      	b.n	801f2f2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801f382:	bf00      	nop
 801f384:	200130a0 	.word	0x200130a0
 801f388:	fffff800 	.word	0xfffff800
 801f38c:	2b00      	cmp	r3, #0
 801f38e:	d0de      	beq.n	801f34e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801f390:	4a21      	ldr	r2, [pc, #132]	@ (801f418 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 801f392:	f8be c000 	ldrh.w	ip, [lr]
 801f396:	6810      	ldr	r0, [r2, #0]
 801f398:	fa1f fa83 	uxth.w	sl, r3
 801f39c:	ea4f 212c 	mov.w	r1, ip, asr #8
 801f3a0:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801f3a4:	43db      	mvns	r3, r3
 801f3a6:	b2db      	uxtb	r3, r3
 801f3a8:	fb12 f20a 	smulbb	r2, r2, sl
 801f3ac:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801f3b0:	fb01 2103 	mla	r1, r1, r3, r2
 801f3b4:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801f3b8:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801f3bc:	b2c0      	uxtb	r0, r0
 801f3be:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f3c2:	fa5f fc8c 	uxtb.w	ip, ip
 801f3c6:	fb10 f00a 	smulbb	r0, r0, sl
 801f3ca:	fb0c 0003 	mla	r0, ip, r3, r0
 801f3ce:	b289      	uxth	r1, r1
 801f3d0:	fb1b fb0a 	smulbb	fp, fp, sl
 801f3d4:	b280      	uxth	r0, r0
 801f3d6:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801f3da:	fb02 b203 	mla	r2, r2, r3, fp
 801f3de:	1c4b      	adds	r3, r1, #1
 801f3e0:	f100 0b01 	add.w	fp, r0, #1
 801f3e4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801f3e8:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801f3ec:	b292      	uxth	r2, r2
 801f3ee:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801f3f2:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801f3f6:	ea4b 0101 	orr.w	r1, fp, r1
 801f3fa:	f102 0b01 	add.w	fp, r2, #1
 801f3fe:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801f402:	0952      	lsrs	r2, r2, #5
 801f404:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f408:	4311      	orrs	r1, r2
 801f40a:	f8ae 1000 	strh.w	r1, [lr]
 801f40e:	e79e      	b.n	801f34e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801f410:	b013      	add	sp, #76	@ 0x4c
 801f412:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f416:	bf00      	nop
 801f418:	200130a0 	.word	0x200130a0

0801f41c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 801f41c:	b570      	push	{r4, r5, r6, lr}
 801f41e:	1208      	asrs	r0, r1, #8
 801f420:	b29e      	uxth	r6, r3
 801f422:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 801f426:	1213      	asrs	r3, r2, #8
 801f428:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801f42c:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801f430:	fb13 f305 	smulbb	r3, r3, r5
 801f434:	fb10 f006 	smulbb	r0, r0, r6
 801f438:	4418      	add	r0, r3
 801f43a:	10cc      	asrs	r4, r1, #3
 801f43c:	10d3      	asrs	r3, r2, #3
 801f43e:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801f442:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801f446:	fb13 f305 	smulbb	r3, r3, r5
 801f44a:	fb14 f406 	smulbb	r4, r4, r6
 801f44e:	00c9      	lsls	r1, r1, #3
 801f450:	00d2      	lsls	r2, r2, #3
 801f452:	441c      	add	r4, r3
 801f454:	b2d2      	uxtb	r2, r2
 801f456:	b2cb      	uxtb	r3, r1
 801f458:	fb12 f205 	smulbb	r2, r2, r5
 801f45c:	b280      	uxth	r0, r0
 801f45e:	fb13 f306 	smulbb	r3, r3, r6
 801f462:	4413      	add	r3, r2
 801f464:	1c42      	adds	r2, r0, #1
 801f466:	b29b      	uxth	r3, r3
 801f468:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f46c:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
 801f470:	1c58      	adds	r0, r3, #1
 801f472:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801f476:	b2a4      	uxth	r4, r4
 801f478:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801f47c:	4310      	orrs	r0, r2
 801f47e:	1c62      	adds	r2, r4, #1
 801f480:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801f484:	0964      	lsrs	r4, r4, #5
 801f486:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801f48a:	4320      	orrs	r0, r4
 801f48c:	bd70      	pop	{r4, r5, r6, pc}
	...

0801f490 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801f490:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f494:	b08f      	sub	sp, #60	@ 0x3c
 801f496:	461c      	mov	r4, r3
 801f498:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 801f49c:	9004      	str	r0, [sp, #16]
 801f49e:	460d      	mov	r5, r1
 801f4a0:	4616      	mov	r6, r2
 801f4a2:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801f4a4:	2f00      	cmp	r7, #0
 801f4a6:	f000 80f6 	beq.w	801f696 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 801f4aa:	6820      	ldr	r0, [r4, #0]
 801f4ac:	6861      	ldr	r1, [r4, #4]
 801f4ae:	aa0a      	add	r2, sp, #40	@ 0x28
 801f4b0:	c203      	stmia	r2!, {r0, r1}
 801f4b2:	6818      	ldr	r0, [r3, #0]
 801f4b4:	6859      	ldr	r1, [r3, #4]
 801f4b6:	aa0c      	add	r2, sp, #48	@ 0x30
 801f4b8:	c203      	stmia	r2!, {r0, r1}
 801f4ba:	a80a      	add	r0, sp, #40	@ 0x28
 801f4bc:	f7ee fe66 	bl	800e18c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f4c0:	4621      	mov	r1, r4
 801f4c2:	a80c      	add	r0, sp, #48	@ 0x30
 801f4c4:	f7ee fe8a 	bl	800e1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f4c8:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801f4cc:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 801f4d0:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801f4d4:	f002 0301 	and.w	r3, r2, #1
 801f4d8:	9306      	str	r3, [sp, #24]
 801f4da:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801f4de:	f003 0101 	and.w	r1, r3, #1
 801f4e2:	9105      	str	r1, [sp, #20]
 801f4e4:	9805      	ldr	r0, [sp, #20]
 801f4e6:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 801f4ea:	4403      	add	r3, r0
 801f4ec:	fb01 2303 	mla	r3, r1, r3, r2
 801f4f0:	f04f 0802 	mov.w	r8, #2
 801f4f4:	fb93 f3f8 	sdiv	r3, r3, r8
 801f4f8:	441d      	add	r5, r3
 801f4fa:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801f4fe:	441a      	add	r2, r3
 801f500:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801f504:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 801f508:	4419      	add	r1, r3
 801f50a:	4b64      	ldr	r3, [pc, #400]	@ (801f69c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 801f50c:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 801f510:	6818      	ldr	r0, [r3, #0]
 801f512:	6803      	ldr	r3, [r0, #0]
 801f514:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801f516:	4798      	blx	r3
 801f518:	4a61      	ldr	r2, [pc, #388]	@ (801f6a0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 801f51a:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 801f51e:	8813      	ldrh	r3, [r2, #0]
 801f520:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
 801f524:	2fff      	cmp	r7, #255	@ 0xff
 801f526:	fb03 a404 	mla	r4, r3, r4, sl
 801f52a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801f52e:	f106 0604 	add.w	r6, r6, #4
 801f532:	4611      	mov	r1, r2
 801f534:	fb03 fb0b 	mul.w	fp, r3, fp
 801f538:	d06b      	beq.n	801f612 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 801f53a:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
 801f53e:	9303      	str	r3, [sp, #12]
 801f540:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 801f544:	e9cd 3207 	strd	r3, r2, [sp, #28]
 801f548:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 801f54c:	9b07      	ldr	r3, [sp, #28]
 801f54e:	42a3      	cmp	r3, r4
 801f550:	f240 809c 	bls.w	801f68c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 801f554:	9b06      	ldr	r3, [sp, #24]
 801f556:	2b00      	cmp	r3, #0
 801f558:	d039      	beq.n	801f5ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 801f55a:	782b      	ldrb	r3, [r5, #0]
 801f55c:	8822      	ldrh	r2, [r4, #0]
 801f55e:	9804      	ldr	r0, [sp, #16]
 801f560:	f003 030f 	and.w	r3, r3, #15
 801f564:	f105 0801 	add.w	r8, r5, #1
 801f568:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801f56c:	9b03      	ldr	r3, [sp, #12]
 801f56e:	9300      	str	r3, [sp, #0]
 801f570:	463b      	mov	r3, r7
 801f572:	f7ff ff53 	bl	801f41c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801f576:	f824 0b02 	strh.w	r0, [r4], #2
 801f57a:	f109 3bff 	add.w	fp, r9, #4294967295
 801f57e:	f1bb 0f01 	cmp.w	fp, #1
 801f582:	46a2      	mov	sl, r4
 801f584:	f104 0404 	add.w	r4, r4, #4
 801f588:	dd24      	ble.n	801f5d4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 801f58a:	f898 3000 	ldrb.w	r3, [r8]
 801f58e:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 801f592:	9804      	ldr	r0, [sp, #16]
 801f594:	091b      	lsrs	r3, r3, #4
 801f596:	f1ab 0b02 	sub.w	fp, fp, #2
 801f59a:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801f59e:	9b03      	ldr	r3, [sp, #12]
 801f5a0:	9300      	str	r3, [sp, #0]
 801f5a2:	463b      	mov	r3, r7
 801f5a4:	f7ff ff3a 	bl	801f41c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801f5a8:	f824 0c04 	strh.w	r0, [r4, #-4]
 801f5ac:	f818 3b01 	ldrb.w	r3, [r8], #1
 801f5b0:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 801f5b4:	9804      	ldr	r0, [sp, #16]
 801f5b6:	f003 030f 	and.w	r3, r3, #15
 801f5ba:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801f5be:	9b03      	ldr	r3, [sp, #12]
 801f5c0:	9300      	str	r3, [sp, #0]
 801f5c2:	463b      	mov	r3, r7
 801f5c4:	f7ff ff2a 	bl	801f41c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801f5c8:	f824 0c02 	strh.w	r0, [r4, #-2]
 801f5cc:	e7d7      	b.n	801f57e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 801f5ce:	46a8      	mov	r8, r5
 801f5d0:	46cb      	mov	fp, r9
 801f5d2:	e7d4      	b.n	801f57e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 801f5d4:	d10e      	bne.n	801f5f4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 801f5d6:	f898 3000 	ldrb.w	r3, [r8]
 801f5da:	f8ba 2000 	ldrh.w	r2, [sl]
 801f5de:	9804      	ldr	r0, [sp, #16]
 801f5e0:	091b      	lsrs	r3, r3, #4
 801f5e2:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 801f5e6:	9b03      	ldr	r3, [sp, #12]
 801f5e8:	9300      	str	r3, [sp, #0]
 801f5ea:	463b      	mov	r3, r7
 801f5ec:	f7ff ff16 	bl	801f41c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 801f5f0:	f82a 0b02 	strh.w	r0, [sl], #2
 801f5f4:	9b08      	ldr	r3, [sp, #32]
 801f5f6:	9a05      	ldr	r2, [sp, #20]
 801f5f8:	881c      	ldrh	r4, [r3, #0]
 801f5fa:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801f5fe:	eba4 0409 	sub.w	r4, r4, r9
 801f602:	4413      	add	r3, r2
 801f604:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 801f608:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801f60a:	fb93 f3f2 	sdiv	r3, r3, r2
 801f60e:	441d      	add	r5, r3
 801f610:	e79c      	b.n	801f54c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 801f612:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 801f616:	45a3      	cmp	fp, r4
 801f618:	d938      	bls.n	801f68c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 801f61a:	9b06      	ldr	r3, [sp, #24]
 801f61c:	b1f3      	cbz	r3, 801f65c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 801f61e:	782b      	ldrb	r3, [r5, #0]
 801f620:	f003 030f 	and.w	r3, r3, #15
 801f624:	1c6a      	adds	r2, r5, #1
 801f626:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801f62a:	8023      	strh	r3, [r4, #0]
 801f62c:	f109 30ff 	add.w	r0, r9, #4294967295
 801f630:	3402      	adds	r4, #2
 801f632:	2801      	cmp	r0, #1
 801f634:	4623      	mov	r3, r4
 801f636:	f104 0404 	add.w	r4, r4, #4
 801f63a:	dd12      	ble.n	801f662 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 801f63c:	7813      	ldrb	r3, [r2, #0]
 801f63e:	091b      	lsrs	r3, r3, #4
 801f640:	3802      	subs	r0, #2
 801f642:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801f646:	f824 3c04 	strh.w	r3, [r4, #-4]
 801f64a:	f812 3b01 	ldrb.w	r3, [r2], #1
 801f64e:	f003 030f 	and.w	r3, r3, #15
 801f652:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801f656:	f824 3c02 	strh.w	r3, [r4, #-2]
 801f65a:	e7ea      	b.n	801f632 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 801f65c:	462a      	mov	r2, r5
 801f65e:	4648      	mov	r0, r9
 801f660:	e7e7      	b.n	801f632 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 801f662:	d106      	bne.n	801f672 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 801f664:	7812      	ldrb	r2, [r2, #0]
 801f666:	0912      	lsrs	r2, r2, #4
 801f668:	3302      	adds	r3, #2
 801f66a:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801f66e:	f823 2c02 	strh.w	r2, [r3, #-2]
 801f672:	880c      	ldrh	r4, [r1, #0]
 801f674:	9a05      	ldr	r2, [sp, #20]
 801f676:	eba4 0409 	sub.w	r4, r4, r9
 801f67a:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 801f67e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801f682:	4413      	add	r3, r2
 801f684:	fb93 f3f8 	sdiv	r3, r3, r8
 801f688:	441d      	add	r5, r3
 801f68a:	e7c4      	b.n	801f616 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801f68c:	4b03      	ldr	r3, [pc, #12]	@ (801f69c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 801f68e:	6818      	ldr	r0, [r3, #0]
 801f690:	6803      	ldr	r3, [r0, #0]
 801f692:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801f694:	4798      	blx	r3
 801f696:	b00f      	add	sp, #60	@ 0x3c
 801f698:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f69c:	20013090 	.word	0x20013090
 801f6a0:	20013088 	.word	0x20013088

0801f6a4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 801f6a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 801f6a6:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801f6aa:	2dff      	cmp	r5, #255	@ 0xff
 801f6ac:	ea4f 2711 	mov.w	r7, r1, lsr #8
 801f6b0:	d10c      	bne.n	801f6cc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 801f6b2:	2bff      	cmp	r3, #255	@ 0xff
 801f6b4:	d10a      	bne.n	801f6cc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 801f6b6:	4b25      	ldr	r3, [pc, #148]	@ (801f74c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 801f6b8:	0948      	lsrs	r0, r1, #5
 801f6ba:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f6be:	403b      	ands	r3, r7
 801f6c0:	4318      	orrs	r0, r3
 801f6c2:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801f6c6:	4308      	orrs	r0, r1
 801f6c8:	b280      	uxth	r0, r0
 801f6ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801f6cc:	fb15 f503 	smulbb	r5, r5, r3
 801f6d0:	b2ab      	uxth	r3, r5
 801f6d2:	1c5d      	adds	r5, r3, #1
 801f6d4:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 801f6d8:	1214      	asrs	r4, r2, #8
 801f6da:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801f6de:	fa1f fc85 	uxth.w	ip, r5
 801f6e2:	10d6      	asrs	r6, r2, #3
 801f6e4:	00d0      	lsls	r0, r2, #3
 801f6e6:	43ed      	mvns	r5, r5
 801f6e8:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801f6ec:	f3c1 4207 	ubfx	r2, r1, #16, #8
 801f6f0:	b2eb      	uxtb	r3, r5
 801f6f2:	b2c0      	uxtb	r0, r0
 801f6f4:	fb12 f20c 	smulbb	r2, r2, ip
 801f6f8:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801f6fc:	fb04 2403 	mla	r4, r4, r3, r2
 801f700:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 801f704:	b2c8      	uxtb	r0, r1
 801f706:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801f70a:	b2fd      	uxtb	r5, r7
 801f70c:	fb10 f00c 	smulbb	r0, r0, ip
 801f710:	b2a4      	uxth	r4, r4
 801f712:	fb02 0003 	mla	r0, r2, r3, r0
 801f716:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801f71a:	fb15 f50c 	smulbb	r5, r5, ip
 801f71e:	fb06 5503 	mla	r5, r6, r3, r5
 801f722:	b283      	uxth	r3, r0
 801f724:	1c60      	adds	r0, r4, #1
 801f726:	b2ad      	uxth	r5, r5
 801f728:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 801f72c:	1c58      	adds	r0, r3, #1
 801f72e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801f732:	1c6b      	adds	r3, r5, #1
 801f734:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801f738:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801f73c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801f740:	096d      	lsrs	r5, r5, #5
 801f742:	4320      	orrs	r0, r4
 801f744:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801f748:	4328      	orrs	r0, r5
 801f74a:	e7be      	b.n	801f6ca <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 801f74c:	00fff800 	.word	0x00fff800

0801f750 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801f750:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f754:	461c      	mov	r4, r3
 801f756:	b08d      	sub	sp, #52	@ 0x34
 801f758:	460d      	mov	r5, r1
 801f75a:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801f75c:	6861      	ldr	r1, [r4, #4]
 801f75e:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
 801f762:	4680      	mov	r8, r0
 801f764:	6820      	ldr	r0, [r4, #0]
 801f766:	4616      	mov	r6, r2
 801f768:	aa08      	add	r2, sp, #32
 801f76a:	c203      	stmia	r2!, {r0, r1}
 801f76c:	6818      	ldr	r0, [r3, #0]
 801f76e:	6859      	ldr	r1, [r3, #4]
 801f770:	aa0a      	add	r2, sp, #40	@ 0x28
 801f772:	c203      	stmia	r2!, {r0, r1}
 801f774:	a808      	add	r0, sp, #32
 801f776:	f7ee fd09 	bl	800e18c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f77a:	4621      	mov	r1, r4
 801f77c:	a80a      	add	r0, sp, #40	@ 0x28
 801f77e:	f7ee fd2d 	bl	800e1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f782:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 801f786:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
 801f78a:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
 801f78e:	f002 0301 	and.w	r3, r2, #1
 801f792:	9303      	str	r3, [sp, #12]
 801f794:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 801f798:	f003 0101 	and.w	r1, r3, #1
 801f79c:	9102      	str	r1, [sp, #8]
 801f79e:	9802      	ldr	r0, [sp, #8]
 801f7a0:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 801f7a4:	4403      	add	r3, r0
 801f7a6:	fb01 2303 	mla	r3, r1, r3, r2
 801f7aa:	f04f 0a02 	mov.w	sl, #2
 801f7ae:	fb93 f3fa 	sdiv	r3, r3, sl
 801f7b2:	441d      	add	r5, r3
 801f7b4:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801f7b8:	441a      	add	r2, r3
 801f7ba:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801f7be:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 801f7c2:	4a3f      	ldr	r2, [pc, #252]	@ (801f8c0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 801f7c4:	9205      	str	r2, [sp, #20]
 801f7c6:	4419      	add	r1, r3
 801f7c8:	6810      	ldr	r0, [r2, #0]
 801f7ca:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
 801f7ce:	6803      	ldr	r3, [r0, #0]
 801f7d0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801f7d2:	4798      	blx	r3
 801f7d4:	4b3b      	ldr	r3, [pc, #236]	@ (801f8c4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 801f7d6:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
 801f7da:	8819      	ldrh	r1, [r3, #0]
 801f7dc:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 801f7e0:	fb01 c404 	mla	r4, r1, r4, ip
 801f7e4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801f7e8:	434f      	muls	r7, r1
 801f7ea:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 801f7ee:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 801f7f2:	3604      	adds	r6, #4
 801f7f4:	9204      	str	r2, [sp, #16]
 801f7f6:	9b04      	ldr	r3, [sp, #16]
 801f7f8:	429c      	cmp	r4, r3
 801f7fa:	d258      	bcs.n	801f8ae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 801f7fc:	9b03      	ldr	r3, [sp, #12]
 801f7fe:	2b00      	cmp	r3, #0
 801f800:	d034      	beq.n	801f86c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 801f802:	782b      	ldrb	r3, [r5, #0]
 801f804:	f003 030f 	and.w	r3, r3, #15
 801f808:	1c6f      	adds	r7, r5, #1
 801f80a:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 801f80e:	0e0b      	lsrs	r3, r1, #24
 801f810:	d006      	beq.n	801f820 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 801f812:	8822      	ldrh	r2, [r4, #0]
 801f814:	9300      	str	r3, [sp, #0]
 801f816:	4640      	mov	r0, r8
 801f818:	464b      	mov	r3, r9
 801f81a:	f7ff ff43 	bl	801f6a4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 801f81e:	8020      	strh	r0, [r4, #0]
 801f820:	3402      	adds	r4, #2
 801f822:	f10b 3aff 	add.w	sl, fp, #4294967295
 801f826:	f1ba 0f01 	cmp.w	sl, #1
 801f82a:	dd22      	ble.n	801f872 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 801f82c:	783b      	ldrb	r3, [r7, #0]
 801f82e:	091b      	lsrs	r3, r3, #4
 801f830:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 801f834:	0e0b      	lsrs	r3, r1, #24
 801f836:	d006      	beq.n	801f846 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 801f838:	8822      	ldrh	r2, [r4, #0]
 801f83a:	9300      	str	r3, [sp, #0]
 801f83c:	4640      	mov	r0, r8
 801f83e:	464b      	mov	r3, r9
 801f840:	f7ff ff30 	bl	801f6a4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 801f844:	8020      	strh	r0, [r4, #0]
 801f846:	f817 3b01 	ldrb.w	r3, [r7], #1
 801f84a:	f003 030f 	and.w	r3, r3, #15
 801f84e:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 801f852:	0e0b      	lsrs	r3, r1, #24
 801f854:	d006      	beq.n	801f864 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 801f856:	8862      	ldrh	r2, [r4, #2]
 801f858:	9300      	str	r3, [sp, #0]
 801f85a:	4640      	mov	r0, r8
 801f85c:	464b      	mov	r3, r9
 801f85e:	f7ff ff21 	bl	801f6a4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 801f862:	8060      	strh	r0, [r4, #2]
 801f864:	3404      	adds	r4, #4
 801f866:	f1aa 0a02 	sub.w	sl, sl, #2
 801f86a:	e7dc      	b.n	801f826 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 801f86c:	462f      	mov	r7, r5
 801f86e:	46da      	mov	sl, fp
 801f870:	e7d9      	b.n	801f826 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 801f872:	d10d      	bne.n	801f890 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 801f874:	783b      	ldrb	r3, [r7, #0]
 801f876:	091b      	lsrs	r3, r3, #4
 801f878:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 801f87c:	0e0b      	lsrs	r3, r1, #24
 801f87e:	d006      	beq.n	801f88e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 801f880:	8822      	ldrh	r2, [r4, #0]
 801f882:	9300      	str	r3, [sp, #0]
 801f884:	4640      	mov	r0, r8
 801f886:	464b      	mov	r3, r9
 801f888:	f7ff ff0c 	bl	801f6a4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 801f88c:	8020      	strh	r0, [r4, #0]
 801f88e:	3402      	adds	r4, #2
 801f890:	9b06      	ldr	r3, [sp, #24]
 801f892:	9a02      	ldr	r2, [sp, #8]
 801f894:	881b      	ldrh	r3, [r3, #0]
 801f896:	eba3 030b 	sub.w	r3, r3, fp
 801f89a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801f89e:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 801f8a2:	4413      	add	r3, r2
 801f8a4:	9a07      	ldr	r2, [sp, #28]
 801f8a6:	fb93 f3f2 	sdiv	r3, r3, r2
 801f8aa:	441d      	add	r5, r3
 801f8ac:	e7a3      	b.n	801f7f6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 801f8ae:	9b05      	ldr	r3, [sp, #20]
 801f8b0:	6818      	ldr	r0, [r3, #0]
 801f8b2:	6803      	ldr	r3, [r0, #0]
 801f8b4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801f8b6:	4798      	blx	r3
 801f8b8:	b00d      	add	sp, #52	@ 0x34
 801f8ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f8be:	bf00      	nop
 801f8c0:	20013090 	.word	0x20013090
 801f8c4:	20013088 	.word	0x20013088

0801f8c8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 801f8c8:	b570      	push	{r4, r5, r6, lr}
 801f8ca:	1214      	asrs	r4, r2, #8
 801f8cc:	788d      	ldrb	r5, [r1, #2]
 801f8ce:	f89d 6010 	ldrb.w	r6, [sp, #16]
 801f8d2:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801f8d6:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801f8da:	fb15 f503 	smulbb	r5, r5, r3
 801f8de:	fb04 5506 	mla	r5, r4, r6, r5
 801f8e2:	10d0      	asrs	r0, r2, #3
 801f8e4:	784c      	ldrb	r4, [r1, #1]
 801f8e6:	7809      	ldrb	r1, [r1, #0]
 801f8e8:	00d2      	lsls	r2, r2, #3
 801f8ea:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801f8ee:	b2d2      	uxtb	r2, r2
 801f8f0:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 801f8f4:	fb14 f403 	smulbb	r4, r4, r3
 801f8f8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801f8fc:	fb11 f303 	smulbb	r3, r1, r3
 801f900:	fb00 4406 	mla	r4, r0, r6, r4
 801f904:	fb02 3306 	mla	r3, r2, r6, r3
 801f908:	b2ad      	uxth	r5, r5
 801f90a:	b29b      	uxth	r3, r3
 801f90c:	b2a4      	uxth	r4, r4
 801f90e:	1c68      	adds	r0, r5, #1
 801f910:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 801f914:	1c62      	adds	r2, r4, #1
 801f916:	1c58      	adds	r0, r3, #1
 801f918:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801f91c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801f920:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801f924:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801f928:	0964      	lsrs	r4, r4, #5
 801f92a:	4328      	orrs	r0, r5
 801f92c:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801f930:	4320      	orrs	r0, r4
 801f932:	bd70      	pop	{r4, r5, r6, pc}

0801f934 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801f934:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f938:	b08f      	sub	sp, #60	@ 0x3c
 801f93a:	461c      	mov	r4, r3
 801f93c:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 801f940:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801f942:	4682      	mov	sl, r0
 801f944:	460e      	mov	r6, r1
 801f946:	4615      	mov	r5, r2
 801f948:	2f00      	cmp	r7, #0
 801f94a:	f000 8142 	beq.w	801fbd2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 801f94e:	6820      	ldr	r0, [r4, #0]
 801f950:	6861      	ldr	r1, [r4, #4]
 801f952:	aa0a      	add	r2, sp, #40	@ 0x28
 801f954:	c203      	stmia	r2!, {r0, r1}
 801f956:	6818      	ldr	r0, [r3, #0]
 801f958:	6859      	ldr	r1, [r3, #4]
 801f95a:	aa0c      	add	r2, sp, #48	@ 0x30
 801f95c:	c203      	stmia	r2!, {r0, r1}
 801f95e:	a80a      	add	r0, sp, #40	@ 0x28
 801f960:	f7ee fc14 	bl	800e18c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f964:	4621      	mov	r1, r4
 801f966:	a80c      	add	r0, sp, #48	@ 0x30
 801f968:	f7ee fc38 	bl	800e1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f96c:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801f970:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 801f974:	f002 0301 	and.w	r3, r2, #1
 801f978:	9306      	str	r3, [sp, #24]
 801f97a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801f97e:	f003 0101 	and.w	r1, r3, #1
 801f982:	9105      	str	r1, [sp, #20]
 801f984:	9805      	ldr	r0, [sp, #20]
 801f986:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 801f98a:	4403      	add	r3, r0
 801f98c:	fb01 2303 	mla	r3, r1, r3, r2
 801f990:	f04f 0802 	mov.w	r8, #2
 801f994:	fb93 f3f8 	sdiv	r3, r3, r8
 801f998:	441e      	add	r6, r3
 801f99a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801f99e:	441a      	add	r2, r3
 801f9a0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801f9a4:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 801f9a8:	4419      	add	r1, r3
 801f9aa:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801f9ae:	9303      	str	r3, [sp, #12]
 801f9b0:	4b89      	ldr	r3, [pc, #548]	@ (801fbd8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 801f9b2:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 801f9b6:	6818      	ldr	r0, [r3, #0]
 801f9b8:	6803      	ldr	r3, [r0, #0]
 801f9ba:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801f9bc:	4798      	blx	r3
 801f9be:	4a87      	ldr	r2, [pc, #540]	@ (801fbdc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 801f9c0:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 801f9c4:	8813      	ldrh	r3, [r2, #0]
 801f9c6:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
 801f9ca:	2fff      	cmp	r7, #255	@ 0xff
 801f9cc:	fb03 9404 	mla	r4, r3, r4, r9
 801f9d0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801f9d4:	f105 0504 	add.w	r5, r5, #4
 801f9d8:	4694      	mov	ip, r2
 801f9da:	fb03 f30b 	mul.w	r3, r3, fp
 801f9de:	d071      	beq.n	801fac4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801f9e0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801f9e4:	43f9      	mvns	r1, r7
 801f9e6:	e9cd 3207 	strd	r3, r2, [sp, #28]
 801f9ea:	b2c9      	uxtb	r1, r1
 801f9ec:	9104      	str	r1, [sp, #16]
 801f9ee:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 801f9f2:	9b07      	ldr	r3, [sp, #28]
 801f9f4:	42a3      	cmp	r3, r4
 801f9f6:	f240 80e7 	bls.w	801fbc8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 801f9fa:	9b06      	ldr	r3, [sp, #24]
 801f9fc:	2b00      	cmp	r3, #0
 801f9fe:	d03d      	beq.n	801fa7c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 801fa00:	7831      	ldrb	r1, [r6, #0]
 801fa02:	9b04      	ldr	r3, [sp, #16]
 801fa04:	8822      	ldrh	r2, [r4, #0]
 801fa06:	9300      	str	r3, [sp, #0]
 801fa08:	f001 010f 	and.w	r1, r1, #15
 801fa0c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801fa10:	463b      	mov	r3, r7
 801fa12:	4429      	add	r1, r5
 801fa14:	4650      	mov	r0, sl
 801fa16:	f7ff ff57 	bl	801f8c8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 801fa1a:	9b03      	ldr	r3, [sp, #12]
 801fa1c:	f824 0b02 	strh.w	r0, [r4], #2
 801fa20:	f106 0801 	add.w	r8, r6, #1
 801fa24:	f103 3bff 	add.w	fp, r3, #4294967295
 801fa28:	f1bb 0f01 	cmp.w	fp, #1
 801fa2c:	46a1      	mov	r9, r4
 801fa2e:	f104 0404 	add.w	r4, r4, #4
 801fa32:	dd27      	ble.n	801fa84 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 801fa34:	f898 1000 	ldrb.w	r1, [r8]
 801fa38:	9b04      	ldr	r3, [sp, #16]
 801fa3a:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 801fa3e:	9300      	str	r3, [sp, #0]
 801fa40:	0909      	lsrs	r1, r1, #4
 801fa42:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801fa46:	463b      	mov	r3, r7
 801fa48:	4429      	add	r1, r5
 801fa4a:	4650      	mov	r0, sl
 801fa4c:	f7ff ff3c 	bl	801f8c8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 801fa50:	f824 0c04 	strh.w	r0, [r4, #-4]
 801fa54:	f818 1b01 	ldrb.w	r1, [r8], #1
 801fa58:	9b04      	ldr	r3, [sp, #16]
 801fa5a:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 801fa5e:	9300      	str	r3, [sp, #0]
 801fa60:	f001 010f 	and.w	r1, r1, #15
 801fa64:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801fa68:	463b      	mov	r3, r7
 801fa6a:	4429      	add	r1, r5
 801fa6c:	4650      	mov	r0, sl
 801fa6e:	f7ff ff2b 	bl	801f8c8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 801fa72:	f1ab 0b02 	sub.w	fp, fp, #2
 801fa76:	f824 0c02 	strh.w	r0, [r4, #-2]
 801fa7a:	e7d5      	b.n	801fa28 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801fa7c:	46b0      	mov	r8, r6
 801fa7e:	f8dd b00c 	ldr.w	fp, [sp, #12]
 801fa82:	e7d1      	b.n	801fa28 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801fa84:	d10f      	bne.n	801faa6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 801fa86:	f898 1000 	ldrb.w	r1, [r8]
 801fa8a:	9b04      	ldr	r3, [sp, #16]
 801fa8c:	f8b9 2000 	ldrh.w	r2, [r9]
 801fa90:	9300      	str	r3, [sp, #0]
 801fa92:	0909      	lsrs	r1, r1, #4
 801fa94:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801fa98:	463b      	mov	r3, r7
 801fa9a:	4429      	add	r1, r5
 801fa9c:	4650      	mov	r0, sl
 801fa9e:	f7ff ff13 	bl	801f8c8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 801faa2:	f829 0b02 	strh.w	r0, [r9], #2
 801faa6:	9b08      	ldr	r3, [sp, #32]
 801faa8:	9a05      	ldr	r2, [sp, #20]
 801faaa:	881c      	ldrh	r4, [r3, #0]
 801faac:	9b03      	ldr	r3, [sp, #12]
 801faae:	1ae4      	subs	r4, r4, r3
 801fab0:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801fab4:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801fab8:	4413      	add	r3, r2
 801faba:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801fabc:	fb93 f3f2 	sdiv	r3, r3, r2
 801fac0:	441e      	add	r6, r3
 801fac2:	e796      	b.n	801f9f2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 801fac4:	4f46      	ldr	r7, [pc, #280]	@ (801fbe0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 801fac6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801faca:	42a3      	cmp	r3, r4
 801facc:	d97c      	bls.n	801fbc8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 801face:	9a06      	ldr	r2, [sp, #24]
 801fad0:	2a00      	cmp	r2, #0
 801fad2:	d054      	beq.n	801fb7e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801fad4:	7830      	ldrb	r0, [r6, #0]
 801fad6:	f000 000f 	and.w	r0, r0, #15
 801fada:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801fade:	eb05 0e00 	add.w	lr, r5, r0
 801fae2:	5c28      	ldrb	r0, [r5, r0]
 801fae4:	f89e 2002 	ldrb.w	r2, [lr, #2]
 801fae8:	f89e e001 	ldrb.w	lr, [lr, #1]
 801faec:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801faf0:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801faf4:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 801faf8:	ea42 020e 	orr.w	r2, r2, lr
 801fafc:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 801fb00:	f824 2b02 	strh.w	r2, [r4], #2
 801fb04:	9a03      	ldr	r2, [sp, #12]
 801fb06:	1c71      	adds	r1, r6, #1
 801fb08:	f102 3eff 	add.w	lr, r2, #4294967295
 801fb0c:	f1be 0f01 	cmp.w	lr, #1
 801fb10:	4620      	mov	r0, r4
 801fb12:	f104 0404 	add.w	r4, r4, #4
 801fb16:	dd36      	ble.n	801fb86 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 801fb18:	7808      	ldrb	r0, [r1, #0]
 801fb1a:	0900      	lsrs	r0, r0, #4
 801fb1c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801fb20:	eb05 0a00 	add.w	sl, r5, r0
 801fb24:	f1ae 0e02 	sub.w	lr, lr, #2
 801fb28:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801fb2c:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801fb30:	00d2      	lsls	r2, r2, #3
 801fb32:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 801fb36:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801fb3a:	ea49 0202 	orr.w	r2, r9, r2
 801fb3e:	f815 9000 	ldrb.w	r9, [r5, r0]
 801fb42:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801fb46:	f824 2c04 	strh.w	r2, [r4, #-4]
 801fb4a:	f811 0b01 	ldrb.w	r0, [r1], #1
 801fb4e:	f000 000f 	and.w	r0, r0, #15
 801fb52:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801fb56:	eb05 0a00 	add.w	sl, r5, r0
 801fb5a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801fb5e:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801fb62:	00d2      	lsls	r2, r2, #3
 801fb64:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 801fb68:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801fb6c:	ea49 0202 	orr.w	r2, r9, r2
 801fb70:	f815 9000 	ldrb.w	r9, [r5, r0]
 801fb74:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801fb78:	f824 2c02 	strh.w	r2, [r4, #-2]
 801fb7c:	e7c6      	b.n	801fb0c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 801fb7e:	4631      	mov	r1, r6
 801fb80:	f8dd e00c 	ldr.w	lr, [sp, #12]
 801fb84:	e7c2      	b.n	801fb0c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 801fb86:	d111      	bne.n	801fbac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 801fb88:	7809      	ldrb	r1, [r1, #0]
 801fb8a:	0909      	lsrs	r1, r1, #4
 801fb8c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801fb90:	186c      	adds	r4, r5, r1
 801fb92:	5c69      	ldrb	r1, [r5, r1]
 801fb94:	78a2      	ldrb	r2, [r4, #2]
 801fb96:	7864      	ldrb	r4, [r4, #1]
 801fb98:	00e4      	lsls	r4, r4, #3
 801fb9a:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 801fb9e:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801fba2:	4322      	orrs	r2, r4
 801fba4:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 801fba8:	f820 2b02 	strh.w	r2, [r0], #2
 801fbac:	9a03      	ldr	r2, [sp, #12]
 801fbae:	f8bc 4000 	ldrh.w	r4, [ip]
 801fbb2:	9905      	ldr	r1, [sp, #20]
 801fbb4:	1aa4      	subs	r4, r4, r2
 801fbb6:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801fbba:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801fbbe:	440a      	add	r2, r1
 801fbc0:	fb92 f2f8 	sdiv	r2, r2, r8
 801fbc4:	4416      	add	r6, r2
 801fbc6:	e780      	b.n	801faca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 801fbc8:	4b03      	ldr	r3, [pc, #12]	@ (801fbd8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 801fbca:	6818      	ldr	r0, [r3, #0]
 801fbcc:	6803      	ldr	r3, [r0, #0]
 801fbce:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801fbd0:	4798      	blx	r3
 801fbd2:	b00f      	add	sp, #60	@ 0x3c
 801fbd4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fbd8:	20013090 	.word	0x20013090
 801fbdc:	20013088 	.word	0x20013088
 801fbe0:	fffff800 	.word	0xfffff800

0801fbe4 <CRC_Lock>:
 801fbe4:	b530      	push	{r4, r5, lr}
 801fbe6:	4a2d      	ldr	r2, [pc, #180]	@ (801fc9c <CRC_Lock+0xb8>)
 801fbe8:	6813      	ldr	r3, [r2, #0]
 801fbea:	f023 0301 	bic.w	r3, r3, #1
 801fbee:	6013      	str	r3, [r2, #0]
 801fbf0:	4b2b      	ldr	r3, [pc, #172]	@ (801fca0 <CRC_Lock+0xbc>)
 801fbf2:	681c      	ldr	r4, [r3, #0]
 801fbf4:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
 801fbf8:	4014      	ands	r4, r2
 801fbfa:	f24c 2540 	movw	r5, #49728	@ 0xc240
 801fbfe:	42ac      	cmp	r4, r5
 801fc00:	d005      	beq.n	801fc0e <CRC_Lock+0x2a>
 801fc02:	681c      	ldr	r4, [r3, #0]
 801fc04:	f24c 2570 	movw	r5, #49776	@ 0xc270
 801fc08:	4014      	ands	r4, r2
 801fc0a:	42ac      	cmp	r4, r5
 801fc0c:	d125      	bne.n	801fc5a <CRC_Lock+0x76>
 801fc0e:	4b25      	ldr	r3, [pc, #148]	@ (801fca4 <CRC_Lock+0xc0>)
 801fc10:	681b      	ldr	r3, [r3, #0]
 801fc12:	2b00      	cmp	r3, #0
 801fc14:	d139      	bne.n	801fc8a <CRC_Lock+0xa6>
 801fc16:	4b24      	ldr	r3, [pc, #144]	@ (801fca8 <CRC_Lock+0xc4>)
 801fc18:	681a      	ldr	r2, [r3, #0]
 801fc1a:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801fc1e:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 801fc22:	d00d      	beq.n	801fc40 <CRC_Lock+0x5c>
 801fc24:	681a      	ldr	r2, [r3, #0]
 801fc26:	f240 4483 	movw	r4, #1155	@ 0x483
 801fc2a:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801fc2e:	42a2      	cmp	r2, r4
 801fc30:	d006      	beq.n	801fc40 <CRC_Lock+0x5c>
 801fc32:	681b      	ldr	r3, [r3, #0]
 801fc34:	f240 4285 	movw	r2, #1157	@ 0x485
 801fc38:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801fc3c:	4293      	cmp	r3, r2
 801fc3e:	d124      	bne.n	801fc8a <CRC_Lock+0xa6>
 801fc40:	4b1a      	ldr	r3, [pc, #104]	@ (801fcac <CRC_Lock+0xc8>)
 801fc42:	2201      	movs	r2, #1
 801fc44:	601a      	str	r2, [r3, #0]
 801fc46:	681a      	ldr	r2, [r3, #0]
 801fc48:	2a00      	cmp	r2, #0
 801fc4a:	d1fc      	bne.n	801fc46 <CRC_Lock+0x62>
 801fc4c:	4b18      	ldr	r3, [pc, #96]	@ (801fcb0 <CRC_Lock+0xcc>)
 801fc4e:	6018      	str	r0, [r3, #0]
 801fc50:	6818      	ldr	r0, [r3, #0]
 801fc52:	1a43      	subs	r3, r0, r1
 801fc54:	4258      	negs	r0, r3
 801fc56:	4158      	adcs	r0, r3
 801fc58:	e00e      	b.n	801fc78 <CRC_Lock+0x94>
 801fc5a:	681b      	ldr	r3, [r3, #0]
 801fc5c:	4013      	ands	r3, r2
 801fc5e:	f24d 2220 	movw	r2, #53792	@ 0xd220
 801fc62:	4293      	cmp	r3, r2
 801fc64:	d111      	bne.n	801fc8a <CRC_Lock+0xa6>
 801fc66:	4b13      	ldr	r3, [pc, #76]	@ (801fcb4 <CRC_Lock+0xd0>)
 801fc68:	681b      	ldr	r3, [r3, #0]
 801fc6a:	f240 4286 	movw	r2, #1158	@ 0x486
 801fc6e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801fc72:	4293      	cmp	r3, r2
 801fc74:	d001      	beq.n	801fc7a <CRC_Lock+0x96>
 801fc76:	2000      	movs	r0, #0
 801fc78:	bd30      	pop	{r4, r5, pc}
 801fc7a:	4b0f      	ldr	r3, [pc, #60]	@ (801fcb8 <CRC_Lock+0xd4>)
 801fc7c:	2201      	movs	r2, #1
 801fc7e:	601a      	str	r2, [r3, #0]
 801fc80:	681a      	ldr	r2, [r3, #0]
 801fc82:	2a00      	cmp	r2, #0
 801fc84:	d1fc      	bne.n	801fc80 <CRC_Lock+0x9c>
 801fc86:	4b0d      	ldr	r3, [pc, #52]	@ (801fcbc <CRC_Lock+0xd8>)
 801fc88:	e7e1      	b.n	801fc4e <CRC_Lock+0x6a>
 801fc8a:	4b0d      	ldr	r3, [pc, #52]	@ (801fcc0 <CRC_Lock+0xdc>)
 801fc8c:	2201      	movs	r2, #1
 801fc8e:	601a      	str	r2, [r3, #0]
 801fc90:	681a      	ldr	r2, [r3, #0]
 801fc92:	2a00      	cmp	r2, #0
 801fc94:	d1fc      	bne.n	801fc90 <CRC_Lock+0xac>
 801fc96:	4b0b      	ldr	r3, [pc, #44]	@ (801fcc4 <CRC_Lock+0xe0>)
 801fc98:	e7d9      	b.n	801fc4e <CRC_Lock+0x6a>
 801fc9a:	bf00      	nop
 801fc9c:	e0002000 	.word	0xe0002000
 801fca0:	e000ed00 	.word	0xe000ed00
 801fca4:	e0042000 	.word	0xe0042000
 801fca8:	5c001000 	.word	0x5c001000
 801fcac:	58024c08 	.word	0x58024c08
 801fcb0:	58024c00 	.word	0x58024c00
 801fcb4:	46008ff0 	.word	0x46008ff0
 801fcb8:	46024c08 	.word	0x46024c08
 801fcbc:	46024c00 	.word	0x46024c00
 801fcc0:	40023008 	.word	0x40023008
 801fcc4:	40023000 	.word	0x40023000

0801fcc8 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801fcc8:	6101      	str	r1, [r0, #16]
 801fcca:	4770      	bx	lr

0801fccc <_ZN8touchgfx8Gestures4tickEv>:
 801fccc:	7b83      	ldrb	r3, [r0, #14]
 801fcce:	b14b      	cbz	r3, 801fce4 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801fcd0:	8903      	ldrh	r3, [r0, #8]
 801fcd2:	3301      	adds	r3, #1
 801fcd4:	b29b      	uxth	r3, r3
 801fcd6:	2b07      	cmp	r3, #7
 801fcd8:	8103      	strh	r3, [r0, #8]
 801fcda:	bf81      	itttt	hi
 801fcdc:	2300      	movhi	r3, #0
 801fcde:	8143      	strhhi	r3, [r0, #10]
 801fce0:	8183      	strhhi	r3, [r0, #12]
 801fce2:	7383      	strbhi	r3, [r0, #14]
 801fce4:	4770      	bx	lr
	...

0801fce8 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801fce8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801fcec:	4698      	mov	r8, r3
 801fcee:	8883      	ldrh	r3, [r0, #4]
 801fcf0:	f8ad 3006 	strh.w	r3, [sp, #6]
 801fcf4:	eba8 0303 	sub.w	r3, r8, r3
 801fcf8:	b21b      	sxth	r3, r3
 801fcfa:	4604      	mov	r4, r0
 801fcfc:	2b00      	cmp	r3, #0
 801fcfe:	4617      	mov	r7, r2
 801fd00:	4a18      	ldr	r2, [pc, #96]	@ (801fd64 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 801fd02:	9200      	str	r2, [sp, #0]
 801fd04:	bfb8      	it	lt
 801fd06:	425b      	neglt	r3, r3
 801fd08:	8aa2      	ldrh	r2, [r4, #20]
 801fd0a:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 801fd0e:	f8ad 800a 	strh.w	r8, [sp, #10]
 801fd12:	b21b      	sxth	r3, r3
 801fd14:	460e      	mov	r6, r1
 801fd16:	4293      	cmp	r3, r2
 801fd18:	88c1      	ldrh	r1, [r0, #6]
 801fd1a:	f8ad 1008 	strh.w	r1, [sp, #8]
 801fd1e:	f04f 0000 	mov.w	r0, #0
 801fd22:	f88d 0004 	strb.w	r0, [sp, #4]
 801fd26:	f8ad 500c 	strh.w	r5, [sp, #12]
 801fd2a:	dc07      	bgt.n	801fd3c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 801fd2c:	1a69      	subs	r1, r5, r1
 801fd2e:	b209      	sxth	r1, r1
 801fd30:	2900      	cmp	r1, #0
 801fd32:	bfb8      	it	lt
 801fd34:	4249      	neglt	r1, r1
 801fd36:	b209      	sxth	r1, r1
 801fd38:	428a      	cmp	r2, r1
 801fd3a:	da10      	bge.n	801fd5e <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 801fd3c:	6920      	ldr	r0, [r4, #16]
 801fd3e:	6803      	ldr	r3, [r0, #0]
 801fd40:	4669      	mov	r1, sp
 801fd42:	685b      	ldr	r3, [r3, #4]
 801fd44:	4798      	blx	r3
 801fd46:	eba8 0606 	sub.w	r6, r8, r6
 801fd4a:	2300      	movs	r3, #0
 801fd4c:	1bef      	subs	r7, r5, r7
 801fd4e:	2001      	movs	r0, #1
 801fd50:	8123      	strh	r3, [r4, #8]
 801fd52:	8166      	strh	r6, [r4, #10]
 801fd54:	81a7      	strh	r7, [r4, #12]
 801fd56:	f8a4 8004 	strh.w	r8, [r4, #4]
 801fd5a:	80e5      	strh	r5, [r4, #6]
 801fd5c:	73a0      	strb	r0, [r4, #14]
 801fd5e:	b004      	add	sp, #16
 801fd60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801fd64:	08023b40 	.word	0x08023b40

0801fd68 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801fd68:	b5f0      	push	{r4, r5, r6, r7, lr}
 801fd6a:	461e      	mov	r6, r3
 801fd6c:	1e4b      	subs	r3, r1, #1
 801fd6e:	2b01      	cmp	r3, #1
 801fd70:	b085      	sub	sp, #20
 801fd72:	4604      	mov	r4, r0
 801fd74:	460d      	mov	r5, r1
 801fd76:	4617      	mov	r7, r2
 801fd78:	d84b      	bhi.n	801fe12 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801fd7a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801fd7e:	1cd3      	adds	r3, r2, #3
 801fd80:	b29b      	uxth	r3, r3
 801fd82:	2b06      	cmp	r3, #6
 801fd84:	d916      	bls.n	801fdb4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801fd86:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 801fe28 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801fd8a:	f8cd c004 	str.w	ip, [sp, #4]
 801fd8e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801fd92:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801fd96:	6900      	ldr	r0, [r0, #16]
 801fd98:	f8ad 100c 	strh.w	r1, [sp, #12]
 801fd9c:	f04f 0c00 	mov.w	ip, #0
 801fda0:	f88d c008 	strb.w	ip, [sp, #8]
 801fda4:	f8ad 200a 	strh.w	r2, [sp, #10]
 801fda8:	f8ad 300e 	strh.w	r3, [sp, #14]
 801fdac:	6803      	ldr	r3, [r0, #0]
 801fdae:	a901      	add	r1, sp, #4
 801fdb0:	689b      	ldr	r3, [r3, #8]
 801fdb2:	4798      	blx	r3
 801fdb4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801fdb8:	1cd3      	adds	r3, r2, #3
 801fdba:	b29b      	uxth	r3, r3
 801fdbc:	2b06      	cmp	r3, #6
 801fdbe:	d916      	bls.n	801fdee <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801fdc0:	f8df c064 	ldr.w	ip, [pc, #100]	@ 801fe28 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801fdc4:	f8cd c004 	str.w	ip, [sp, #4]
 801fdc8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801fdcc:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801fdd0:	6920      	ldr	r0, [r4, #16]
 801fdd2:	f8ad 100c 	strh.w	r1, [sp, #12]
 801fdd6:	f04f 0c01 	mov.w	ip, #1
 801fdda:	f88d c008 	strb.w	ip, [sp, #8]
 801fdde:	f8ad 200a 	strh.w	r2, [sp, #10]
 801fde2:	f8ad 300e 	strh.w	r3, [sp, #14]
 801fde6:	6803      	ldr	r3, [r0, #0]
 801fde8:	a901      	add	r1, sp, #4
 801fdea:	689b      	ldr	r3, [r3, #8]
 801fdec:	4798      	blx	r3
 801fdee:	4b0d      	ldr	r3, [pc, #52]	@ (801fe24 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801fdf0:	9301      	str	r3, [sp, #4]
 801fdf2:	6920      	ldr	r0, [r4, #16]
 801fdf4:	f88d 5008 	strb.w	r5, [sp, #8]
 801fdf8:	2300      	movs	r3, #0
 801fdfa:	f8ad 700a 	strh.w	r7, [sp, #10]
 801fdfe:	f8ad 600c 	strh.w	r6, [sp, #12]
 801fe02:	f8ad 300e 	strh.w	r3, [sp, #14]
 801fe06:	6803      	ldr	r3, [r0, #0]
 801fe08:	a901      	add	r1, sp, #4
 801fe0a:	681b      	ldr	r3, [r3, #0]
 801fe0c:	4798      	blx	r3
 801fe0e:	b005      	add	sp, #20
 801fe10:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801fe12:	2900      	cmp	r1, #0
 801fe14:	d1eb      	bne.n	801fdee <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801fe16:	80a2      	strh	r2, [r4, #4]
 801fe18:	80c6      	strh	r6, [r0, #6]
 801fe1a:	60a1      	str	r1, [r4, #8]
 801fe1c:	81a1      	strh	r1, [r4, #12]
 801fe1e:	73a1      	strb	r1, [r4, #14]
 801fe20:	e7e5      	b.n	801fdee <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801fe22:	bf00      	nop
 801fe24:	08023b2c 	.word	0x08023b2c
 801fe28:	08023b54 	.word	0x08023b54

0801fe2c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>:
 801fe2c:	10c9      	asrs	r1, r1, #3
 801fe2e:	2900      	cmp	r1, #0
 801fe30:	bfb8      	it	lt
 801fe32:	4249      	neglt	r1, r1
 801fe34:	2801      	cmp	r0, #1
 801fe36:	d108      	bne.n	801fe4a <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 801fe38:	f3c1 0008 	ubfx	r0, r1, #0, #9
 801fe3c:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 801fe40:	4601      	mov	r1, r0
 801fe42:	dd02      	ble.n	801fe4a <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 801fe44:	f5c0 7000 	rsb	r0, r0, #512	@ 0x200
 801fe48:	4770      	bx	lr
 801fe4a:	29ff      	cmp	r1, #255	@ 0xff
 801fe4c:	bfa8      	it	ge
 801fe4e:	21ff      	movge	r1, #255	@ 0xff
 801fe50:	4608      	mov	r0, r1
 801fe52:	4770      	bx	lr

0801fe54 <_ZN8touchgfx10Rasterizer6lineToEii>:
 801fe54:	b410      	push	{r4}
 801fe56:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 801fe5a:	429c      	cmp	r4, r3
 801fe5c:	d803      	bhi.n	801fe66 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 801fe5e:	f85d 4b04 	ldr.w	r4, [sp], #4
 801fe62:	f7ed b943 	b.w	800d0ec <_ZN8touchgfx7Outline6lineToEii>
 801fe66:	f85d 4b04 	ldr.w	r4, [sp], #4
 801fe6a:	4770      	bx	lr

0801fe6c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 801fe6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fe70:	b08b      	sub	sp, #44	@ 0x2c
 801fe72:	e9cd 2306 	strd	r2, r3, [sp, #24]
 801fe76:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 801fe7a:	9308      	str	r3, [sp, #32]
 801fe7c:	4606      	mov	r6, r0
 801fe7e:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 801fe82:	9309      	str	r3, [sp, #36]	@ 0x24
 801fe84:	468a      	mov	sl, r1
 801fe86:	f7ed fa9e 	bl	800d3c6 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 801fe8a:	68b5      	ldr	r5, [r6, #8]
 801fe8c:	4604      	mov	r4, r0
 801fe8e:	2d00      	cmp	r5, #0
 801fe90:	d044      	beq.n	801ff1c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 801fe92:	6873      	ldr	r3, [r6, #4]
 801fe94:	42ab      	cmp	r3, r5
 801fe96:	d33d      	bcc.n	801ff14 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 801fe98:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 801fe9c:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	@ 0x34
 801fea0:	eb02 0b03 	add.w	fp, r2, r3
 801fea4:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 801fea8:	fb02 1203 	mla	r2, r2, r3, r1
 801feac:	9205      	str	r2, [sp, #20]
 801feae:	1e6a      	subs	r2, r5, #1
 801feb0:	9204      	str	r2, [sp, #16]
 801feb2:	f04f 0800 	mov.w	r8, #0
 801feb6:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 801feba:	f9b4 7000 	ldrsh.w	r7, [r4]
 801febe:	454b      	cmp	r3, r9
 801fec0:	463a      	mov	r2, r7
 801fec2:	d008      	beq.n	801fed6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 801fec4:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	@ 0x34
 801fec8:	eb03 0b09 	add.w	fp, r3, r9
 801fecc:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 801fed0:	fb03 1309 	mla	r3, r3, r9, r1
 801fed4:	9305      	str	r3, [sp, #20]
 801fed6:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801feda:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 801fede:	4498      	add	r8, r3
 801fee0:	9b04      	ldr	r3, [sp, #16]
 801fee2:	3b01      	subs	r3, #1
 801fee4:	9304      	str	r3, [sp, #16]
 801fee6:	9b04      	ldr	r3, [sp, #16]
 801fee8:	3301      	adds	r3, #1
 801feea:	d015      	beq.n	801ff18 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 801feec:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 801fef0:	42bb      	cmp	r3, r7
 801fef2:	d117      	bne.n	801ff24 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 801fef4:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 801fef8:	9b04      	ldr	r3, [sp, #16]
 801fefa:	4548      	cmp	r0, r9
 801fefc:	f103 33ff 	add.w	r3, r3, #4294967295
 801ff00:	d17f      	bne.n	8020002 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 801ff02:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 801ff06:	4401      	add	r1, r0
 801ff08:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801ff0c:	4480      	add	r8, r0
 801ff0e:	e7e9      	b.n	801fee4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 801ff10:	461f      	mov	r7, r3
 801ff12:	e044      	b.n	801ff9e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 801ff14:	2000      	movs	r0, #0
 801ff16:	e002      	b.n	801ff1e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 801ff18:	2900      	cmp	r1, #0
 801ff1a:	d16f      	bne.n	801fffc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 801ff1c:	2001      	movs	r0, #1
 801ff1e:	b00b      	add	sp, #44	@ 0x2c
 801ff20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ff24:	2900      	cmp	r1, #0
 801ff26:	d030      	beq.n	801ff8a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 801ff28:	2f00      	cmp	r7, #0
 801ff2a:	db29      	blt.n	801ff80 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 801ff2c:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 801ff30:	42bb      	cmp	r3, r7
 801ff32:	dd25      	ble.n	801ff80 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 801ff34:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 801ff38:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 801ff3c:	f7ff ff76 	bl	801fe2c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 801ff40:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ff42:	fb10 f003 	smulbb	r0, r0, r3
 801ff46:	b280      	uxth	r0, r0
 801ff48:	1c41      	adds	r1, r0, #1
 801ff4a:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801ff4e:	1209      	asrs	r1, r1, #8
 801ff50:	f011 0fff 	tst.w	r1, #255	@ 0xff
 801ff54:	d014      	beq.n	801ff80 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 801ff56:	9808      	ldr	r0, [sp, #32]
 801ff58:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 801ff5a:	b2c9      	uxtb	r1, r1
 801ff5c:	b2ba      	uxth	r2, r7
 801ff5e:	9102      	str	r1, [sp, #8]
 801ff60:	2101      	movs	r1, #1
 801ff62:	4413      	add	r3, r2
 801ff64:	9101      	str	r1, [sp, #4]
 801ff66:	4402      	add	r2, r0
 801ff68:	fa0f f18b 	sxth.w	r1, fp
 801ff6c:	f8da 0000 	ldr.w	r0, [sl]
 801ff70:	9100      	str	r1, [sp, #0]
 801ff72:	6941      	ldr	r1, [r0, #20]
 801ff74:	b21b      	sxth	r3, r3
 801ff76:	460d      	mov	r5, r1
 801ff78:	b212      	sxth	r2, r2
 801ff7a:	9905      	ldr	r1, [sp, #20]
 801ff7c:	4650      	mov	r0, sl
 801ff7e:	47a8      	blx	r5
 801ff80:	9b04      	ldr	r3, [sp, #16]
 801ff82:	3301      	adds	r3, #1
 801ff84:	f107 0201 	add.w	r2, r7, #1
 801ff88:	d0c8      	beq.n	801ff1c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 801ff8a:	f9b4 7000 	ldrsh.w	r7, [r4]
 801ff8e:	1abb      	subs	r3, r7, r2
 801ff90:	2b00      	cmp	r3, #0
 801ff92:	dd31      	ble.n	801fff8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 801ff94:	2a00      	cmp	r2, #0
 801ff96:	dabb      	bge.n	801ff10 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 801ff98:	2f00      	cmp	r7, #0
 801ff9a:	dd2d      	ble.n	801fff8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 801ff9c:	2200      	movs	r2, #0
 801ff9e:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 801ffa2:	19d1      	adds	r1, r2, r7
 801ffa4:	4299      	cmp	r1, r3
 801ffa6:	db02      	blt.n	801ffae <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 801ffa8:	1a9f      	subs	r7, r3, r2
 801ffaa:	2f00      	cmp	r7, #0
 801ffac:	dd24      	ble.n	801fff8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 801ffae:	ea4f 1188 	mov.w	r1, r8, lsl #6
 801ffb2:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 801ffb6:	f7ff ff39 	bl	801fe2c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 801ffba:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ffbc:	fb10 f003 	smulbb	r0, r0, r3
 801ffc0:	b280      	uxth	r0, r0
 801ffc2:	1c41      	adds	r1, r0, #1
 801ffc4:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801ffc8:	1209      	asrs	r1, r1, #8
 801ffca:	f011 0fff 	tst.w	r1, #255	@ 0xff
 801ffce:	d013      	beq.n	801fff8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 801ffd0:	9808      	ldr	r0, [sp, #32]
 801ffd2:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 801ffd4:	b292      	uxth	r2, r2
 801ffd6:	b2c9      	uxtb	r1, r1
 801ffd8:	4413      	add	r3, r2
 801ffda:	9102      	str	r1, [sp, #8]
 801ffdc:	4402      	add	r2, r0
 801ffde:	b23f      	sxth	r7, r7
 801ffe0:	f8da 0000 	ldr.w	r0, [sl]
 801ffe4:	9701      	str	r7, [sp, #4]
 801ffe6:	fa0f f18b 	sxth.w	r1, fp
 801ffea:	9100      	str	r1, [sp, #0]
 801ffec:	6947      	ldr	r7, [r0, #20]
 801ffee:	9905      	ldr	r1, [sp, #20]
 801fff0:	b21b      	sxth	r3, r3
 801fff2:	b212      	sxth	r2, r2
 801fff4:	4650      	mov	r0, sl
 801fff6:	47b8      	blx	r7
 801fff8:	464b      	mov	r3, r9
 801fffa:	e75c      	b.n	801feb6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 801fffc:	2f00      	cmp	r7, #0
 801fffe:	da95      	bge.n	801ff2c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8020000:	e78c      	b.n	801ff1c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8020002:	2900      	cmp	r1, #0
 8020004:	d0f8      	beq.n	801fff8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8020006:	e78f      	b.n	801ff28 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08020008 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>:
 8020008:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 802000c:	461e      	mov	r6, r3
 802000e:	4b36      	ldr	r3, [pc, #216]	@ (80200e8 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h+0xe0>)
 8020010:	e9c0 3100 	strd	r3, r1, [r0]
 8020014:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8020018:	8103      	strh	r3, [r0, #8]
 802001a:	2500      	movs	r5, #0
 802001c:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8020020:	7283      	strb	r3, [r0, #10]
 8020022:	f100 0814 	add.w	r8, r0, #20
 8020026:	4604      	mov	r4, r0
 8020028:	8185      	strh	r5, [r0, #12]
 802002a:	81c5      	strh	r5, [r0, #14]
 802002c:	8205      	strh	r5, [r0, #16]
 802002e:	8245      	strh	r5, [r0, #18]
 8020030:	4640      	mov	r0, r8
 8020032:	4617      	mov	r7, r2
 8020034:	f7ec fb92 	bl	800c75c <_ZN8touchgfx7OutlineC1Ev>
 8020038:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
 802003c:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
 8020040:	e9c4 5518 	strd	r5, r5, [r4, #96]	@ 0x60
 8020044:	e9c4 551b 	strd	r5, r5, [r4, #108]	@ 0x6c
 8020048:	f884 5044 	strb.w	r5, [r4, #68]	@ 0x44
 802004c:	f8a4 5046 	strh.w	r5, [r4, #70]	@ 0x46
 8020050:	f8a4 5048 	strh.w	r5, [r4, #72]	@ 0x48
 8020054:	f8a4 504a 	strh.w	r5, [r4, #74]	@ 0x4a
 8020058:	f884 505c 	strb.w	r5, [r4, #92]	@ 0x5c
 802005c:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
 8020060:	f8a4 5068 	strh.w	r5, [r4, #104]	@ 0x68
 8020064:	6830      	ldr	r0, [r6, #0]
 8020066:	6871      	ldr	r1, [r6, #4]
 8020068:	8872      	ldrh	r2, [r6, #2]
 802006a:	8835      	ldrh	r5, [r6, #0]
 802006c:	466b      	mov	r3, sp
 802006e:	c303      	stmia	r3!, {r0, r1}
 8020070:	887b      	ldrh	r3, [r7, #2]
 8020072:	f9b6 0004 	ldrsh.w	r0, [r6, #4]
 8020076:	f9b6 1006 	ldrsh.w	r1, [r6, #6]
 802007a:	4413      	add	r3, r2
 802007c:	883a      	ldrh	r2, [r7, #0]
 802007e:	81e3      	strh	r3, [r4, #14]
 8020080:	442a      	add	r2, r5
 8020082:	81a2      	strh	r2, [r4, #12]
 8020084:	8220      	strh	r0, [r4, #16]
 8020086:	8261      	strh	r1, [r4, #18]
 8020088:	4668      	mov	r0, sp
 802008a:	4639      	mov	r1, r7
 802008c:	f7ee f8a6 	bl	800e1dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020090:	f104 000c 	add.w	r0, r4, #12
 8020094:	f7ee f87a 	bl	800e18c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020098:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 802009c:	f8bd 2000 	ldrh.w	r2, [sp]
 80200a0:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
 80200a4:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
 80200a8:	4640      	mov	r0, r8
 80200aa:	f7ec fb3b 	bl	800c724 <_ZN8touchgfx7Outline5resetEv>
 80200ae:	f9bd 3000 	ldrsh.w	r3, [sp]
 80200b2:	f9b4 2012 	ldrsh.w	r2, [r4, #18]
 80200b6:	015b      	lsls	r3, r3, #5
 80200b8:	64e3      	str	r3, [r4, #76]	@ 0x4c
 80200ba:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80200be:	015b      	lsls	r3, r3, #5
 80200c0:	6523      	str	r3, [r4, #80]	@ 0x50
 80200c2:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80200c6:	015b      	lsls	r3, r3, #5
 80200c8:	6563      	str	r3, [r4, #84]	@ 0x54
 80200ca:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 80200ce:	015b      	lsls	r3, r3, #5
 80200d0:	65a3      	str	r3, [r4, #88]	@ 0x58
 80200d2:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
 80200d6:	f8a4 304a 	strh.w	r3, [r4, #74]	@ 0x4a
 80200da:	4620      	mov	r0, r4
 80200dc:	e9c4 320f 	strd	r3, r2, [r4, #60]	@ 0x3c
 80200e0:	b002      	add	sp, #8
 80200e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80200e6:	bf00      	nop
 80200e8:	08023e90 	.word	0x08023e90

080200ec <_ZN8touchgfx6Canvas5closeEv>:
 80200ec:	b538      	push	{r3, r4, r5, lr}
 80200ee:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 80200f2:	4604      	mov	r4, r0
 80200f4:	b193      	cbz	r3, 802011c <_ZN8touchgfx6Canvas5closeEv+0x30>
 80200f6:	f890 3068 	ldrb.w	r3, [r0, #104]	@ 0x68
 80200fa:	f890 2069 	ldrb.w	r2, [r0, #105]	@ 0x69
 80200fe:	4213      	tst	r3, r2
 8020100:	d10c      	bne.n	802011c <_ZN8touchgfx6Canvas5closeEv+0x30>
 8020102:	f100 0514 	add.w	r5, r0, #20
 8020106:	b123      	cbz	r3, 8020112 <_ZN8touchgfx6Canvas5closeEv+0x26>
 8020108:	e9d0 1218 	ldrd	r1, r2, [r0, #96]	@ 0x60
 802010c:	4628      	mov	r0, r5
 802010e:	f7ff fea1 	bl	801fe54 <_ZN8touchgfx10Rasterizer6lineToEii>
 8020112:	e9d4 121b 	ldrd	r1, r2, [r4, #108]	@ 0x6c
 8020116:	4628      	mov	r0, r5
 8020118:	f7ff fe9c 	bl	801fe54 <_ZN8touchgfx10Rasterizer6lineToEii>
 802011c:	2300      	movs	r3, #0
 802011e:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 8020122:	e9d4 0306 	ldrd	r0, r3, [r4, #24]
 8020126:	4298      	cmp	r0, r3
 8020128:	bf34      	ite	cc
 802012a:	2000      	movcc	r0, #0
 802012c:	2001      	movcs	r0, #1
 802012e:	bd38      	pop	{r3, r4, r5, pc}

08020130 <_ZN8touchgfx6Canvas6renderEh>:
 8020130:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8020134:	7a85      	ldrb	r5, [r0, #10]
 8020136:	4369      	muls	r1, r5
 8020138:	1c4d      	adds	r5, r1, #1
 802013a:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 802013e:	122d      	asrs	r5, r5, #8
 8020140:	4604      	mov	r4, r0
 8020142:	f000 8099 	beq.w	8020278 <_ZN8touchgfx6Canvas6renderEh+0x148>
 8020146:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
 802014a:	2b00      	cmp	r3, #0
 802014c:	f000 8094 	beq.w	8020278 <_ZN8touchgfx6Canvas6renderEh+0x148>
 8020150:	f7ff ffcc 	bl	80200ec <_ZN8touchgfx6Canvas5closeEv>
 8020154:	4607      	mov	r7, r0
 8020156:	2800      	cmp	r0, #0
 8020158:	d045      	beq.n	80201e6 <_ZN8touchgfx6Canvas6renderEh+0xb6>
 802015a:	6860      	ldr	r0, [r4, #4]
 802015c:	4e47      	ldr	r6, [pc, #284]	@ (802027c <_ZN8touchgfx6Canvas6renderEh+0x14c>)
 802015e:	6803      	ldr	r3, [r0, #0]
 8020160:	6837      	ldr	r7, [r6, #0]
 8020162:	689b      	ldr	r3, [r3, #8]
 8020164:	4798      	blx	r3
 8020166:	4601      	mov	r1, r0
 8020168:	4638      	mov	r0, r7
 802016a:	f7ea fcb5 	bl	800aad8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 802016e:	4607      	mov	r7, r0
 8020170:	f7e2 fbe6 	bl	8002940 <_ZN8touchgfx3HAL3lcdEv>
 8020174:	6803      	ldr	r3, [r0, #0]
 8020176:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8020178:	4798      	blx	r3
 802017a:	4680      	mov	r8, r0
 802017c:	f7e2 fbe0 	bl	8002940 <_ZN8touchgfx3HAL3lcdEv>
 8020180:	6803      	ldr	r3, [r0, #0]
 8020182:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8020184:	4798      	blx	r3
 8020186:	280b      	cmp	r0, #11
 8020188:	d85b      	bhi.n	8020242 <_ZN8touchgfx6Canvas6renderEh+0x112>
 802018a:	e8df f000 	tbb	[pc, r0]
 802018e:	5c51      	.short	0x5c51
 8020190:	305a066c 	.word	0x305a066c
 8020194:	65656540 	.word	0x65656540
 8020198:	6565      	.short	0x6565
 802019a:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802019e:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 80201a2:	2208      	movs	r2, #8
 80201a4:	fb91 f2f2 	sdiv	r2, r1, r2
 80201a8:	fb08 2303 	mla	r3, r8, r3, r2
 80201ac:	441f      	add	r7, r3
 80201ae:	424b      	negs	r3, r1
 80201b0:	f003 0307 	and.w	r3, r3, #7
 80201b4:	f001 0107 	and.w	r1, r1, #7
 80201b8:	bf58      	it	pl
 80201ba:	4259      	negpl	r1, r3
 80201bc:	b2c9      	uxtb	r1, r1
 80201be:	b2ed      	uxtb	r5, r5
 80201c0:	463a      	mov	r2, r7
 80201c2:	e9cd 1500 	strd	r1, r5, [sp]
 80201c6:	fa0f f388 	sxth.w	r3, r8
 80201ca:	6861      	ldr	r1, [r4, #4]
 80201cc:	f104 0014 	add.w	r0, r4, #20
 80201d0:	f7ff fe4c 	bl	801fe6c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 80201d4:	4607      	mov	r7, r0
 80201d6:	6860      	ldr	r0, [r4, #4]
 80201d8:	6803      	ldr	r3, [r0, #0]
 80201da:	691b      	ldr	r3, [r3, #16]
 80201dc:	4798      	blx	r3
 80201de:	6830      	ldr	r0, [r6, #0]
 80201e0:	6803      	ldr	r3, [r0, #0]
 80201e2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80201e4:	4798      	blx	r3
 80201e6:	4638      	mov	r0, r7
 80201e8:	b002      	add	sp, #8
 80201ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80201ee:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 80201f2:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 80201f6:	2204      	movs	r2, #4
 80201f8:	fb91 f2f2 	sdiv	r2, r1, r2
 80201fc:	fb08 2303 	mla	r3, r8, r3, r2
 8020200:	441f      	add	r7, r3
 8020202:	424b      	negs	r3, r1
 8020204:	f003 0303 	and.w	r3, r3, #3
 8020208:	f001 0103 	and.w	r1, r1, #3
 802020c:	e7d4      	b.n	80201b8 <_ZN8touchgfx6Canvas6renderEh+0x88>
 802020e:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8020212:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8020216:	2900      	cmp	r1, #0
 8020218:	f04f 0202 	mov.w	r2, #2
 802021c:	fb91 f2f2 	sdiv	r2, r1, r2
 8020220:	f001 0101 	and.w	r1, r1, #1
 8020224:	fb08 2303 	mla	r3, r8, r3, r2
 8020228:	441f      	add	r7, r3
 802022a:	bfb8      	it	lt
 802022c:	4249      	neglt	r1, r1
 802022e:	e7c5      	b.n	80201bc <_ZN8touchgfx6Canvas6renderEh+0x8c>
 8020230:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8020234:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8020238:	fb08 f303 	mul.w	r3, r8, r3
 802023c:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8020240:	441f      	add	r7, r3
 8020242:	2100      	movs	r1, #0
 8020244:	e7bb      	b.n	80201be <_ZN8touchgfx6Canvas6renderEh+0x8e>
 8020246:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802024a:	fb08 f203 	mul.w	r2, r8, r3
 802024e:	89a3      	ldrh	r3, [r4, #12]
 8020250:	2103      	movs	r1, #3
 8020252:	fb13 2301 	smlabb	r3, r3, r1, r2
 8020256:	e7f3      	b.n	8020240 <_ZN8touchgfx6Canvas6renderEh+0x110>
 8020258:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802025c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8020260:	fb08 2303 	mla	r3, r8, r3, r2
 8020264:	e7ec      	b.n	8020240 <_ZN8touchgfx6Canvas6renderEh+0x110>
 8020266:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802026a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802026e:	fb08 f303 	mul.w	r3, r8, r3
 8020272:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8020276:	e7e3      	b.n	8020240 <_ZN8touchgfx6Canvas6renderEh+0x110>
 8020278:	2701      	movs	r7, #1
 802027a:	e7b4      	b.n	80201e6 <_ZN8touchgfx6Canvas6renderEh+0xb6>
 802027c:	20013090 	.word	0x20013090

08020280 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8020280:	b510      	push	{r4, lr}
 8020282:	4b06      	ldr	r3, [pc, #24]	@ (802029c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>)
 8020284:	781b      	ldrb	r3, [r3, #0]
 8020286:	2b01      	cmp	r3, #1
 8020288:	d107      	bne.n	802029a <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1a>
 802028a:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 802028e:	680b      	ldr	r3, [r1, #0]
 8020290:	6814      	ldr	r4, [r2, #0]
 8020292:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 8020296:	6013      	str	r3, [r2, #0]
 8020298:	600c      	str	r4, [r1, #0]
 802029a:	bd10      	pop	{r4, pc}
 802029c:	20013086 	.word	0x20013086

080202a0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 80202a0:	b513      	push	{r0, r1, r4, lr}
 80202a2:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 80202a6:	4604      	mov	r4, r0
 80202a8:	e9cd 2100 	strd	r2, r1, [sp]
 80202ac:	b9a3      	cbnz	r3, 80202d8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 80202ae:	466a      	mov	r2, sp
 80202b0:	a901      	add	r1, sp, #4
 80202b2:	4620      	mov	r0, r4
 80202b4:	f7ff ffe4 	bl	8020280 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 80202b8:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 80202ba:	9901      	ldr	r1, [sp, #4]
 80202bc:	9a00      	ldr	r2, [sp, #0]
 80202be:	1ac9      	subs	r1, r1, r3
 80202c0:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 80202c2:	9101      	str	r1, [sp, #4]
 80202c4:	1ad2      	subs	r2, r2, r3
 80202c6:	2a00      	cmp	r2, #0
 80202c8:	9200      	str	r2, [sp, #0]
 80202ca:	da0b      	bge.n	80202e4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 80202cc:	2301      	movs	r3, #1
 80202ce:	2900      	cmp	r1, #0
 80202d0:	da0e      	bge.n	80202f0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 80202d2:	f043 0304 	orr.w	r3, r3, #4
 80202d6:	e013      	b.n	8020300 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 80202d8:	f7ff ff08 	bl	80200ec <_ZN8touchgfx6Canvas5closeEv>
 80202dc:	2800      	cmp	r0, #0
 80202de:	d1e6      	bne.n	80202ae <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 80202e0:	b002      	add	sp, #8
 80202e2:	bd10      	pop	{r4, pc}
 80202e4:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80202e6:	429a      	cmp	r2, r3
 80202e8:	bfac      	ite	ge
 80202ea:	2302      	movge	r3, #2
 80202ec:	2300      	movlt	r3, #0
 80202ee:	e7ee      	b.n	80202ce <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 80202f0:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 80202f2:	4281      	cmp	r1, r0
 80202f4:	bfac      	ite	ge
 80202f6:	2008      	movge	r0, #8
 80202f8:	2000      	movlt	r0, #0
 80202fa:	4318      	orrs	r0, r3
 80202fc:	b2c3      	uxtb	r3, r0
 80202fe:	b158      	cbz	r0, 8020318 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8020300:	2200      	movs	r2, #0
 8020302:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
 8020306:	9901      	ldr	r1, [sp, #4]
 8020308:	9a00      	ldr	r2, [sp, #0]
 802030a:	66e1      	str	r1, [r4, #108]	@ 0x6c
 802030c:	6722      	str	r2, [r4, #112]	@ 0x70
 802030e:	e9c4 1218 	strd	r1, r2, [r4, #96]	@ 0x60
 8020312:	f884 3068 	strb.w	r3, [r4, #104]	@ 0x68
 8020316:	e7e3      	b.n	80202e0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8020318:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 802031c:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 8020320:	4298      	cmp	r0, r3
 8020322:	d803      	bhi.n	802032c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 8020324:	f104 0014 	add.w	r0, r4, #20
 8020328:	f7ec fefa 	bl	800d120 <_ZN8touchgfx7Outline6moveToEii>
 802032c:	2301      	movs	r3, #1
 802032e:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 8020332:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 8020336:	2300      	movs	r3, #0
 8020338:	e7e5      	b.n	8020306 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

0802033a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 802033a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802033c:	ab02      	add	r3, sp, #8
 802033e:	4604      	mov	r4, r0
 8020340:	f843 2d08 	str.w	r2, [r3, #-8]!
 8020344:	9101      	str	r1, [sp, #4]
 8020346:	461a      	mov	r2, r3
 8020348:	a901      	add	r1, sp, #4
 802034a:	f7ff ff99 	bl	8020280 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802034e:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8020350:	9901      	ldr	r1, [sp, #4]
 8020352:	9a00      	ldr	r2, [sp, #0]
 8020354:	1ac9      	subs	r1, r1, r3
 8020356:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8020358:	9101      	str	r1, [sp, #4]
 802035a:	1ad2      	subs	r2, r2, r3
 802035c:	2a00      	cmp	r2, #0
 802035e:	9200      	str	r2, [sp, #0]
 8020360:	db1c      	blt.n	802039c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 8020362:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8020364:	429a      	cmp	r2, r3
 8020366:	bfac      	ite	ge
 8020368:	2002      	movge	r0, #2
 802036a:	2000      	movlt	r0, #0
 802036c:	2900      	cmp	r1, #0
 802036e:	db17      	blt.n	80203a0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 8020370:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8020372:	4299      	cmp	r1, r3
 8020374:	bfac      	ite	ge
 8020376:	2308      	movge	r3, #8
 8020378:	2300      	movlt	r3, #0
 802037a:	4303      	orrs	r3, r0
 802037c:	f894 0068 	ldrb.w	r0, [r4, #104]	@ 0x68
 8020380:	b2dd      	uxtb	r5, r3
 8020382:	b978      	cbnz	r0, 80203a4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 8020384:	f104 0014 	add.w	r0, r4, #20
 8020388:	f7ff fd64 	bl	801fe54 <_ZN8touchgfx10Rasterizer6lineToEii>
 802038c:	9b01      	ldr	r3, [sp, #4]
 802038e:	6623      	str	r3, [r4, #96]	@ 0x60
 8020390:	9b00      	ldr	r3, [sp, #0]
 8020392:	6663      	str	r3, [r4, #100]	@ 0x64
 8020394:	f884 5068 	strb.w	r5, [r4, #104]	@ 0x68
 8020398:	b002      	add	sp, #8
 802039a:	bd70      	pop	{r4, r5, r6, pc}
 802039c:	2001      	movs	r0, #1
 802039e:	e7e5      	b.n	802036c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 80203a0:	2304      	movs	r3, #4
 80203a2:	e7ea      	b.n	802037a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 80203a4:	b113      	cbz	r3, 80203ac <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 80203a6:	ea10 0305 	ands.w	r3, r0, r5
 80203aa:	d11c      	bne.n	80203e6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 80203ac:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
 80203b0:	f104 0614 	add.w	r6, r4, #20
 80203b4:	e9d4 1218 	ldrd	r1, r2, [r4, #96]	@ 0x60
 80203b8:	b98b      	cbnz	r3, 80203de <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 80203ba:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 80203be:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 80203c2:	4298      	cmp	r0, r3
 80203c4:	d802      	bhi.n	80203cc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 80203c6:	4630      	mov	r0, r6
 80203c8:	f7ec feaa 	bl	800d120 <_ZN8touchgfx7Outline6moveToEii>
 80203cc:	2301      	movs	r3, #1
 80203ce:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 80203d2:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 80203d6:	e9dd 2100 	ldrd	r2, r1, [sp]
 80203da:	4630      	mov	r0, r6
 80203dc:	e7d4      	b.n	8020388 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 80203de:	4630      	mov	r0, r6
 80203e0:	f7ff fd38 	bl	801fe54 <_ZN8touchgfx10Rasterizer6lineToEii>
 80203e4:	e7f7      	b.n	80203d6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 80203e6:	461d      	mov	r5, r3
 80203e8:	e7d0      	b.n	802038c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

080203ec <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>:
 80203ec:	b538      	push	{r3, r4, r5, lr}
 80203ee:	ed2d 8b10 	vpush	{d8-d15}
 80203f2:	eef6 ba00 	vmov.f32	s23, #96	@ 0x3f000000  0.5
 80203f6:	ed9f ba5a 	vldr	s22, [pc, #360]	@ 8020560 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x174>
 80203fa:	4605      	mov	r5, r0
 80203fc:	eeb0 ca40 	vmov.f32	s24, s0
 8020400:	eef0 ca60 	vmov.f32	s25, s1
 8020404:	eeb0 da41 	vmov.f32	s26, s2
 8020408:	eef0 da61 	vmov.f32	s27, s3
 802040c:	eeb0 ea42 	vmov.f32	s28, s4
 8020410:	eef0 ea62 	vmov.f32	s29, s5
 8020414:	460c      	mov	r4, r1
 8020416:	eef0 aa6b 	vmov.f32	s21, s23
 802041a:	2c08      	cmp	r4, #8
 802041c:	d86e      	bhi.n	80204fc <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x110>
 802041e:	ee7e 6a4c 	vsub.f32	s13, s28, s24
 8020422:	ee7d 7aee 	vsub.f32	s15, s27, s29
 8020426:	ee3d 6a4e 	vsub.f32	s12, s26, s28
 802042a:	ee3e 7aec 	vsub.f32	s14, s29, s25
 802042e:	ee66 7ae7 	vnmul.f32	s15, s13, s15
 8020432:	ee3c fa0d 	vadd.f32	s30, s24, s26
 8020436:	eee6 7a07 	vfma.f32	s15, s12, s14
 802043a:	ee7c faad 	vadd.f32	s31, s25, s27
 802043e:	ee7d 9a0e 	vadd.f32	s19, s26, s28
 8020442:	ee3d aaae 	vadd.f32	s20, s27, s29
 8020446:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802044a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802044e:	ee2f fa2b 	vmul.f32	s30, s30, s23
 8020452:	ee6f faab 	vmul.f32	s31, s31, s23
 8020456:	ee69 9aab 	vmul.f32	s19, s19, s23
 802045a:	ee2a aa2b 	vmul.f32	s20, s20, s23
 802045e:	bf48      	it	mi
 8020460:	eef1 7a67 	vnegmi.f32	s15, s15
 8020464:	ee7f 8a29 	vadd.f32	s17, s30, s19
 8020468:	ee3f 9a8a 	vadd.f32	s18, s31, s20
 802046c:	eef4 7acb 	vcmpe.f32	s15, s22
 8020470:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020474:	ee68 8aab 	vmul.f32	s17, s17, s23
 8020478:	ee29 9a2b 	vmul.f32	s18, s18, s23
 802047c:	eeb5 6a00 	vmov.f32	s12, #80	@ 0x3e800000  0.250
 8020480:	dd3f      	ble.n	8020502 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x116>
 8020482:	ee27 7a07 	vmul.f32	s14, s14, s14
 8020486:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802048a:	eea6 7aa6 	vfma.f32	s14, s13, s13
 802048e:	ee27 7a06 	vmul.f32	s14, s14, s12
 8020492:	eef4 7ac7 	vcmpe.f32	s15, s14
 8020496:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802049a:	d847      	bhi.n	802052c <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
 802049c:	ee7e 0a4d 	vsub.f32	s1, s28, s26
 80204a0:	ee3e 0aed 	vsub.f32	s0, s29, s27
 80204a4:	f000 fa3b 	bl	802091e <atan2f>
 80204a8:	ee7d 0a4c 	vsub.f32	s1, s26, s24
 80204ac:	eeb0 8a40 	vmov.f32	s16, s0
 80204b0:	ee3d 0aec 	vsub.f32	s0, s27, s25
 80204b4:	f000 fa33 	bl	802091e <atan2f>
 80204b8:	ee38 0a40 	vsub.f32	s0, s16, s0
 80204bc:	eddf 7a29 	vldr	s15, [pc, #164]	@ 8020564 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x178>
 80204c0:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80204c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80204c8:	bf48      	it	mi
 80204ca:	eeb1 0a40 	vnegmi.f32	s0, s0
 80204ce:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80204d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80204d6:	bfa4      	itt	ge
 80204d8:	eddf 7a23 	vldrge	s15, [pc, #140]	@ 8020568 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x17c>
 80204dc:	ee37 0ac0 	vsubge.f32	s0, s15, s0
 80204e0:	eddf 7a22 	vldr	s15, [pc, #136]	@ 802056c <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x180>
 80204e4:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80204e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80204ec:	d51e      	bpl.n	802052c <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
 80204ee:	eef0 0a49 	vmov.f32	s1, s18
 80204f2:	eeb0 0a68 	vmov.f32	s0, s17
 80204f6:	4628      	mov	r0, r5
 80204f8:	f7eb fcf6 	bl	800bee8 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 80204fc:	ecbd 8b10 	vpop	{d8-d15}
 8020500:	bd38      	pop	{r3, r4, r5, pc}
 8020502:	ee7c 7a0e 	vadd.f32	s15, s24, s28
 8020506:	eeb0 7a68 	vmov.f32	s14, s17
 802050a:	eea7 7aea 	vfms.f32	s14, s15, s21
 802050e:	ee7c 7aae 	vadd.f32	s15, s25, s29
 8020512:	eef0 6a49 	vmov.f32	s13, s18
 8020516:	eee7 6aea 	vfms.f32	s13, s15, s21
 802051a:	ee66 7aa6 	vmul.f32	s15, s13, s13
 802051e:	eee7 7a07 	vfma.f32	s15, s14, s14
 8020522:	eef4 7ac6 	vcmpe.f32	s15, s12
 8020526:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802052a:	d9e0      	bls.n	80204ee <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x102>
 802052c:	3401      	adds	r4, #1
 802052e:	eef0 0a6c 	vmov.f32	s1, s25
 8020532:	eeb0 0a4c 	vmov.f32	s0, s24
 8020536:	4621      	mov	r1, r4
 8020538:	eef0 2a49 	vmov.f32	s5, s18
 802053c:	eeb0 2a68 	vmov.f32	s4, s17
 8020540:	eef0 1a6f 	vmov.f32	s3, s31
 8020544:	eeb0 1a4f 	vmov.f32	s2, s30
 8020548:	4628      	mov	r0, r5
 802054a:	f7ff ff4f 	bl	80203ec <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
 802054e:	eef0 da4a 	vmov.f32	s27, s20
 8020552:	eeb0 da69 	vmov.f32	s26, s19
 8020556:	eef0 ca49 	vmov.f32	s25, s18
 802055a:	eeb0 ca68 	vmov.f32	s24, s17
 802055e:	e75c      	b.n	802041a <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x2e>
 8020560:	2edbe6ff 	.word	0x2edbe6ff
 8020564:	40490fdb 	.word	0x40490fdb
 8020568:	40c90fdb 	.word	0x40c90fdb
 802056c:	3dcccccd 	.word	0x3dcccccd

08020570 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>:
 8020570:	b530      	push	{r4, r5, lr}
 8020572:	ed2d 8b10 	vpush	{d8-d15}
 8020576:	4604      	mov	r4, r0
 8020578:	b085      	sub	sp, #20
 802057a:	eef0 8a40 	vmov.f32	s17, s0
 802057e:	eef0 9a60 	vmov.f32	s19, s1
 8020582:	eef0 fa41 	vmov.f32	s31, s2
 8020586:	eeb0 fa61 	vmov.f32	s30, s3
 802058a:	eef0 ba42 	vmov.f32	s23, s4
 802058e:	eeb0 ca62 	vmov.f32	s24, s5
 8020592:	eef0 aa43 	vmov.f32	s21, s6
 8020596:	eeb0 ba63 	vmov.f32	s22, s7
 802059a:	460d      	mov	r5, r1
 802059c:	2d08      	cmp	r5, #8
 802059e:	f200 8115 	bhi.w	80207cc <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x25c>
 80205a2:	ee3b 6aaa 	vadd.f32	s12, s23, s21
 80205a6:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 80205aa:	ee7f 6aab 	vadd.f32	s13, s31, s23
 80205ae:	ee26 6a27 	vmul.f32	s12, s12, s15
 80205b2:	ee38 daaf 	vadd.f32	s26, s17, s31
 80205b6:	ed8d 6a01 	vstr	s12, [sp, #4]
 80205ba:	eea6 6aa7 	vfma.f32	s12, s13, s15
 80205be:	ee2d da27 	vmul.f32	s26, s26, s15
 80205c2:	ee7c ca0b 	vadd.f32	s25, s24, s22
 80205c6:	eeb0 ea4d 	vmov.f32	s28, s26
 80205ca:	eea6 eaa7 	vfma.f32	s28, s13, s15
 80205ce:	ee6c caa7 	vmul.f32	s25, s25, s15
 80205d2:	ee66 6a27 	vmul.f32	s13, s12, s15
 80205d6:	ee3f 7a0c 	vadd.f32	s14, s30, s24
 80205da:	edcd 6a03 	vstr	s13, [sp, #12]
 80205de:	ee79 da8f 	vadd.f32	s27, s19, s30
 80205e2:	eef0 6a6c 	vmov.f32	s13, s25
 80205e6:	eee7 6a27 	vfma.f32	s13, s14, s15
 80205ea:	ee6d daa7 	vmul.f32	s27, s27, s15
 80205ee:	ee2e ea27 	vmul.f32	s28, s28, s15
 80205f2:	eef0 ea6d 	vmov.f32	s29, s27
 80205f6:	eee7 ea27 	vfma.f32	s29, s14, s15
 80205fa:	ee26 7aa7 	vmul.f32	s14, s13, s15
 80205fe:	ee6e eaa7 	vmul.f32	s29, s29, s15
 8020602:	ed8d 7a02 	vstr	s14, [sp, #8]
 8020606:	ed9d 7a03 	vldr	s14, [sp, #12]
 802060a:	ee3e 9a07 	vadd.f32	s18, s28, s14
 802060e:	ed9d 7a02 	vldr	s14, [sp, #8]
 8020612:	ee3e aa87 	vadd.f32	s20, s29, s14
 8020616:	ee29 9a27 	vmul.f32	s18, s18, s15
 802061a:	ee2a aa27 	vmul.f32	s20, s20, s15
 802061e:	eef0 6a67 	vmov.f32	s13, s15
 8020622:	2d00      	cmp	r5, #0
 8020624:	f000 810d 	beq.w	8020842 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 8020628:	ee7a 5ae8 	vsub.f32	s11, s21, s17
 802062c:	ee3f 7a4b 	vsub.f32	s14, s30, s22
 8020630:	ee7b 7a69 	vsub.f32	s15, s22, s19
 8020634:	ee3f 6aea 	vsub.f32	s12, s31, s21
 8020638:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 802063c:	ee3b 5aea 	vsub.f32	s10, s23, s21
 8020640:	eea6 7a27 	vfma.f32	s14, s12, s15
 8020644:	ee3c 6a4b 	vsub.f32	s12, s24, s22
 8020648:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 802064c:	ee25 6ac6 	vnmul.f32	s12, s11, s12
 8020650:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020654:	eea5 6a27 	vfma.f32	s12, s10, s15
 8020658:	eddf 4a8b 	vldr	s9, [pc, #556]	@ 8020888 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
 802065c:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
 8020660:	bf48      	it	mi
 8020662:	eeb1 7a47 	vnegmi.f32	s14, s14
 8020666:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802066a:	eeb4 7ae4 	vcmpe.f32	s14, s9
 802066e:	bf48      	it	mi
 8020670:	eeb1 6a46 	vnegmi.f32	s12, s12
 8020674:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020678:	eeb5 5a00 	vmov.f32	s10, #80	@ 0x3e800000  0.250
 802067c:	f340 80aa 	ble.w	80207d4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x264>
 8020680:	eeb4 6ae4 	vcmpe.f32	s12, s9
 8020684:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020688:	dd5c      	ble.n	8020744 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1d4>
 802068a:	ee65 5aa5 	vmul.f32	s11, s11, s11
 802068e:	ee37 7a06 	vadd.f32	s14, s14, s12
 8020692:	eee7 5aa7 	vfma.f32	s11, s15, s15
 8020696:	ee27 7a07 	vmul.f32	s14, s14, s14
 802069a:	ee65 7a85 	vmul.f32	s15, s11, s10
 802069e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80206a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80206a6:	f200 80cc 	bhi.w	8020842 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 80206aa:	ee7b 0aef 	vsub.f32	s1, s23, s31
 80206ae:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 80206b2:	f000 f934 	bl	802091e <atan2f>
 80206b6:	ee7f 0ae8 	vsub.f32	s1, s31, s17
 80206ba:	eeb0 8a40 	vmov.f32	s16, s0
 80206be:	ee3f 0a69 	vsub.f32	s0, s30, s19
 80206c2:	f000 f92c 	bl	802091e <atan2f>
 80206c6:	ee38 fa40 	vsub.f32	s30, s16, s0
 80206ca:	ee7a 0aeb 	vsub.f32	s1, s21, s23
 80206ce:	eeb5 fac0 	vcmpe.f32	s30, #0.0
 80206d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80206d6:	ee3b 0a4c 	vsub.f32	s0, s22, s24
 80206da:	bf48      	it	mi
 80206dc:	eeb1 fa4f 	vnegmi.f32	s30, s30
 80206e0:	f000 f91d 	bl	802091e <atan2f>
 80206e4:	ee30 0a48 	vsub.f32	s0, s0, s16
 80206e8:	eddf 7a68 	vldr	s15, [pc, #416]	@ 802088c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 80206ec:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80206f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80206f4:	eeb4 fae7 	vcmpe.f32	s30, s15
 80206f8:	bf48      	it	mi
 80206fa:	eeb1 0a40 	vnegmi.f32	s0, s0
 80206fe:	eddf 7a63 	vldr	s15, [pc, #396]	@ 802088c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 8020702:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020706:	bfa8      	it	ge
 8020708:	ed9f 7a61 	vldrge	s14, [pc, #388]	@ 8020890 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 802070c:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8020710:	bfa8      	it	ge
 8020712:	ee37 fa4f 	vsubge.f32	s30, s14, s30
 8020716:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802071a:	bfa8      	it	ge
 802071c:	ed9f 7a5c 	vldrge	s14, [pc, #368]	@ 8020890 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 8020720:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 8020894 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x324>
 8020724:	bfa8      	it	ge
 8020726:	ee37 0a40 	vsubge.f32	s0, s14, s0
 802072a:	ee3f 0a00 	vadd.f32	s0, s30, s0
 802072e:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8020732:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020736:	f140 8084 	bpl.w	8020842 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 802073a:	eef0 0a4a 	vmov.f32	s1, s20
 802073e:	eeb0 0a49 	vmov.f32	s0, s18
 8020742:	e040      	b.n	80207c6 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x256>
 8020744:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8020748:	ee27 7a07 	vmul.f32	s14, s14, s14
 802074c:	eee5 7aa5 	vfma.f32	s15, s11, s11
 8020750:	ee67 7a85 	vmul.f32	s15, s15, s10
 8020754:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8020758:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802075c:	d871      	bhi.n	8020842 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 802075e:	ee7b 0aef 	vsub.f32	s1, s23, s31
 8020762:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 8020766:	f000 f8da 	bl	802091e <atan2f>
 802076a:	ee7f 0ae8 	vsub.f32	s1, s31, s17
 802076e:	eeb0 8a40 	vmov.f32	s16, s0
 8020772:	ee3f 0a69 	vsub.f32	s0, s30, s19
 8020776:	f000 f8d2 	bl	802091e <atan2f>
 802077a:	ee38 0a40 	vsub.f32	s0, s16, s0
 802077e:	eddf 7a43 	vldr	s15, [pc, #268]	@ 802088c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
 8020782:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8020786:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802078a:	bf48      	it	mi
 802078c:	eeb1 0a40 	vnegmi.f32	s0, s0
 8020790:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8020794:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020798:	bfa4      	itt	ge
 802079a:	eddf 7a3d 	vldrge	s15, [pc, #244]	@ 8020890 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
 802079e:	ee37 0ac0 	vsubge.f32	s0, s15, s0
 80207a2:	eddf 7a3c 	vldr	s15, [pc, #240]	@ 8020894 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x324>
 80207a6:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80207aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80207ae:	d548      	bpl.n	8020842 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 80207b0:	eef0 0a4f 	vmov.f32	s1, s30
 80207b4:	eeb0 0a6f 	vmov.f32	s0, s31
 80207b8:	4620      	mov	r0, r4
 80207ba:	f7eb fb95 	bl	800bee8 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 80207be:	eef0 0a4c 	vmov.f32	s1, s24
 80207c2:	eeb0 0a6b 	vmov.f32	s0, s23
 80207c6:	4620      	mov	r0, r4
 80207c8:	f7eb fb8e 	bl	800bee8 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
 80207cc:	b005      	add	sp, #20
 80207ce:	ecbd 8b10 	vpop	{d8-d15}
 80207d2:	bd30      	pop	{r4, r5, pc}
 80207d4:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 8020888 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
 80207d8:	eeb4 6ac7 	vcmpe.f32	s12, s14
 80207dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80207e0:	dd19      	ble.n	8020816 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2a6>
 80207e2:	ee67 7aa7 	vmul.f32	s15, s15, s15
 80207e6:	ee26 7a06 	vmul.f32	s14, s12, s12
 80207ea:	eee5 7aa5 	vfma.f32	s15, s11, s11
 80207ee:	ee67 7a85 	vmul.f32	s15, s15, s10
 80207f2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80207f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80207fa:	d822      	bhi.n	8020842 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2d2>
 80207fc:	ee7a 0aeb 	vsub.f32	s1, s21, s23
 8020800:	ee3b 0a4c 	vsub.f32	s0, s22, s24
 8020804:	f000 f88b 	bl	802091e <atan2f>
 8020808:	ee7b 0aef 	vsub.f32	s1, s23, s31
 802080c:	eeb0 8a40 	vmov.f32	s16, s0
 8020810:	ee3c 0a4f 	vsub.f32	s0, s24, s30
 8020814:	e7af      	b.n	8020776 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x206>
 8020816:	ee78 7aaa 	vadd.f32	s15, s17, s21
 802081a:	eeb0 7a49 	vmov.f32	s14, s18
 802081e:	eea7 7ae6 	vfms.f32	s14, s15, s13
 8020822:	ee79 7a8b 	vadd.f32	s15, s19, s22
 8020826:	eeb0 6a4a 	vmov.f32	s12, s20
 802082a:	eea7 6ae6 	vfms.f32	s12, s15, s13
 802082e:	ee66 7a06 	vmul.f32	s15, s12, s12
 8020832:	eee7 7a07 	vfma.f32	s15, s14, s14
 8020836:	eef4 7ac5 	vcmpe.f32	s15, s10
 802083a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802083e:	f67f af7c 	bls.w	802073a <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1ca>
 8020842:	3501      	adds	r5, #1
 8020844:	eef0 0a69 	vmov.f32	s1, s19
 8020848:	eeb0 0a68 	vmov.f32	s0, s17
 802084c:	4629      	mov	r1, r5
 802084e:	eef0 3a4a 	vmov.f32	s7, s20
 8020852:	eeb0 3a49 	vmov.f32	s6, s18
 8020856:	eef0 2a6e 	vmov.f32	s5, s29
 802085a:	eeb0 2a4e 	vmov.f32	s4, s28
 802085e:	eef0 1a6d 	vmov.f32	s3, s27
 8020862:	eeb0 1a4d 	vmov.f32	s2, s26
 8020866:	4620      	mov	r0, r4
 8020868:	f7ff fe82 	bl	8020570 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
 802086c:	eeb0 ca6c 	vmov.f32	s24, s25
 8020870:	eddd ba01 	vldr	s23, [sp, #4]
 8020874:	ed9d fa02 	vldr	s30, [sp, #8]
 8020878:	eddd fa03 	vldr	s31, [sp, #12]
 802087c:	eef0 9a4a 	vmov.f32	s19, s20
 8020880:	eef0 8a49 	vmov.f32	s17, s18
 8020884:	e68a      	b.n	802059c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2c>
 8020886:	bf00      	nop
 8020888:	2edbe6ff 	.word	0x2edbe6ff
 802088c:	40490fdb 	.word	0x40490fdb
 8020890:	40c90fdb 	.word	0x40c90fdb
 8020894:	3dcccccd 	.word	0x3dcccccd

08020898 <_ZN8touchgfx6CanvasD1Ev>:
 8020898:	b510      	push	{r4, lr}
 802089a:	4b04      	ldr	r3, [pc, #16]	@ (80208ac <_ZN8touchgfx6CanvasD1Ev+0x14>)
 802089c:	4604      	mov	r4, r0
 802089e:	f840 3b14 	str.w	r3, [r0], #20
 80208a2:	f7eb ff37 	bl	800c714 <_ZN8touchgfx7OutlineD1Ev>
 80208a6:	4620      	mov	r0, r4
 80208a8:	bd10      	pop	{r4, pc}
 80208aa:	bf00      	nop
 80208ac:	08023e90 	.word	0x08023e90

080208b0 <_ZN8touchgfx6CanvasD0Ev>:
 80208b0:	b510      	push	{r4, lr}
 80208b2:	4604      	mov	r4, r0
 80208b4:	f7ff fff0 	bl	8020898 <_ZN8touchgfx6CanvasD1Ev>
 80208b8:	4620      	mov	r0, r4
 80208ba:	2174      	movs	r1, #116	@ 0x74
 80208bc:	f000 f807 	bl	80208ce <_ZdlPvj>
 80208c0:	4620      	mov	r0, r4
 80208c2:	bd10      	pop	{r4, pc}

080208c4 <__aeabi_atexit>:
 80208c4:	460b      	mov	r3, r1
 80208c6:	4601      	mov	r1, r0
 80208c8:	4618      	mov	r0, r3
 80208ca:	f001 b81f 	b.w	802190c <__cxa_atexit>

080208ce <_ZdlPvj>:
 80208ce:	f000 b812 	b.w	80208f6 <_ZdlPv>

080208d2 <__cxa_guard_acquire>:
 80208d2:	6802      	ldr	r2, [r0, #0]
 80208d4:	07d2      	lsls	r2, r2, #31
 80208d6:	4603      	mov	r3, r0
 80208d8:	d405      	bmi.n	80208e6 <__cxa_guard_acquire+0x14>
 80208da:	7842      	ldrb	r2, [r0, #1]
 80208dc:	b102      	cbz	r2, 80208e0 <__cxa_guard_acquire+0xe>
 80208de:	deff      	udf	#255	@ 0xff
 80208e0:	2001      	movs	r0, #1
 80208e2:	7058      	strb	r0, [r3, #1]
 80208e4:	4770      	bx	lr
 80208e6:	2000      	movs	r0, #0
 80208e8:	4770      	bx	lr

080208ea <__cxa_guard_release>:
 80208ea:	2301      	movs	r3, #1
 80208ec:	6003      	str	r3, [r0, #0]
 80208ee:	4770      	bx	lr

080208f0 <__cxa_pure_virtual>:
 80208f0:	b508      	push	{r3, lr}
 80208f2:	f000 f80f 	bl	8020914 <_ZSt9terminatev>

080208f6 <_ZdlPv>:
 80208f6:	f000 bf53 	b.w	80217a0 <free>

080208fa <_ZN10__cxxabiv111__terminateEPFvvE>:
 80208fa:	b508      	push	{r3, lr}
 80208fc:	4780      	blx	r0
 80208fe:	f000 ff1b 	bl	8021738 <abort>
	...

08020904 <_ZSt13get_terminatev>:
 8020904:	4b02      	ldr	r3, [pc, #8]	@ (8020910 <_ZSt13get_terminatev+0xc>)
 8020906:	6818      	ldr	r0, [r3, #0]
 8020908:	f3bf 8f5b 	dmb	ish
 802090c:	4770      	bx	lr
 802090e:	bf00      	nop
 8020910:	20000210 	.word	0x20000210

08020914 <_ZSt9terminatev>:
 8020914:	b508      	push	{r3, lr}
 8020916:	f7ff fff5 	bl	8020904 <_ZSt13get_terminatev>
 802091a:	f7ff ffee 	bl	80208fa <_ZN10__cxxabiv111__terminateEPFvvE>

0802091e <atan2f>:
 802091e:	f000 b94d 	b.w	8020bbc <__ieee754_atan2f>
	...

08020924 <sqrtf>:
 8020924:	b508      	push	{r3, lr}
 8020926:	ed2d 8b02 	vpush	{d8}
 802092a:	eeb0 8a40 	vmov.f32	s16, s0
 802092e:	f000 f8a1 	bl	8020a74 <__ieee754_sqrtf>
 8020932:	eeb4 8a48 	vcmp.f32	s16, s16
 8020936:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802093a:	d60c      	bvs.n	8020956 <sqrtf+0x32>
 802093c:	eddf 8a07 	vldr	s17, [pc, #28]	@ 802095c <sqrtf+0x38>
 8020940:	eeb4 8ae8 	vcmpe.f32	s16, s17
 8020944:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020948:	d505      	bpl.n	8020956 <sqrtf+0x32>
 802094a:	f001 f9a7 	bl	8021c9c <__errno>
 802094e:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 8020952:	2321      	movs	r3, #33	@ 0x21
 8020954:	6003      	str	r3, [r0, #0]
 8020956:	ecbd 8b02 	vpop	{d8}
 802095a:	bd08      	pop	{r3, pc}
 802095c:	00000000 	.word	0x00000000

08020960 <cosf>:
 8020960:	ee10 3a10 	vmov	r3, s0
 8020964:	b507      	push	{r0, r1, r2, lr}
 8020966:	4a1e      	ldr	r2, [pc, #120]	@ (80209e0 <cosf+0x80>)
 8020968:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 802096c:	4293      	cmp	r3, r2
 802096e:	d806      	bhi.n	802097e <cosf+0x1e>
 8020970:	eddf 0a1c 	vldr	s1, [pc, #112]	@ 80209e4 <cosf+0x84>
 8020974:	b003      	add	sp, #12
 8020976:	f85d eb04 	ldr.w	lr, [sp], #4
 802097a:	f000 b87f 	b.w	8020a7c <__kernel_cosf>
 802097e:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8020982:	d304      	bcc.n	802098e <cosf+0x2e>
 8020984:	ee30 0a40 	vsub.f32	s0, s0, s0
 8020988:	b003      	add	sp, #12
 802098a:	f85d fb04 	ldr.w	pc, [sp], #4
 802098e:	4668      	mov	r0, sp
 8020990:	f000 f9b4 	bl	8020cfc <__ieee754_rem_pio2f>
 8020994:	f000 0003 	and.w	r0, r0, #3
 8020998:	2801      	cmp	r0, #1
 802099a:	d009      	beq.n	80209b0 <cosf+0x50>
 802099c:	2802      	cmp	r0, #2
 802099e:	d010      	beq.n	80209c2 <cosf+0x62>
 80209a0:	b9b0      	cbnz	r0, 80209d0 <cosf+0x70>
 80209a2:	eddd 0a01 	vldr	s1, [sp, #4]
 80209a6:	ed9d 0a00 	vldr	s0, [sp]
 80209aa:	f000 f867 	bl	8020a7c <__kernel_cosf>
 80209ae:	e7eb      	b.n	8020988 <cosf+0x28>
 80209b0:	eddd 0a01 	vldr	s1, [sp, #4]
 80209b4:	ed9d 0a00 	vldr	s0, [sp]
 80209b8:	f000 f8b8 	bl	8020b2c <__kernel_sinf>
 80209bc:	eeb1 0a40 	vneg.f32	s0, s0
 80209c0:	e7e2      	b.n	8020988 <cosf+0x28>
 80209c2:	eddd 0a01 	vldr	s1, [sp, #4]
 80209c6:	ed9d 0a00 	vldr	s0, [sp]
 80209ca:	f000 f857 	bl	8020a7c <__kernel_cosf>
 80209ce:	e7f5      	b.n	80209bc <cosf+0x5c>
 80209d0:	eddd 0a01 	vldr	s1, [sp, #4]
 80209d4:	ed9d 0a00 	vldr	s0, [sp]
 80209d8:	2001      	movs	r0, #1
 80209da:	f000 f8a7 	bl	8020b2c <__kernel_sinf>
 80209de:	e7d3      	b.n	8020988 <cosf+0x28>
 80209e0:	3f490fd8 	.word	0x3f490fd8
 80209e4:	00000000 	.word	0x00000000

080209e8 <sinf>:
 80209e8:	ee10 3a10 	vmov	r3, s0
 80209ec:	b507      	push	{r0, r1, r2, lr}
 80209ee:	4a1f      	ldr	r2, [pc, #124]	@ (8020a6c <sinf+0x84>)
 80209f0:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80209f4:	4293      	cmp	r3, r2
 80209f6:	d807      	bhi.n	8020a08 <sinf+0x20>
 80209f8:	eddf 0a1d 	vldr	s1, [pc, #116]	@ 8020a70 <sinf+0x88>
 80209fc:	2000      	movs	r0, #0
 80209fe:	b003      	add	sp, #12
 8020a00:	f85d eb04 	ldr.w	lr, [sp], #4
 8020a04:	f000 b892 	b.w	8020b2c <__kernel_sinf>
 8020a08:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8020a0c:	d304      	bcc.n	8020a18 <sinf+0x30>
 8020a0e:	ee30 0a40 	vsub.f32	s0, s0, s0
 8020a12:	b003      	add	sp, #12
 8020a14:	f85d fb04 	ldr.w	pc, [sp], #4
 8020a18:	4668      	mov	r0, sp
 8020a1a:	f000 f96f 	bl	8020cfc <__ieee754_rem_pio2f>
 8020a1e:	f000 0003 	and.w	r0, r0, #3
 8020a22:	2801      	cmp	r0, #1
 8020a24:	d00a      	beq.n	8020a3c <sinf+0x54>
 8020a26:	2802      	cmp	r0, #2
 8020a28:	d00f      	beq.n	8020a4a <sinf+0x62>
 8020a2a:	b9c0      	cbnz	r0, 8020a5e <sinf+0x76>
 8020a2c:	eddd 0a01 	vldr	s1, [sp, #4]
 8020a30:	ed9d 0a00 	vldr	s0, [sp]
 8020a34:	2001      	movs	r0, #1
 8020a36:	f000 f879 	bl	8020b2c <__kernel_sinf>
 8020a3a:	e7ea      	b.n	8020a12 <sinf+0x2a>
 8020a3c:	eddd 0a01 	vldr	s1, [sp, #4]
 8020a40:	ed9d 0a00 	vldr	s0, [sp]
 8020a44:	f000 f81a 	bl	8020a7c <__kernel_cosf>
 8020a48:	e7e3      	b.n	8020a12 <sinf+0x2a>
 8020a4a:	eddd 0a01 	vldr	s1, [sp, #4]
 8020a4e:	ed9d 0a00 	vldr	s0, [sp]
 8020a52:	2001      	movs	r0, #1
 8020a54:	f000 f86a 	bl	8020b2c <__kernel_sinf>
 8020a58:	eeb1 0a40 	vneg.f32	s0, s0
 8020a5c:	e7d9      	b.n	8020a12 <sinf+0x2a>
 8020a5e:	eddd 0a01 	vldr	s1, [sp, #4]
 8020a62:	ed9d 0a00 	vldr	s0, [sp]
 8020a66:	f000 f809 	bl	8020a7c <__kernel_cosf>
 8020a6a:	e7f5      	b.n	8020a58 <sinf+0x70>
 8020a6c:	3f490fd8 	.word	0x3f490fd8
 8020a70:	00000000 	.word	0x00000000

08020a74 <__ieee754_sqrtf>:
 8020a74:	eeb1 0ac0 	vsqrt.f32	s0, s0
 8020a78:	4770      	bx	lr
	...

08020a7c <__kernel_cosf>:
 8020a7c:	ee10 3a10 	vmov	r3, s0
 8020a80:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8020a84:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 8020a88:	eef0 6a40 	vmov.f32	s13, s0
 8020a8c:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8020a90:	d204      	bcs.n	8020a9c <__kernel_cosf+0x20>
 8020a92:	eefd 7ae6 	vcvt.s32.f32	s15, s13
 8020a96:	ee17 2a90 	vmov	r2, s15
 8020a9a:	b342      	cbz	r2, 8020aee <__kernel_cosf+0x72>
 8020a9c:	ee26 7aa6 	vmul.f32	s14, s13, s13
 8020aa0:	eddf 7a1a 	vldr	s15, [pc, #104]	@ 8020b0c <__kernel_cosf+0x90>
 8020aa4:	ed9f 6a1a 	vldr	s12, [pc, #104]	@ 8020b10 <__kernel_cosf+0x94>
 8020aa8:	4a1a      	ldr	r2, [pc, #104]	@ (8020b14 <__kernel_cosf+0x98>)
 8020aaa:	eea7 6a27 	vfma.f32	s12, s14, s15
 8020aae:	4293      	cmp	r3, r2
 8020ab0:	eddf 7a19 	vldr	s15, [pc, #100]	@ 8020b18 <__kernel_cosf+0x9c>
 8020ab4:	eee6 7a07 	vfma.f32	s15, s12, s14
 8020ab8:	ed9f 6a18 	vldr	s12, [pc, #96]	@ 8020b1c <__kernel_cosf+0xa0>
 8020abc:	eea7 6a87 	vfma.f32	s12, s15, s14
 8020ac0:	eddf 7a17 	vldr	s15, [pc, #92]	@ 8020b20 <__kernel_cosf+0xa4>
 8020ac4:	eee6 7a07 	vfma.f32	s15, s12, s14
 8020ac8:	ed9f 6a16 	vldr	s12, [pc, #88]	@ 8020b24 <__kernel_cosf+0xa8>
 8020acc:	eea7 6a87 	vfma.f32	s12, s15, s14
 8020ad0:	ee60 0ae6 	vnmul.f32	s1, s1, s13
 8020ad4:	ee26 6a07 	vmul.f32	s12, s12, s14
 8020ad8:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8020adc:	eee7 0a06 	vfma.f32	s1, s14, s12
 8020ae0:	ee67 7a27 	vmul.f32	s15, s14, s15
 8020ae4:	d804      	bhi.n	8020af0 <__kernel_cosf+0x74>
 8020ae6:	ee77 7ae0 	vsub.f32	s15, s15, s1
 8020aea:	ee30 0a67 	vsub.f32	s0, s0, s15
 8020aee:	4770      	bx	lr
 8020af0:	4a0d      	ldr	r2, [pc, #52]	@ (8020b28 <__kernel_cosf+0xac>)
 8020af2:	4293      	cmp	r3, r2
 8020af4:	bf9a      	itte	ls
 8020af6:	f103 437f 	addls.w	r3, r3, #4278190080	@ 0xff000000
 8020afa:	ee07 3a10 	vmovls	s14, r3
 8020afe:	eeb5 7a02 	vmovhi.f32	s14, #82	@ 0x3e900000  0.2812500
 8020b02:	ee30 0a47 	vsub.f32	s0, s0, s14
 8020b06:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8020b0a:	e7ec      	b.n	8020ae6 <__kernel_cosf+0x6a>
 8020b0c:	ad47d74e 	.word	0xad47d74e
 8020b10:	310f74f6 	.word	0x310f74f6
 8020b14:	3e999999 	.word	0x3e999999
 8020b18:	b493f27c 	.word	0xb493f27c
 8020b1c:	37d00d01 	.word	0x37d00d01
 8020b20:	bab60b61 	.word	0xbab60b61
 8020b24:	3d2aaaab 	.word	0x3d2aaaab
 8020b28:	3f480000 	.word	0x3f480000

08020b2c <__kernel_sinf>:
 8020b2c:	ee10 3a10 	vmov	r3, s0
 8020b30:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8020b34:	f1b3 5f48 	cmp.w	r3, #838860800	@ 0x32000000
 8020b38:	d204      	bcs.n	8020b44 <__kernel_sinf+0x18>
 8020b3a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8020b3e:	ee17 3a90 	vmov	r3, s15
 8020b42:	b35b      	cbz	r3, 8020b9c <__kernel_sinf+0x70>
 8020b44:	ee20 7a00 	vmul.f32	s14, s0, s0
 8020b48:	eddf 7a15 	vldr	s15, [pc, #84]	@ 8020ba0 <__kernel_sinf+0x74>
 8020b4c:	ed9f 6a15 	vldr	s12, [pc, #84]	@ 8020ba4 <__kernel_sinf+0x78>
 8020b50:	eea7 6a27 	vfma.f32	s12, s14, s15
 8020b54:	eddf 7a14 	vldr	s15, [pc, #80]	@ 8020ba8 <__kernel_sinf+0x7c>
 8020b58:	eee6 7a07 	vfma.f32	s15, s12, s14
 8020b5c:	ed9f 6a13 	vldr	s12, [pc, #76]	@ 8020bac <__kernel_sinf+0x80>
 8020b60:	eea7 6a87 	vfma.f32	s12, s15, s14
 8020b64:	eddf 7a12 	vldr	s15, [pc, #72]	@ 8020bb0 <__kernel_sinf+0x84>
 8020b68:	ee60 6a07 	vmul.f32	s13, s0, s14
 8020b6c:	eee6 7a07 	vfma.f32	s15, s12, s14
 8020b70:	b930      	cbnz	r0, 8020b80 <__kernel_sinf+0x54>
 8020b72:	ed9f 6a10 	vldr	s12, [pc, #64]	@ 8020bb4 <__kernel_sinf+0x88>
 8020b76:	eea7 6a27 	vfma.f32	s12, s14, s15
 8020b7a:	eea6 0a26 	vfma.f32	s0, s12, s13
 8020b7e:	4770      	bx	lr
 8020b80:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 8020b84:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 8020b88:	eee0 7a86 	vfma.f32	s15, s1, s12
 8020b8c:	eed7 0a87 	vfnms.f32	s1, s15, s14
 8020b90:	eddf 7a09 	vldr	s15, [pc, #36]	@ 8020bb8 <__kernel_sinf+0x8c>
 8020b94:	eee6 0aa7 	vfma.f32	s1, s13, s15
 8020b98:	ee30 0a60 	vsub.f32	s0, s0, s1
 8020b9c:	4770      	bx	lr
 8020b9e:	bf00      	nop
 8020ba0:	2f2ec9d3 	.word	0x2f2ec9d3
 8020ba4:	b2d72f34 	.word	0xb2d72f34
 8020ba8:	3638ef1b 	.word	0x3638ef1b
 8020bac:	b9500d01 	.word	0xb9500d01
 8020bb0:	3c088889 	.word	0x3c088889
 8020bb4:	be2aaaab 	.word	0xbe2aaaab
 8020bb8:	3e2aaaab 	.word	0x3e2aaaab

08020bbc <__ieee754_atan2f>:
 8020bbc:	ee10 2a90 	vmov	r2, s1
 8020bc0:	f022 4100 	bic.w	r1, r2, #2147483648	@ 0x80000000
 8020bc4:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8020bc8:	b510      	push	{r4, lr}
 8020bca:	eef0 7a40 	vmov.f32	s15, s0
 8020bce:	d806      	bhi.n	8020bde <__ieee754_atan2f+0x22>
 8020bd0:	ee10 0a10 	vmov	r0, s0
 8020bd4:	f020 4300 	bic.w	r3, r0, #2147483648	@ 0x80000000
 8020bd8:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8020bdc:	d904      	bls.n	8020be8 <__ieee754_atan2f+0x2c>
 8020bde:	ee77 7aa0 	vadd.f32	s15, s15, s1
 8020be2:	eeb0 0a67 	vmov.f32	s0, s15
 8020be6:	bd10      	pop	{r4, pc}
 8020be8:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
 8020bec:	d103      	bne.n	8020bf6 <__ieee754_atan2f+0x3a>
 8020bee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020bf2:	f000 b9b3 	b.w	8020f5c <atanf>
 8020bf6:	1794      	asrs	r4, r2, #30
 8020bf8:	f004 0402 	and.w	r4, r4, #2
 8020bfc:	ea44 74d0 	orr.w	r4, r4, r0, lsr #31
 8020c00:	b943      	cbnz	r3, 8020c14 <__ieee754_atan2f+0x58>
 8020c02:	2c02      	cmp	r4, #2
 8020c04:	d05e      	beq.n	8020cc4 <__ieee754_atan2f+0x108>
 8020c06:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 8020cd8 <__ieee754_atan2f+0x11c>
 8020c0a:	2c03      	cmp	r4, #3
 8020c0c:	bf08      	it	eq
 8020c0e:	eef0 7a47 	vmoveq.f32	s15, s14
 8020c12:	e7e6      	b.n	8020be2 <__ieee754_atan2f+0x26>
 8020c14:	b941      	cbnz	r1, 8020c28 <__ieee754_atan2f+0x6c>
 8020c16:	eddf 7a31 	vldr	s15, [pc, #196]	@ 8020cdc <__ieee754_atan2f+0x120>
 8020c1a:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 8020ce0 <__ieee754_atan2f+0x124>
 8020c1e:	2800      	cmp	r0, #0
 8020c20:	bfa8      	it	ge
 8020c22:	eef0 7a47 	vmovge.f32	s15, s14
 8020c26:	e7dc      	b.n	8020be2 <__ieee754_atan2f+0x26>
 8020c28:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 8020c2c:	d110      	bne.n	8020c50 <__ieee754_atan2f+0x94>
 8020c2e:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8020c32:	f104 34ff 	add.w	r4, r4, #4294967295
 8020c36:	d107      	bne.n	8020c48 <__ieee754_atan2f+0x8c>
 8020c38:	2c02      	cmp	r4, #2
 8020c3a:	d846      	bhi.n	8020cca <__ieee754_atan2f+0x10e>
 8020c3c:	4b29      	ldr	r3, [pc, #164]	@ (8020ce4 <__ieee754_atan2f+0x128>)
 8020c3e:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 8020c42:	edd3 7a00 	vldr	s15, [r3]
 8020c46:	e7cc      	b.n	8020be2 <__ieee754_atan2f+0x26>
 8020c48:	2c02      	cmp	r4, #2
 8020c4a:	d841      	bhi.n	8020cd0 <__ieee754_atan2f+0x114>
 8020c4c:	4b26      	ldr	r3, [pc, #152]	@ (8020ce8 <__ieee754_atan2f+0x12c>)
 8020c4e:	e7f6      	b.n	8020c3e <__ieee754_atan2f+0x82>
 8020c50:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8020c54:	d0df      	beq.n	8020c16 <__ieee754_atan2f+0x5a>
 8020c56:	1a5b      	subs	r3, r3, r1
 8020c58:	f1b3 5ff4 	cmp.w	r3, #511705088	@ 0x1e800000
 8020c5c:	ea4f 51e3 	mov.w	r1, r3, asr #23
 8020c60:	da1a      	bge.n	8020c98 <__ieee754_atan2f+0xdc>
 8020c62:	2a00      	cmp	r2, #0
 8020c64:	da01      	bge.n	8020c6a <__ieee754_atan2f+0xae>
 8020c66:	313c      	adds	r1, #60	@ 0x3c
 8020c68:	db19      	blt.n	8020c9e <__ieee754_atan2f+0xe2>
 8020c6a:	ee87 0aa0 	vdiv.f32	s0, s15, s1
 8020c6e:	f000 fa49 	bl	8021104 <fabsf>
 8020c72:	f000 f973 	bl	8020f5c <atanf>
 8020c76:	eef0 7a40 	vmov.f32	s15, s0
 8020c7a:	2c01      	cmp	r4, #1
 8020c7c:	d012      	beq.n	8020ca4 <__ieee754_atan2f+0xe8>
 8020c7e:	2c02      	cmp	r4, #2
 8020c80:	d017      	beq.n	8020cb2 <__ieee754_atan2f+0xf6>
 8020c82:	2c00      	cmp	r4, #0
 8020c84:	d0ad      	beq.n	8020be2 <__ieee754_atan2f+0x26>
 8020c86:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 8020cec <__ieee754_atan2f+0x130>
 8020c8a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8020c8e:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 8020cf0 <__ieee754_atan2f+0x134>
 8020c92:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8020c96:	e7a4      	b.n	8020be2 <__ieee754_atan2f+0x26>
 8020c98:	eddf 7a11 	vldr	s15, [pc, #68]	@ 8020ce0 <__ieee754_atan2f+0x124>
 8020c9c:	e7ed      	b.n	8020c7a <__ieee754_atan2f+0xbe>
 8020c9e:	eddf 7a15 	vldr	s15, [pc, #84]	@ 8020cf4 <__ieee754_atan2f+0x138>
 8020ca2:	e7ea      	b.n	8020c7a <__ieee754_atan2f+0xbe>
 8020ca4:	ee17 3a90 	vmov	r3, s15
 8020ca8:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 8020cac:	ee07 3a90 	vmov	s15, r3
 8020cb0:	e797      	b.n	8020be2 <__ieee754_atan2f+0x26>
 8020cb2:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 8020cec <__ieee754_atan2f+0x130>
 8020cb6:	ee77 7a87 	vadd.f32	s15, s15, s14
 8020cba:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 8020cf0 <__ieee754_atan2f+0x134>
 8020cbe:	ee77 7a67 	vsub.f32	s15, s14, s15
 8020cc2:	e78e      	b.n	8020be2 <__ieee754_atan2f+0x26>
 8020cc4:	eddf 7a0a 	vldr	s15, [pc, #40]	@ 8020cf0 <__ieee754_atan2f+0x134>
 8020cc8:	e78b      	b.n	8020be2 <__ieee754_atan2f+0x26>
 8020cca:	eddf 7a0b 	vldr	s15, [pc, #44]	@ 8020cf8 <__ieee754_atan2f+0x13c>
 8020cce:	e788      	b.n	8020be2 <__ieee754_atan2f+0x26>
 8020cd0:	eddf 7a08 	vldr	s15, [pc, #32]	@ 8020cf4 <__ieee754_atan2f+0x138>
 8020cd4:	e785      	b.n	8020be2 <__ieee754_atan2f+0x26>
 8020cd6:	bf00      	nop
 8020cd8:	c0490fdb 	.word	0xc0490fdb
 8020cdc:	bfc90fdb 	.word	0xbfc90fdb
 8020ce0:	3fc90fdb 	.word	0x3fc90fdb
 8020ce4:	08023ea8 	.word	0x08023ea8
 8020ce8:	08023e9c 	.word	0x08023e9c
 8020cec:	33bbbd2e 	.word	0x33bbbd2e
 8020cf0:	40490fdb 	.word	0x40490fdb
 8020cf4:	00000000 	.word	0x00000000
 8020cf8:	3f490fdb 	.word	0x3f490fdb

08020cfc <__ieee754_rem_pio2f>:
 8020cfc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8020cfe:	ee10 6a10 	vmov	r6, s0
 8020d02:	4b88      	ldr	r3, [pc, #544]	@ (8020f24 <__ieee754_rem_pio2f+0x228>)
 8020d04:	f026 4500 	bic.w	r5, r6, #2147483648	@ 0x80000000
 8020d08:	429d      	cmp	r5, r3
 8020d0a:	b087      	sub	sp, #28
 8020d0c:	4604      	mov	r4, r0
 8020d0e:	d805      	bhi.n	8020d1c <__ieee754_rem_pio2f+0x20>
 8020d10:	2300      	movs	r3, #0
 8020d12:	ed80 0a00 	vstr	s0, [r0]
 8020d16:	6043      	str	r3, [r0, #4]
 8020d18:	2000      	movs	r0, #0
 8020d1a:	e022      	b.n	8020d62 <__ieee754_rem_pio2f+0x66>
 8020d1c:	4b82      	ldr	r3, [pc, #520]	@ (8020f28 <__ieee754_rem_pio2f+0x22c>)
 8020d1e:	429d      	cmp	r5, r3
 8020d20:	d83a      	bhi.n	8020d98 <__ieee754_rem_pio2f+0x9c>
 8020d22:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 8020d26:	2e00      	cmp	r6, #0
 8020d28:	ed9f 7a80 	vldr	s14, [pc, #512]	@ 8020f2c <__ieee754_rem_pio2f+0x230>
 8020d2c:	4a80      	ldr	r2, [pc, #512]	@ (8020f30 <__ieee754_rem_pio2f+0x234>)
 8020d2e:	f023 030f 	bic.w	r3, r3, #15
 8020d32:	dd18      	ble.n	8020d66 <__ieee754_rem_pio2f+0x6a>
 8020d34:	4293      	cmp	r3, r2
 8020d36:	ee70 7a47 	vsub.f32	s15, s0, s14
 8020d3a:	bf09      	itett	eq
 8020d3c:	ed9f 7a7d 	vldreq	s14, [pc, #500]	@ 8020f34 <__ieee754_rem_pio2f+0x238>
 8020d40:	eddf 6a7d 	vldrne	s13, [pc, #500]	@ 8020f38 <__ieee754_rem_pio2f+0x23c>
 8020d44:	eddf 6a7d 	vldreq	s13, [pc, #500]	@ 8020f3c <__ieee754_rem_pio2f+0x240>
 8020d48:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 8020d4c:	ee37 7ae6 	vsub.f32	s14, s15, s13
 8020d50:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8020d54:	ed80 7a00 	vstr	s14, [r0]
 8020d58:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8020d5c:	edc0 7a01 	vstr	s15, [r0, #4]
 8020d60:	2001      	movs	r0, #1
 8020d62:	b007      	add	sp, #28
 8020d64:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8020d66:	4293      	cmp	r3, r2
 8020d68:	ee70 7a07 	vadd.f32	s15, s0, s14
 8020d6c:	bf09      	itett	eq
 8020d6e:	ed9f 7a71 	vldreq	s14, [pc, #452]	@ 8020f34 <__ieee754_rem_pio2f+0x238>
 8020d72:	eddf 6a71 	vldrne	s13, [pc, #452]	@ 8020f38 <__ieee754_rem_pio2f+0x23c>
 8020d76:	eddf 6a71 	vldreq	s13, [pc, #452]	@ 8020f3c <__ieee754_rem_pio2f+0x240>
 8020d7a:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 8020d7e:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8020d82:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8020d86:	ed80 7a00 	vstr	s14, [r0]
 8020d8a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8020d8e:	edc0 7a01 	vstr	s15, [r0, #4]
 8020d92:	f04f 30ff 	mov.w	r0, #4294967295
 8020d96:	e7e4      	b.n	8020d62 <__ieee754_rem_pio2f+0x66>
 8020d98:	4b69      	ldr	r3, [pc, #420]	@ (8020f40 <__ieee754_rem_pio2f+0x244>)
 8020d9a:	429d      	cmp	r5, r3
 8020d9c:	d873      	bhi.n	8020e86 <__ieee754_rem_pio2f+0x18a>
 8020d9e:	f000 f9b1 	bl	8021104 <fabsf>
 8020da2:	ed9f 7a68 	vldr	s14, [pc, #416]	@ 8020f44 <__ieee754_rem_pio2f+0x248>
 8020da6:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8020daa:	eee0 7a07 	vfma.f32	s15, s0, s14
 8020dae:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8020db2:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8020db6:	ee17 0a90 	vmov	r0, s15
 8020dba:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 8020f2c <__ieee754_rem_pio2f+0x230>
 8020dbe:	eea7 0a67 	vfms.f32	s0, s14, s15
 8020dc2:	281f      	cmp	r0, #31
 8020dc4:	eddf 7a5c 	vldr	s15, [pc, #368]	@ 8020f38 <__ieee754_rem_pio2f+0x23c>
 8020dc8:	ee67 7a27 	vmul.f32	s15, s14, s15
 8020dcc:	eeb1 6a47 	vneg.f32	s12, s14
 8020dd0:	ee70 6a67 	vsub.f32	s13, s0, s15
 8020dd4:	ee16 1a90 	vmov	r1, s13
 8020dd8:	dc09      	bgt.n	8020dee <__ieee754_rem_pio2f+0xf2>
 8020dda:	4a5b      	ldr	r2, [pc, #364]	@ (8020f48 <__ieee754_rem_pio2f+0x24c>)
 8020ddc:	1e47      	subs	r7, r0, #1
 8020dde:	f026 4300 	bic.w	r3, r6, #2147483648	@ 0x80000000
 8020de2:	f852 2027 	ldr.w	r2, [r2, r7, lsl #2]
 8020de6:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8020dea:	4293      	cmp	r3, r2
 8020dec:	d107      	bne.n	8020dfe <__ieee754_rem_pio2f+0x102>
 8020dee:	f3c1 52c7 	ubfx	r2, r1, #23, #8
 8020df2:	ebc2 52d5 	rsb	r2, r2, r5, lsr #23
 8020df6:	2a08      	cmp	r2, #8
 8020df8:	ea4f 53e5 	mov.w	r3, r5, asr #23
 8020dfc:	dc14      	bgt.n	8020e28 <__ieee754_rem_pio2f+0x12c>
 8020dfe:	6021      	str	r1, [r4, #0]
 8020e00:	ed94 7a00 	vldr	s14, [r4]
 8020e04:	ee30 0a47 	vsub.f32	s0, s0, s14
 8020e08:	2e00      	cmp	r6, #0
 8020e0a:	ee30 0a67 	vsub.f32	s0, s0, s15
 8020e0e:	ed84 0a01 	vstr	s0, [r4, #4]
 8020e12:	daa6      	bge.n	8020d62 <__ieee754_rem_pio2f+0x66>
 8020e14:	eeb1 7a47 	vneg.f32	s14, s14
 8020e18:	eeb1 0a40 	vneg.f32	s0, s0
 8020e1c:	ed84 7a00 	vstr	s14, [r4]
 8020e20:	ed84 0a01 	vstr	s0, [r4, #4]
 8020e24:	4240      	negs	r0, r0
 8020e26:	e79c      	b.n	8020d62 <__ieee754_rem_pio2f+0x66>
 8020e28:	eddf 5a42 	vldr	s11, [pc, #264]	@ 8020f34 <__ieee754_rem_pio2f+0x238>
 8020e2c:	eef0 6a40 	vmov.f32	s13, s0
 8020e30:	eee6 6a25 	vfma.f32	s13, s12, s11
 8020e34:	ee70 7a66 	vsub.f32	s15, s0, s13
 8020e38:	eee6 7a25 	vfma.f32	s15, s12, s11
 8020e3c:	eddf 5a3f 	vldr	s11, [pc, #252]	@ 8020f3c <__ieee754_rem_pio2f+0x240>
 8020e40:	eed7 7a25 	vfnms.f32	s15, s14, s11
 8020e44:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8020e48:	ee15 2a90 	vmov	r2, s11
 8020e4c:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8020e50:	1a5b      	subs	r3, r3, r1
 8020e52:	2b19      	cmp	r3, #25
 8020e54:	dc04      	bgt.n	8020e60 <__ieee754_rem_pio2f+0x164>
 8020e56:	edc4 5a00 	vstr	s11, [r4]
 8020e5a:	eeb0 0a66 	vmov.f32	s0, s13
 8020e5e:	e7cf      	b.n	8020e00 <__ieee754_rem_pio2f+0x104>
 8020e60:	eddf 5a3a 	vldr	s11, [pc, #232]	@ 8020f4c <__ieee754_rem_pio2f+0x250>
 8020e64:	eeb0 0a66 	vmov.f32	s0, s13
 8020e68:	eea6 0a25 	vfma.f32	s0, s12, s11
 8020e6c:	ee76 7ac0 	vsub.f32	s15, s13, s0
 8020e70:	eddf 6a37 	vldr	s13, [pc, #220]	@ 8020f50 <__ieee754_rem_pio2f+0x254>
 8020e74:	eee6 7a25 	vfma.f32	s15, s12, s11
 8020e78:	eed7 7a26 	vfnms.f32	s15, s14, s13
 8020e7c:	ee30 7a67 	vsub.f32	s14, s0, s15
 8020e80:	ed84 7a00 	vstr	s14, [r4]
 8020e84:	e7bc      	b.n	8020e00 <__ieee754_rem_pio2f+0x104>
 8020e86:	f1b5 4fff 	cmp.w	r5, #2139095040	@ 0x7f800000
 8020e8a:	d306      	bcc.n	8020e9a <__ieee754_rem_pio2f+0x19e>
 8020e8c:	ee70 7a40 	vsub.f32	s15, s0, s0
 8020e90:	edc0 7a01 	vstr	s15, [r0, #4]
 8020e94:	edc0 7a00 	vstr	s15, [r0]
 8020e98:	e73e      	b.n	8020d18 <__ieee754_rem_pio2f+0x1c>
 8020e9a:	15ea      	asrs	r2, r5, #23
 8020e9c:	3a86      	subs	r2, #134	@ 0x86
 8020e9e:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 8020ea2:	ee07 3a90 	vmov	s15, r3
 8020ea6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8020eaa:	eddf 6a2a 	vldr	s13, [pc, #168]	@ 8020f54 <__ieee754_rem_pio2f+0x258>
 8020eae:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8020eb2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8020eb6:	ed8d 7a03 	vstr	s14, [sp, #12]
 8020eba:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8020ebe:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8020ec2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8020ec6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8020eca:	ed8d 7a04 	vstr	s14, [sp, #16]
 8020ece:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8020ed2:	eef5 7a40 	vcmp.f32	s15, #0.0
 8020ed6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020eda:	edcd 7a05 	vstr	s15, [sp, #20]
 8020ede:	d11e      	bne.n	8020f1e <__ieee754_rem_pio2f+0x222>
 8020ee0:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8020ee4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020ee8:	bf0c      	ite	eq
 8020eea:	2301      	moveq	r3, #1
 8020eec:	2302      	movne	r3, #2
 8020eee:	491a      	ldr	r1, [pc, #104]	@ (8020f58 <__ieee754_rem_pio2f+0x25c>)
 8020ef0:	9101      	str	r1, [sp, #4]
 8020ef2:	2102      	movs	r1, #2
 8020ef4:	9100      	str	r1, [sp, #0]
 8020ef6:	a803      	add	r0, sp, #12
 8020ef8:	4621      	mov	r1, r4
 8020efa:	f000 f90b 	bl	8021114 <__kernel_rem_pio2f>
 8020efe:	2e00      	cmp	r6, #0
 8020f00:	f6bf af2f 	bge.w	8020d62 <__ieee754_rem_pio2f+0x66>
 8020f04:	edd4 7a00 	vldr	s15, [r4]
 8020f08:	eef1 7a67 	vneg.f32	s15, s15
 8020f0c:	edc4 7a00 	vstr	s15, [r4]
 8020f10:	edd4 7a01 	vldr	s15, [r4, #4]
 8020f14:	eef1 7a67 	vneg.f32	s15, s15
 8020f18:	edc4 7a01 	vstr	s15, [r4, #4]
 8020f1c:	e782      	b.n	8020e24 <__ieee754_rem_pio2f+0x128>
 8020f1e:	2303      	movs	r3, #3
 8020f20:	e7e5      	b.n	8020eee <__ieee754_rem_pio2f+0x1f2>
 8020f22:	bf00      	nop
 8020f24:	3f490fd8 	.word	0x3f490fd8
 8020f28:	4016cbe3 	.word	0x4016cbe3
 8020f2c:	3fc90f80 	.word	0x3fc90f80
 8020f30:	3fc90fd0 	.word	0x3fc90fd0
 8020f34:	37354400 	.word	0x37354400
 8020f38:	37354443 	.word	0x37354443
 8020f3c:	2e85a308 	.word	0x2e85a308
 8020f40:	43490f80 	.word	0x43490f80
 8020f44:	3f22f984 	.word	0x3f22f984
 8020f48:	08023eb4 	.word	0x08023eb4
 8020f4c:	2e85a300 	.word	0x2e85a300
 8020f50:	248d3132 	.word	0x248d3132
 8020f54:	43800000 	.word	0x43800000
 8020f58:	08023f34 	.word	0x08023f34

08020f5c <atanf>:
 8020f5c:	b538      	push	{r3, r4, r5, lr}
 8020f5e:	ee10 5a10 	vmov	r5, s0
 8020f62:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
 8020f66:	f1b4 4fa1 	cmp.w	r4, #1350565888	@ 0x50800000
 8020f6a:	eef0 7a40 	vmov.f32	s15, s0
 8020f6e:	d310      	bcc.n	8020f92 <atanf+0x36>
 8020f70:	f1b4 4fff 	cmp.w	r4, #2139095040	@ 0x7f800000
 8020f74:	d904      	bls.n	8020f80 <atanf+0x24>
 8020f76:	ee70 7a00 	vadd.f32	s15, s0, s0
 8020f7a:	eeb0 0a67 	vmov.f32	s0, s15
 8020f7e:	bd38      	pop	{r3, r4, r5, pc}
 8020f80:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 80210b8 <atanf+0x15c>
 8020f84:	ed9f 7a4d 	vldr	s14, [pc, #308]	@ 80210bc <atanf+0x160>
 8020f88:	2d00      	cmp	r5, #0
 8020f8a:	bfc8      	it	gt
 8020f8c:	eef0 7a47 	vmovgt.f32	s15, s14
 8020f90:	e7f3      	b.n	8020f7a <atanf+0x1e>
 8020f92:	4b4b      	ldr	r3, [pc, #300]	@ (80210c0 <atanf+0x164>)
 8020f94:	429c      	cmp	r4, r3
 8020f96:	d810      	bhi.n	8020fba <atanf+0x5e>
 8020f98:	f1b4 5f44 	cmp.w	r4, #822083584	@ 0x31000000
 8020f9c:	d20a      	bcs.n	8020fb4 <atanf+0x58>
 8020f9e:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 80210c4 <atanf+0x168>
 8020fa2:	ee30 7a07 	vadd.f32	s14, s0, s14
 8020fa6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8020faa:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8020fae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020fb2:	dce2      	bgt.n	8020f7a <atanf+0x1e>
 8020fb4:	f04f 33ff 	mov.w	r3, #4294967295
 8020fb8:	e013      	b.n	8020fe2 <atanf+0x86>
 8020fba:	f000 f8a3 	bl	8021104 <fabsf>
 8020fbe:	4b42      	ldr	r3, [pc, #264]	@ (80210c8 <atanf+0x16c>)
 8020fc0:	429c      	cmp	r4, r3
 8020fc2:	d84f      	bhi.n	8021064 <atanf+0x108>
 8020fc4:	f5a3 03d0 	sub.w	r3, r3, #6815744	@ 0x680000
 8020fc8:	429c      	cmp	r4, r3
 8020fca:	d841      	bhi.n	8021050 <atanf+0xf4>
 8020fcc:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
 8020fd0:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 8020fd4:	eea0 7a27 	vfma.f32	s14, s0, s15
 8020fd8:	2300      	movs	r3, #0
 8020fda:	ee30 0a27 	vadd.f32	s0, s0, s15
 8020fde:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020fe2:	1c5a      	adds	r2, r3, #1
 8020fe4:	ee27 6aa7 	vmul.f32	s12, s15, s15
 8020fe8:	ed9f 7a38 	vldr	s14, [pc, #224]	@ 80210cc <atanf+0x170>
 8020fec:	eddf 5a38 	vldr	s11, [pc, #224]	@ 80210d0 <atanf+0x174>
 8020ff0:	ed9f 5a38 	vldr	s10, [pc, #224]	@ 80210d4 <atanf+0x178>
 8020ff4:	ee66 6a06 	vmul.f32	s13, s12, s12
 8020ff8:	eee6 5a87 	vfma.f32	s11, s13, s14
 8020ffc:	ed9f 7a36 	vldr	s14, [pc, #216]	@ 80210d8 <atanf+0x17c>
 8021000:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8021004:	eddf 5a35 	vldr	s11, [pc, #212]	@ 80210dc <atanf+0x180>
 8021008:	eee7 5a26 	vfma.f32	s11, s14, s13
 802100c:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 80210e0 <atanf+0x184>
 8021010:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8021014:	eddf 5a33 	vldr	s11, [pc, #204]	@ 80210e4 <atanf+0x188>
 8021018:	eee7 5a26 	vfma.f32	s11, s14, s13
 802101c:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 80210e8 <atanf+0x18c>
 8021020:	eea6 5a87 	vfma.f32	s10, s13, s14
 8021024:	ed9f 7a31 	vldr	s14, [pc, #196]	@ 80210ec <atanf+0x190>
 8021028:	eea5 7a26 	vfma.f32	s14, s10, s13
 802102c:	ed9f 5a30 	vldr	s10, [pc, #192]	@ 80210f0 <atanf+0x194>
 8021030:	eea7 5a26 	vfma.f32	s10, s14, s13
 8021034:	ed9f 7a2f 	vldr	s14, [pc, #188]	@ 80210f4 <atanf+0x198>
 8021038:	eea5 7a26 	vfma.f32	s14, s10, s13
 802103c:	ee27 7a26 	vmul.f32	s14, s14, s13
 8021040:	eea5 7a86 	vfma.f32	s14, s11, s12
 8021044:	ee27 7a87 	vmul.f32	s14, s15, s14
 8021048:	d121      	bne.n	802108e <atanf+0x132>
 802104a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802104e:	e794      	b.n	8020f7a <atanf+0x1e>
 8021050:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8021054:	ee30 7a67 	vsub.f32	s14, s0, s15
 8021058:	ee30 0a27 	vadd.f32	s0, s0, s15
 802105c:	2301      	movs	r3, #1
 802105e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021062:	e7be      	b.n	8020fe2 <atanf+0x86>
 8021064:	4b24      	ldr	r3, [pc, #144]	@ (80210f8 <atanf+0x19c>)
 8021066:	429c      	cmp	r4, r3
 8021068:	d80b      	bhi.n	8021082 <atanf+0x126>
 802106a:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
 802106e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8021072:	eea0 7a27 	vfma.f32	s14, s0, s15
 8021076:	2302      	movs	r3, #2
 8021078:	ee70 6a67 	vsub.f32	s13, s0, s15
 802107c:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8021080:	e7af      	b.n	8020fe2 <atanf+0x86>
 8021082:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
 8021086:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802108a:	2303      	movs	r3, #3
 802108c:	e7a9      	b.n	8020fe2 <atanf+0x86>
 802108e:	4a1b      	ldr	r2, [pc, #108]	@ (80210fc <atanf+0x1a0>)
 8021090:	491b      	ldr	r1, [pc, #108]	@ (8021100 <atanf+0x1a4>)
 8021092:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 8021096:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 802109a:	edd3 6a00 	vldr	s13, [r3]
 802109e:	ee37 7a66 	vsub.f32	s14, s14, s13
 80210a2:	2d00      	cmp	r5, #0
 80210a4:	ee37 7a67 	vsub.f32	s14, s14, s15
 80210a8:	edd2 7a00 	vldr	s15, [r2]
 80210ac:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80210b0:	bfb8      	it	lt
 80210b2:	eef1 7a67 	vneglt.f32	s15, s15
 80210b6:	e760      	b.n	8020f7a <atanf+0x1e>
 80210b8:	bfc90fdb 	.word	0xbfc90fdb
 80210bc:	3fc90fdb 	.word	0x3fc90fdb
 80210c0:	3edfffff 	.word	0x3edfffff
 80210c4:	7149f2ca 	.word	0x7149f2ca
 80210c8:	3f97ffff 	.word	0x3f97ffff
 80210cc:	3c8569d7 	.word	0x3c8569d7
 80210d0:	3d4bda59 	.word	0x3d4bda59
 80210d4:	bd6ef16b 	.word	0xbd6ef16b
 80210d8:	3d886b35 	.word	0x3d886b35
 80210dc:	3dba2e6e 	.word	0x3dba2e6e
 80210e0:	3e124925 	.word	0x3e124925
 80210e4:	3eaaaaab 	.word	0x3eaaaaab
 80210e8:	bd15a221 	.word	0xbd15a221
 80210ec:	bd9d8795 	.word	0xbd9d8795
 80210f0:	bde38e38 	.word	0xbde38e38
 80210f4:	be4ccccd 	.word	0xbe4ccccd
 80210f8:	401bffff 	.word	0x401bffff
 80210fc:	0802425c 	.word	0x0802425c
 8021100:	0802424c 	.word	0x0802424c

08021104 <fabsf>:
 8021104:	ee10 3a10 	vmov	r3, s0
 8021108:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 802110c:	ee00 3a10 	vmov	s0, r3
 8021110:	4770      	bx	lr
	...

08021114 <__kernel_rem_pio2f>:
 8021114:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021118:	ed2d 8b04 	vpush	{d8-d9}
 802111c:	b0d9      	sub	sp, #356	@ 0x164
 802111e:	4690      	mov	r8, r2
 8021120:	9001      	str	r0, [sp, #4]
 8021122:	4ab6      	ldr	r2, [pc, #728]	@ (80213fc <__kernel_rem_pio2f+0x2e8>)
 8021124:	9866      	ldr	r0, [sp, #408]	@ 0x198
 8021126:	f118 0f04 	cmn.w	r8, #4
 802112a:	f852 a020 	ldr.w	sl, [r2, r0, lsl #2]
 802112e:	460f      	mov	r7, r1
 8021130:	f103 3bff 	add.w	fp, r3, #4294967295
 8021134:	db26      	blt.n	8021184 <__kernel_rem_pio2f+0x70>
 8021136:	f1b8 0203 	subs.w	r2, r8, #3
 802113a:	bf48      	it	mi
 802113c:	f108 0204 	addmi.w	r2, r8, #4
 8021140:	10d2      	asrs	r2, r2, #3
 8021142:	1c55      	adds	r5, r2, #1
 8021144:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 8021146:	ed9f 7ab1 	vldr	s14, [pc, #708]	@ 802140c <__kernel_rem_pio2f+0x2f8>
 802114a:	00e8      	lsls	r0, r5, #3
 802114c:	eba2 060b 	sub.w	r6, r2, fp
 8021150:	9002      	str	r0, [sp, #8]
 8021152:	eba8 05c5 	sub.w	r5, r8, r5, lsl #3
 8021156:	eb0a 0c0b 	add.w	ip, sl, fp
 802115a:	ac1c      	add	r4, sp, #112	@ 0x70
 802115c:	eb01 0e86 	add.w	lr, r1, r6, lsl #2
 8021160:	2000      	movs	r0, #0
 8021162:	4560      	cmp	r0, ip
 8021164:	dd10      	ble.n	8021188 <__kernel_rem_pio2f+0x74>
 8021166:	a91c      	add	r1, sp, #112	@ 0x70
 8021168:	eb01 0083 	add.w	r0, r1, r3, lsl #2
 802116c:	f50d 7988 	add.w	r9, sp, #272	@ 0x110
 8021170:	2600      	movs	r6, #0
 8021172:	4556      	cmp	r6, sl
 8021174:	dc24      	bgt.n	80211c0 <__kernel_rem_pio2f+0xac>
 8021176:	f8dd e004 	ldr.w	lr, [sp, #4]
 802117a:	eddf 7aa4 	vldr	s15, [pc, #656]	@ 802140c <__kernel_rem_pio2f+0x2f8>
 802117e:	4684      	mov	ip, r0
 8021180:	2400      	movs	r4, #0
 8021182:	e016      	b.n	80211b2 <__kernel_rem_pio2f+0x9e>
 8021184:	2200      	movs	r2, #0
 8021186:	e7dc      	b.n	8021142 <__kernel_rem_pio2f+0x2e>
 8021188:	42c6      	cmn	r6, r0
 802118a:	bf5d      	ittte	pl
 802118c:	f85e 1020 	ldrpl.w	r1, [lr, r0, lsl #2]
 8021190:	ee07 1a90 	vmovpl	s15, r1
 8021194:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 8021198:	eef0 7a47 	vmovmi.f32	s15, s14
 802119c:	ece4 7a01 	vstmia	r4!, {s15}
 80211a0:	3001      	adds	r0, #1
 80211a2:	e7de      	b.n	8021162 <__kernel_rem_pio2f+0x4e>
 80211a4:	ecfe 6a01 	vldmia	lr!, {s13}
 80211a8:	ed3c 7a01 	vldmdb	ip!, {s14}
 80211ac:	eee6 7a87 	vfma.f32	s15, s13, s14
 80211b0:	3401      	adds	r4, #1
 80211b2:	455c      	cmp	r4, fp
 80211b4:	ddf6      	ble.n	80211a4 <__kernel_rem_pio2f+0x90>
 80211b6:	ece9 7a01 	vstmia	r9!, {s15}
 80211ba:	3601      	adds	r6, #1
 80211bc:	3004      	adds	r0, #4
 80211be:	e7d8      	b.n	8021172 <__kernel_rem_pio2f+0x5e>
 80211c0:	a908      	add	r1, sp, #32
 80211c2:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 80211c6:	9104      	str	r1, [sp, #16]
 80211c8:	9967      	ldr	r1, [sp, #412]	@ 0x19c
 80211ca:	eddf 8a8f 	vldr	s17, [pc, #572]	@ 8021408 <__kernel_rem_pio2f+0x2f4>
 80211ce:	ed9f 9a8d 	vldr	s18, [pc, #564]	@ 8021404 <__kernel_rem_pio2f+0x2f0>
 80211d2:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 80211d6:	9203      	str	r2, [sp, #12]
 80211d8:	4654      	mov	r4, sl
 80211da:	00a2      	lsls	r2, r4, #2
 80211dc:	9205      	str	r2, [sp, #20]
 80211de:	aa58      	add	r2, sp, #352	@ 0x160
 80211e0:	eb02 0284 	add.w	r2, r2, r4, lsl #2
 80211e4:	ed12 0a14 	vldr	s0, [r2, #-80]	@ 0xffffffb0
 80211e8:	a944      	add	r1, sp, #272	@ 0x110
 80211ea:	aa08      	add	r2, sp, #32
 80211ec:	eb01 0084 	add.w	r0, r1, r4, lsl #2
 80211f0:	4694      	mov	ip, r2
 80211f2:	4626      	mov	r6, r4
 80211f4:	2e00      	cmp	r6, #0
 80211f6:	dc4c      	bgt.n	8021292 <__kernel_rem_pio2f+0x17e>
 80211f8:	4628      	mov	r0, r5
 80211fa:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80211fe:	f000 f9f1 	bl	80215e4 <scalbnf>
 8021202:	eeb0 8a40 	vmov.f32	s16, s0
 8021206:	eeb4 0a00 	vmov.f32	s0, #64	@ 0x3e000000  0.125
 802120a:	ee28 0a00 	vmul.f32	s0, s16, s0
 802120e:	f000 fa4f 	bl	80216b0 <floorf>
 8021212:	eef2 7a00 	vmov.f32	s15, #32	@ 0x41000000  8.0
 8021216:	eea0 8a67 	vfms.f32	s16, s0, s15
 802121a:	2d00      	cmp	r5, #0
 802121c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8021220:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8021224:	ee17 9a90 	vmov	r9, s15
 8021228:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802122c:	ee38 8a67 	vsub.f32	s16, s16, s15
 8021230:	dd41      	ble.n	80212b6 <__kernel_rem_pio2f+0x1a2>
 8021232:	f104 3cff 	add.w	ip, r4, #4294967295
 8021236:	a908      	add	r1, sp, #32
 8021238:	f1c5 0e08 	rsb	lr, r5, #8
 802123c:	f851 602c 	ldr.w	r6, [r1, ip, lsl #2]
 8021240:	fa46 f00e 	asr.w	r0, r6, lr
 8021244:	4481      	add	r9, r0
 8021246:	fa00 f00e 	lsl.w	r0, r0, lr
 802124a:	1a36      	subs	r6, r6, r0
 802124c:	f1c5 0007 	rsb	r0, r5, #7
 8021250:	f841 602c 	str.w	r6, [r1, ip, lsl #2]
 8021254:	4106      	asrs	r6, r0
 8021256:	2e00      	cmp	r6, #0
 8021258:	dd3c      	ble.n	80212d4 <__kernel_rem_pio2f+0x1c0>
 802125a:	f04f 0e00 	mov.w	lr, #0
 802125e:	f109 0901 	add.w	r9, r9, #1
 8021262:	4670      	mov	r0, lr
 8021264:	4574      	cmp	r4, lr
 8021266:	dc68      	bgt.n	802133a <__kernel_rem_pio2f+0x226>
 8021268:	2d00      	cmp	r5, #0
 802126a:	dd03      	ble.n	8021274 <__kernel_rem_pio2f+0x160>
 802126c:	2d01      	cmp	r5, #1
 802126e:	d074      	beq.n	802135a <__kernel_rem_pio2f+0x246>
 8021270:	2d02      	cmp	r5, #2
 8021272:	d07d      	beq.n	8021370 <__kernel_rem_pio2f+0x25c>
 8021274:	2e02      	cmp	r6, #2
 8021276:	d12d      	bne.n	80212d4 <__kernel_rem_pio2f+0x1c0>
 8021278:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 802127c:	ee30 8a48 	vsub.f32	s16, s0, s16
 8021280:	b340      	cbz	r0, 80212d4 <__kernel_rem_pio2f+0x1c0>
 8021282:	4628      	mov	r0, r5
 8021284:	9306      	str	r3, [sp, #24]
 8021286:	f000 f9ad 	bl	80215e4 <scalbnf>
 802128a:	9b06      	ldr	r3, [sp, #24]
 802128c:	ee38 8a40 	vsub.f32	s16, s16, s0
 8021290:	e020      	b.n	80212d4 <__kernel_rem_pio2f+0x1c0>
 8021292:	ee60 7a28 	vmul.f32	s15, s0, s17
 8021296:	3e01      	subs	r6, #1
 8021298:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802129c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80212a0:	eea7 0ac9 	vfms.f32	s0, s15, s18
 80212a4:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80212a8:	ecac 0a01 	vstmia	ip!, {s0}
 80212ac:	ed30 0a01 	vldmdb	r0!, {s0}
 80212b0:	ee37 0a80 	vadd.f32	s0, s15, s0
 80212b4:	e79e      	b.n	80211f4 <__kernel_rem_pio2f+0xe0>
 80212b6:	d105      	bne.n	80212c4 <__kernel_rem_pio2f+0x1b0>
 80212b8:	1e60      	subs	r0, r4, #1
 80212ba:	a908      	add	r1, sp, #32
 80212bc:	f851 6020 	ldr.w	r6, [r1, r0, lsl #2]
 80212c0:	11f6      	asrs	r6, r6, #7
 80212c2:	e7c8      	b.n	8021256 <__kernel_rem_pio2f+0x142>
 80212c4:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 80212c8:	eeb4 8ae7 	vcmpe.f32	s16, s15
 80212cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80212d0:	da31      	bge.n	8021336 <__kernel_rem_pio2f+0x222>
 80212d2:	2600      	movs	r6, #0
 80212d4:	eeb5 8a40 	vcmp.f32	s16, #0.0
 80212d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80212dc:	f040 8098 	bne.w	8021410 <__kernel_rem_pio2f+0x2fc>
 80212e0:	1e60      	subs	r0, r4, #1
 80212e2:	2200      	movs	r2, #0
 80212e4:	4550      	cmp	r0, sl
 80212e6:	da4b      	bge.n	8021380 <__kernel_rem_pio2f+0x26c>
 80212e8:	2a00      	cmp	r2, #0
 80212ea:	d065      	beq.n	80213b8 <__kernel_rem_pio2f+0x2a4>
 80212ec:	3c01      	subs	r4, #1
 80212ee:	ab08      	add	r3, sp, #32
 80212f0:	3d08      	subs	r5, #8
 80212f2:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 80212f6:	2b00      	cmp	r3, #0
 80212f8:	d0f8      	beq.n	80212ec <__kernel_rem_pio2f+0x1d8>
 80212fa:	4628      	mov	r0, r5
 80212fc:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8021300:	f000 f970 	bl	80215e4 <scalbnf>
 8021304:	1c63      	adds	r3, r4, #1
 8021306:	aa44      	add	r2, sp, #272	@ 0x110
 8021308:	ed9f 7a3f 	vldr	s14, [pc, #252]	@ 8021408 <__kernel_rem_pio2f+0x2f4>
 802130c:	0099      	lsls	r1, r3, #2
 802130e:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 8021312:	4623      	mov	r3, r4
 8021314:	2b00      	cmp	r3, #0
 8021316:	f280 80a9 	bge.w	802146c <__kernel_rem_pio2f+0x358>
 802131a:	4623      	mov	r3, r4
 802131c:	2b00      	cmp	r3, #0
 802131e:	f2c0 80c7 	blt.w	80214b0 <__kernel_rem_pio2f+0x39c>
 8021322:	aa44      	add	r2, sp, #272	@ 0x110
 8021324:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8021328:	f8df c0d4 	ldr.w	ip, [pc, #212]	@ 8021400 <__kernel_rem_pio2f+0x2ec>
 802132c:	eddf 7a37 	vldr	s15, [pc, #220]	@ 802140c <__kernel_rem_pio2f+0x2f8>
 8021330:	2000      	movs	r0, #0
 8021332:	1ae2      	subs	r2, r4, r3
 8021334:	e0b1      	b.n	802149a <__kernel_rem_pio2f+0x386>
 8021336:	2602      	movs	r6, #2
 8021338:	e78f      	b.n	802125a <__kernel_rem_pio2f+0x146>
 802133a:	f852 1b04 	ldr.w	r1, [r2], #4
 802133e:	b948      	cbnz	r0, 8021354 <__kernel_rem_pio2f+0x240>
 8021340:	b121      	cbz	r1, 802134c <__kernel_rem_pio2f+0x238>
 8021342:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 8021346:	f842 1c04 	str.w	r1, [r2, #-4]
 802134a:	2101      	movs	r1, #1
 802134c:	f10e 0e01 	add.w	lr, lr, #1
 8021350:	4608      	mov	r0, r1
 8021352:	e787      	b.n	8021264 <__kernel_rem_pio2f+0x150>
 8021354:	f1c1 01ff 	rsb	r1, r1, #255	@ 0xff
 8021358:	e7f5      	b.n	8021346 <__kernel_rem_pio2f+0x232>
 802135a:	f104 3cff 	add.w	ip, r4, #4294967295
 802135e:	aa08      	add	r2, sp, #32
 8021360:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 8021364:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 8021368:	a908      	add	r1, sp, #32
 802136a:	f841 202c 	str.w	r2, [r1, ip, lsl #2]
 802136e:	e781      	b.n	8021274 <__kernel_rem_pio2f+0x160>
 8021370:	f104 3cff 	add.w	ip, r4, #4294967295
 8021374:	aa08      	add	r2, sp, #32
 8021376:	f852 202c 	ldr.w	r2, [r2, ip, lsl #2]
 802137a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 802137e:	e7f3      	b.n	8021368 <__kernel_rem_pio2f+0x254>
 8021380:	a908      	add	r1, sp, #32
 8021382:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 8021386:	3801      	subs	r0, #1
 8021388:	430a      	orrs	r2, r1
 802138a:	e7ab      	b.n	80212e4 <__kernel_rem_pio2f+0x1d0>
 802138c:	3201      	adds	r2, #1
 802138e:	f850 6d04 	ldr.w	r6, [r0, #-4]!
 8021392:	2e00      	cmp	r6, #0
 8021394:	d0fa      	beq.n	802138c <__kernel_rem_pio2f+0x278>
 8021396:	9905      	ldr	r1, [sp, #20]
 8021398:	f501 71b0 	add.w	r1, r1, #352	@ 0x160
 802139c:	eb0d 0001 	add.w	r0, sp, r1
 80213a0:	18e6      	adds	r6, r4, r3
 80213a2:	a91c      	add	r1, sp, #112	@ 0x70
 80213a4:	f104 0c01 	add.w	ip, r4, #1
 80213a8:	384c      	subs	r0, #76	@ 0x4c
 80213aa:	eb01 0686 	add.w	r6, r1, r6, lsl #2
 80213ae:	4422      	add	r2, r4
 80213b0:	4562      	cmp	r2, ip
 80213b2:	da04      	bge.n	80213be <__kernel_rem_pio2f+0x2aa>
 80213b4:	4614      	mov	r4, r2
 80213b6:	e710      	b.n	80211da <__kernel_rem_pio2f+0xc6>
 80213b8:	9804      	ldr	r0, [sp, #16]
 80213ba:	2201      	movs	r2, #1
 80213bc:	e7e7      	b.n	802138e <__kernel_rem_pio2f+0x27a>
 80213be:	9903      	ldr	r1, [sp, #12]
 80213c0:	f8dd e004 	ldr.w	lr, [sp, #4]
 80213c4:	f851 102c 	ldr.w	r1, [r1, ip, lsl #2]
 80213c8:	9105      	str	r1, [sp, #20]
 80213ca:	ee07 1a90 	vmov	s15, r1
 80213ce:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80213d2:	2400      	movs	r4, #0
 80213d4:	ece6 7a01 	vstmia	r6!, {s15}
 80213d8:	eddf 7a0c 	vldr	s15, [pc, #48]	@ 802140c <__kernel_rem_pio2f+0x2f8>
 80213dc:	46b1      	mov	r9, r6
 80213de:	455c      	cmp	r4, fp
 80213e0:	dd04      	ble.n	80213ec <__kernel_rem_pio2f+0x2d8>
 80213e2:	ece0 7a01 	vstmia	r0!, {s15}
 80213e6:	f10c 0c01 	add.w	ip, ip, #1
 80213ea:	e7e1      	b.n	80213b0 <__kernel_rem_pio2f+0x29c>
 80213ec:	ecfe 6a01 	vldmia	lr!, {s13}
 80213f0:	ed39 7a01 	vldmdb	r9!, {s14}
 80213f4:	3401      	adds	r4, #1
 80213f6:	eee6 7a87 	vfma.f32	s15, s13, s14
 80213fa:	e7f0      	b.n	80213de <__kernel_rem_pio2f+0x2ca>
 80213fc:	08024298 	.word	0x08024298
 8021400:	0802426c 	.word	0x0802426c
 8021404:	43800000 	.word	0x43800000
 8021408:	3b800000 	.word	0x3b800000
 802140c:	00000000 	.word	0x00000000
 8021410:	9b02      	ldr	r3, [sp, #8]
 8021412:	eeb0 0a48 	vmov.f32	s0, s16
 8021416:	eba3 0008 	sub.w	r0, r3, r8
 802141a:	f000 f8e3 	bl	80215e4 <scalbnf>
 802141e:	ed1f 7a07 	vldr	s14, [pc, #-28]	@ 8021404 <__kernel_rem_pio2f+0x2f0>
 8021422:	eeb4 0ac7 	vcmpe.f32	s0, s14
 8021426:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802142a:	db19      	blt.n	8021460 <__kernel_rem_pio2f+0x34c>
 802142c:	ed5f 7a0a 	vldr	s15, [pc, #-40]	@ 8021408 <__kernel_rem_pio2f+0x2f4>
 8021430:	ee60 7a27 	vmul.f32	s15, s0, s15
 8021434:	aa08      	add	r2, sp, #32
 8021436:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802143a:	3508      	adds	r5, #8
 802143c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8021440:	eea7 0ac7 	vfms.f32	s0, s15, s14
 8021444:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8021448:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802144c:	ee10 3a10 	vmov	r3, s0
 8021450:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 8021454:	ee17 3a90 	vmov	r3, s15
 8021458:	3401      	adds	r4, #1
 802145a:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 802145e:	e74c      	b.n	80212fa <__kernel_rem_pio2f+0x1e6>
 8021460:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8021464:	aa08      	add	r2, sp, #32
 8021466:	ee10 3a10 	vmov	r3, s0
 802146a:	e7f6      	b.n	802145a <__kernel_rem_pio2f+0x346>
 802146c:	a808      	add	r0, sp, #32
 802146e:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 8021472:	9001      	str	r0, [sp, #4]
 8021474:	ee07 0a90 	vmov	s15, r0
 8021478:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802147c:	3b01      	subs	r3, #1
 802147e:	ee67 7a80 	vmul.f32	s15, s15, s0
 8021482:	ee20 0a07 	vmul.f32	s0, s0, s14
 8021486:	ed62 7a01 	vstmdb	r2!, {s15}
 802148a:	e743      	b.n	8021314 <__kernel_rem_pio2f+0x200>
 802148c:	ecfc 6a01 	vldmia	ip!, {s13}
 8021490:	ecb5 7a01 	vldmia	r5!, {s14}
 8021494:	eee6 7a87 	vfma.f32	s15, s13, s14
 8021498:	3001      	adds	r0, #1
 802149a:	4550      	cmp	r0, sl
 802149c:	dc01      	bgt.n	80214a2 <__kernel_rem_pio2f+0x38e>
 802149e:	4290      	cmp	r0, r2
 80214a0:	ddf4      	ble.n	802148c <__kernel_rem_pio2f+0x378>
 80214a2:	a858      	add	r0, sp, #352	@ 0x160
 80214a4:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 80214a8:	ed42 7a28 	vstr	s15, [r2, #-160]	@ 0xffffff60
 80214ac:	3b01      	subs	r3, #1
 80214ae:	e735      	b.n	802131c <__kernel_rem_pio2f+0x208>
 80214b0:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 80214b2:	2b02      	cmp	r3, #2
 80214b4:	dc09      	bgt.n	80214ca <__kernel_rem_pio2f+0x3b6>
 80214b6:	2b00      	cmp	r3, #0
 80214b8:	dc27      	bgt.n	802150a <__kernel_rem_pio2f+0x3f6>
 80214ba:	d040      	beq.n	802153e <__kernel_rem_pio2f+0x42a>
 80214bc:	f009 0007 	and.w	r0, r9, #7
 80214c0:	b059      	add	sp, #356	@ 0x164
 80214c2:	ecbd 8b04 	vpop	{d8-d9}
 80214c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80214ca:	9b66      	ldr	r3, [sp, #408]	@ 0x198
 80214cc:	2b03      	cmp	r3, #3
 80214ce:	d1f5      	bne.n	80214bc <__kernel_rem_pio2f+0x3a8>
 80214d0:	aa30      	add	r2, sp, #192	@ 0xc0
 80214d2:	1f0b      	subs	r3, r1, #4
 80214d4:	4413      	add	r3, r2
 80214d6:	461a      	mov	r2, r3
 80214d8:	4620      	mov	r0, r4
 80214da:	2800      	cmp	r0, #0
 80214dc:	dc50      	bgt.n	8021580 <__kernel_rem_pio2f+0x46c>
 80214de:	4622      	mov	r2, r4
 80214e0:	2a01      	cmp	r2, #1
 80214e2:	dc5d      	bgt.n	80215a0 <__kernel_rem_pio2f+0x48c>
 80214e4:	ab30      	add	r3, sp, #192	@ 0xc0
 80214e6:	ed5f 7a37 	vldr	s15, [pc, #-220]	@ 802140c <__kernel_rem_pio2f+0x2f8>
 80214ea:	440b      	add	r3, r1
 80214ec:	2c01      	cmp	r4, #1
 80214ee:	dc67      	bgt.n	80215c0 <__kernel_rem_pio2f+0x4ac>
 80214f0:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 80214f4:	ed9d 7a31 	vldr	s14, [sp, #196]	@ 0xc4
 80214f8:	2e00      	cmp	r6, #0
 80214fa:	d167      	bne.n	80215cc <__kernel_rem_pio2f+0x4b8>
 80214fc:	edc7 6a00 	vstr	s13, [r7]
 8021500:	ed87 7a01 	vstr	s14, [r7, #4]
 8021504:	edc7 7a02 	vstr	s15, [r7, #8]
 8021508:	e7d8      	b.n	80214bc <__kernel_rem_pio2f+0x3a8>
 802150a:	ab30      	add	r3, sp, #192	@ 0xc0
 802150c:	ed1f 7a41 	vldr	s14, [pc, #-260]	@ 802140c <__kernel_rem_pio2f+0x2f8>
 8021510:	440b      	add	r3, r1
 8021512:	4622      	mov	r2, r4
 8021514:	2a00      	cmp	r2, #0
 8021516:	da24      	bge.n	8021562 <__kernel_rem_pio2f+0x44e>
 8021518:	b34e      	cbz	r6, 802156e <__kernel_rem_pio2f+0x45a>
 802151a:	eef1 7a47 	vneg.f32	s15, s14
 802151e:	edc7 7a00 	vstr	s15, [r7]
 8021522:	eddd 7a30 	vldr	s15, [sp, #192]	@ 0xc0
 8021526:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802152a:	aa31      	add	r2, sp, #196	@ 0xc4
 802152c:	2301      	movs	r3, #1
 802152e:	429c      	cmp	r4, r3
 8021530:	da20      	bge.n	8021574 <__kernel_rem_pio2f+0x460>
 8021532:	b10e      	cbz	r6, 8021538 <__kernel_rem_pio2f+0x424>
 8021534:	eef1 7a67 	vneg.f32	s15, s15
 8021538:	edc7 7a01 	vstr	s15, [r7, #4]
 802153c:	e7be      	b.n	80214bc <__kernel_rem_pio2f+0x3a8>
 802153e:	ab30      	add	r3, sp, #192	@ 0xc0
 8021540:	ed5f 7a4e 	vldr	s15, [pc, #-312]	@ 802140c <__kernel_rem_pio2f+0x2f8>
 8021544:	440b      	add	r3, r1
 8021546:	2c00      	cmp	r4, #0
 8021548:	da05      	bge.n	8021556 <__kernel_rem_pio2f+0x442>
 802154a:	b10e      	cbz	r6, 8021550 <__kernel_rem_pio2f+0x43c>
 802154c:	eef1 7a67 	vneg.f32	s15, s15
 8021550:	edc7 7a00 	vstr	s15, [r7]
 8021554:	e7b2      	b.n	80214bc <__kernel_rem_pio2f+0x3a8>
 8021556:	ed33 7a01 	vldmdb	r3!, {s14}
 802155a:	3c01      	subs	r4, #1
 802155c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8021560:	e7f1      	b.n	8021546 <__kernel_rem_pio2f+0x432>
 8021562:	ed73 7a01 	vldmdb	r3!, {s15}
 8021566:	3a01      	subs	r2, #1
 8021568:	ee37 7a27 	vadd.f32	s14, s14, s15
 802156c:	e7d2      	b.n	8021514 <__kernel_rem_pio2f+0x400>
 802156e:	eef0 7a47 	vmov.f32	s15, s14
 8021572:	e7d4      	b.n	802151e <__kernel_rem_pio2f+0x40a>
 8021574:	ecb2 7a01 	vldmia	r2!, {s14}
 8021578:	3301      	adds	r3, #1
 802157a:	ee77 7a87 	vadd.f32	s15, s15, s14
 802157e:	e7d6      	b.n	802152e <__kernel_rem_pio2f+0x41a>
 8021580:	ed72 7a01 	vldmdb	r2!, {s15}
 8021584:	edd2 6a01 	vldr	s13, [r2, #4]
 8021588:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802158c:	3801      	subs	r0, #1
 802158e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8021592:	ed82 7a00 	vstr	s14, [r2]
 8021596:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802159a:	edc2 7a01 	vstr	s15, [r2, #4]
 802159e:	e79c      	b.n	80214da <__kernel_rem_pio2f+0x3c6>
 80215a0:	ed73 7a01 	vldmdb	r3!, {s15}
 80215a4:	edd3 6a01 	vldr	s13, [r3, #4]
 80215a8:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80215ac:	3a01      	subs	r2, #1
 80215ae:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80215b2:	ed83 7a00 	vstr	s14, [r3]
 80215b6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80215ba:	edc3 7a01 	vstr	s15, [r3, #4]
 80215be:	e78f      	b.n	80214e0 <__kernel_rem_pio2f+0x3cc>
 80215c0:	ed33 7a01 	vldmdb	r3!, {s14}
 80215c4:	3c01      	subs	r4, #1
 80215c6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80215ca:	e78f      	b.n	80214ec <__kernel_rem_pio2f+0x3d8>
 80215cc:	eef1 6a66 	vneg.f32	s13, s13
 80215d0:	eeb1 7a47 	vneg.f32	s14, s14
 80215d4:	edc7 6a00 	vstr	s13, [r7]
 80215d8:	ed87 7a01 	vstr	s14, [r7, #4]
 80215dc:	eef1 7a67 	vneg.f32	s15, s15
 80215e0:	e790      	b.n	8021504 <__kernel_rem_pio2f+0x3f0>
 80215e2:	bf00      	nop

080215e4 <scalbnf>:
 80215e4:	ee10 3a10 	vmov	r3, s0
 80215e8:	f033 4200 	bics.w	r2, r3, #2147483648	@ 0x80000000
 80215ec:	d02b      	beq.n	8021646 <scalbnf+0x62>
 80215ee:	f1b2 4fff 	cmp.w	r2, #2139095040	@ 0x7f800000
 80215f2:	d302      	bcc.n	80215fa <scalbnf+0x16>
 80215f4:	ee30 0a00 	vadd.f32	s0, s0, s0
 80215f8:	4770      	bx	lr
 80215fa:	f013 4fff 	tst.w	r3, #2139095040	@ 0x7f800000
 80215fe:	d123      	bne.n	8021648 <scalbnf+0x64>
 8021600:	4b24      	ldr	r3, [pc, #144]	@ (8021694 <scalbnf+0xb0>)
 8021602:	eddf 7a25 	vldr	s15, [pc, #148]	@ 8021698 <scalbnf+0xb4>
 8021606:	4298      	cmp	r0, r3
 8021608:	ee20 0a27 	vmul.f32	s0, s0, s15
 802160c:	db17      	blt.n	802163e <scalbnf+0x5a>
 802160e:	ee10 3a10 	vmov	r3, s0
 8021612:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8021616:	3a19      	subs	r2, #25
 8021618:	f24c 3150 	movw	r1, #50000	@ 0xc350
 802161c:	4288      	cmp	r0, r1
 802161e:	dd15      	ble.n	802164c <scalbnf+0x68>
 8021620:	eddf 7a1e 	vldr	s15, [pc, #120]	@ 802169c <scalbnf+0xb8>
 8021624:	eddf 6a1e 	vldr	s13, [pc, #120]	@ 80216a0 <scalbnf+0xbc>
 8021628:	ee10 3a10 	vmov	r3, s0
 802162c:	eeb0 7a67 	vmov.f32	s14, s15
 8021630:	2b00      	cmp	r3, #0
 8021632:	bfb8      	it	lt
 8021634:	eef0 7a66 	vmovlt.f32	s15, s13
 8021638:	ee27 0a87 	vmul.f32	s0, s15, s14
 802163c:	4770      	bx	lr
 802163e:	eddf 7a19 	vldr	s15, [pc, #100]	@ 80216a4 <scalbnf+0xc0>
 8021642:	ee27 0a80 	vmul.f32	s0, s15, s0
 8021646:	4770      	bx	lr
 8021648:	0dd2      	lsrs	r2, r2, #23
 802164a:	e7e5      	b.n	8021618 <scalbnf+0x34>
 802164c:	4410      	add	r0, r2
 802164e:	28fe      	cmp	r0, #254	@ 0xfe
 8021650:	dce6      	bgt.n	8021620 <scalbnf+0x3c>
 8021652:	2800      	cmp	r0, #0
 8021654:	dd06      	ble.n	8021664 <scalbnf+0x80>
 8021656:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 802165a:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802165e:	ee00 3a10 	vmov	s0, r3
 8021662:	4770      	bx	lr
 8021664:	f110 0f16 	cmn.w	r0, #22
 8021668:	da09      	bge.n	802167e <scalbnf+0x9a>
 802166a:	eddf 7a0e 	vldr	s15, [pc, #56]	@ 80216a4 <scalbnf+0xc0>
 802166e:	eddf 6a0e 	vldr	s13, [pc, #56]	@ 80216a8 <scalbnf+0xc4>
 8021672:	ee10 3a10 	vmov	r3, s0
 8021676:	eeb0 7a67 	vmov.f32	s14, s15
 802167a:	2b00      	cmp	r3, #0
 802167c:	e7d9      	b.n	8021632 <scalbnf+0x4e>
 802167e:	3019      	adds	r0, #25
 8021680:	f023 43ff 	bic.w	r3, r3, #2139095040	@ 0x7f800000
 8021684:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8021688:	ed9f 0a08 	vldr	s0, [pc, #32]	@ 80216ac <scalbnf+0xc8>
 802168c:	ee07 3a90 	vmov	s15, r3
 8021690:	e7d7      	b.n	8021642 <scalbnf+0x5e>
 8021692:	bf00      	nop
 8021694:	ffff3cb0 	.word	0xffff3cb0
 8021698:	4c000000 	.word	0x4c000000
 802169c:	7149f2ca 	.word	0x7149f2ca
 80216a0:	f149f2ca 	.word	0xf149f2ca
 80216a4:	0da24260 	.word	0x0da24260
 80216a8:	8da24260 	.word	0x8da24260
 80216ac:	33000000 	.word	0x33000000

080216b0 <floorf>:
 80216b0:	ee10 3a10 	vmov	r3, s0
 80216b4:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 80216b8:	3a7f      	subs	r2, #127	@ 0x7f
 80216ba:	2a16      	cmp	r2, #22
 80216bc:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 80216c0:	dc2b      	bgt.n	802171a <floorf+0x6a>
 80216c2:	2a00      	cmp	r2, #0
 80216c4:	da12      	bge.n	80216ec <floorf+0x3c>
 80216c6:	eddf 7a19 	vldr	s15, [pc, #100]	@ 802172c <floorf+0x7c>
 80216ca:	ee30 0a27 	vadd.f32	s0, s0, s15
 80216ce:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80216d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80216d6:	dd06      	ble.n	80216e6 <floorf+0x36>
 80216d8:	2b00      	cmp	r3, #0
 80216da:	da24      	bge.n	8021726 <floorf+0x76>
 80216dc:	2900      	cmp	r1, #0
 80216de:	4b14      	ldr	r3, [pc, #80]	@ (8021730 <floorf+0x80>)
 80216e0:	bf08      	it	eq
 80216e2:	f04f 4300 	moveq.w	r3, #2147483648	@ 0x80000000
 80216e6:	ee00 3a10 	vmov	s0, r3
 80216ea:	4770      	bx	lr
 80216ec:	4911      	ldr	r1, [pc, #68]	@ (8021734 <floorf+0x84>)
 80216ee:	4111      	asrs	r1, r2
 80216f0:	420b      	tst	r3, r1
 80216f2:	d0fa      	beq.n	80216ea <floorf+0x3a>
 80216f4:	eddf 7a0d 	vldr	s15, [pc, #52]	@ 802172c <floorf+0x7c>
 80216f8:	ee30 0a27 	vadd.f32	s0, s0, s15
 80216fc:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8021700:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021704:	ddef      	ble.n	80216e6 <floorf+0x36>
 8021706:	2b00      	cmp	r3, #0
 8021708:	bfbe      	ittt	lt
 802170a:	f44f 0000 	movlt.w	r0, #8388608	@ 0x800000
 802170e:	fa40 f202 	asrlt.w	r2, r0, r2
 8021712:	189b      	addlt	r3, r3, r2
 8021714:	ea23 0301 	bic.w	r3, r3, r1
 8021718:	e7e5      	b.n	80216e6 <floorf+0x36>
 802171a:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
 802171e:	d3e4      	bcc.n	80216ea <floorf+0x3a>
 8021720:	ee30 0a00 	vadd.f32	s0, s0, s0
 8021724:	4770      	bx	lr
 8021726:	2300      	movs	r3, #0
 8021728:	e7dd      	b.n	80216e6 <floorf+0x36>
 802172a:	bf00      	nop
 802172c:	7149f2ca 	.word	0x7149f2ca
 8021730:	bf800000 	.word	0xbf800000
 8021734:	007fffff 	.word	0x007fffff

08021738 <abort>:
 8021738:	b508      	push	{r3, lr}
 802173a:	2006      	movs	r0, #6
 802173c:	f000 fa3c 	bl	8021bb8 <raise>
 8021740:	2001      	movs	r0, #1
 8021742:	f7e0 ff59 	bl	80025f8 <_exit>
	...

08021748 <__assert_func>:
 8021748:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802174a:	4614      	mov	r4, r2
 802174c:	461a      	mov	r2, r3
 802174e:	4b09      	ldr	r3, [pc, #36]	@ (8021774 <__assert_func+0x2c>)
 8021750:	681b      	ldr	r3, [r3, #0]
 8021752:	4605      	mov	r5, r0
 8021754:	68d8      	ldr	r0, [r3, #12]
 8021756:	b14c      	cbz	r4, 802176c <__assert_func+0x24>
 8021758:	4b07      	ldr	r3, [pc, #28]	@ (8021778 <__assert_func+0x30>)
 802175a:	9100      	str	r1, [sp, #0]
 802175c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8021760:	4906      	ldr	r1, [pc, #24]	@ (802177c <__assert_func+0x34>)
 8021762:	462b      	mov	r3, r5
 8021764:	f000 f984 	bl	8021a70 <fiprintf>
 8021768:	f7ff ffe6 	bl	8021738 <abort>
 802176c:	4b04      	ldr	r3, [pc, #16]	@ (8021780 <__assert_func+0x38>)
 802176e:	461c      	mov	r4, r3
 8021770:	e7f3      	b.n	802175a <__assert_func+0x12>
 8021772:	bf00      	nop
 8021774:	20000220 	.word	0x20000220
 8021778:	0802320c 	.word	0x0802320c
 802177c:	08023219 	.word	0x08023219
 8021780:	08023247 	.word	0x08023247

08021784 <atexit>:
 8021784:	2300      	movs	r3, #0
 8021786:	4601      	mov	r1, r0
 8021788:	461a      	mov	r2, r3
 802178a:	4618      	mov	r0, r3
 802178c:	f000 bac2 	b.w	8021d14 <__register_exitproc>

08021790 <malloc>:
 8021790:	4b02      	ldr	r3, [pc, #8]	@ (802179c <malloc+0xc>)
 8021792:	4601      	mov	r1, r0
 8021794:	6818      	ldr	r0, [r3, #0]
 8021796:	f000 b82d 	b.w	80217f4 <_malloc_r>
 802179a:	bf00      	nop
 802179c:	20000220 	.word	0x20000220

080217a0 <free>:
 80217a0:	4b02      	ldr	r3, [pc, #8]	@ (80217ac <free+0xc>)
 80217a2:	4601      	mov	r1, r0
 80217a4:	6818      	ldr	r0, [r3, #0]
 80217a6:	f000 bb11 	b.w	8021dcc <_free_r>
 80217aa:	bf00      	nop
 80217ac:	20000220 	.word	0x20000220

080217b0 <sbrk_aligned>:
 80217b0:	b570      	push	{r4, r5, r6, lr}
 80217b2:	4e0f      	ldr	r6, [pc, #60]	@ (80217f0 <sbrk_aligned+0x40>)
 80217b4:	460c      	mov	r4, r1
 80217b6:	6831      	ldr	r1, [r6, #0]
 80217b8:	4605      	mov	r5, r0
 80217ba:	b911      	cbnz	r1, 80217c2 <sbrk_aligned+0x12>
 80217bc:	f000 fa4c 	bl	8021c58 <_sbrk_r>
 80217c0:	6030      	str	r0, [r6, #0]
 80217c2:	4621      	mov	r1, r4
 80217c4:	4628      	mov	r0, r5
 80217c6:	f000 fa47 	bl	8021c58 <_sbrk_r>
 80217ca:	1c43      	adds	r3, r0, #1
 80217cc:	d103      	bne.n	80217d6 <sbrk_aligned+0x26>
 80217ce:	f04f 34ff 	mov.w	r4, #4294967295
 80217d2:	4620      	mov	r0, r4
 80217d4:	bd70      	pop	{r4, r5, r6, pc}
 80217d6:	1cc4      	adds	r4, r0, #3
 80217d8:	f024 0403 	bic.w	r4, r4, #3
 80217dc:	42a0      	cmp	r0, r4
 80217de:	d0f8      	beq.n	80217d2 <sbrk_aligned+0x22>
 80217e0:	1a21      	subs	r1, r4, r0
 80217e2:	4628      	mov	r0, r5
 80217e4:	f000 fa38 	bl	8021c58 <_sbrk_r>
 80217e8:	3001      	adds	r0, #1
 80217ea:	d1f2      	bne.n	80217d2 <sbrk_aligned+0x22>
 80217ec:	e7ef      	b.n	80217ce <sbrk_aligned+0x1e>
 80217ee:	bf00      	nop
 80217f0:	20013aec 	.word	0x20013aec

080217f4 <_malloc_r>:
 80217f4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80217f8:	1ccd      	adds	r5, r1, #3
 80217fa:	f025 0503 	bic.w	r5, r5, #3
 80217fe:	3508      	adds	r5, #8
 8021800:	2d0c      	cmp	r5, #12
 8021802:	bf38      	it	cc
 8021804:	250c      	movcc	r5, #12
 8021806:	2d00      	cmp	r5, #0
 8021808:	4606      	mov	r6, r0
 802180a:	db01      	blt.n	8021810 <_malloc_r+0x1c>
 802180c:	42a9      	cmp	r1, r5
 802180e:	d904      	bls.n	802181a <_malloc_r+0x26>
 8021810:	230c      	movs	r3, #12
 8021812:	6033      	str	r3, [r6, #0]
 8021814:	2000      	movs	r0, #0
 8021816:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802181a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80218f0 <_malloc_r+0xfc>
 802181e:	f000 f869 	bl	80218f4 <__malloc_lock>
 8021822:	f8d8 3000 	ldr.w	r3, [r8]
 8021826:	461c      	mov	r4, r3
 8021828:	bb44      	cbnz	r4, 802187c <_malloc_r+0x88>
 802182a:	4629      	mov	r1, r5
 802182c:	4630      	mov	r0, r6
 802182e:	f7ff ffbf 	bl	80217b0 <sbrk_aligned>
 8021832:	1c43      	adds	r3, r0, #1
 8021834:	4604      	mov	r4, r0
 8021836:	d158      	bne.n	80218ea <_malloc_r+0xf6>
 8021838:	f8d8 4000 	ldr.w	r4, [r8]
 802183c:	4627      	mov	r7, r4
 802183e:	2f00      	cmp	r7, #0
 8021840:	d143      	bne.n	80218ca <_malloc_r+0xd6>
 8021842:	2c00      	cmp	r4, #0
 8021844:	d04b      	beq.n	80218de <_malloc_r+0xea>
 8021846:	6823      	ldr	r3, [r4, #0]
 8021848:	4639      	mov	r1, r7
 802184a:	4630      	mov	r0, r6
 802184c:	eb04 0903 	add.w	r9, r4, r3
 8021850:	f000 fa02 	bl	8021c58 <_sbrk_r>
 8021854:	4581      	cmp	r9, r0
 8021856:	d142      	bne.n	80218de <_malloc_r+0xea>
 8021858:	6821      	ldr	r1, [r4, #0]
 802185a:	1a6d      	subs	r5, r5, r1
 802185c:	4629      	mov	r1, r5
 802185e:	4630      	mov	r0, r6
 8021860:	f7ff ffa6 	bl	80217b0 <sbrk_aligned>
 8021864:	3001      	adds	r0, #1
 8021866:	d03a      	beq.n	80218de <_malloc_r+0xea>
 8021868:	6823      	ldr	r3, [r4, #0]
 802186a:	442b      	add	r3, r5
 802186c:	6023      	str	r3, [r4, #0]
 802186e:	f8d8 3000 	ldr.w	r3, [r8]
 8021872:	685a      	ldr	r2, [r3, #4]
 8021874:	bb62      	cbnz	r2, 80218d0 <_malloc_r+0xdc>
 8021876:	f8c8 7000 	str.w	r7, [r8]
 802187a:	e00f      	b.n	802189c <_malloc_r+0xa8>
 802187c:	6822      	ldr	r2, [r4, #0]
 802187e:	1b52      	subs	r2, r2, r5
 8021880:	d420      	bmi.n	80218c4 <_malloc_r+0xd0>
 8021882:	2a0b      	cmp	r2, #11
 8021884:	d917      	bls.n	80218b6 <_malloc_r+0xc2>
 8021886:	1961      	adds	r1, r4, r5
 8021888:	42a3      	cmp	r3, r4
 802188a:	6025      	str	r5, [r4, #0]
 802188c:	bf18      	it	ne
 802188e:	6059      	strne	r1, [r3, #4]
 8021890:	6863      	ldr	r3, [r4, #4]
 8021892:	bf08      	it	eq
 8021894:	f8c8 1000 	streq.w	r1, [r8]
 8021898:	5162      	str	r2, [r4, r5]
 802189a:	604b      	str	r3, [r1, #4]
 802189c:	4630      	mov	r0, r6
 802189e:	f000 f82f 	bl	8021900 <__malloc_unlock>
 80218a2:	f104 000b 	add.w	r0, r4, #11
 80218a6:	1d23      	adds	r3, r4, #4
 80218a8:	f020 0007 	bic.w	r0, r0, #7
 80218ac:	1ac2      	subs	r2, r0, r3
 80218ae:	bf1c      	itt	ne
 80218b0:	1a1b      	subne	r3, r3, r0
 80218b2:	50a3      	strne	r3, [r4, r2]
 80218b4:	e7af      	b.n	8021816 <_malloc_r+0x22>
 80218b6:	6862      	ldr	r2, [r4, #4]
 80218b8:	42a3      	cmp	r3, r4
 80218ba:	bf0c      	ite	eq
 80218bc:	f8c8 2000 	streq.w	r2, [r8]
 80218c0:	605a      	strne	r2, [r3, #4]
 80218c2:	e7eb      	b.n	802189c <_malloc_r+0xa8>
 80218c4:	4623      	mov	r3, r4
 80218c6:	6864      	ldr	r4, [r4, #4]
 80218c8:	e7ae      	b.n	8021828 <_malloc_r+0x34>
 80218ca:	463c      	mov	r4, r7
 80218cc:	687f      	ldr	r7, [r7, #4]
 80218ce:	e7b6      	b.n	802183e <_malloc_r+0x4a>
 80218d0:	461a      	mov	r2, r3
 80218d2:	685b      	ldr	r3, [r3, #4]
 80218d4:	42a3      	cmp	r3, r4
 80218d6:	d1fb      	bne.n	80218d0 <_malloc_r+0xdc>
 80218d8:	2300      	movs	r3, #0
 80218da:	6053      	str	r3, [r2, #4]
 80218dc:	e7de      	b.n	802189c <_malloc_r+0xa8>
 80218de:	230c      	movs	r3, #12
 80218e0:	6033      	str	r3, [r6, #0]
 80218e2:	4630      	mov	r0, r6
 80218e4:	f000 f80c 	bl	8021900 <__malloc_unlock>
 80218e8:	e794      	b.n	8021814 <_malloc_r+0x20>
 80218ea:	6005      	str	r5, [r0, #0]
 80218ec:	e7d6      	b.n	802189c <_malloc_r+0xa8>
 80218ee:	bf00      	nop
 80218f0:	20013af0 	.word	0x20013af0

080218f4 <__malloc_lock>:
 80218f4:	4801      	ldr	r0, [pc, #4]	@ (80218fc <__malloc_lock+0x8>)
 80218f6:	f000 b9fc 	b.w	8021cf2 <__retarget_lock_acquire_recursive>
 80218fa:	bf00      	nop
 80218fc:	20013c34 	.word	0x20013c34

08021900 <__malloc_unlock>:
 8021900:	4801      	ldr	r0, [pc, #4]	@ (8021908 <__malloc_unlock+0x8>)
 8021902:	f000 b9f7 	b.w	8021cf4 <__retarget_lock_release_recursive>
 8021906:	bf00      	nop
 8021908:	20013c34 	.word	0x20013c34

0802190c <__cxa_atexit>:
 802190c:	b510      	push	{r4, lr}
 802190e:	4604      	mov	r4, r0
 8021910:	4804      	ldr	r0, [pc, #16]	@ (8021924 <__cxa_atexit+0x18>)
 8021912:	4613      	mov	r3, r2
 8021914:	b120      	cbz	r0, 8021920 <__cxa_atexit+0x14>
 8021916:	460a      	mov	r2, r1
 8021918:	2002      	movs	r0, #2
 802191a:	4621      	mov	r1, r4
 802191c:	f000 f9fa 	bl	8021d14 <__register_exitproc>
 8021920:	bd10      	pop	{r4, pc}
 8021922:	bf00      	nop
 8021924:	08021d15 	.word	0x08021d15

08021928 <std>:
 8021928:	2300      	movs	r3, #0
 802192a:	b510      	push	{r4, lr}
 802192c:	4604      	mov	r4, r0
 802192e:	e9c0 3300 	strd	r3, r3, [r0]
 8021932:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8021936:	6083      	str	r3, [r0, #8]
 8021938:	8181      	strh	r1, [r0, #12]
 802193a:	6643      	str	r3, [r0, #100]	@ 0x64
 802193c:	81c2      	strh	r2, [r0, #14]
 802193e:	6183      	str	r3, [r0, #24]
 8021940:	4619      	mov	r1, r3
 8021942:	2208      	movs	r2, #8
 8021944:	305c      	adds	r0, #92	@ 0x5c
 8021946:	f000 f906 	bl	8021b56 <memset>
 802194a:	4b0d      	ldr	r3, [pc, #52]	@ (8021980 <std+0x58>)
 802194c:	6263      	str	r3, [r4, #36]	@ 0x24
 802194e:	4b0d      	ldr	r3, [pc, #52]	@ (8021984 <std+0x5c>)
 8021950:	62a3      	str	r3, [r4, #40]	@ 0x28
 8021952:	4b0d      	ldr	r3, [pc, #52]	@ (8021988 <std+0x60>)
 8021954:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8021956:	4b0d      	ldr	r3, [pc, #52]	@ (802198c <std+0x64>)
 8021958:	6323      	str	r3, [r4, #48]	@ 0x30
 802195a:	4b0d      	ldr	r3, [pc, #52]	@ (8021990 <std+0x68>)
 802195c:	6224      	str	r4, [r4, #32]
 802195e:	429c      	cmp	r4, r3
 8021960:	d006      	beq.n	8021970 <std+0x48>
 8021962:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8021966:	4294      	cmp	r4, r2
 8021968:	d002      	beq.n	8021970 <std+0x48>
 802196a:	33d0      	adds	r3, #208	@ 0xd0
 802196c:	429c      	cmp	r4, r3
 802196e:	d105      	bne.n	802197c <std+0x54>
 8021970:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8021974:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021978:	f000 b9ba 	b.w	8021cf0 <__retarget_lock_init_recursive>
 802197c:	bd10      	pop	{r4, pc}
 802197e:	bf00      	nop
 8021980:	08021ad1 	.word	0x08021ad1
 8021984:	08021af3 	.word	0x08021af3
 8021988:	08021b2b 	.word	0x08021b2b
 802198c:	08021b4f 	.word	0x08021b4f
 8021990:	20013af4 	.word	0x20013af4

08021994 <stdio_exit_handler>:
 8021994:	4a02      	ldr	r2, [pc, #8]	@ (80219a0 <stdio_exit_handler+0xc>)
 8021996:	4903      	ldr	r1, [pc, #12]	@ (80219a4 <stdio_exit_handler+0x10>)
 8021998:	4803      	ldr	r0, [pc, #12]	@ (80219a8 <stdio_exit_handler+0x14>)
 802199a:	f000 b87b 	b.w	8021a94 <_fwalk_sglue>
 802199e:	bf00      	nop
 80219a0:	20000214 	.word	0x20000214
 80219a4:	08022505 	.word	0x08022505
 80219a8:	20000224 	.word	0x20000224

080219ac <cleanup_stdio>:
 80219ac:	6841      	ldr	r1, [r0, #4]
 80219ae:	4b0c      	ldr	r3, [pc, #48]	@ (80219e0 <cleanup_stdio+0x34>)
 80219b0:	4299      	cmp	r1, r3
 80219b2:	b510      	push	{r4, lr}
 80219b4:	4604      	mov	r4, r0
 80219b6:	d001      	beq.n	80219bc <cleanup_stdio+0x10>
 80219b8:	f000 fda4 	bl	8022504 <_fflush_r>
 80219bc:	68a1      	ldr	r1, [r4, #8]
 80219be:	4b09      	ldr	r3, [pc, #36]	@ (80219e4 <cleanup_stdio+0x38>)
 80219c0:	4299      	cmp	r1, r3
 80219c2:	d002      	beq.n	80219ca <cleanup_stdio+0x1e>
 80219c4:	4620      	mov	r0, r4
 80219c6:	f000 fd9d 	bl	8022504 <_fflush_r>
 80219ca:	68e1      	ldr	r1, [r4, #12]
 80219cc:	4b06      	ldr	r3, [pc, #24]	@ (80219e8 <cleanup_stdio+0x3c>)
 80219ce:	4299      	cmp	r1, r3
 80219d0:	d004      	beq.n	80219dc <cleanup_stdio+0x30>
 80219d2:	4620      	mov	r0, r4
 80219d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80219d8:	f000 bd94 	b.w	8022504 <_fflush_r>
 80219dc:	bd10      	pop	{r4, pc}
 80219de:	bf00      	nop
 80219e0:	20013af4 	.word	0x20013af4
 80219e4:	20013b5c 	.word	0x20013b5c
 80219e8:	20013bc4 	.word	0x20013bc4

080219ec <global_stdio_init.part.0>:
 80219ec:	b510      	push	{r4, lr}
 80219ee:	4b0b      	ldr	r3, [pc, #44]	@ (8021a1c <global_stdio_init.part.0+0x30>)
 80219f0:	4c0b      	ldr	r4, [pc, #44]	@ (8021a20 <global_stdio_init.part.0+0x34>)
 80219f2:	4a0c      	ldr	r2, [pc, #48]	@ (8021a24 <global_stdio_init.part.0+0x38>)
 80219f4:	601a      	str	r2, [r3, #0]
 80219f6:	4620      	mov	r0, r4
 80219f8:	2200      	movs	r2, #0
 80219fa:	2104      	movs	r1, #4
 80219fc:	f7ff ff94 	bl	8021928 <std>
 8021a00:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8021a04:	2201      	movs	r2, #1
 8021a06:	2109      	movs	r1, #9
 8021a08:	f7ff ff8e 	bl	8021928 <std>
 8021a0c:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8021a10:	2202      	movs	r2, #2
 8021a12:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021a16:	2112      	movs	r1, #18
 8021a18:	f7ff bf86 	b.w	8021928 <std>
 8021a1c:	20013c2c 	.word	0x20013c2c
 8021a20:	20013af4 	.word	0x20013af4
 8021a24:	08021995 	.word	0x08021995

08021a28 <__sfp_lock_acquire>:
 8021a28:	4801      	ldr	r0, [pc, #4]	@ (8021a30 <__sfp_lock_acquire+0x8>)
 8021a2a:	f000 b962 	b.w	8021cf2 <__retarget_lock_acquire_recursive>
 8021a2e:	bf00      	nop
 8021a30:	20013c36 	.word	0x20013c36

08021a34 <__sfp_lock_release>:
 8021a34:	4801      	ldr	r0, [pc, #4]	@ (8021a3c <__sfp_lock_release+0x8>)
 8021a36:	f000 b95d 	b.w	8021cf4 <__retarget_lock_release_recursive>
 8021a3a:	bf00      	nop
 8021a3c:	20013c36 	.word	0x20013c36

08021a40 <__sinit>:
 8021a40:	b510      	push	{r4, lr}
 8021a42:	4604      	mov	r4, r0
 8021a44:	f7ff fff0 	bl	8021a28 <__sfp_lock_acquire>
 8021a48:	6a23      	ldr	r3, [r4, #32]
 8021a4a:	b11b      	cbz	r3, 8021a54 <__sinit+0x14>
 8021a4c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021a50:	f7ff bff0 	b.w	8021a34 <__sfp_lock_release>
 8021a54:	4b04      	ldr	r3, [pc, #16]	@ (8021a68 <__sinit+0x28>)
 8021a56:	6223      	str	r3, [r4, #32]
 8021a58:	4b04      	ldr	r3, [pc, #16]	@ (8021a6c <__sinit+0x2c>)
 8021a5a:	681b      	ldr	r3, [r3, #0]
 8021a5c:	2b00      	cmp	r3, #0
 8021a5e:	d1f5      	bne.n	8021a4c <__sinit+0xc>
 8021a60:	f7ff ffc4 	bl	80219ec <global_stdio_init.part.0>
 8021a64:	e7f2      	b.n	8021a4c <__sinit+0xc>
 8021a66:	bf00      	nop
 8021a68:	080219ad 	.word	0x080219ad
 8021a6c:	20013c2c 	.word	0x20013c2c

08021a70 <fiprintf>:
 8021a70:	b40e      	push	{r1, r2, r3}
 8021a72:	b503      	push	{r0, r1, lr}
 8021a74:	4601      	mov	r1, r0
 8021a76:	ab03      	add	r3, sp, #12
 8021a78:	4805      	ldr	r0, [pc, #20]	@ (8021a90 <fiprintf+0x20>)
 8021a7a:	f853 2b04 	ldr.w	r2, [r3], #4
 8021a7e:	6800      	ldr	r0, [r0, #0]
 8021a80:	9301      	str	r3, [sp, #4]
 8021a82:	f000 fa17 	bl	8021eb4 <_vfiprintf_r>
 8021a86:	b002      	add	sp, #8
 8021a88:	f85d eb04 	ldr.w	lr, [sp], #4
 8021a8c:	b003      	add	sp, #12
 8021a8e:	4770      	bx	lr
 8021a90:	20000220 	.word	0x20000220

08021a94 <_fwalk_sglue>:
 8021a94:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8021a98:	4607      	mov	r7, r0
 8021a9a:	4688      	mov	r8, r1
 8021a9c:	4614      	mov	r4, r2
 8021a9e:	2600      	movs	r6, #0
 8021aa0:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8021aa4:	f1b9 0901 	subs.w	r9, r9, #1
 8021aa8:	d505      	bpl.n	8021ab6 <_fwalk_sglue+0x22>
 8021aaa:	6824      	ldr	r4, [r4, #0]
 8021aac:	2c00      	cmp	r4, #0
 8021aae:	d1f7      	bne.n	8021aa0 <_fwalk_sglue+0xc>
 8021ab0:	4630      	mov	r0, r6
 8021ab2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8021ab6:	89ab      	ldrh	r3, [r5, #12]
 8021ab8:	2b01      	cmp	r3, #1
 8021aba:	d907      	bls.n	8021acc <_fwalk_sglue+0x38>
 8021abc:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8021ac0:	3301      	adds	r3, #1
 8021ac2:	d003      	beq.n	8021acc <_fwalk_sglue+0x38>
 8021ac4:	4629      	mov	r1, r5
 8021ac6:	4638      	mov	r0, r7
 8021ac8:	47c0      	blx	r8
 8021aca:	4306      	orrs	r6, r0
 8021acc:	3568      	adds	r5, #104	@ 0x68
 8021ace:	e7e9      	b.n	8021aa4 <_fwalk_sglue+0x10>

08021ad0 <__sread>:
 8021ad0:	b510      	push	{r4, lr}
 8021ad2:	460c      	mov	r4, r1
 8021ad4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021ad8:	f000 f898 	bl	8021c0c <_read_r>
 8021adc:	2800      	cmp	r0, #0
 8021ade:	bfab      	itete	ge
 8021ae0:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8021ae2:	89a3      	ldrhlt	r3, [r4, #12]
 8021ae4:	181b      	addge	r3, r3, r0
 8021ae6:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8021aea:	bfac      	ite	ge
 8021aec:	6563      	strge	r3, [r4, #84]	@ 0x54
 8021aee:	81a3      	strhlt	r3, [r4, #12]
 8021af0:	bd10      	pop	{r4, pc}

08021af2 <__swrite>:
 8021af2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8021af6:	461f      	mov	r7, r3
 8021af8:	898b      	ldrh	r3, [r1, #12]
 8021afa:	05db      	lsls	r3, r3, #23
 8021afc:	4605      	mov	r5, r0
 8021afe:	460c      	mov	r4, r1
 8021b00:	4616      	mov	r6, r2
 8021b02:	d505      	bpl.n	8021b10 <__swrite+0x1e>
 8021b04:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021b08:	2302      	movs	r3, #2
 8021b0a:	2200      	movs	r2, #0
 8021b0c:	f000 f86c 	bl	8021be8 <_lseek_r>
 8021b10:	89a3      	ldrh	r3, [r4, #12]
 8021b12:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8021b16:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8021b1a:	81a3      	strh	r3, [r4, #12]
 8021b1c:	4632      	mov	r2, r6
 8021b1e:	463b      	mov	r3, r7
 8021b20:	4628      	mov	r0, r5
 8021b22:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8021b26:	f000 b8a7 	b.w	8021c78 <_write_r>

08021b2a <__sseek>:
 8021b2a:	b510      	push	{r4, lr}
 8021b2c:	460c      	mov	r4, r1
 8021b2e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021b32:	f000 f859 	bl	8021be8 <_lseek_r>
 8021b36:	1c43      	adds	r3, r0, #1
 8021b38:	89a3      	ldrh	r3, [r4, #12]
 8021b3a:	bf15      	itete	ne
 8021b3c:	6560      	strne	r0, [r4, #84]	@ 0x54
 8021b3e:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8021b42:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8021b46:	81a3      	strheq	r3, [r4, #12]
 8021b48:	bf18      	it	ne
 8021b4a:	81a3      	strhne	r3, [r4, #12]
 8021b4c:	bd10      	pop	{r4, pc}

08021b4e <__sclose>:
 8021b4e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021b52:	f000 b839 	b.w	8021bc8 <_close_r>

08021b56 <memset>:
 8021b56:	4402      	add	r2, r0
 8021b58:	4603      	mov	r3, r0
 8021b5a:	4293      	cmp	r3, r2
 8021b5c:	d100      	bne.n	8021b60 <memset+0xa>
 8021b5e:	4770      	bx	lr
 8021b60:	f803 1b01 	strb.w	r1, [r3], #1
 8021b64:	e7f9      	b.n	8021b5a <memset+0x4>

08021b66 <_raise_r>:
 8021b66:	291f      	cmp	r1, #31
 8021b68:	b538      	push	{r3, r4, r5, lr}
 8021b6a:	4605      	mov	r5, r0
 8021b6c:	460c      	mov	r4, r1
 8021b6e:	d904      	bls.n	8021b7a <_raise_r+0x14>
 8021b70:	2316      	movs	r3, #22
 8021b72:	6003      	str	r3, [r0, #0]
 8021b74:	f04f 30ff 	mov.w	r0, #4294967295
 8021b78:	bd38      	pop	{r3, r4, r5, pc}
 8021b7a:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8021b7c:	b112      	cbz	r2, 8021b84 <_raise_r+0x1e>
 8021b7e:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8021b82:	b94b      	cbnz	r3, 8021b98 <_raise_r+0x32>
 8021b84:	4628      	mov	r0, r5
 8021b86:	f000 f865 	bl	8021c54 <_getpid_r>
 8021b8a:	4622      	mov	r2, r4
 8021b8c:	4601      	mov	r1, r0
 8021b8e:	4628      	mov	r0, r5
 8021b90:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8021b94:	f000 b84c 	b.w	8021c30 <_kill_r>
 8021b98:	2b01      	cmp	r3, #1
 8021b9a:	d00a      	beq.n	8021bb2 <_raise_r+0x4c>
 8021b9c:	1c59      	adds	r1, r3, #1
 8021b9e:	d103      	bne.n	8021ba8 <_raise_r+0x42>
 8021ba0:	2316      	movs	r3, #22
 8021ba2:	6003      	str	r3, [r0, #0]
 8021ba4:	2001      	movs	r0, #1
 8021ba6:	e7e7      	b.n	8021b78 <_raise_r+0x12>
 8021ba8:	2100      	movs	r1, #0
 8021baa:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8021bae:	4620      	mov	r0, r4
 8021bb0:	4798      	blx	r3
 8021bb2:	2000      	movs	r0, #0
 8021bb4:	e7e0      	b.n	8021b78 <_raise_r+0x12>
	...

08021bb8 <raise>:
 8021bb8:	4b02      	ldr	r3, [pc, #8]	@ (8021bc4 <raise+0xc>)
 8021bba:	4601      	mov	r1, r0
 8021bbc:	6818      	ldr	r0, [r3, #0]
 8021bbe:	f7ff bfd2 	b.w	8021b66 <_raise_r>
 8021bc2:	bf00      	nop
 8021bc4:	20000220 	.word	0x20000220

08021bc8 <_close_r>:
 8021bc8:	b538      	push	{r3, r4, r5, lr}
 8021bca:	4d06      	ldr	r5, [pc, #24]	@ (8021be4 <_close_r+0x1c>)
 8021bcc:	2300      	movs	r3, #0
 8021bce:	4604      	mov	r4, r0
 8021bd0:	4608      	mov	r0, r1
 8021bd2:	602b      	str	r3, [r5, #0]
 8021bd4:	f7e0 fd32 	bl	800263c <_close>
 8021bd8:	1c43      	adds	r3, r0, #1
 8021bda:	d102      	bne.n	8021be2 <_close_r+0x1a>
 8021bdc:	682b      	ldr	r3, [r5, #0]
 8021bde:	b103      	cbz	r3, 8021be2 <_close_r+0x1a>
 8021be0:	6023      	str	r3, [r4, #0]
 8021be2:	bd38      	pop	{r3, r4, r5, pc}
 8021be4:	20013c30 	.word	0x20013c30

08021be8 <_lseek_r>:
 8021be8:	b538      	push	{r3, r4, r5, lr}
 8021bea:	4d07      	ldr	r5, [pc, #28]	@ (8021c08 <_lseek_r+0x20>)
 8021bec:	4604      	mov	r4, r0
 8021bee:	4608      	mov	r0, r1
 8021bf0:	4611      	mov	r1, r2
 8021bf2:	2200      	movs	r2, #0
 8021bf4:	602a      	str	r2, [r5, #0]
 8021bf6:	461a      	mov	r2, r3
 8021bf8:	f7e0 fd2a 	bl	8002650 <_lseek>
 8021bfc:	1c43      	adds	r3, r0, #1
 8021bfe:	d102      	bne.n	8021c06 <_lseek_r+0x1e>
 8021c00:	682b      	ldr	r3, [r5, #0]
 8021c02:	b103      	cbz	r3, 8021c06 <_lseek_r+0x1e>
 8021c04:	6023      	str	r3, [r4, #0]
 8021c06:	bd38      	pop	{r3, r4, r5, pc}
 8021c08:	20013c30 	.word	0x20013c30

08021c0c <_read_r>:
 8021c0c:	b538      	push	{r3, r4, r5, lr}
 8021c0e:	4d07      	ldr	r5, [pc, #28]	@ (8021c2c <_read_r+0x20>)
 8021c10:	4604      	mov	r4, r0
 8021c12:	4608      	mov	r0, r1
 8021c14:	4611      	mov	r1, r2
 8021c16:	2200      	movs	r2, #0
 8021c18:	602a      	str	r2, [r5, #0]
 8021c1a:	461a      	mov	r2, r3
 8021c1c:	f7e0 fcf2 	bl	8002604 <_read>
 8021c20:	1c43      	adds	r3, r0, #1
 8021c22:	d102      	bne.n	8021c2a <_read_r+0x1e>
 8021c24:	682b      	ldr	r3, [r5, #0]
 8021c26:	b103      	cbz	r3, 8021c2a <_read_r+0x1e>
 8021c28:	6023      	str	r3, [r4, #0]
 8021c2a:	bd38      	pop	{r3, r4, r5, pc}
 8021c2c:	20013c30 	.word	0x20013c30

08021c30 <_kill_r>:
 8021c30:	b538      	push	{r3, r4, r5, lr}
 8021c32:	4d07      	ldr	r5, [pc, #28]	@ (8021c50 <_kill_r+0x20>)
 8021c34:	2300      	movs	r3, #0
 8021c36:	4604      	mov	r4, r0
 8021c38:	4608      	mov	r0, r1
 8021c3a:	4611      	mov	r1, r2
 8021c3c:	602b      	str	r3, [r5, #0]
 8021c3e:	f7e0 fcd3 	bl	80025e8 <_kill>
 8021c42:	1c43      	adds	r3, r0, #1
 8021c44:	d102      	bne.n	8021c4c <_kill_r+0x1c>
 8021c46:	682b      	ldr	r3, [r5, #0]
 8021c48:	b103      	cbz	r3, 8021c4c <_kill_r+0x1c>
 8021c4a:	6023      	str	r3, [r4, #0]
 8021c4c:	bd38      	pop	{r3, r4, r5, pc}
 8021c4e:	bf00      	nop
 8021c50:	20013c30 	.word	0x20013c30

08021c54 <_getpid_r>:
 8021c54:	f7e0 bcc6 	b.w	80025e4 <_getpid>

08021c58 <_sbrk_r>:
 8021c58:	b538      	push	{r3, r4, r5, lr}
 8021c5a:	4d06      	ldr	r5, [pc, #24]	@ (8021c74 <_sbrk_r+0x1c>)
 8021c5c:	2300      	movs	r3, #0
 8021c5e:	4604      	mov	r4, r0
 8021c60:	4608      	mov	r0, r1
 8021c62:	602b      	str	r3, [r5, #0]
 8021c64:	f7e0 fcf6 	bl	8002654 <_sbrk>
 8021c68:	1c43      	adds	r3, r0, #1
 8021c6a:	d102      	bne.n	8021c72 <_sbrk_r+0x1a>
 8021c6c:	682b      	ldr	r3, [r5, #0]
 8021c6e:	b103      	cbz	r3, 8021c72 <_sbrk_r+0x1a>
 8021c70:	6023      	str	r3, [r4, #0]
 8021c72:	bd38      	pop	{r3, r4, r5, pc}
 8021c74:	20013c30 	.word	0x20013c30

08021c78 <_write_r>:
 8021c78:	b538      	push	{r3, r4, r5, lr}
 8021c7a:	4d07      	ldr	r5, [pc, #28]	@ (8021c98 <_write_r+0x20>)
 8021c7c:	4604      	mov	r4, r0
 8021c7e:	4608      	mov	r0, r1
 8021c80:	4611      	mov	r1, r2
 8021c82:	2200      	movs	r2, #0
 8021c84:	602a      	str	r2, [r5, #0]
 8021c86:	461a      	mov	r2, r3
 8021c88:	f7e0 fcca 	bl	8002620 <_write>
 8021c8c:	1c43      	adds	r3, r0, #1
 8021c8e:	d102      	bne.n	8021c96 <_write_r+0x1e>
 8021c90:	682b      	ldr	r3, [r5, #0]
 8021c92:	b103      	cbz	r3, 8021c96 <_write_r+0x1e>
 8021c94:	6023      	str	r3, [r4, #0]
 8021c96:	bd38      	pop	{r3, r4, r5, pc}
 8021c98:	20013c30 	.word	0x20013c30

08021c9c <__errno>:
 8021c9c:	4b01      	ldr	r3, [pc, #4]	@ (8021ca4 <__errno+0x8>)
 8021c9e:	6818      	ldr	r0, [r3, #0]
 8021ca0:	4770      	bx	lr
 8021ca2:	bf00      	nop
 8021ca4:	20000220 	.word	0x20000220

08021ca8 <__libc_init_array>:
 8021ca8:	b570      	push	{r4, r5, r6, lr}
 8021caa:	4d0d      	ldr	r5, [pc, #52]	@ (8021ce0 <__libc_init_array+0x38>)
 8021cac:	4c0d      	ldr	r4, [pc, #52]	@ (8021ce4 <__libc_init_array+0x3c>)
 8021cae:	1b64      	subs	r4, r4, r5
 8021cb0:	10a4      	asrs	r4, r4, #2
 8021cb2:	2600      	movs	r6, #0
 8021cb4:	42a6      	cmp	r6, r4
 8021cb6:	d109      	bne.n	8021ccc <__libc_init_array+0x24>
 8021cb8:	4d0b      	ldr	r5, [pc, #44]	@ (8021ce8 <__libc_init_array+0x40>)
 8021cba:	4c0c      	ldr	r4, [pc, #48]	@ (8021cec <__libc_init_array+0x44>)
 8021cbc:	f000 fd62 	bl	8022784 <_init>
 8021cc0:	1b64      	subs	r4, r4, r5
 8021cc2:	10a4      	asrs	r4, r4, #2
 8021cc4:	2600      	movs	r6, #0
 8021cc6:	42a6      	cmp	r6, r4
 8021cc8:	d105      	bne.n	8021cd6 <__libc_init_array+0x2e>
 8021cca:	bd70      	pop	{r4, r5, r6, pc}
 8021ccc:	f855 3b04 	ldr.w	r3, [r5], #4
 8021cd0:	4798      	blx	r3
 8021cd2:	3601      	adds	r6, #1
 8021cd4:	e7ee      	b.n	8021cb4 <__libc_init_array+0xc>
 8021cd6:	f855 3b04 	ldr.w	r3, [r5], #4
 8021cda:	4798      	blx	r3
 8021cdc:	3601      	adds	r6, #1
 8021cde:	e7f2      	b.n	8021cc6 <__libc_init_array+0x1e>
 8021ce0:	08024480 	.word	0x08024480
 8021ce4:	08024480 	.word	0x08024480
 8021ce8:	08024480 	.word	0x08024480
 8021cec:	08024494 	.word	0x08024494

08021cf0 <__retarget_lock_init_recursive>:
 8021cf0:	4770      	bx	lr

08021cf2 <__retarget_lock_acquire_recursive>:
 8021cf2:	4770      	bx	lr

08021cf4 <__retarget_lock_release_recursive>:
 8021cf4:	4770      	bx	lr

08021cf6 <memcpy>:
 8021cf6:	440a      	add	r2, r1
 8021cf8:	4291      	cmp	r1, r2
 8021cfa:	f100 33ff 	add.w	r3, r0, #4294967295
 8021cfe:	d100      	bne.n	8021d02 <memcpy+0xc>
 8021d00:	4770      	bx	lr
 8021d02:	b510      	push	{r4, lr}
 8021d04:	f811 4b01 	ldrb.w	r4, [r1], #1
 8021d08:	f803 4f01 	strb.w	r4, [r3, #1]!
 8021d0c:	4291      	cmp	r1, r2
 8021d0e:	d1f9      	bne.n	8021d04 <memcpy+0xe>
 8021d10:	bd10      	pop	{r4, pc}
	...

08021d14 <__register_exitproc>:
 8021d14:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8021d18:	4d27      	ldr	r5, [pc, #156]	@ (8021db8 <__register_exitproc+0xa4>)
 8021d1a:	4607      	mov	r7, r0
 8021d1c:	6828      	ldr	r0, [r5, #0]
 8021d1e:	4691      	mov	r9, r2
 8021d20:	460e      	mov	r6, r1
 8021d22:	4698      	mov	r8, r3
 8021d24:	f7ff ffe5 	bl	8021cf2 <__retarget_lock_acquire_recursive>
 8021d28:	4a24      	ldr	r2, [pc, #144]	@ (8021dbc <__register_exitproc+0xa8>)
 8021d2a:	6814      	ldr	r4, [r2, #0]
 8021d2c:	b93c      	cbnz	r4, 8021d3e <__register_exitproc+0x2a>
 8021d2e:	4b24      	ldr	r3, [pc, #144]	@ (8021dc0 <__register_exitproc+0xac>)
 8021d30:	6013      	str	r3, [r2, #0]
 8021d32:	4a24      	ldr	r2, [pc, #144]	@ (8021dc4 <__register_exitproc+0xb0>)
 8021d34:	b112      	cbz	r2, 8021d3c <__register_exitproc+0x28>
 8021d36:	6812      	ldr	r2, [r2, #0]
 8021d38:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8021d3c:	4c20      	ldr	r4, [pc, #128]	@ (8021dc0 <__register_exitproc+0xac>)
 8021d3e:	6863      	ldr	r3, [r4, #4]
 8021d40:	2b1f      	cmp	r3, #31
 8021d42:	dd06      	ble.n	8021d52 <__register_exitproc+0x3e>
 8021d44:	6828      	ldr	r0, [r5, #0]
 8021d46:	f7ff ffd5 	bl	8021cf4 <__retarget_lock_release_recursive>
 8021d4a:	f04f 30ff 	mov.w	r0, #4294967295
 8021d4e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8021d52:	b32f      	cbz	r7, 8021da0 <__register_exitproc+0x8c>
 8021d54:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 8021d58:	b968      	cbnz	r0, 8021d76 <__register_exitproc+0x62>
 8021d5a:	4b1b      	ldr	r3, [pc, #108]	@ (8021dc8 <__register_exitproc+0xb4>)
 8021d5c:	2b00      	cmp	r3, #0
 8021d5e:	d0f1      	beq.n	8021d44 <__register_exitproc+0x30>
 8021d60:	f44f 7084 	mov.w	r0, #264	@ 0x108
 8021d64:	f7ff fd14 	bl	8021790 <malloc>
 8021d68:	2800      	cmp	r0, #0
 8021d6a:	d0eb      	beq.n	8021d44 <__register_exitproc+0x30>
 8021d6c:	2300      	movs	r3, #0
 8021d6e:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 8021d72:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 8021d76:	6863      	ldr	r3, [r4, #4]
 8021d78:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8021d7c:	2201      	movs	r2, #1
 8021d7e:	409a      	lsls	r2, r3
 8021d80:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8021d84:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 8021d88:	4313      	orrs	r3, r2
 8021d8a:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 8021d8e:	2f02      	cmp	r7, #2
 8021d90:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 8021d94:	bf02      	ittt	eq
 8021d96:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 8021d9a:	4313      	orreq	r3, r2
 8021d9c:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 8021da0:	6863      	ldr	r3, [r4, #4]
 8021da2:	6828      	ldr	r0, [r5, #0]
 8021da4:	1c5a      	adds	r2, r3, #1
 8021da6:	3302      	adds	r3, #2
 8021da8:	6062      	str	r2, [r4, #4]
 8021daa:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 8021dae:	f7ff ffa1 	bl	8021cf4 <__retarget_lock_release_recursive>
 8021db2:	2000      	movs	r0, #0
 8021db4:	e7cb      	b.n	8021d4e <__register_exitproc+0x3a>
 8021db6:	bf00      	nop
 8021db8:	20000270 	.word	0x20000270
 8021dbc:	20013cc4 	.word	0x20013cc4
 8021dc0:	20013c38 	.word	0x20013c38
 8021dc4:	080242a4 	.word	0x080242a4
 8021dc8:	08021791 	.word	0x08021791

08021dcc <_free_r>:
 8021dcc:	b538      	push	{r3, r4, r5, lr}
 8021dce:	4605      	mov	r5, r0
 8021dd0:	2900      	cmp	r1, #0
 8021dd2:	d041      	beq.n	8021e58 <_free_r+0x8c>
 8021dd4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8021dd8:	1f0c      	subs	r4, r1, #4
 8021dda:	2b00      	cmp	r3, #0
 8021ddc:	bfb8      	it	lt
 8021dde:	18e4      	addlt	r4, r4, r3
 8021de0:	f7ff fd88 	bl	80218f4 <__malloc_lock>
 8021de4:	4a1d      	ldr	r2, [pc, #116]	@ (8021e5c <_free_r+0x90>)
 8021de6:	6813      	ldr	r3, [r2, #0]
 8021de8:	b933      	cbnz	r3, 8021df8 <_free_r+0x2c>
 8021dea:	6063      	str	r3, [r4, #4]
 8021dec:	6014      	str	r4, [r2, #0]
 8021dee:	4628      	mov	r0, r5
 8021df0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8021df4:	f7ff bd84 	b.w	8021900 <__malloc_unlock>
 8021df8:	42a3      	cmp	r3, r4
 8021dfa:	d908      	bls.n	8021e0e <_free_r+0x42>
 8021dfc:	6820      	ldr	r0, [r4, #0]
 8021dfe:	1821      	adds	r1, r4, r0
 8021e00:	428b      	cmp	r3, r1
 8021e02:	bf01      	itttt	eq
 8021e04:	6819      	ldreq	r1, [r3, #0]
 8021e06:	685b      	ldreq	r3, [r3, #4]
 8021e08:	1809      	addeq	r1, r1, r0
 8021e0a:	6021      	streq	r1, [r4, #0]
 8021e0c:	e7ed      	b.n	8021dea <_free_r+0x1e>
 8021e0e:	461a      	mov	r2, r3
 8021e10:	685b      	ldr	r3, [r3, #4]
 8021e12:	b10b      	cbz	r3, 8021e18 <_free_r+0x4c>
 8021e14:	42a3      	cmp	r3, r4
 8021e16:	d9fa      	bls.n	8021e0e <_free_r+0x42>
 8021e18:	6811      	ldr	r1, [r2, #0]
 8021e1a:	1850      	adds	r0, r2, r1
 8021e1c:	42a0      	cmp	r0, r4
 8021e1e:	d10b      	bne.n	8021e38 <_free_r+0x6c>
 8021e20:	6820      	ldr	r0, [r4, #0]
 8021e22:	4401      	add	r1, r0
 8021e24:	1850      	adds	r0, r2, r1
 8021e26:	4283      	cmp	r3, r0
 8021e28:	6011      	str	r1, [r2, #0]
 8021e2a:	d1e0      	bne.n	8021dee <_free_r+0x22>
 8021e2c:	6818      	ldr	r0, [r3, #0]
 8021e2e:	685b      	ldr	r3, [r3, #4]
 8021e30:	6053      	str	r3, [r2, #4]
 8021e32:	4408      	add	r0, r1
 8021e34:	6010      	str	r0, [r2, #0]
 8021e36:	e7da      	b.n	8021dee <_free_r+0x22>
 8021e38:	d902      	bls.n	8021e40 <_free_r+0x74>
 8021e3a:	230c      	movs	r3, #12
 8021e3c:	602b      	str	r3, [r5, #0]
 8021e3e:	e7d6      	b.n	8021dee <_free_r+0x22>
 8021e40:	6820      	ldr	r0, [r4, #0]
 8021e42:	1821      	adds	r1, r4, r0
 8021e44:	428b      	cmp	r3, r1
 8021e46:	bf04      	itt	eq
 8021e48:	6819      	ldreq	r1, [r3, #0]
 8021e4a:	685b      	ldreq	r3, [r3, #4]
 8021e4c:	6063      	str	r3, [r4, #4]
 8021e4e:	bf04      	itt	eq
 8021e50:	1809      	addeq	r1, r1, r0
 8021e52:	6021      	streq	r1, [r4, #0]
 8021e54:	6054      	str	r4, [r2, #4]
 8021e56:	e7ca      	b.n	8021dee <_free_r+0x22>
 8021e58:	bd38      	pop	{r3, r4, r5, pc}
 8021e5a:	bf00      	nop
 8021e5c:	20013af0 	.word	0x20013af0

08021e60 <__sfputc_r>:
 8021e60:	6893      	ldr	r3, [r2, #8]
 8021e62:	3b01      	subs	r3, #1
 8021e64:	2b00      	cmp	r3, #0
 8021e66:	b410      	push	{r4}
 8021e68:	6093      	str	r3, [r2, #8]
 8021e6a:	da08      	bge.n	8021e7e <__sfputc_r+0x1e>
 8021e6c:	6994      	ldr	r4, [r2, #24]
 8021e6e:	42a3      	cmp	r3, r4
 8021e70:	db01      	blt.n	8021e76 <__sfputc_r+0x16>
 8021e72:	290a      	cmp	r1, #10
 8021e74:	d103      	bne.n	8021e7e <__sfputc_r+0x1e>
 8021e76:	f85d 4b04 	ldr.w	r4, [sp], #4
 8021e7a:	f000 bb6b 	b.w	8022554 <__swbuf_r>
 8021e7e:	6813      	ldr	r3, [r2, #0]
 8021e80:	1c58      	adds	r0, r3, #1
 8021e82:	6010      	str	r0, [r2, #0]
 8021e84:	7019      	strb	r1, [r3, #0]
 8021e86:	4608      	mov	r0, r1
 8021e88:	f85d 4b04 	ldr.w	r4, [sp], #4
 8021e8c:	4770      	bx	lr

08021e8e <__sfputs_r>:
 8021e8e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021e90:	4606      	mov	r6, r0
 8021e92:	460f      	mov	r7, r1
 8021e94:	4614      	mov	r4, r2
 8021e96:	18d5      	adds	r5, r2, r3
 8021e98:	42ac      	cmp	r4, r5
 8021e9a:	d101      	bne.n	8021ea0 <__sfputs_r+0x12>
 8021e9c:	2000      	movs	r0, #0
 8021e9e:	e007      	b.n	8021eb0 <__sfputs_r+0x22>
 8021ea0:	f814 1b01 	ldrb.w	r1, [r4], #1
 8021ea4:	463a      	mov	r2, r7
 8021ea6:	4630      	mov	r0, r6
 8021ea8:	f7ff ffda 	bl	8021e60 <__sfputc_r>
 8021eac:	1c43      	adds	r3, r0, #1
 8021eae:	d1f3      	bne.n	8021e98 <__sfputs_r+0xa>
 8021eb0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08021eb4 <_vfiprintf_r>:
 8021eb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021eb8:	460d      	mov	r5, r1
 8021eba:	b09d      	sub	sp, #116	@ 0x74
 8021ebc:	4614      	mov	r4, r2
 8021ebe:	4698      	mov	r8, r3
 8021ec0:	4606      	mov	r6, r0
 8021ec2:	b118      	cbz	r0, 8021ecc <_vfiprintf_r+0x18>
 8021ec4:	6a03      	ldr	r3, [r0, #32]
 8021ec6:	b90b      	cbnz	r3, 8021ecc <_vfiprintf_r+0x18>
 8021ec8:	f7ff fdba 	bl	8021a40 <__sinit>
 8021ecc:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8021ece:	07d9      	lsls	r1, r3, #31
 8021ed0:	d405      	bmi.n	8021ede <_vfiprintf_r+0x2a>
 8021ed2:	89ab      	ldrh	r3, [r5, #12]
 8021ed4:	059a      	lsls	r2, r3, #22
 8021ed6:	d402      	bmi.n	8021ede <_vfiprintf_r+0x2a>
 8021ed8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8021eda:	f7ff ff0a 	bl	8021cf2 <__retarget_lock_acquire_recursive>
 8021ede:	89ab      	ldrh	r3, [r5, #12]
 8021ee0:	071b      	lsls	r3, r3, #28
 8021ee2:	d501      	bpl.n	8021ee8 <_vfiprintf_r+0x34>
 8021ee4:	692b      	ldr	r3, [r5, #16]
 8021ee6:	b99b      	cbnz	r3, 8021f10 <_vfiprintf_r+0x5c>
 8021ee8:	4629      	mov	r1, r5
 8021eea:	4630      	mov	r0, r6
 8021eec:	f000 fb70 	bl	80225d0 <__swsetup_r>
 8021ef0:	b170      	cbz	r0, 8021f10 <_vfiprintf_r+0x5c>
 8021ef2:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8021ef4:	07dc      	lsls	r4, r3, #31
 8021ef6:	d504      	bpl.n	8021f02 <_vfiprintf_r+0x4e>
 8021ef8:	f04f 30ff 	mov.w	r0, #4294967295
 8021efc:	b01d      	add	sp, #116	@ 0x74
 8021efe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021f02:	89ab      	ldrh	r3, [r5, #12]
 8021f04:	0598      	lsls	r0, r3, #22
 8021f06:	d4f7      	bmi.n	8021ef8 <_vfiprintf_r+0x44>
 8021f08:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8021f0a:	f7ff fef3 	bl	8021cf4 <__retarget_lock_release_recursive>
 8021f0e:	e7f3      	b.n	8021ef8 <_vfiprintf_r+0x44>
 8021f10:	2300      	movs	r3, #0
 8021f12:	9309      	str	r3, [sp, #36]	@ 0x24
 8021f14:	2320      	movs	r3, #32
 8021f16:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8021f1a:	f8cd 800c 	str.w	r8, [sp, #12]
 8021f1e:	2330      	movs	r3, #48	@ 0x30
 8021f20:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 80220d0 <_vfiprintf_r+0x21c>
 8021f24:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8021f28:	f04f 0901 	mov.w	r9, #1
 8021f2c:	4623      	mov	r3, r4
 8021f2e:	469a      	mov	sl, r3
 8021f30:	f813 2b01 	ldrb.w	r2, [r3], #1
 8021f34:	b10a      	cbz	r2, 8021f3a <_vfiprintf_r+0x86>
 8021f36:	2a25      	cmp	r2, #37	@ 0x25
 8021f38:	d1f9      	bne.n	8021f2e <_vfiprintf_r+0x7a>
 8021f3a:	ebba 0b04 	subs.w	fp, sl, r4
 8021f3e:	d00b      	beq.n	8021f58 <_vfiprintf_r+0xa4>
 8021f40:	465b      	mov	r3, fp
 8021f42:	4622      	mov	r2, r4
 8021f44:	4629      	mov	r1, r5
 8021f46:	4630      	mov	r0, r6
 8021f48:	f7ff ffa1 	bl	8021e8e <__sfputs_r>
 8021f4c:	3001      	adds	r0, #1
 8021f4e:	f000 80a7 	beq.w	80220a0 <_vfiprintf_r+0x1ec>
 8021f52:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8021f54:	445a      	add	r2, fp
 8021f56:	9209      	str	r2, [sp, #36]	@ 0x24
 8021f58:	f89a 3000 	ldrb.w	r3, [sl]
 8021f5c:	2b00      	cmp	r3, #0
 8021f5e:	f000 809f 	beq.w	80220a0 <_vfiprintf_r+0x1ec>
 8021f62:	2300      	movs	r3, #0
 8021f64:	f04f 32ff 	mov.w	r2, #4294967295
 8021f68:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8021f6c:	f10a 0a01 	add.w	sl, sl, #1
 8021f70:	9304      	str	r3, [sp, #16]
 8021f72:	9307      	str	r3, [sp, #28]
 8021f74:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8021f78:	931a      	str	r3, [sp, #104]	@ 0x68
 8021f7a:	4654      	mov	r4, sl
 8021f7c:	2205      	movs	r2, #5
 8021f7e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8021f82:	4853      	ldr	r0, [pc, #332]	@ (80220d0 <_vfiprintf_r+0x21c>)
 8021f84:	f7de f93c 	bl	8000200 <memchr>
 8021f88:	9a04      	ldr	r2, [sp, #16]
 8021f8a:	b9d8      	cbnz	r0, 8021fc4 <_vfiprintf_r+0x110>
 8021f8c:	06d1      	lsls	r1, r2, #27
 8021f8e:	bf44      	itt	mi
 8021f90:	2320      	movmi	r3, #32
 8021f92:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8021f96:	0713      	lsls	r3, r2, #28
 8021f98:	bf44      	itt	mi
 8021f9a:	232b      	movmi	r3, #43	@ 0x2b
 8021f9c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8021fa0:	f89a 3000 	ldrb.w	r3, [sl]
 8021fa4:	2b2a      	cmp	r3, #42	@ 0x2a
 8021fa6:	d015      	beq.n	8021fd4 <_vfiprintf_r+0x120>
 8021fa8:	9a07      	ldr	r2, [sp, #28]
 8021faa:	4654      	mov	r4, sl
 8021fac:	2000      	movs	r0, #0
 8021fae:	f04f 0c0a 	mov.w	ip, #10
 8021fb2:	4621      	mov	r1, r4
 8021fb4:	f811 3b01 	ldrb.w	r3, [r1], #1
 8021fb8:	3b30      	subs	r3, #48	@ 0x30
 8021fba:	2b09      	cmp	r3, #9
 8021fbc:	d94b      	bls.n	8022056 <_vfiprintf_r+0x1a2>
 8021fbe:	b1b0      	cbz	r0, 8021fee <_vfiprintf_r+0x13a>
 8021fc0:	9207      	str	r2, [sp, #28]
 8021fc2:	e014      	b.n	8021fee <_vfiprintf_r+0x13a>
 8021fc4:	eba0 0308 	sub.w	r3, r0, r8
 8021fc8:	fa09 f303 	lsl.w	r3, r9, r3
 8021fcc:	4313      	orrs	r3, r2
 8021fce:	9304      	str	r3, [sp, #16]
 8021fd0:	46a2      	mov	sl, r4
 8021fd2:	e7d2      	b.n	8021f7a <_vfiprintf_r+0xc6>
 8021fd4:	9b03      	ldr	r3, [sp, #12]
 8021fd6:	1d19      	adds	r1, r3, #4
 8021fd8:	681b      	ldr	r3, [r3, #0]
 8021fda:	9103      	str	r1, [sp, #12]
 8021fdc:	2b00      	cmp	r3, #0
 8021fde:	bfbb      	ittet	lt
 8021fe0:	425b      	neglt	r3, r3
 8021fe2:	f042 0202 	orrlt.w	r2, r2, #2
 8021fe6:	9307      	strge	r3, [sp, #28]
 8021fe8:	9307      	strlt	r3, [sp, #28]
 8021fea:	bfb8      	it	lt
 8021fec:	9204      	strlt	r2, [sp, #16]
 8021fee:	7823      	ldrb	r3, [r4, #0]
 8021ff0:	2b2e      	cmp	r3, #46	@ 0x2e
 8021ff2:	d10a      	bne.n	802200a <_vfiprintf_r+0x156>
 8021ff4:	7863      	ldrb	r3, [r4, #1]
 8021ff6:	2b2a      	cmp	r3, #42	@ 0x2a
 8021ff8:	d132      	bne.n	8022060 <_vfiprintf_r+0x1ac>
 8021ffa:	9b03      	ldr	r3, [sp, #12]
 8021ffc:	1d1a      	adds	r2, r3, #4
 8021ffe:	681b      	ldr	r3, [r3, #0]
 8022000:	9203      	str	r2, [sp, #12]
 8022002:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8022006:	3402      	adds	r4, #2
 8022008:	9305      	str	r3, [sp, #20]
 802200a:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 80220e0 <_vfiprintf_r+0x22c>
 802200e:	7821      	ldrb	r1, [r4, #0]
 8022010:	2203      	movs	r2, #3
 8022012:	4650      	mov	r0, sl
 8022014:	f7de f8f4 	bl	8000200 <memchr>
 8022018:	b138      	cbz	r0, 802202a <_vfiprintf_r+0x176>
 802201a:	9b04      	ldr	r3, [sp, #16]
 802201c:	eba0 000a 	sub.w	r0, r0, sl
 8022020:	2240      	movs	r2, #64	@ 0x40
 8022022:	4082      	lsls	r2, r0
 8022024:	4313      	orrs	r3, r2
 8022026:	3401      	adds	r4, #1
 8022028:	9304      	str	r3, [sp, #16]
 802202a:	f814 1b01 	ldrb.w	r1, [r4], #1
 802202e:	4829      	ldr	r0, [pc, #164]	@ (80220d4 <_vfiprintf_r+0x220>)
 8022030:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8022034:	2206      	movs	r2, #6
 8022036:	f7de f8e3 	bl	8000200 <memchr>
 802203a:	2800      	cmp	r0, #0
 802203c:	d03f      	beq.n	80220be <_vfiprintf_r+0x20a>
 802203e:	4b26      	ldr	r3, [pc, #152]	@ (80220d8 <_vfiprintf_r+0x224>)
 8022040:	bb1b      	cbnz	r3, 802208a <_vfiprintf_r+0x1d6>
 8022042:	9b03      	ldr	r3, [sp, #12]
 8022044:	3307      	adds	r3, #7
 8022046:	f023 0307 	bic.w	r3, r3, #7
 802204a:	3308      	adds	r3, #8
 802204c:	9303      	str	r3, [sp, #12]
 802204e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022050:	443b      	add	r3, r7
 8022052:	9309      	str	r3, [sp, #36]	@ 0x24
 8022054:	e76a      	b.n	8021f2c <_vfiprintf_r+0x78>
 8022056:	fb0c 3202 	mla	r2, ip, r2, r3
 802205a:	460c      	mov	r4, r1
 802205c:	2001      	movs	r0, #1
 802205e:	e7a8      	b.n	8021fb2 <_vfiprintf_r+0xfe>
 8022060:	2300      	movs	r3, #0
 8022062:	3401      	adds	r4, #1
 8022064:	9305      	str	r3, [sp, #20]
 8022066:	4619      	mov	r1, r3
 8022068:	f04f 0c0a 	mov.w	ip, #10
 802206c:	4620      	mov	r0, r4
 802206e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8022072:	3a30      	subs	r2, #48	@ 0x30
 8022074:	2a09      	cmp	r2, #9
 8022076:	d903      	bls.n	8022080 <_vfiprintf_r+0x1cc>
 8022078:	2b00      	cmp	r3, #0
 802207a:	d0c6      	beq.n	802200a <_vfiprintf_r+0x156>
 802207c:	9105      	str	r1, [sp, #20]
 802207e:	e7c4      	b.n	802200a <_vfiprintf_r+0x156>
 8022080:	fb0c 2101 	mla	r1, ip, r1, r2
 8022084:	4604      	mov	r4, r0
 8022086:	2301      	movs	r3, #1
 8022088:	e7f0      	b.n	802206c <_vfiprintf_r+0x1b8>
 802208a:	ab03      	add	r3, sp, #12
 802208c:	9300      	str	r3, [sp, #0]
 802208e:	462a      	mov	r2, r5
 8022090:	4b12      	ldr	r3, [pc, #72]	@ (80220dc <_vfiprintf_r+0x228>)
 8022092:	a904      	add	r1, sp, #16
 8022094:	4630      	mov	r0, r6
 8022096:	f3af 8000 	nop.w
 802209a:	4607      	mov	r7, r0
 802209c:	1c78      	adds	r0, r7, #1
 802209e:	d1d6      	bne.n	802204e <_vfiprintf_r+0x19a>
 80220a0:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80220a2:	07d9      	lsls	r1, r3, #31
 80220a4:	d405      	bmi.n	80220b2 <_vfiprintf_r+0x1fe>
 80220a6:	89ab      	ldrh	r3, [r5, #12]
 80220a8:	059a      	lsls	r2, r3, #22
 80220aa:	d402      	bmi.n	80220b2 <_vfiprintf_r+0x1fe>
 80220ac:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80220ae:	f7ff fe21 	bl	8021cf4 <__retarget_lock_release_recursive>
 80220b2:	89ab      	ldrh	r3, [r5, #12]
 80220b4:	065b      	lsls	r3, r3, #25
 80220b6:	f53f af1f 	bmi.w	8021ef8 <_vfiprintf_r+0x44>
 80220ba:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80220bc:	e71e      	b.n	8021efc <_vfiprintf_r+0x48>
 80220be:	ab03      	add	r3, sp, #12
 80220c0:	9300      	str	r3, [sp, #0]
 80220c2:	462a      	mov	r2, r5
 80220c4:	4b05      	ldr	r3, [pc, #20]	@ (80220dc <_vfiprintf_r+0x228>)
 80220c6:	a904      	add	r1, sp, #16
 80220c8:	4630      	mov	r0, r6
 80220ca:	f000 f879 	bl	80221c0 <_printf_i>
 80220ce:	e7e4      	b.n	802209a <_vfiprintf_r+0x1e6>
 80220d0:	08023248 	.word	0x08023248
 80220d4:	08023252 	.word	0x08023252
 80220d8:	00000000 	.word	0x00000000
 80220dc:	08021e8f 	.word	0x08021e8f
 80220e0:	0802324e 	.word	0x0802324e

080220e4 <_printf_common>:
 80220e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80220e8:	4616      	mov	r6, r2
 80220ea:	4698      	mov	r8, r3
 80220ec:	688a      	ldr	r2, [r1, #8]
 80220ee:	690b      	ldr	r3, [r1, #16]
 80220f0:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80220f4:	4293      	cmp	r3, r2
 80220f6:	bfb8      	it	lt
 80220f8:	4613      	movlt	r3, r2
 80220fa:	6033      	str	r3, [r6, #0]
 80220fc:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8022100:	4607      	mov	r7, r0
 8022102:	460c      	mov	r4, r1
 8022104:	b10a      	cbz	r2, 802210a <_printf_common+0x26>
 8022106:	3301      	adds	r3, #1
 8022108:	6033      	str	r3, [r6, #0]
 802210a:	6823      	ldr	r3, [r4, #0]
 802210c:	0699      	lsls	r1, r3, #26
 802210e:	bf42      	ittt	mi
 8022110:	6833      	ldrmi	r3, [r6, #0]
 8022112:	3302      	addmi	r3, #2
 8022114:	6033      	strmi	r3, [r6, #0]
 8022116:	6825      	ldr	r5, [r4, #0]
 8022118:	f015 0506 	ands.w	r5, r5, #6
 802211c:	d106      	bne.n	802212c <_printf_common+0x48>
 802211e:	f104 0a19 	add.w	sl, r4, #25
 8022122:	68e3      	ldr	r3, [r4, #12]
 8022124:	6832      	ldr	r2, [r6, #0]
 8022126:	1a9b      	subs	r3, r3, r2
 8022128:	42ab      	cmp	r3, r5
 802212a:	dc26      	bgt.n	802217a <_printf_common+0x96>
 802212c:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8022130:	6822      	ldr	r2, [r4, #0]
 8022132:	3b00      	subs	r3, #0
 8022134:	bf18      	it	ne
 8022136:	2301      	movne	r3, #1
 8022138:	0692      	lsls	r2, r2, #26
 802213a:	d42b      	bmi.n	8022194 <_printf_common+0xb0>
 802213c:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8022140:	4641      	mov	r1, r8
 8022142:	4638      	mov	r0, r7
 8022144:	47c8      	blx	r9
 8022146:	3001      	adds	r0, #1
 8022148:	d01e      	beq.n	8022188 <_printf_common+0xa4>
 802214a:	6823      	ldr	r3, [r4, #0]
 802214c:	6922      	ldr	r2, [r4, #16]
 802214e:	f003 0306 	and.w	r3, r3, #6
 8022152:	2b04      	cmp	r3, #4
 8022154:	bf02      	ittt	eq
 8022156:	68e5      	ldreq	r5, [r4, #12]
 8022158:	6833      	ldreq	r3, [r6, #0]
 802215a:	1aed      	subeq	r5, r5, r3
 802215c:	68a3      	ldr	r3, [r4, #8]
 802215e:	bf0c      	ite	eq
 8022160:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8022164:	2500      	movne	r5, #0
 8022166:	4293      	cmp	r3, r2
 8022168:	bfc4      	itt	gt
 802216a:	1a9b      	subgt	r3, r3, r2
 802216c:	18ed      	addgt	r5, r5, r3
 802216e:	2600      	movs	r6, #0
 8022170:	341a      	adds	r4, #26
 8022172:	42b5      	cmp	r5, r6
 8022174:	d11a      	bne.n	80221ac <_printf_common+0xc8>
 8022176:	2000      	movs	r0, #0
 8022178:	e008      	b.n	802218c <_printf_common+0xa8>
 802217a:	2301      	movs	r3, #1
 802217c:	4652      	mov	r2, sl
 802217e:	4641      	mov	r1, r8
 8022180:	4638      	mov	r0, r7
 8022182:	47c8      	blx	r9
 8022184:	3001      	adds	r0, #1
 8022186:	d103      	bne.n	8022190 <_printf_common+0xac>
 8022188:	f04f 30ff 	mov.w	r0, #4294967295
 802218c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8022190:	3501      	adds	r5, #1
 8022192:	e7c6      	b.n	8022122 <_printf_common+0x3e>
 8022194:	18e1      	adds	r1, r4, r3
 8022196:	1c5a      	adds	r2, r3, #1
 8022198:	2030      	movs	r0, #48	@ 0x30
 802219a:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 802219e:	4422      	add	r2, r4
 80221a0:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 80221a4:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 80221a8:	3302      	adds	r3, #2
 80221aa:	e7c7      	b.n	802213c <_printf_common+0x58>
 80221ac:	2301      	movs	r3, #1
 80221ae:	4622      	mov	r2, r4
 80221b0:	4641      	mov	r1, r8
 80221b2:	4638      	mov	r0, r7
 80221b4:	47c8      	blx	r9
 80221b6:	3001      	adds	r0, #1
 80221b8:	d0e6      	beq.n	8022188 <_printf_common+0xa4>
 80221ba:	3601      	adds	r6, #1
 80221bc:	e7d9      	b.n	8022172 <_printf_common+0x8e>
	...

080221c0 <_printf_i>:
 80221c0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80221c4:	7e0f      	ldrb	r7, [r1, #24]
 80221c6:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80221c8:	2f78      	cmp	r7, #120	@ 0x78
 80221ca:	4691      	mov	r9, r2
 80221cc:	4680      	mov	r8, r0
 80221ce:	460c      	mov	r4, r1
 80221d0:	469a      	mov	sl, r3
 80221d2:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 80221d6:	d807      	bhi.n	80221e8 <_printf_i+0x28>
 80221d8:	2f62      	cmp	r7, #98	@ 0x62
 80221da:	d80a      	bhi.n	80221f2 <_printf_i+0x32>
 80221dc:	2f00      	cmp	r7, #0
 80221de:	f000 80d1 	beq.w	8022384 <_printf_i+0x1c4>
 80221e2:	2f58      	cmp	r7, #88	@ 0x58
 80221e4:	f000 80b8 	beq.w	8022358 <_printf_i+0x198>
 80221e8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80221ec:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 80221f0:	e03a      	b.n	8022268 <_printf_i+0xa8>
 80221f2:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 80221f6:	2b15      	cmp	r3, #21
 80221f8:	d8f6      	bhi.n	80221e8 <_printf_i+0x28>
 80221fa:	a101      	add	r1, pc, #4	@ (adr r1, 8022200 <_printf_i+0x40>)
 80221fc:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8022200:	08022259 	.word	0x08022259
 8022204:	0802226d 	.word	0x0802226d
 8022208:	080221e9 	.word	0x080221e9
 802220c:	080221e9 	.word	0x080221e9
 8022210:	080221e9 	.word	0x080221e9
 8022214:	080221e9 	.word	0x080221e9
 8022218:	0802226d 	.word	0x0802226d
 802221c:	080221e9 	.word	0x080221e9
 8022220:	080221e9 	.word	0x080221e9
 8022224:	080221e9 	.word	0x080221e9
 8022228:	080221e9 	.word	0x080221e9
 802222c:	0802236b 	.word	0x0802236b
 8022230:	08022297 	.word	0x08022297
 8022234:	08022325 	.word	0x08022325
 8022238:	080221e9 	.word	0x080221e9
 802223c:	080221e9 	.word	0x080221e9
 8022240:	0802238d 	.word	0x0802238d
 8022244:	080221e9 	.word	0x080221e9
 8022248:	08022297 	.word	0x08022297
 802224c:	080221e9 	.word	0x080221e9
 8022250:	080221e9 	.word	0x080221e9
 8022254:	0802232d 	.word	0x0802232d
 8022258:	6833      	ldr	r3, [r6, #0]
 802225a:	1d1a      	adds	r2, r3, #4
 802225c:	681b      	ldr	r3, [r3, #0]
 802225e:	6032      	str	r2, [r6, #0]
 8022260:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8022264:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8022268:	2301      	movs	r3, #1
 802226a:	e09c      	b.n	80223a6 <_printf_i+0x1e6>
 802226c:	6833      	ldr	r3, [r6, #0]
 802226e:	6820      	ldr	r0, [r4, #0]
 8022270:	1d19      	adds	r1, r3, #4
 8022272:	6031      	str	r1, [r6, #0]
 8022274:	0606      	lsls	r6, r0, #24
 8022276:	d501      	bpl.n	802227c <_printf_i+0xbc>
 8022278:	681d      	ldr	r5, [r3, #0]
 802227a:	e003      	b.n	8022284 <_printf_i+0xc4>
 802227c:	0645      	lsls	r5, r0, #25
 802227e:	d5fb      	bpl.n	8022278 <_printf_i+0xb8>
 8022280:	f9b3 5000 	ldrsh.w	r5, [r3]
 8022284:	2d00      	cmp	r5, #0
 8022286:	da03      	bge.n	8022290 <_printf_i+0xd0>
 8022288:	232d      	movs	r3, #45	@ 0x2d
 802228a:	426d      	negs	r5, r5
 802228c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8022290:	4858      	ldr	r0, [pc, #352]	@ (80223f4 <_printf_i+0x234>)
 8022292:	230a      	movs	r3, #10
 8022294:	e011      	b.n	80222ba <_printf_i+0xfa>
 8022296:	6821      	ldr	r1, [r4, #0]
 8022298:	6833      	ldr	r3, [r6, #0]
 802229a:	0608      	lsls	r0, r1, #24
 802229c:	f853 5b04 	ldr.w	r5, [r3], #4
 80222a0:	d402      	bmi.n	80222a8 <_printf_i+0xe8>
 80222a2:	0649      	lsls	r1, r1, #25
 80222a4:	bf48      	it	mi
 80222a6:	b2ad      	uxthmi	r5, r5
 80222a8:	2f6f      	cmp	r7, #111	@ 0x6f
 80222aa:	4852      	ldr	r0, [pc, #328]	@ (80223f4 <_printf_i+0x234>)
 80222ac:	6033      	str	r3, [r6, #0]
 80222ae:	bf14      	ite	ne
 80222b0:	230a      	movne	r3, #10
 80222b2:	2308      	moveq	r3, #8
 80222b4:	2100      	movs	r1, #0
 80222b6:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80222ba:	6866      	ldr	r6, [r4, #4]
 80222bc:	60a6      	str	r6, [r4, #8]
 80222be:	2e00      	cmp	r6, #0
 80222c0:	db05      	blt.n	80222ce <_printf_i+0x10e>
 80222c2:	6821      	ldr	r1, [r4, #0]
 80222c4:	432e      	orrs	r6, r5
 80222c6:	f021 0104 	bic.w	r1, r1, #4
 80222ca:	6021      	str	r1, [r4, #0]
 80222cc:	d04b      	beq.n	8022366 <_printf_i+0x1a6>
 80222ce:	4616      	mov	r6, r2
 80222d0:	fbb5 f1f3 	udiv	r1, r5, r3
 80222d4:	fb03 5711 	mls	r7, r3, r1, r5
 80222d8:	5dc7      	ldrb	r7, [r0, r7]
 80222da:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80222de:	462f      	mov	r7, r5
 80222e0:	42bb      	cmp	r3, r7
 80222e2:	460d      	mov	r5, r1
 80222e4:	d9f4      	bls.n	80222d0 <_printf_i+0x110>
 80222e6:	2b08      	cmp	r3, #8
 80222e8:	d10b      	bne.n	8022302 <_printf_i+0x142>
 80222ea:	6823      	ldr	r3, [r4, #0]
 80222ec:	07df      	lsls	r7, r3, #31
 80222ee:	d508      	bpl.n	8022302 <_printf_i+0x142>
 80222f0:	6923      	ldr	r3, [r4, #16]
 80222f2:	6861      	ldr	r1, [r4, #4]
 80222f4:	4299      	cmp	r1, r3
 80222f6:	bfde      	ittt	le
 80222f8:	2330      	movle	r3, #48	@ 0x30
 80222fa:	f806 3c01 	strble.w	r3, [r6, #-1]
 80222fe:	f106 36ff 	addle.w	r6, r6, #4294967295
 8022302:	1b92      	subs	r2, r2, r6
 8022304:	6122      	str	r2, [r4, #16]
 8022306:	f8cd a000 	str.w	sl, [sp]
 802230a:	464b      	mov	r3, r9
 802230c:	aa03      	add	r2, sp, #12
 802230e:	4621      	mov	r1, r4
 8022310:	4640      	mov	r0, r8
 8022312:	f7ff fee7 	bl	80220e4 <_printf_common>
 8022316:	3001      	adds	r0, #1
 8022318:	d14a      	bne.n	80223b0 <_printf_i+0x1f0>
 802231a:	f04f 30ff 	mov.w	r0, #4294967295
 802231e:	b004      	add	sp, #16
 8022320:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8022324:	6823      	ldr	r3, [r4, #0]
 8022326:	f043 0320 	orr.w	r3, r3, #32
 802232a:	6023      	str	r3, [r4, #0]
 802232c:	4832      	ldr	r0, [pc, #200]	@ (80223f8 <_printf_i+0x238>)
 802232e:	2778      	movs	r7, #120	@ 0x78
 8022330:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8022334:	6823      	ldr	r3, [r4, #0]
 8022336:	6831      	ldr	r1, [r6, #0]
 8022338:	061f      	lsls	r7, r3, #24
 802233a:	f851 5b04 	ldr.w	r5, [r1], #4
 802233e:	d402      	bmi.n	8022346 <_printf_i+0x186>
 8022340:	065f      	lsls	r7, r3, #25
 8022342:	bf48      	it	mi
 8022344:	b2ad      	uxthmi	r5, r5
 8022346:	6031      	str	r1, [r6, #0]
 8022348:	07d9      	lsls	r1, r3, #31
 802234a:	bf44      	itt	mi
 802234c:	f043 0320 	orrmi.w	r3, r3, #32
 8022350:	6023      	strmi	r3, [r4, #0]
 8022352:	b11d      	cbz	r5, 802235c <_printf_i+0x19c>
 8022354:	2310      	movs	r3, #16
 8022356:	e7ad      	b.n	80222b4 <_printf_i+0xf4>
 8022358:	4826      	ldr	r0, [pc, #152]	@ (80223f4 <_printf_i+0x234>)
 802235a:	e7e9      	b.n	8022330 <_printf_i+0x170>
 802235c:	6823      	ldr	r3, [r4, #0]
 802235e:	f023 0320 	bic.w	r3, r3, #32
 8022362:	6023      	str	r3, [r4, #0]
 8022364:	e7f6      	b.n	8022354 <_printf_i+0x194>
 8022366:	4616      	mov	r6, r2
 8022368:	e7bd      	b.n	80222e6 <_printf_i+0x126>
 802236a:	6833      	ldr	r3, [r6, #0]
 802236c:	6825      	ldr	r5, [r4, #0]
 802236e:	6961      	ldr	r1, [r4, #20]
 8022370:	1d18      	adds	r0, r3, #4
 8022372:	6030      	str	r0, [r6, #0]
 8022374:	062e      	lsls	r6, r5, #24
 8022376:	681b      	ldr	r3, [r3, #0]
 8022378:	d501      	bpl.n	802237e <_printf_i+0x1be>
 802237a:	6019      	str	r1, [r3, #0]
 802237c:	e002      	b.n	8022384 <_printf_i+0x1c4>
 802237e:	0668      	lsls	r0, r5, #25
 8022380:	d5fb      	bpl.n	802237a <_printf_i+0x1ba>
 8022382:	8019      	strh	r1, [r3, #0]
 8022384:	2300      	movs	r3, #0
 8022386:	6123      	str	r3, [r4, #16]
 8022388:	4616      	mov	r6, r2
 802238a:	e7bc      	b.n	8022306 <_printf_i+0x146>
 802238c:	6833      	ldr	r3, [r6, #0]
 802238e:	1d1a      	adds	r2, r3, #4
 8022390:	6032      	str	r2, [r6, #0]
 8022392:	681e      	ldr	r6, [r3, #0]
 8022394:	6862      	ldr	r2, [r4, #4]
 8022396:	2100      	movs	r1, #0
 8022398:	4630      	mov	r0, r6
 802239a:	f7dd ff31 	bl	8000200 <memchr>
 802239e:	b108      	cbz	r0, 80223a4 <_printf_i+0x1e4>
 80223a0:	1b80      	subs	r0, r0, r6
 80223a2:	6060      	str	r0, [r4, #4]
 80223a4:	6863      	ldr	r3, [r4, #4]
 80223a6:	6123      	str	r3, [r4, #16]
 80223a8:	2300      	movs	r3, #0
 80223aa:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80223ae:	e7aa      	b.n	8022306 <_printf_i+0x146>
 80223b0:	6923      	ldr	r3, [r4, #16]
 80223b2:	4632      	mov	r2, r6
 80223b4:	4649      	mov	r1, r9
 80223b6:	4640      	mov	r0, r8
 80223b8:	47d0      	blx	sl
 80223ba:	3001      	adds	r0, #1
 80223bc:	d0ad      	beq.n	802231a <_printf_i+0x15a>
 80223be:	6823      	ldr	r3, [r4, #0]
 80223c0:	079b      	lsls	r3, r3, #30
 80223c2:	d413      	bmi.n	80223ec <_printf_i+0x22c>
 80223c4:	68e0      	ldr	r0, [r4, #12]
 80223c6:	9b03      	ldr	r3, [sp, #12]
 80223c8:	4298      	cmp	r0, r3
 80223ca:	bfb8      	it	lt
 80223cc:	4618      	movlt	r0, r3
 80223ce:	e7a6      	b.n	802231e <_printf_i+0x15e>
 80223d0:	2301      	movs	r3, #1
 80223d2:	4632      	mov	r2, r6
 80223d4:	4649      	mov	r1, r9
 80223d6:	4640      	mov	r0, r8
 80223d8:	47d0      	blx	sl
 80223da:	3001      	adds	r0, #1
 80223dc:	d09d      	beq.n	802231a <_printf_i+0x15a>
 80223de:	3501      	adds	r5, #1
 80223e0:	68e3      	ldr	r3, [r4, #12]
 80223e2:	9903      	ldr	r1, [sp, #12]
 80223e4:	1a5b      	subs	r3, r3, r1
 80223e6:	42ab      	cmp	r3, r5
 80223e8:	dcf2      	bgt.n	80223d0 <_printf_i+0x210>
 80223ea:	e7eb      	b.n	80223c4 <_printf_i+0x204>
 80223ec:	2500      	movs	r5, #0
 80223ee:	f104 0619 	add.w	r6, r4, #25
 80223f2:	e7f5      	b.n	80223e0 <_printf_i+0x220>
 80223f4:	08023259 	.word	0x08023259
 80223f8:	0802326a 	.word	0x0802326a

080223fc <__sflush_r>:
 80223fc:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8022400:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8022404:	0716      	lsls	r6, r2, #28
 8022406:	4605      	mov	r5, r0
 8022408:	460c      	mov	r4, r1
 802240a:	d454      	bmi.n	80224b6 <__sflush_r+0xba>
 802240c:	684b      	ldr	r3, [r1, #4]
 802240e:	2b00      	cmp	r3, #0
 8022410:	dc02      	bgt.n	8022418 <__sflush_r+0x1c>
 8022412:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8022414:	2b00      	cmp	r3, #0
 8022416:	dd48      	ble.n	80224aa <__sflush_r+0xae>
 8022418:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 802241a:	2e00      	cmp	r6, #0
 802241c:	d045      	beq.n	80224aa <__sflush_r+0xae>
 802241e:	2300      	movs	r3, #0
 8022420:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8022424:	682f      	ldr	r7, [r5, #0]
 8022426:	6a21      	ldr	r1, [r4, #32]
 8022428:	602b      	str	r3, [r5, #0]
 802242a:	d030      	beq.n	802248e <__sflush_r+0x92>
 802242c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 802242e:	89a3      	ldrh	r3, [r4, #12]
 8022430:	0759      	lsls	r1, r3, #29
 8022432:	d505      	bpl.n	8022440 <__sflush_r+0x44>
 8022434:	6863      	ldr	r3, [r4, #4]
 8022436:	1ad2      	subs	r2, r2, r3
 8022438:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 802243a:	b10b      	cbz	r3, 8022440 <__sflush_r+0x44>
 802243c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 802243e:	1ad2      	subs	r2, r2, r3
 8022440:	2300      	movs	r3, #0
 8022442:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8022444:	6a21      	ldr	r1, [r4, #32]
 8022446:	4628      	mov	r0, r5
 8022448:	47b0      	blx	r6
 802244a:	1c43      	adds	r3, r0, #1
 802244c:	89a3      	ldrh	r3, [r4, #12]
 802244e:	d106      	bne.n	802245e <__sflush_r+0x62>
 8022450:	6829      	ldr	r1, [r5, #0]
 8022452:	291d      	cmp	r1, #29
 8022454:	d82b      	bhi.n	80224ae <__sflush_r+0xb2>
 8022456:	4a2a      	ldr	r2, [pc, #168]	@ (8022500 <__sflush_r+0x104>)
 8022458:	40ca      	lsrs	r2, r1
 802245a:	07d6      	lsls	r6, r2, #31
 802245c:	d527      	bpl.n	80224ae <__sflush_r+0xb2>
 802245e:	2200      	movs	r2, #0
 8022460:	6062      	str	r2, [r4, #4]
 8022462:	04d9      	lsls	r1, r3, #19
 8022464:	6922      	ldr	r2, [r4, #16]
 8022466:	6022      	str	r2, [r4, #0]
 8022468:	d504      	bpl.n	8022474 <__sflush_r+0x78>
 802246a:	1c42      	adds	r2, r0, #1
 802246c:	d101      	bne.n	8022472 <__sflush_r+0x76>
 802246e:	682b      	ldr	r3, [r5, #0]
 8022470:	b903      	cbnz	r3, 8022474 <__sflush_r+0x78>
 8022472:	6560      	str	r0, [r4, #84]	@ 0x54
 8022474:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8022476:	602f      	str	r7, [r5, #0]
 8022478:	b1b9      	cbz	r1, 80224aa <__sflush_r+0xae>
 802247a:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 802247e:	4299      	cmp	r1, r3
 8022480:	d002      	beq.n	8022488 <__sflush_r+0x8c>
 8022482:	4628      	mov	r0, r5
 8022484:	f7ff fca2 	bl	8021dcc <_free_r>
 8022488:	2300      	movs	r3, #0
 802248a:	6363      	str	r3, [r4, #52]	@ 0x34
 802248c:	e00d      	b.n	80224aa <__sflush_r+0xae>
 802248e:	2301      	movs	r3, #1
 8022490:	4628      	mov	r0, r5
 8022492:	47b0      	blx	r6
 8022494:	4602      	mov	r2, r0
 8022496:	1c50      	adds	r0, r2, #1
 8022498:	d1c9      	bne.n	802242e <__sflush_r+0x32>
 802249a:	682b      	ldr	r3, [r5, #0]
 802249c:	2b00      	cmp	r3, #0
 802249e:	d0c6      	beq.n	802242e <__sflush_r+0x32>
 80224a0:	2b1d      	cmp	r3, #29
 80224a2:	d001      	beq.n	80224a8 <__sflush_r+0xac>
 80224a4:	2b16      	cmp	r3, #22
 80224a6:	d11e      	bne.n	80224e6 <__sflush_r+0xea>
 80224a8:	602f      	str	r7, [r5, #0]
 80224aa:	2000      	movs	r0, #0
 80224ac:	e022      	b.n	80224f4 <__sflush_r+0xf8>
 80224ae:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80224b2:	b21b      	sxth	r3, r3
 80224b4:	e01b      	b.n	80224ee <__sflush_r+0xf2>
 80224b6:	690f      	ldr	r7, [r1, #16]
 80224b8:	2f00      	cmp	r7, #0
 80224ba:	d0f6      	beq.n	80224aa <__sflush_r+0xae>
 80224bc:	0793      	lsls	r3, r2, #30
 80224be:	680e      	ldr	r6, [r1, #0]
 80224c0:	bf08      	it	eq
 80224c2:	694b      	ldreq	r3, [r1, #20]
 80224c4:	600f      	str	r7, [r1, #0]
 80224c6:	bf18      	it	ne
 80224c8:	2300      	movne	r3, #0
 80224ca:	eba6 0807 	sub.w	r8, r6, r7
 80224ce:	608b      	str	r3, [r1, #8]
 80224d0:	f1b8 0f00 	cmp.w	r8, #0
 80224d4:	dde9      	ble.n	80224aa <__sflush_r+0xae>
 80224d6:	6a21      	ldr	r1, [r4, #32]
 80224d8:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 80224da:	4643      	mov	r3, r8
 80224dc:	463a      	mov	r2, r7
 80224de:	4628      	mov	r0, r5
 80224e0:	47b0      	blx	r6
 80224e2:	2800      	cmp	r0, #0
 80224e4:	dc08      	bgt.n	80224f8 <__sflush_r+0xfc>
 80224e6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80224ea:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80224ee:	81a3      	strh	r3, [r4, #12]
 80224f0:	f04f 30ff 	mov.w	r0, #4294967295
 80224f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80224f8:	4407      	add	r7, r0
 80224fa:	eba8 0800 	sub.w	r8, r8, r0
 80224fe:	e7e7      	b.n	80224d0 <__sflush_r+0xd4>
 8022500:	20400001 	.word	0x20400001

08022504 <_fflush_r>:
 8022504:	b538      	push	{r3, r4, r5, lr}
 8022506:	690b      	ldr	r3, [r1, #16]
 8022508:	4605      	mov	r5, r0
 802250a:	460c      	mov	r4, r1
 802250c:	b913      	cbnz	r3, 8022514 <_fflush_r+0x10>
 802250e:	2500      	movs	r5, #0
 8022510:	4628      	mov	r0, r5
 8022512:	bd38      	pop	{r3, r4, r5, pc}
 8022514:	b118      	cbz	r0, 802251e <_fflush_r+0x1a>
 8022516:	6a03      	ldr	r3, [r0, #32]
 8022518:	b90b      	cbnz	r3, 802251e <_fflush_r+0x1a>
 802251a:	f7ff fa91 	bl	8021a40 <__sinit>
 802251e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8022522:	2b00      	cmp	r3, #0
 8022524:	d0f3      	beq.n	802250e <_fflush_r+0xa>
 8022526:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8022528:	07d0      	lsls	r0, r2, #31
 802252a:	d404      	bmi.n	8022536 <_fflush_r+0x32>
 802252c:	0599      	lsls	r1, r3, #22
 802252e:	d402      	bmi.n	8022536 <_fflush_r+0x32>
 8022530:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8022532:	f7ff fbde 	bl	8021cf2 <__retarget_lock_acquire_recursive>
 8022536:	4628      	mov	r0, r5
 8022538:	4621      	mov	r1, r4
 802253a:	f7ff ff5f 	bl	80223fc <__sflush_r>
 802253e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8022540:	07da      	lsls	r2, r3, #31
 8022542:	4605      	mov	r5, r0
 8022544:	d4e4      	bmi.n	8022510 <_fflush_r+0xc>
 8022546:	89a3      	ldrh	r3, [r4, #12]
 8022548:	059b      	lsls	r3, r3, #22
 802254a:	d4e1      	bmi.n	8022510 <_fflush_r+0xc>
 802254c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 802254e:	f7ff fbd1 	bl	8021cf4 <__retarget_lock_release_recursive>
 8022552:	e7dd      	b.n	8022510 <_fflush_r+0xc>

08022554 <__swbuf_r>:
 8022554:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8022556:	460e      	mov	r6, r1
 8022558:	4614      	mov	r4, r2
 802255a:	4605      	mov	r5, r0
 802255c:	b118      	cbz	r0, 8022566 <__swbuf_r+0x12>
 802255e:	6a03      	ldr	r3, [r0, #32]
 8022560:	b90b      	cbnz	r3, 8022566 <__swbuf_r+0x12>
 8022562:	f7ff fa6d 	bl	8021a40 <__sinit>
 8022566:	69a3      	ldr	r3, [r4, #24]
 8022568:	60a3      	str	r3, [r4, #8]
 802256a:	89a3      	ldrh	r3, [r4, #12]
 802256c:	071a      	lsls	r2, r3, #28
 802256e:	d501      	bpl.n	8022574 <__swbuf_r+0x20>
 8022570:	6923      	ldr	r3, [r4, #16]
 8022572:	b943      	cbnz	r3, 8022586 <__swbuf_r+0x32>
 8022574:	4621      	mov	r1, r4
 8022576:	4628      	mov	r0, r5
 8022578:	f000 f82a 	bl	80225d0 <__swsetup_r>
 802257c:	b118      	cbz	r0, 8022586 <__swbuf_r+0x32>
 802257e:	f04f 37ff 	mov.w	r7, #4294967295
 8022582:	4638      	mov	r0, r7
 8022584:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8022586:	6823      	ldr	r3, [r4, #0]
 8022588:	6922      	ldr	r2, [r4, #16]
 802258a:	1a98      	subs	r0, r3, r2
 802258c:	6963      	ldr	r3, [r4, #20]
 802258e:	b2f6      	uxtb	r6, r6
 8022590:	4283      	cmp	r3, r0
 8022592:	4637      	mov	r7, r6
 8022594:	dc05      	bgt.n	80225a2 <__swbuf_r+0x4e>
 8022596:	4621      	mov	r1, r4
 8022598:	4628      	mov	r0, r5
 802259a:	f7ff ffb3 	bl	8022504 <_fflush_r>
 802259e:	2800      	cmp	r0, #0
 80225a0:	d1ed      	bne.n	802257e <__swbuf_r+0x2a>
 80225a2:	68a3      	ldr	r3, [r4, #8]
 80225a4:	3b01      	subs	r3, #1
 80225a6:	60a3      	str	r3, [r4, #8]
 80225a8:	6823      	ldr	r3, [r4, #0]
 80225aa:	1c5a      	adds	r2, r3, #1
 80225ac:	6022      	str	r2, [r4, #0]
 80225ae:	701e      	strb	r6, [r3, #0]
 80225b0:	6962      	ldr	r2, [r4, #20]
 80225b2:	1c43      	adds	r3, r0, #1
 80225b4:	429a      	cmp	r2, r3
 80225b6:	d004      	beq.n	80225c2 <__swbuf_r+0x6e>
 80225b8:	89a3      	ldrh	r3, [r4, #12]
 80225ba:	07db      	lsls	r3, r3, #31
 80225bc:	d5e1      	bpl.n	8022582 <__swbuf_r+0x2e>
 80225be:	2e0a      	cmp	r6, #10
 80225c0:	d1df      	bne.n	8022582 <__swbuf_r+0x2e>
 80225c2:	4621      	mov	r1, r4
 80225c4:	4628      	mov	r0, r5
 80225c6:	f7ff ff9d 	bl	8022504 <_fflush_r>
 80225ca:	2800      	cmp	r0, #0
 80225cc:	d0d9      	beq.n	8022582 <__swbuf_r+0x2e>
 80225ce:	e7d6      	b.n	802257e <__swbuf_r+0x2a>

080225d0 <__swsetup_r>:
 80225d0:	b538      	push	{r3, r4, r5, lr}
 80225d2:	4b29      	ldr	r3, [pc, #164]	@ (8022678 <__swsetup_r+0xa8>)
 80225d4:	4605      	mov	r5, r0
 80225d6:	6818      	ldr	r0, [r3, #0]
 80225d8:	460c      	mov	r4, r1
 80225da:	b118      	cbz	r0, 80225e4 <__swsetup_r+0x14>
 80225dc:	6a03      	ldr	r3, [r0, #32]
 80225de:	b90b      	cbnz	r3, 80225e4 <__swsetup_r+0x14>
 80225e0:	f7ff fa2e 	bl	8021a40 <__sinit>
 80225e4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80225e8:	0719      	lsls	r1, r3, #28
 80225ea:	d422      	bmi.n	8022632 <__swsetup_r+0x62>
 80225ec:	06da      	lsls	r2, r3, #27
 80225ee:	d407      	bmi.n	8022600 <__swsetup_r+0x30>
 80225f0:	2209      	movs	r2, #9
 80225f2:	602a      	str	r2, [r5, #0]
 80225f4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80225f8:	81a3      	strh	r3, [r4, #12]
 80225fa:	f04f 30ff 	mov.w	r0, #4294967295
 80225fe:	e033      	b.n	8022668 <__swsetup_r+0x98>
 8022600:	0758      	lsls	r0, r3, #29
 8022602:	d512      	bpl.n	802262a <__swsetup_r+0x5a>
 8022604:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8022606:	b141      	cbz	r1, 802261a <__swsetup_r+0x4a>
 8022608:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 802260c:	4299      	cmp	r1, r3
 802260e:	d002      	beq.n	8022616 <__swsetup_r+0x46>
 8022610:	4628      	mov	r0, r5
 8022612:	f7ff fbdb 	bl	8021dcc <_free_r>
 8022616:	2300      	movs	r3, #0
 8022618:	6363      	str	r3, [r4, #52]	@ 0x34
 802261a:	89a3      	ldrh	r3, [r4, #12]
 802261c:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8022620:	81a3      	strh	r3, [r4, #12]
 8022622:	2300      	movs	r3, #0
 8022624:	6063      	str	r3, [r4, #4]
 8022626:	6923      	ldr	r3, [r4, #16]
 8022628:	6023      	str	r3, [r4, #0]
 802262a:	89a3      	ldrh	r3, [r4, #12]
 802262c:	f043 0308 	orr.w	r3, r3, #8
 8022630:	81a3      	strh	r3, [r4, #12]
 8022632:	6923      	ldr	r3, [r4, #16]
 8022634:	b94b      	cbnz	r3, 802264a <__swsetup_r+0x7a>
 8022636:	89a3      	ldrh	r3, [r4, #12]
 8022638:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 802263c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8022640:	d003      	beq.n	802264a <__swsetup_r+0x7a>
 8022642:	4621      	mov	r1, r4
 8022644:	4628      	mov	r0, r5
 8022646:	f000 f83f 	bl	80226c8 <__smakebuf_r>
 802264a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802264e:	f013 0201 	ands.w	r2, r3, #1
 8022652:	d00a      	beq.n	802266a <__swsetup_r+0x9a>
 8022654:	2200      	movs	r2, #0
 8022656:	60a2      	str	r2, [r4, #8]
 8022658:	6962      	ldr	r2, [r4, #20]
 802265a:	4252      	negs	r2, r2
 802265c:	61a2      	str	r2, [r4, #24]
 802265e:	6922      	ldr	r2, [r4, #16]
 8022660:	b942      	cbnz	r2, 8022674 <__swsetup_r+0xa4>
 8022662:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8022666:	d1c5      	bne.n	80225f4 <__swsetup_r+0x24>
 8022668:	bd38      	pop	{r3, r4, r5, pc}
 802266a:	0799      	lsls	r1, r3, #30
 802266c:	bf58      	it	pl
 802266e:	6962      	ldrpl	r2, [r4, #20]
 8022670:	60a2      	str	r2, [r4, #8]
 8022672:	e7f4      	b.n	802265e <__swsetup_r+0x8e>
 8022674:	2000      	movs	r0, #0
 8022676:	e7f7      	b.n	8022668 <__swsetup_r+0x98>
 8022678:	20000220 	.word	0x20000220

0802267c <__swhatbuf_r>:
 802267c:	b570      	push	{r4, r5, r6, lr}
 802267e:	460c      	mov	r4, r1
 8022680:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8022684:	2900      	cmp	r1, #0
 8022686:	b096      	sub	sp, #88	@ 0x58
 8022688:	4615      	mov	r5, r2
 802268a:	461e      	mov	r6, r3
 802268c:	da0d      	bge.n	80226aa <__swhatbuf_r+0x2e>
 802268e:	89a3      	ldrh	r3, [r4, #12]
 8022690:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8022694:	f04f 0100 	mov.w	r1, #0
 8022698:	bf14      	ite	ne
 802269a:	2340      	movne	r3, #64	@ 0x40
 802269c:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 80226a0:	2000      	movs	r0, #0
 80226a2:	6031      	str	r1, [r6, #0]
 80226a4:	602b      	str	r3, [r5, #0]
 80226a6:	b016      	add	sp, #88	@ 0x58
 80226a8:	bd70      	pop	{r4, r5, r6, pc}
 80226aa:	466a      	mov	r2, sp
 80226ac:	f000 f848 	bl	8022740 <_fstat_r>
 80226b0:	2800      	cmp	r0, #0
 80226b2:	dbec      	blt.n	802268e <__swhatbuf_r+0x12>
 80226b4:	9901      	ldr	r1, [sp, #4]
 80226b6:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 80226ba:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 80226be:	4259      	negs	r1, r3
 80226c0:	4159      	adcs	r1, r3
 80226c2:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80226c6:	e7eb      	b.n	80226a0 <__swhatbuf_r+0x24>

080226c8 <__smakebuf_r>:
 80226c8:	898b      	ldrh	r3, [r1, #12]
 80226ca:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80226cc:	079d      	lsls	r5, r3, #30
 80226ce:	4606      	mov	r6, r0
 80226d0:	460c      	mov	r4, r1
 80226d2:	d507      	bpl.n	80226e4 <__smakebuf_r+0x1c>
 80226d4:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80226d8:	6023      	str	r3, [r4, #0]
 80226da:	6123      	str	r3, [r4, #16]
 80226dc:	2301      	movs	r3, #1
 80226de:	6163      	str	r3, [r4, #20]
 80226e0:	b003      	add	sp, #12
 80226e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80226e4:	ab01      	add	r3, sp, #4
 80226e6:	466a      	mov	r2, sp
 80226e8:	f7ff ffc8 	bl	802267c <__swhatbuf_r>
 80226ec:	9f00      	ldr	r7, [sp, #0]
 80226ee:	4605      	mov	r5, r0
 80226f0:	4639      	mov	r1, r7
 80226f2:	4630      	mov	r0, r6
 80226f4:	f7ff f87e 	bl	80217f4 <_malloc_r>
 80226f8:	b948      	cbnz	r0, 802270e <__smakebuf_r+0x46>
 80226fa:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80226fe:	059a      	lsls	r2, r3, #22
 8022700:	d4ee      	bmi.n	80226e0 <__smakebuf_r+0x18>
 8022702:	f023 0303 	bic.w	r3, r3, #3
 8022706:	f043 0302 	orr.w	r3, r3, #2
 802270a:	81a3      	strh	r3, [r4, #12]
 802270c:	e7e2      	b.n	80226d4 <__smakebuf_r+0xc>
 802270e:	89a3      	ldrh	r3, [r4, #12]
 8022710:	6020      	str	r0, [r4, #0]
 8022712:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8022716:	81a3      	strh	r3, [r4, #12]
 8022718:	9b01      	ldr	r3, [sp, #4]
 802271a:	e9c4 0704 	strd	r0, r7, [r4, #16]
 802271e:	b15b      	cbz	r3, 8022738 <__smakebuf_r+0x70>
 8022720:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8022724:	4630      	mov	r0, r6
 8022726:	f000 f81d 	bl	8022764 <_isatty_r>
 802272a:	b128      	cbz	r0, 8022738 <__smakebuf_r+0x70>
 802272c:	89a3      	ldrh	r3, [r4, #12]
 802272e:	f023 0303 	bic.w	r3, r3, #3
 8022732:	f043 0301 	orr.w	r3, r3, #1
 8022736:	81a3      	strh	r3, [r4, #12]
 8022738:	89a3      	ldrh	r3, [r4, #12]
 802273a:	431d      	orrs	r5, r3
 802273c:	81a5      	strh	r5, [r4, #12]
 802273e:	e7cf      	b.n	80226e0 <__smakebuf_r+0x18>

08022740 <_fstat_r>:
 8022740:	b538      	push	{r3, r4, r5, lr}
 8022742:	4d07      	ldr	r5, [pc, #28]	@ (8022760 <_fstat_r+0x20>)
 8022744:	2300      	movs	r3, #0
 8022746:	4604      	mov	r4, r0
 8022748:	4608      	mov	r0, r1
 802274a:	4611      	mov	r1, r2
 802274c:	602b      	str	r3, [r5, #0]
 802274e:	f7df ff78 	bl	8002642 <_fstat>
 8022752:	1c43      	adds	r3, r0, #1
 8022754:	d102      	bne.n	802275c <_fstat_r+0x1c>
 8022756:	682b      	ldr	r3, [r5, #0]
 8022758:	b103      	cbz	r3, 802275c <_fstat_r+0x1c>
 802275a:	6023      	str	r3, [r4, #0]
 802275c:	bd38      	pop	{r3, r4, r5, pc}
 802275e:	bf00      	nop
 8022760:	20013c30 	.word	0x20013c30

08022764 <_isatty_r>:
 8022764:	b538      	push	{r3, r4, r5, lr}
 8022766:	4d06      	ldr	r5, [pc, #24]	@ (8022780 <_isatty_r+0x1c>)
 8022768:	2300      	movs	r3, #0
 802276a:	4604      	mov	r4, r0
 802276c:	4608      	mov	r0, r1
 802276e:	602b      	str	r3, [r5, #0]
 8022770:	f7df ff6c 	bl	800264c <_isatty>
 8022774:	1c43      	adds	r3, r0, #1
 8022776:	d102      	bne.n	802277e <_isatty_r+0x1a>
 8022778:	682b      	ldr	r3, [r5, #0]
 802277a:	b103      	cbz	r3, 802277e <_isatty_r+0x1a>
 802277c:	6023      	str	r3, [r4, #0]
 802277e:	bd38      	pop	{r3, r4, r5, pc}
 8022780:	20013c30 	.word	0x20013c30

08022784 <_init>:
 8022784:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8022786:	bf00      	nop
 8022788:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802278a:	bc08      	pop	{r3}
 802278c:	469e      	mov	lr, r3
 802278e:	4770      	bx	lr

08022790 <_fini>:
 8022790:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8022792:	bf00      	nop
 8022794:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8022796:	bc08      	pop	{r3}
 8022798:	469e      	mov	lr, r3
 802279a:	4770      	bx	lr
